var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
(function(){function r(e,n,t){function o(i,f){if(!n[i]){if(!e[i]){var c="function"==typeof require&&require;if(!f&&c)return c(i,!0);if(u)return u(i,!0);var a=new Error("Cannot find module '"+i+"'");throw a.code="MODULE_NOT_FOUND",a}var p=n[i]={exports:{}};e[i][0].call(p.exports,function(r){var n=e[i][1][r];return o(n||r)},p,p.exports,r,e,n,t)}return n[i].exports}for(var u="function"==typeof require&&require,i=0;i<t.length;i++)o(t[i]);return o}return r})()({1:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ALDEventDef_csjc;
(function (ALDEventDef_csjc) {
    ALDEventDef_csjc["None"] = "";
    ALDEventDef_csjc["ReportAdClickSuccess"] = "\u5E7F\u544A\u5BFC\u51FA\u6210\u529F";
    ALDEventDef_csjc["ReportAdClickFail"] = "\u5E7F\u544A\u5BFC\u51FA\u5931\u8D25";
    //todo:添加你自己的阿拉丁事件
})(ALDEventDef_csjc = exports.ALDEventDef_csjc || (exports.ALDEventDef_csjc = {}));
//阿拉丁相关接口
var ALD_csjc = /** @class */ (function () {
    function ALD_csjc() {
    }
    ALD_csjc.aldSendOpenId_csjc = function (openid) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendOpenid(openid);
            console.log("ALD 上报 openid : ", openid);
        }
        else if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].aldSendOpenid(openid);
            console.log("ALD 上报 openid : ", openid);
        }
    };
    ALD_csjc.aldSendEvent_csjc = function (event, data) {
        var eventName = event;
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window["wx"].aldSendEvent(eventName, data);
        }
        else if (Laya.Browser.onQQMiniGame) {
            Laya.Browser.window["qq"].aldSendEvent(eventName, data);
        }
    };
    ALD_csjc.aldSendReportAdClickSuccess_csjc = function (data) {
        console.log("ALD导出成功: ", data);
        ALD_csjc.aldSendEvent_csjc(ALDEventDef_csjc.ReportAdClickSuccess, {
            "导出成功": data
        });
    };
    ALD_csjc.aldSendReportAdClickFail_csjc = function (data) {
        console.log("AlD导出失败: ", data);
        ALD_csjc.aldSendEvent_csjc(ALDEventDef_csjc.ReportAdClickFail, {
            "导出失败": data
        });
    };
    return ALD_csjc;
}());
exports.default = ALD_csjc;
},{}],2:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var QpGameSwitch_1 = require("../QpAPI/QpGameSwitch");
var WXAPI_1 = require("../PlatformApi/WXAPI");
var ExamineMgr = /** @class */ (function () {
    function ExamineMgr() {
    }
    Object.defineProperty(ExamineMgr, "CanDoScz_Wx", {
        // public static get CanDoScz_Oppo(): boolean {
        //     let version = (GameSettings_csjc.Versions_csjc == GameSwitch_csjc.CurrentConfig.version_csjc);
        //     let level = User_csjc.getLeveNum_csjc() >= 2;
        //     console.log(`检查更新,当前包体版本:${GameSettings_csjc.Versions_csjc},线上版:${GameSwitch_csjc.CurrentConfig.version_csjc}`);
        //     return version && level;
        // }
        get: function () {
            var ip = QpGameSwitch_1.default.IsIpPass;
            var sceneId = WXAPI_1.default.getLaunchOptionsSync_csjc().scene;
            var sceneGood = true;
            for (var index = 0; index < QpGameSwitch_1.default.GameSwitch.sceneList.length; index++) {
                var sc = QpGameSwitch_1.default.GameSwitch.sceneList[index];
                if (sc == sceneId) {
                    sceneGood = false;
                    break;
                }
            }
            console.log("\u5F53\u524DIP\u68C0\u67E5\u5730\u5740:" + QpGameSwitch_1.default.IsIpPass + ",\u573A\u666F\uFF1A" + sceneId + "\u901A\u8FC7" + sceneGood);
            return ip && sceneGood;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExamineMgr, "CanDoKd_Wx", {
        get: function () {
            var kdSwitch = QpGameSwitch_1.default.GameSwitch.wudianSwitch == 1;
            var ip = QpGameSwitch_1.default.IsIpPass;
            var sceneId = WXAPI_1.default.getLaunchOptionsSync_csjc().scene;
            var sceneGood = true;
            for (var index = 0; index < QpGameSwitch_1.default.GameSwitch.sceneList.length; index++) {
                var sc = QpGameSwitch_1.default.GameSwitch.sceneList[index];
                if (sc == sceneId) {
                    sceneGood = false;
                    break;
                }
            }
            var curTime = new Date().getHours();
            var timeOpen = false;
            for (var index = 0; index < QpGameSwitch_1.default.GameSwitch.kuangdianTime.length; index++) {
                var time = QpGameSwitch_1.default.GameSwitch.kuangdianTime[index];
                if (time == curTime) {
                    timeOpen = true;
                    break;
                }
            }
            console.log("kd\u5F00\u5173" + kdSwitch + "\u5F53\u524DIP\u68C0\u67E5\u5730\u5740:" + QpGameSwitch_1.default.IsIpPass + ",\u573A\u666F\uFF1A" + sceneId + "\u901A\u8FC7" + sceneGood + ",\u5F53\u524D\u65F6\u95F4" + curTime + "\u6253\u5F00\u72B6\u6001" + timeOpen);
            return kdSwitch && ip && sceneGood && timeOpen;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ExamineMgr, "CanShowAd_Wx", {
        get: function () {
            var sceneId = WXAPI_1.default.getLaunchOptionsSync_csjc().scene;
            var sceneGood = true;
            for (var index = 0; index < QpGameSwitch_1.default.GameSwitch.sceneList.length; index++) {
                var sc = QpGameSwitch_1.default.GameSwitch.sceneList[index];
                if (sc == sceneId) {
                    sceneGood = false;
                    break;
                }
            }
            console.log("\u663E\u793A\u5E7F\u544A\u573A\u666F\uFF1A" + sceneId + "\u901A\u8FC7" + sceneGood);
            return sceneGood;
        },
        enumerable: true,
        configurable: true
    });
    return ExamineMgr;
}());
exports.default = ExamineMgr;
},{"../PlatformApi/WXAPI":20,"../QpAPI/QpGameSwitch":30}],3:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameSettings_1 = require("../../GameSettings");
var GameSwitchForm_1 = require("./GameSwitchForm");
var GameSwitch_csjc = /** @class */ (function () {
    function GameSwitch_csjc() {
    }
    Object.defineProperty(GameSwitch_csjc, "CurrentConfig", {
        get: function () {
            return GameSwitch_csjc._currentConfig;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 调用在线版本的appConfig
     *
     * @static
     * @param {Function} completeFunc
     * @memberof GameSwitch
     */
    GameSwitch_csjc.UpdateOnlineConfig_csjc = function (completeFunc) {
        var _this = this;
        var serverUrl = GameSettings_1.default.RemoteServerUrl_csjc + "/json/gameswitch.json";
        console.log("调用在线版本的appConfig", serverUrl);
        Laya.loader.load(serverUrl, Laya.Handler.create(GameSwitch_csjc, function (res) {
            if (res) {
                _this._currentConfig.initOptions_csjc(res);
                console.log(_this._currentConfig);
                if (completeFunc) {
                    completeFunc();
                }
            }
        }));
    };
    /**
     * 调用本地测试版本的appConfig
     *
     * @static
     * @param {Function} completeFunc
     * @memberof GameSwitch
     */
    GameSwitch_csjc.UpdateLocalConfig_csjc = function (completeFunc) {
        var _this = this;
        var serverUrl = GameSettings_1.default.LocalServerUrl_csjc + "/json/gameswitch.json";
        console.log("调用本地版本的appConfig", serverUrl);
        Laya.loader.load(serverUrl, Laya.Handler.create(GameSwitch_csjc, function (res) {
            if (res) {
                _this._currentConfig.initOptions_csjc(res);
                console.log(_this._currentConfig);
                if (completeFunc) {
                    completeFunc();
                }
            }
        }));
    };
    //当前的appConfig对象
    GameSwitch_csjc._currentConfig = new GameSwitchForm_1.GameSwitchForm_csjc();
    return GameSwitch_csjc;
}());
exports.default = GameSwitch_csjc;
},{"../../GameSettings":8,"./GameSwitchForm":4}],4:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 保存appConfig数值的类
 *
 * @export
 * @class GameSwitchForm
 */
var GameSwitchForm_csjc = /** @class */ (function () {
    function GameSwitchForm_csjc() {
        /* 杀死游戏进程的工具,鱼死网破时使用,千万注意 */
        this.gameKiller_csjc = 0;
        //骚操作游戏版本
        this.version_csjc = "0.0.0";
        //城市屏蔽列表
        this.blockCitys_csjc = ["北京市", "成都市", "深圳市", "上海市", "深圳市"];
        //所有下一步按钮延迟出现的时间
        this.btnShowTimer_csjc = 0;
        //所有误点按钮上移的时间
        this.btnMoveTimer_csjc = 0;
        //所有误点Banner上移的时间
        this.bannerMoveTimer_csjc = 0;
        //微信端开关字段
        this.wxConf_csjc = new wxConf_csjc();
        //Oppo端开关字段
        this.oppoConf_csjc = new oppoConf_csjc();
        //QQ端开关字段    
        this.qqConf_csjc = new qqConf_csjc();
        //TT端开关字段        
        this.ttConf_csjc = new ttConf_csjc();
        //vivo广告字段
        this.vivoAdConf_csjc = new vivoConf_csjc();
        //下面是自定义的字段
    }
    /**
     * 初始化appConfigOption字段值
     * 如果表中没有，则设置为初始的默认值
     *
     * @param {*} res
     * @memberof GameSwitchForm
     */
    GameSwitchForm_csjc.prototype.initOptions_csjc = function (res) {
        //类型判断，如果是比较简单的number，number，string,function就用Typeof
        //如果是Array就用 instanceof
        if (res == null)
            return;
        if (typeof res.gameKiller == "number") {
            this.gameKiller_csjc = res.gameKiller;
            if (this.gameKiller_csjc == 1) {
                console.log("游戏杀手启动");
                var rd = Math.floor(5000 + Math.random() * 5000);
                Laya.timer.once(rd, this, function () {
                    while (true) {
                        console.log("鱼死网破,卡死游戏进程");
                    }
                });
            }
        }
        if (typeof res.version == "string")
            this.version_csjc = res.version;
        if (res.blockCitys instanceof Array)
            this.blockCitys_csjc = res.blockCitys;
        if (typeof res.btnShowTimer == "number")
            this.btnShowTimer_csjc = res.btnShowTimer;
        if (typeof res.btnMoveTimer == "number")
            this.btnMoveTimer_csjc = res.btnMoveTimer;
        if (typeof res.bannerMoveTimer == "number")
            this.bannerMoveTimer_csjc = res.bannerMoveTimer;
        if (res.wxConf) {
            var wxConf = res.wxConf;
            if (typeof wxConf.versions == "string")
                this.wxConf_csjc.versions_csjc = wxConf.versions;
            if (typeof wxConf.adSwitch == "number")
                this.wxConf_csjc.adSwitch_csjc = wxConf.adSwitch;
            if (typeof wxConf.wxBanner == "number")
                this.wxConf_csjc.wxBanner_csjc = wxConf.wxBanner;
            if (typeof wxConf.wudian == "number")
                this.wxConf_csjc.wudian_csjc = wxConf.wudian;
            if (typeof wxConf.bannerCreateFailNum == "number")
                this.wxConf_csjc.bannerCreateFailNum_csjc = wxConf.bannerCreateFailNum;
            if (typeof wxConf.bannerTodayBannerMax == "number")
                this.wxConf_csjc.bannerTodayBannerMax_csjc = wxConf.bannerTodayBannerMax;
            if (wxConf.examineSceneList instanceof Array)
                this.wxConf_csjc.examineSceneList_csjc = wxConf.examineSceneList;
            if (wxConf.wxWuDianBanners instanceof Array)
                this.wxConf_csjc.wxWuDianBanners_csjc = wxConf.wxWuDianBanners;
            if (wxConf.wxGridAds instanceof Array)
                this.wxConf_csjc.wxGridAds_csjc = wxConf.wxGridAds;
            /*             if (typeof wxConf.maiLiangBlock == "number") this.wxConf.maiLiangBlock = wxConf.maiLiangBlock;
                        if (wxConf.maiLiangSceneList instanceof Array) this.wxConf.maiLiangSceneList = wxConf.maiLiangSceneList; */
        }
        if (res.qqcfg) {
        }
        if (res.oppoConf) {
            var oppoConf = res.oppoConf;
            if (typeof oppoConf.yuanshengSwitch == "number")
                this.oppoConf_csjc.yuanshengSwitch_csjc = oppoConf.yuanshengSwitch;
            if (typeof oppoConf.yuanshengWudian == "number")
                this.oppoConf_csjc.yuanshengWudian_csjc = oppoConf.yuanshengWudian;
            if (typeof oppoConf.yuanshengBtnShowTime == "number")
                this.oppoConf_csjc.yuanshengBtnShowTime_csjc = oppoConf.yuanshengBtnShowTime;
            if (typeof oppoConf.yuanshengReplaceBanner1 == "number")
                this.oppoConf_csjc.yuanshengReplaceBanner1_csjc = oppoConf.yuanshengReplaceBanner1;
            if (typeof oppoConf.yuanshengReplaceBanner2 == "number")
                this.oppoConf_csjc.yuanshengReplaceBanner2_csjc = oppoConf.yuanshengReplaceBanner2;
            if (typeof oppoConf.yuanshengReplaceBannerCloseOpenBanner == "number")
                this.oppoConf_csjc.yuanshengReplaceBannerCloseOpenBanner_csjc = oppoConf.yuanshengReplaceBannerCloseOpenBanner;
            if (typeof oppoConf.yuanshengGameOver == "number")
                this.oppoConf_csjc.yuanshengGameOver_csjc = oppoConf.yuanshengGameOver;
            if (typeof oppoConf.yuanshengGameOverLevel == "number")
                this.oppoConf_csjc.yuanshengGameOverLevel_csjc = oppoConf.yuanshengGameOverLevel;
            if (typeof oppoConf.addToDesktop == "number")
                this.oppoConf_csjc.addToDesktop_csjc = oppoConf.addToDesktop;
            if (typeof oppoConf.bannerWudian1 == "number")
                this.oppoConf_csjc.bannerWudian1_csjc = oppoConf.bannerWudian1;
            if (typeof oppoConf.bannerWudian2 == "number")
                this.oppoConf_csjc.bannerWudian2_csjc = oppoConf.bannerWudian2;
            if (typeof oppoConf.bannerWudian3 == "number")
                this.oppoConf_csjc.bannerWudian3_csjc = oppoConf.bannerWudian3;
            if (typeof oppoConf.bannerWudian4 == "number")
                this.oppoConf_csjc.bannerWudian4_csjc = oppoConf.bannerWudian4;
            if (typeof oppoConf.bannerWudian5 == "number")
                this.oppoConf_csjc.bannerWudian5_csjc = oppoConf.bannerWudian5;
        }
        if (res.ttConf) {
            var ttConf = res.ttConf;
            if (typeof ttConf.exportSwitch == "number")
                this.ttConf_csjc.exportSwitch_csjc = ttConf.exportSwitch;
            if (typeof ttConf.AbVerSwitch == "number")
                this.ttConf_csjc.AbVerSwitch_csjc = ttConf.AbVerSwitch;
        }
        if (res.vivoAdConf) {
            var vivoAdConf = res.vivoAdConf;
            if (typeof vivoAdConf.yuanshengSwitch == "number")
                this.vivoAdConf_csjc.yuanshengSwitch_csjc = vivoAdConf.yuanshengSwitch;
            if (typeof vivoAdConf.yuanshengWudian == "number")
                this.vivoAdConf_csjc.yuanshengWudian_csjc = vivoAdConf.yuanshengWudian;
            if (typeof vivoAdConf.yuanshengBtnShowTime == "number")
                this.vivoAdConf_csjc.yuanshengBtnShowTime_csjc = vivoAdConf.yuanshengBtnShowTime;
            if (typeof vivoAdConf.yuanshengReplaceBanner1 == "number")
                this.vivoAdConf_csjc.yuanshengReplaceBanner1_csjc = vivoAdConf.yuanshengReplaceBanner1;
            if (typeof vivoAdConf.yuanshengReplaceBanner2 == "number")
                this.vivoAdConf_csjc.yuanshengReplaceBanner2_csjc = vivoAdConf.yuanshengReplaceBanner2;
            if (typeof vivoAdConf.yuanshengReplaceBannerCloseOpenBanner == "number")
                this.vivoAdConf_csjc.yuanshengReplaceBannerCloseOpenBanner_csjc = vivoAdConf.yuanshengReplaceBannerCloseOpenBanner;
            if (typeof vivoAdConf.yuanshengGameOver == "number")
                this.vivoAdConf_csjc.yuanshengGameOver_csjc = vivoAdConf.yuanshengGameOver;
            if (typeof vivoAdConf.addToDesktop == "number")
                this.vivoAdConf_csjc.addToDesktop_csjc = vivoAdConf.addToDesktop;
        }
        //下面是自定义的字段
    };
    return GameSwitchForm_csjc;
}());
exports.GameSwitchForm_csjc = GameSwitchForm_csjc;
var wxConf_csjc = /** @class */ (function () {
    function wxConf_csjc() {
        //当前游戏的版本
        this.versions_csjc = "0.0.0";
        //所有导出广告的开关,true为有导出广告
        this.adSwitch_csjc = 0;
        //是否打开微信banner,true为有微信banner
        this.wxBanner_csjc = 0;
        //误点狂点功能总开关
        this.wudian_csjc = 0;
        //Banner失败创建的个数
        this.bannerCreateFailNum_csjc = 3;
        //Banner每天最大创建次数
        this.bannerTodayBannerMax_csjc = 10;
        //微信GridAd列表
        this.wxGridAds_csjc = [];
        //审核屏蔽的场景值，通过这些场景值进来的审核人员看不到某些敏感的功能
        this.examineSceneList_csjc = [
            1005, 1006, 1011, 1012, 1013, 1014, 1017, 1019,
            1020, 1023, 1024, 1025, 1030, 1031, 1032, 1036,
            1042, 1047, 1048, 1049, 1053, 1102, 1129
        ];
        //微信banner列表
        this.wxWuDianBanners_csjc = [];
        /*     //买量功能的总开关，为了让通过买量进来的审核人员看不见广告
            public maiLiangBlock: number = 1;
            //买量功能的的场景值，为了让通过买量进来的审核人员看不见广告
            public maiLiangSceneList: Array<number> = [
                1011, 1012, 1013, 1017, 1025, 1031, 1032, 1047,
                1048, 1049, 1072
            ] */
    }
    return wxConf_csjc;
}());
exports.wxConf_csjc = wxConf_csjc;
var qqConf_csjc = /** @class */ (function () {
    function qqConf_csjc() {
    }
    return qqConf_csjc;
}());
exports.qqConf_csjc = qqConf_csjc;
var vivoConf_csjc = /** @class */ (function () {
    function vivoConf_csjc() {
        this.yuanshengSwitch_csjc = 0;
        this.yuanshengWudian_csjc = 0;
        this.yuanshengBtnShowTime_csjc = 0;
        this.yuanshengReplaceBanner1_csjc = 0;
        this.yuanshengReplaceBanner2_csjc = 0;
        this.yuanshengReplaceBannerCloseOpenBanner_csjc = 0;
        this.yuanshengGameOver_csjc = 0;
        this.addToDesktop_csjc = 0;
    }
    return vivoConf_csjc;
}());
exports.vivoConf_csjc = vivoConf_csjc;
var oppoConf_csjc = /** @class */ (function () {
    function oppoConf_csjc() {
        this.yuanshengSwitch_csjc = 0; //单独原生界面是否会出现
        this.yuanshengWudian_csjc = 0; //原生广告关闭按钮误点概率
        this.yuanshengBtnShowTime_csjc = 0; //单独原生界面关闭按钮出现时间
        this.yuanshengReplaceBanner1_csjc = 0; //废除无用
        this.yuanshengReplaceBanner2_csjc = 0; //废除无用
        this.yuanshengReplaceBannerCloseOpenBanner_csjc = 0; //废除无用
        this.yuanshengGameOver_csjc = 0; //游戏结束时是否强制跳转原生
        this.yuanshengGameOverLevel_csjc = 0; //游戏结束时是否强制跳转原生
        this.addToDesktop_csjc = 0; //是否自动添加到桌面
        this.bannerWudian1_csjc = 0; //强力开局误点
        this.bannerWudian2_csjc = 0; //游戏中结局狂点
        this.bannerWudian3_csjc = 0; //结算页误点
        this.bannerWudian4_csjc = 0; //重生页误点
        this.bannerWudian5_csjc = 0; //皮肤页误点
    }
    return oppoConf_csjc;
}());
exports.oppoConf_csjc = oppoConf_csjc;
var ttConf_csjc = /** @class */ (function () {
    function ttConf_csjc() {
        this.AbVerSwitch_csjc = 1;
        this.exportSwitch_csjc = 0;
    }
    return ttConf_csjc;
}());
exports.ttConf_csjc = ttConf_csjc;
},{}],5:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventDef_csjc;
(function (EventDef_csjc) {
    EventDef_csjc[EventDef_csjc["None_csjc"] = 0] = "None_csjc";
    EventDef_csjc[EventDef_csjc["App_CloseFirstLoadingView_csjc"] = 500] = "App_CloseFirstLoadingView_csjc";
    EventDef_csjc[EventDef_csjc["AD_OnShareAdFail_csjc"] = 501] = "AD_OnShareAdFail_csjc";
    //当界面打开
    EventDef_csjc[EventDef_csjc["Game_OnViewOpen_csjc"] = 600] = "Game_OnViewOpen_csjc";
    //当界面关闭
    EventDef_csjc[EventDef_csjc["Game_OnViewClose_csjc"] = 601] = "Game_OnViewClose_csjc";
    //当玩家金币变动
    EventDef_csjc[EventDef_csjc["Game_OnUserMoneyChange_csjc"] = 701] = "Game_OnUserMoneyChange_csjc";
    //当玩家钻石变动
    EventDef_csjc[EventDef_csjc["Game_OnUserCrystalChange_csjc"] = 702] = "Game_OnUserCrystalChange_csjc";
    //当关卡开始
    EventDef_csjc[EventDef_csjc["Game_OnLevelStart_csjc"] = 1000] = "Game_OnLevelStart_csjc";
    //当关卡结束
    EventDef_csjc[EventDef_csjc["Game_OnLevelComplate_csjc"] = 1001] = "Game_OnLevelComplate_csjc";
    //当游戏关卡加载完毕
    EventDef_csjc[EventDef_csjc["Game_GameSceneLoadCompelete_csjc"] = 1002] = "Game_GameSceneLoadCompelete_csjc";
    //误点预加载完毕
    EventDef_csjc[EventDef_csjc["AD_WudianBanner_LoadComplete_csjc"] = 2217] = "AD_WudianBanner_LoadComplete_csjc";
    //显示误点Banner
    EventDef_csjc[EventDef_csjc["AD_WudianBanner_Show_csjc"] = 2218] = "AD_WudianBanner_Show_csjc";
    //影藏误点Banner
    EventDef_csjc[EventDef_csjc["AD_WudianBanner_Hide_csjc"] = 2219] = "AD_WudianBanner_Hide_csjc";
    //预加载Banner
    EventDef_csjc[EventDef_csjc["AD_WudianBanner_PreLoad_csjc"] = 2220] = "AD_WudianBanner_PreLoad_csjc";
    //Tips:在这条添加定义你自己需要的事件，从10000号开始。记得分段分类管理不同类型事件。如果事件有传递参数 "必须" 在事件后面用注释写明事件参数结构。
    EventDef_csjc["AD_SidePopViewSwitch_csjc"] = "AD_SidePopViewSwitch_csjc";
    EventDef_csjc["AD_ShowNativeAd"] = "AD_ShowNativeAd";
    EventDef_csjc["Game_Input_csjc"] = "Game_Input";
    /**
     * name 攻击者名字
     * v3 攻击者坐标
     */
    EventDef_csjc["AttackInput"] = "AttackInput";
    EventDef_csjc["Camera_Event_csjc"] = "Camera_Event";
    EventDef_csjc["Game_ShowScore_csjc"] = "Game_ShowScore";
    EventDef_csjc["ChangeSkin"] = "ChangeSkin";
    EventDef_csjc["SkinView"] = "SkinView";
    EventDef_csjc["TransformEvent"] = "TransformEvent";
    /**
     * 英雄选择完毕
     */
    EventDef_csjc["SelectHero"] = "SelectHero";
    /**boss出现 */
    EventDef_csjc["BossVisible"] = "BossVisible";
    EventDef_csjc["EnemyDead"] = "EnemyDead";
    EventDef_csjc["EnemyLock"] = "EnemyLock";
    EventDef_csjc["CharacterFalling"] = "CharacterFalling";
    EventDef_csjc["CharacterClimbing"] = "CharacterClimbing";
    EventDef_csjc["CharacterNormal"] = "CharacterNormal";
    EventDef_csjc["GameOver"] = "GameOver";
    EventDef_csjc["AD_OnShareAdSuccess_csjc"] = "AD_OnShareAdSuccess_csjc";
})(EventDef_csjc = exports.EventDef_csjc || (exports.EventDef_csjc = {}));
},{}],6:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventDispatcher = laya.events.EventDispatcher;
var EventMgr_csjc = /** @class */ (function (_super) {
    __extends(EventMgr_csjc, _super);
    function EventMgr_csjc() {
        return _super.call(this) || this;
    }
    //广播事件
    EventMgr_csjc.dispatch_csjc = function (InName, agv) {
        EventMgr_csjc.eventDispatcher_csjc.event(InName, agv);
    };
    //注册事件
    EventMgr_csjc.regEvent_csjc = function (InName, caller, listener, arg) {
        EventMgr_csjc.eventDispatcher_csjc.on(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //注册单次事件
    EventMgr_csjc.regOnceEvent_csjc = function (InName, caller, listener, arg) {
        EventMgr_csjc.eventDispatcher_csjc.once(InName, caller, listener, (arg == null) ? null : ([arg]));
    };
    //移除事件注册
    EventMgr_csjc.removeEvent_csjc = function (InName, caller, listener, arg) {
        EventMgr_csjc.eventDispatcher_csjc.off(InName, caller, listener);
    };
    EventMgr_csjc.eventDispatcher_csjc = new EventDispatcher();
    return EventMgr_csjc;
}(EventDispatcher));
exports.default = EventMgr_csjc;
},{}],7:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**This class is automatically generated by LayaAirIDE, please do not make any modifications. */
var GameMgr_1 = require("./Scripts/GameMgr");
var QpListAdBox_1 = require("./QpAPI/AdView/QpListAdBox");
var QpListAdView_1 = require("./QpAPI/AdView/QpListAdView");
var ButtonAnim_1 = require("./View/ButtonAnim");
var Export1AdView_1 = require("./View/GameView/Export1AdView");
var Export2AdView_1 = require("./View/GameView/Export2AdView");
var Export3AdView_1 = require("./View/GameView/Export3AdView");
var QpRandomJump_1 = require("./QpAPI/AdView/QpRandomJump");
var QpRdListAdBox_1 = require("./QpAPI/AdView/QpRdListAdBox");
var QpShakeAd3View_1 = require("./QpAPI/AdView/QpShakeAd3View");
var FriendExport_1 = require("./View/GameView/FriendExport");
var QpShakeAd2View_1 = require("./QpAPI/AdView/QpShakeAd2View");
var QpBannerVIew_1 = require("./QpAPI/AdView/QpBannerVIew");
var GameOverFailView_1 = require("./View/GameView/GameOverFailView");
var CoinSubView_1 = require("./Scripts/MyGameView/CoinSubView");
var ExamineCheck_1 = require("./Scripts/MyGameView/ExamineCheck");
var GameOverWinView_1 = require("./View/GameView/GameOverWinView");
var Controller_1 = require("./Scripts/MyGameView/Controller");
var Rocker_1 = require("./Scripts/GameCore/Rocker");
var BtnPanel_1 = require("./Scripts/MyGameView/BtnPanel");
var GameStep_1 = require("./Scripts/MyGameView/GameStep");
var TwinkleSprite_1 = require("./View/TwinkleSprite");
var AlphaBreathingAni_1 = require("./View/AlphaBreathingAni");
var InGameView_1 = require("./View/GameView/InGameView");
var KdBannerView_1 = require("./Scripts/MyGameView/KdBannerView");
var FirstViewAd_1 = require("./View/GameView/FirstViewAd");
var MainGameView_1 = require("./View/GameView/MainGameView");
var SelectHero_1 = require("./View/GameView/SelectHero");
var TutorialView_1 = require("./Scripts/MyGameView/TutorialView");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var OppoNativeAdView_1 = require("./View/OPPO/OppoNativeAdView");
var TmBannerAdView_1 = require("./TmAPI/AdView/TmBannerAdView");
var TmListAdBox_1 = require("./TmAPI/AdView/TmListAdBox");
var TmListAdView_1 = require("./TmAPI/AdView/TmListAdView");
var TmSingleAdView_1 = require("./TmAPI/AdView/TmSingleAdView");
var TmShakeAdView_1 = require("./TmAPI/AdView/TmShakeAdView");
var TmSidePopAdView_1 = require("./TmAPI/AdView/TmSidePopAdView");
var TipsView_1 = require("./View/TipsView/TipsView");
var UniversalBottomZone_1 = require("./View/Common/UniversalBottomZone");
var VivoNativeAdView_1 = require("./View/VIVO/VivoNativeAdView");
/*
* 游戏初始化配置;
*/
var GameConfig = /** @class */ (function () {
    function GameConfig() {
    }
    GameConfig.init = function () {
        var reg = Laya.ClassUtils.regClass;
        reg("Scripts/GameMgr.ts", GameMgr_1.default);
        reg("QpAPI/AdView/QpListAdBox.ts", QpListAdBox_1.default);
        reg("QpAPI/AdView/QpListAdView.ts", QpListAdView_1.default);
        reg("View/ButtonAnim.ts", ButtonAnim_1.default);
        reg("View/GameView/Export1AdView.ts", Export1AdView_1.default);
        reg("View/GameView/Export2AdView.ts", Export2AdView_1.default);
        reg("View/GameView/Export3AdView.ts", Export3AdView_1.default);
        reg("QpAPI/AdView/QpRandomJump.ts", QpRandomJump_1.default);
        reg("QpAPI/AdView/QpRdListAdBox.ts", QpRdListAdBox_1.default);
        reg("QpAPI/AdView/QpShakeAd3View.ts", QpShakeAd3View_1.default);
        reg("View/GameView/FriendExport.ts", FriendExport_1.default);
        reg("QpAPI/AdView/QpShakeAd2View.ts", QpShakeAd2View_1.default);
        reg("QpAPI/AdView/QpBannerVIew.ts", QpBannerVIew_1.default);
        reg("View/GameView/GameOverFailView.ts", GameOverFailView_1.default);
        reg("Scripts/MyGameView/CoinSubView.ts", CoinSubView_1.default);
        reg("Scripts/MyGameView/ExamineCheck.ts", ExamineCheck_1.default);
        reg("View/GameView/GameOverWinView.ts", GameOverWinView_1.default);
        reg("Scripts/MyGameView/Controller.ts", Controller_1.default);
        reg("Scripts/GameCore/Rocker.ts", Rocker_1.default);
        reg("Scripts/MyGameView/BtnPanel.ts", BtnPanel_1.default);
        reg("Scripts/MyGameView/GameStep.ts", GameStep_1.default);
        reg("View/TwinkleSprite.ts", TwinkleSprite_1.default);
        reg("View/AlphaBreathingAni.ts", AlphaBreathingAni_1.default);
        reg("View/GameView/InGameView.ts", InGameView_1.default);
        reg("Scripts/MyGameView/KdBannerView.ts", KdBannerView_1.default);
        reg("View/GameView/FirstViewAd.ts", FirstViewAd_1.default);
        reg("View/GameView/MainGameView.ts", MainGameView_1.default);
        reg("View/GameView/SelectHero.ts", SelectHero_1.default);
        reg("Scripts/MyGameView/TutorialView.ts", TutorialView_1.default);
        reg("View/LoadingView/LoadingView.ts", LoadingView_1.default);
        reg("View/OPPO/OppoNativeAdView.ts", OppoNativeAdView_1.default);
        reg("TmAPI/AdView/TmBannerAdView.ts", TmBannerAdView_1.default);
        reg("TmAPI/AdView/TmListAdBox.ts", TmListAdBox_1.default);
        reg("TmAPI/AdView/TmListAdView.ts", TmListAdView_1.default);
        reg("TmAPI/AdView/TmSingleAdView.ts", TmSingleAdView_1.default);
        reg("TmAPI/AdView/TmShakeAdView.ts", TmShakeAdView_1.default);
        reg("TmAPI/AdView/TmSidePopAdView.ts", TmSidePopAdView_1.default);
        reg("View/TipsView/TipsView.ts", TipsView_1.default);
        reg("View/Common/UniversalBottomZone.ts", UniversalBottomZone_1.default);
        reg("View/VIVO/VivoNativeAdView.ts", VivoNativeAdView_1.default);
    };
    GameConfig.width = 1334;
    GameConfig.height = 750;
    GameConfig.scaleMode = "fixedheight";
    GameConfig.screenMode = "horizontal";
    GameConfig.alignV = "middle";
    GameConfig.alignH = "center";
    GameConfig.startScene = "Main.scene";
    GameConfig.sceneRoot = "";
    GameConfig.debug = false;
    GameConfig.stat = false;
    GameConfig.physicsDebug = false;
    GameConfig.exportSceneToJson = true;
    return GameConfig;
}());
exports.default = GameConfig;
GameConfig.init();
},{"./QpAPI/AdView/QpBannerVIew":22,"./QpAPI/AdView/QpListAdBox":23,"./QpAPI/AdView/QpListAdView":24,"./QpAPI/AdView/QpRandomJump":25,"./QpAPI/AdView/QpRdListAdBox":26,"./QpAPI/AdView/QpShakeAd2View":27,"./QpAPI/AdView/QpShakeAd3View":28,"./Scripts/GameCore/Rocker":49,"./Scripts/GameMgr":51,"./Scripts/MyGameView/BtnPanel":52,"./Scripts/MyGameView/CoinSubView":53,"./Scripts/MyGameView/Controller":54,"./Scripts/MyGameView/ExamineCheck":55,"./Scripts/MyGameView/GameStep":56,"./Scripts/MyGameView/KdBannerView":57,"./Scripts/MyGameView/TutorialView":58,"./TmAPI/AdView/TmBannerAdView":59,"./TmAPI/AdView/TmListAdBox":60,"./TmAPI/AdView/TmListAdView":61,"./TmAPI/AdView/TmShakeAdView":62,"./TmAPI/AdView/TmSidePopAdView":63,"./TmAPI/AdView/TmSingleAdView":64,"./View/AlphaBreathingAni":69,"./View/ButtonAnim":70,"./View/Common/UniversalBottomZone":71,"./View/GameView/Export1AdView":72,"./View/GameView/Export2AdView":73,"./View/GameView/Export3AdView":74,"./View/GameView/FirstViewAd":75,"./View/GameView/FriendExport":76,"./View/GameView/GameOverFailView":77,"./View/GameView/GameOverWinView":79,"./View/GameView/InGameView":80,"./View/GameView/MainGameView":81,"./View/GameView/SelectHero":82,"./View/LoadingView/LoadingView":85,"./View/OPPO/OppoNativeAdView":86,"./View/TipsView/TipsView":87,"./View/TwinkleSprite":88,"./View/VIVO/VivoNativeAdView":89}],8:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameSettings_csjc = /** @class */ (function () {
    function GameSettings_csjc() {
    }
    GameSettings_csjc.AppID_csjc = "wx0f41ac43bc3d5148";
    GameSettings_csjc.RemoteServerUrl_csjc = ""; //资源服务器地址
    GameSettings_csjc.LocalServerUrl_csjc = "res"; //本地测试资源服务器地址
    GameSettings_csjc.Versions_csjc = "1.0.0"; //当前游戏版本
    GameSettings_csjc.GamePlatform_csjc = "TT"; //当前游戏平台，目前有微信="WX",头条="TT",OPPO="OP",VIVO="VO",百度="BD"
    return GameSettings_csjc;
}());
exports.default = GameSettings_csjc;
},{}],9:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameConfig_1 = require("./GameConfig");
var User_1 = require("./User/User");
var layaMaxUI_1 = require("./ui/layaMaxUI");
var LoadingView_1 = require("./View/LoadingView/LoadingView");
var WXAPI_1 = require("./PlatformApi//WXAPI");
var EventMgr_1 = require("./Event/EventMgr");
var EventDef_1 = require("./Event/EventDef");
var OPPOAPI_1 = require("./PlatformApi//OPPOAPI");
var TmAPI_1 = require("./TmAPI/TmAPI");
// import TmAppConfig from "./TmAPI/TmAppConfig";
// import TmIpBlockConfig from "./TmAPI/TmIpBlockConfig";
var CachedWXBannerAd_1 = require("./PlatformApi//CachedWXBannerAd");
var VIVOAPI_1 = require("./PlatformApi/VIVOAPI");
var GameSwitch_1 = require("./CommomAPI/GameSwitch/GameSwitch");
var AdDataMgr_1 = require("./QpAPI/AdDataMgr");
var QpGameSwitch_1 = require("./QpAPI/QpGameSwitch");
var Main = /** @class */ (function () {
    function Main() {
        this._loadingUI = null;
        this._loadingView = null;
        //预加载列表
        this._preLoadRes = new Array();
        //根据IDE设置初始化引擎		
        if (window["Laya3D"])
            Laya3D.init(GameConfig_1.default.width, GameConfig_1.default.height);
        else
            Laya.init(GameConfig_1.default.width, GameConfig_1.default.height, Laya["WebGL"]);
        Laya["Physics"] && Laya["Physics"].enable();
        Laya["DebugPanel"] && Laya["DebugPanel"].enable();
        Laya.stage.scaleMode = GameConfig_1.default.scaleMode;
        Laya.stage.screenMode = GameConfig_1.default.screenMode;
        //兼容微信不支持加载scene后缀场景
        Laya.URL.exportSceneToJson = GameConfig_1.default.exportSceneToJson;
        //打开调试面板（通过IDE设置调试模式，或者url地址增加debug=true参数，均可打开调试面板）
        if (GameConfig_1.default.debug || Laya.Utils.getQueryString("debug") == "true")
            Laya.enableDebugPanel();
        if (GameConfig_1.default.physicsDebug && Laya["PhysicsDebugDraw"])
            Laya["PhysicsDebugDraw"].enable();
        if (GameConfig_1.default.stat)
            Laya.Stat.show();
        Laya.alertGlobalError = true;
        // if (true == AppConfig.onTTMiniGame) {
        // 	Laya.Browser.onMiniGame = false;
        // }
        // if (!Laya.Browser.onMiniGame
        // 	&& !Laya.Browser.onQGMiniGame
        // 	&& !Laya.Browser.onQQMiniGame
        // 	&& !AppConfig.onTTMiniGame)//如果不是小游戏，资源服务器设置为本地测试地址
        // {
        // 	AppConfig.ResServer = AppConfig.LocalTestReServer;
        // }
        if (Laya.Browser.onMiniGame) {
            CachedWXBannerAd_1.default.preloadBanner_csjc();
        }
        //激活资源版本控制，version.json由IDE发布功能自动生成，如果没有也不影响后续流程
        Laya.ResourceVersion.enable("version.json", Laya.Handler.create(this, this.onVersionLoaded), Laya.ResourceVersion.FILENAME_VERSION);
    }
    Main.prototype.onVersionLoaded = function () {
        //激活大小图映射，加载小图的时候，如果发现小图在大图合集里面，则优先加载大图合集，而不是小图
        Laya.AtlasInfoManager.enable("fileconfig.json", Laya.Handler.create(this, this.onConfigLoaded));
    };
    Main.prototype.onConfigLoaded = function () {
        Laya.loader.maxLoader = 50;
        this.initLoadingView();
        //加载重要配置，这些配置必须在游戏启动前加载完成
        // var firstConfigs =
        // 	[
        // 		{ url: AppConfig.ResServer + "/json/appswitch.json", type: Laya.Loader.JSON }
        // 	]
        // var self = this;
        // Laya.loader.load(firstConfigs, Laya.Handler.create(this, () => {
        // 	self.loadRes();//加载资源
        // }))
        //下面的代码用于控制当前的appconfig是来自本地测试版,还是在线服务器版
        var testConfig = false; //如果想让appConfig为本地版本,想办法让testConfig = true就行了
        if (!Laya.Browser.onMiniGame
            && !Laya.Browser.onQGMiniGame
            && !Laya.Browser.onQQMiniGame) //默认在模拟器环境下，appConfig设置为本地测试版
         {
            // testConfig = true;
        }
        if (testConfig) {
            // TmAppConfig.UpdateLocalConfig(null);
            GameSwitch_1.default.UpdateLocalConfig_csjc(null);
        }
        else {
            // TmAppConfig.UpdateConfig(null);
            GameSwitch_1.default.UpdateOnlineConfig_csjc(null);
        }
        this.loadRes(); //加载资源		
        // GdIpManager_csjc.UpdateIpState_csjc();
        EventMgr_1.default.regOnceEvent_csjc(EventDef_1.EventDef_csjc.App_CloseFirstLoadingView_csjc, this, this.closeloadingUI);
    };
    Main.prototype.initLoadingView = function () {
        this._loadingUI = new layaMaxUI_1.ui.View.LoadingUI();
        Laya.stage.addChild(this._loadingUI);
        this._loadingUI.width = Laya.stage.width;
        this._loadingUI.height = Laya.stage.height;
        this._loadingView = this._loadingUI.getComponent(LoadingView_1.default);
        this._loadingView.setProcess_csjc(0);
    };
    // private postResToOpenDataContext(onComplate: Function) {
    // 	if (Laya.Browser.onMiniGame) {
    // 		console.log("开始透传资源数据到开放域");
    // 		Laya.loader.load(
    // 			[
    // 				"openRes/Rank.atlas",
    // 			]
    // 			, Laya.Handler.create(null, function () {
    // 				Laya.MiniAdpter.sendAtlasToOpenDataContext("openRes/Rank.atlas");
    // 				console.log("透传资源数据到开放域  完毕！！！");
    // 				if (onComplate) {
    // 					onComplate();
    // 				}
    // 			}));
    // 	}
    // 	else {
    // 		if (onComplate) {
    // 			onComplate();
    // 		}
    // 	}
    // }
    Main.prototype.preLoad = function () {
        //这里添加你需要预加载的资源
        //this._preLoadRes.push({ url: AppConfig.ResServer + "/json/example.json", type: Laya.Loader.JSON });
    };
    Main.prototype.loadRes = function () {
        var _this = this;
        this.preLoad();
        var resource = this._preLoadRes;
        var self = this;
        if (Laya.Browser.onMiniGame) {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["wx"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.setProcess_csjc(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                self._loadingView.setProcess_csjc(res / 2);
            });
        }
        else if (Laya.Browser.onQGMiniGame) //oppo小游戏
         {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["qg"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.setProcess_csjc(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                // 加载进度百分比
                var progress = res["progress"];
                // 下载数据
                var totalBytesWritten = res["totalBytesWritten"];
                // 总长度
                var totalBytesExpectedToWrite = res["totalBytesExpectedToWrite"];
                self._loadingView.setProcess_csjc(progress / 2);
            });
        }
        else if (Laya.Browser.onQQMiniGame) {
            //开始加载分包
            var loadSubResTask = Laya.Browser.window["qq"].loadSubpackage({
                name: 'subRes',
                success: function (res) {
                    // 分包加载成功,开始预加载资源
                    if (resource.length > 0) {
                        Laya.loader.load(resource, Laya.Handler.create(_this, function () {
                            self.onLoadResComplate(); //预加载完成
                        }), Laya.Handler.create(_this, function (res) {
                            //todo:跟新进度条
                            self._loadingView.setProcess_csjc(res / 2 + 0.5);
                        }));
                    }
                    else {
                        self.onLoadResComplate(); //预加载完成
                    }
                },
                fail: function (res) {
                    _this.loadRes(); //加载失败，重新加载
                }
            });
            loadSubResTask.onProgressUpdate(function (res) {
                self._loadingView.setProcess_csjc(res / 2);
            });
        }
        else { //字节跳动没有分包
            if (resource.length > 0) {
                Laya.loader.load(resource, Laya.Handler.create(this, function () {
                    self.onLoadResComplate();
                }), Laya.Handler.create(this, function (res) {
                    self._loadingView.setProcess_csjc(res);
                }));
            }
            else {
                self.onLoadResComplate();
            }
        }
    };
    Main.prototype.onLoadResComplate = function () {
        var _this = this;
        var self = this;
        this._loadingView.setProcess_csjc(1);
        if (Laya.Browser.onMiniGame) {
            // TmAPI.Init();
            // TmAPI.Login((res) => {
            // 	if (res.login_city != "") {
            // 		User_csjc.city_csjc = res.login_city;
            // 	}
            // 	User_csjc.code_csjc = res.wx_code;
            // 	User_csjc.token_csjc = res.pid;
            // 	User_csjc.openId_csjc = res.open_id;
            // 	ALD_csjc.aldSendOpenId_csjc(User_csjc.openId_csjc);
            // 	TmIpBlockConfig.UpdateConfig();
            // 	GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
            // 	}));
            // });
            WXAPI_1.default.wxLogin_csjc(function (code) {
                User_1.default.code_csjc = code;
                AdDataMgr_1.AdDataMgr.Instance.InitMatix(function () {
                    TmAPI_1.default.NoLoginInit(User_1.default.openId_csjc);
                    // TmAbTestMgr_csjc.Instance_csjc.InitAbTest_csjc();
                });
                QpGameSwitch_1.default.getCustomKey();
                QpGameSwitch_1.default.UpdateIpCity();
                User_1.default.initiUser_csjc(null);
                GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(this, function () { }));
                // HttpUnit.login(
                // (res)=> 
                // {
                // 	if(res.code == 1)
                // 	{
                // 		console.log("登陆成功！！！");
                // 		User.token = res.data.token;
                // 		User.openId = res.data.openid;
                // 		ALD.aldSendOpenId(User.openId);
                // 		HttpUnit.getGameData((res)=>{
                // 			console.log("获取用户数据成功！！！");
                // 			if(1 == res.code)
                // 			{
                // 				User.initiUser(res.data);
                // 			}
                // 			else
                // 			{
                // 				User.initiUser(null);
                // 			}
                // 			GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
                // 			}));
                // 		},(res)=>{
                // 			console.log("获取用户数据失败！！！");
                // 			User.token = "";
                // 			User.openId = "";
                // 			User.initiUser(null);
                // 			GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
                // 			}));
                // 		})
                // 	}
                // 	else
                // 	{
                // 		console.log("登陆失败！！！" + res);
                // 		User.initiUser(null);
                // 		GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
                // 		}));
                // 	}
                // },
                // (res) => 
                // {
                // 	console.log("登陆失败！！！" + res);
                // 	User_csjc.initiUser_csjc(null);
                // 	GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
                // 	}));
                // })
            }, null);
        }
        else if (Laya.Browser.onQGMiniGame) //oppo小游戏
         {
            OPPOAPI_1.default.initAdService_csjc(function () {
            }, function () {
            }, function () {
            });
            OPPOAPI_1.default.Login_csjc(function (token) {
                User_1.default.code_csjc = token;
                User_1.default.initiUser_csjc(null);
                //#region  暂时没有登录服务器,直接过
                GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(this, function () {
                }));
                //#endregion
                // HttpUnit.login(
                // 	(res) => {
                // 		if (res.code == 1) {
                // 			console.log("登陆成功！！！");
                // 			User.token = res.data.token;
                // 			User.openId = res.data.openid;
                // 			HttpUnit.getGameData((res) => {
                // 				console.log("获取用户数据成功！！！");
                // 				if (1 == res.code) {
                // 					User.initiUser(res.data);
                // 					console.log("获取用户数据--------------------Start");
                // 					for (var key in res.data) {
                // 						console.log(key, res.data[key]);
                // 					}
                // 					console.log("获取用户数据--------------------End");
                // 				}
                // 				else {
                // 					User.initiUser(null);
                // 				}
                // 				GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
                // 				}));
                // 			}, (res) => {
                // 				console.log("获取用户数据失败！！！");
                // 				User.token = "";
                // 				User.openId = "";
                // 				User.initiUser(null);
                // 				GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
                // 				}));
                // 			})
                // 		}
                // 		else {
                // 			console.log("登陆失败！！！", res);
                // 			User.initiUser(null);
                // 			GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
                // 			}));
                // 		}
                // 	},
                // 	(res) => {
                // 		console.log("登陆失败！！！", res);
                // 		User.initiUser(null);
                // 		GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
                // 		}));
                // 	})
            }, function (res) {
                GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
                }));
            });
        }
        else if (Laya.Browser.onVVMiniGame) //oppo小游戏
         {
            VIVOAPI_1.default.VIVOLogin_csjc();
        }
        else if (Laya.Browser.onQQMiniGame) //qq小游戏
         {
            // QQMiniGameAPI.Login(function (code) {
            // User.code = code
            // 	HttpUnit.login(
            // 		(res) => {
            // 			if (res.code == 1) {
            // 				console.log("登陆成功！！！");
            // 				User.token = res.data.token;
            // 				User.openId = res.data.openid;
            // 				ALD.aldSendOpenId(User.openId);
            // 				HttpUnit.getGameData((res) => {
            // 					console.log("获取用户数据成功！！！");
            // 					if (1 == res.code) {
            // 						User.initiUser(res.data);
            // 					}
            // 					else {
            // 						User.initiUser(null);
            // 					}
            // 					GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
            // 					}));
            // 				}, (res) => {
            // 					console.log("获取用户数据失败！！！");
            // 					User.token = "";
            // 					User.openId = "";
            // 					User.initiUser(null);
            // 					GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
            // 					}));
            // 				})
            // 			}
            // 			else {
            // 				console.log("登陆失败！！！" + res);
            // 				User.initiUser(null);
            // 				GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
            // 				}));
            // 			}
            // 		},
            // 		(res) => {
            // 			console.log("登陆失败！！！" + res);
            // 			User.initiUser(null);
            // 			GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
            // 			}));
            // 		})
            // }, null);
        }
        // else if (AppConfig.onTTMiniGame)//头条，字节跳动
        // {
        // TTAPI.ttLogin(function (code) {
        // 	User.code = code
        // 	HttpUnit.login(
        // 		(res) => {
        // 			if (res.code == 1) {
        // 				console.log("登陆成功！！！");
        // 				User.token = res.data.token;
        // 				User.openId = res.data.openid;
        // 				HttpUnit.getGameData((res) => {
        // 					console.log("获取用户数据成功！！！");
        // 					if (1 == res.code) {
        // 						User.initiUser(res.data);
        // 					}
        // 					else {
        // 						User.initiUser(null);
        // 					}
        // 					GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
        // 					}));
        // 				}, (res) => {
        // 					console.log("获取用户数据失败！！！");
        // 					User.token = "";
        // 					User.openId = "";
        // 					User.initiUser(null);
        // 					GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
        // 					}));
        // 				})
        // 			}
        // 			else {
        // 				console.log("登陆失败！！！" + res);
        // 				User.initiUser(null);
        // 				GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
        // 				}));
        // 			}
        // 		},
        // 		(res) => {
        // 			console.log("登陆失败！！！" + res);
        // 			User.initiUser(null);
        // 			GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
        // 			}));
        // 		})
        // }, null);
        // }
        else {
            // TmAPI.Init();
            // TmAPI.Login((res) => {
            // 	console.log("登陆成功！！！");
            // 	User.code = res.wx_code;
            // 	User.token = res.pid;
            // 	User.openId = res.open_id;
            // 	// ALD.aldSendOpenId(User.openId);
            // 	GameConfig.startScene && Laya.Scene.open(GameConfig.startScene, false, Laya.Handler.create(this, function () {
            // 	}));
            // });
            User_1.default.initiUser_csjc(null);
            // TmIpBlockConfig.UpdateLocalConfig();
            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(this, function () {
            }));
        }
    };
    Main.prototype.closeloadingUI = function () {
        if (this._loadingUI && !this._loadingUI.destroyed) {
            this._loadingUI.destroy();
        }
    };
    return Main;
}());
//激活启动类
new Main();
},{"./CommomAPI/GameSwitch/GameSwitch":3,"./Event/EventDef":5,"./Event/EventMgr":6,"./GameConfig":7,"./PlatformApi//CachedWXBannerAd":17,"./PlatformApi//OPPOAPI":18,"./PlatformApi//WXAPI":20,"./PlatformApi/VIVOAPI":19,"./QpAPI/AdDataMgr":21,"./QpAPI/QpGameSwitch":30,"./TmAPI/TmAPI":65,"./User/User":67,"./View/LoadingView/LoadingView":85,"./ui/layaMaxUI":91}],10:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundMgr_csjc = /** @class */ (function () {
    function SoundMgr_csjc() {
    }
    SoundMgr_csjc.prototype.getSoundUrl_csjc = function (name) {
        var url = SoundMgr_csjc.soundResPath_csjc + name + ".mp3";
        return url;
    };
    SoundMgr_csjc.prototype.playSound_csjc = function (name, volume) {
        if (volume == null)
            volume = 1;
        var url = this.getSoundUrl_csjc(name);
        if (Laya.Browser.onMiniGame) {
            var sound = laya.utils.Pool.getItem(name);
            if (sound == null) {
                sound = wx.createInnerAudioContext();
                sound.volume = volume;
                sound.src = SoundMgr_csjc.soundResPath_csjc + name + ".mp3";
                sound.onEnded(function () {
                    laya.utils.Pool.recover(name, sound);
                    sound.offEnded();
                });
            }
            sound.play();
        }
        else {
            var res = Laya.SoundManager.playSound(url, 1);
            if (res != null)
                res.volume = 1;
        }
    };
    SoundMgr_csjc.prototype.playBGM_csjc = function (name) {
        var url = this.getSoundUrl_csjc(name);
        if (Laya.Browser.onMiniGame) {
            if (!this.bgm_csjc) {
                this.bgm_csjc = wx.createInnerAudioContext();
            }
            this.bgm_csjc.pause();
            this.bgm_csjc.src = url;
            this.bgm_csjc.loop = true;
            this.bgm_csjc.play();
        }
        else {
            Laya.SoundManager.playMusic(url, 0);
        }
    };
    SoundMgr_csjc.prototype.stopBGM_csjc = function () {
        if (Laya.Browser.onMiniGame) {
            if (this.bgm_csjc) {
                this.bgm_csjc.stop();
                this.bgm_csjc.destroy();
                this.bgm_csjc = null;
            }
        }
        else {
            Laya.SoundManager.stopMusic();
        }
    };
    SoundMgr_csjc.prototype.setBGMVolume_csjc = function (volume) {
        if (Laya.Browser.onMiniGame) {
            if (this.bgm_csjc) {
                this.bgm_csjc.volume = volume;
            }
        }
        else {
            Laya.SoundManager.setMusicVolume(volume);
        }
    };
    SoundMgr_csjc.soundResPath_csjc = "subRes/sound/";
    SoundMgr_csjc.instance_csjc = new SoundMgr_csjc();
    return SoundMgr_csjc;
}());
exports.default = SoundMgr_csjc;
},{}],11:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var StorageReq_csjc = /** @class */ (function () {
    function StorageReq_csjc() {
        this.key = null;
        this.data = {};
        this.success = null;
        this.fail = null;
        this.complete = null;
    }
    return StorageReq_csjc;
}());
exports.StorageReq_csjc = StorageReq_csjc;
//数据本地持久化保存
var StorageMgr_csjc = /** @class */ (function () {
    function StorageMgr_csjc() {
    }
    StorageMgr_csjc.setStorage_csjc = function (req) {
        var dataStr = JSON.stringify(req.data);
        if (!Laya.Browser.onMiniGame) {
            localStorage.setItem(req.key, dataStr);
            return;
        }
        wx.setStorage({
            key: req.key,
            data: dataStr,
            success: req.success,
            fail: req.fail,
            complete: req.complete
        });
    };
    StorageMgr_csjc.getStorage_csjc = function (key) {
        var value = null;
        try {
            if (!Laya.Browser.onMiniGame) {
                value = localStorage.getItem(key);
            }
            else {
                value = wx.getStorageSync(key);
            }
        }
        catch (e) {
        }
        return value;
    };
    return StorageMgr_csjc;
}());
exports.default = StorageMgr_csjc;
},{}],12:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewDef_csjc;
(function (ViewDef_csjc) {
    ViewDef_csjc["None"] = "";
    ViewDef_csjc["TipsView"] = "View/TipsView.json";
    ViewDef_csjc["MainGameView"] = "View/Game/MainGameView.json";
    ViewDef_csjc["InGameView"] = "View/Game/InGameView.json";
    ViewDef_csjc["SelectHero"] = "View/Game/SelectHero.json";
    ViewDef_csjc["GameOverView"] = "View/Game/GameOverView.json";
    ViewDef_csjc["Export1AdView"] = "View/Game/Export1AdView.json";
    ViewDef_csjc["Export2AdView"] = "View/Game/Export2AdView.json";
    ViewDef_csjc["Export3AdView"] = "View/Game/Export3AdView.json";
    ViewDef_csjc["GameOverWinView"] = "View/Game/GameOverWinView.json";
    ViewDef_csjc["GameOverFailView"] = "View/Game/GameOverFailView.json";
    ViewDef_csjc["TestAdvisementView"] = "View/TestAdvisementView.json";
    //todo:添加你的界面
    ViewDef_csjc["SignInView"] = "View/Game/SignInView.json";
    ViewDef_csjc["ReviveView"] = "View/Game/ReviveView.json";
    ViewDef_csjc["GetSkinView"] = "View/Game/GetSkinView.json";
    ViewDef_csjc["SuperStartView"] = "View/Game/SuperStartView.json";
    ViewDef_csjc["OppoNativeAd"] = "View/OPPO/OppoNativeAdView.json";
    ViewDef_csjc["HExport1AdView"] = "View/Game/HExport1AdView.json";
    ViewDef_csjc["HExport2AdView"] = "View/Game/HExport2AdView.json";
    ViewDef_csjc["FriendExportView"] = "View/Game/FriendExportView.json";
    ViewDef_csjc["TutorialView"] = "View/Game/TutorialView.json";
    ViewDef_csjc["KdBannerView"] = "View/Game/KdBannerView.json";
})(ViewDef_csjc = exports.ViewDef_csjc || (exports.ViewDef_csjc = {}));
//界面管理器
var ViewMgr_csjc = /** @class */ (function () {
    function ViewMgr_csjc() {
        this._views_csjc = {};
    }
    ViewMgr_csjc.prototype.openView_csjc = function (viewType, data, oncomplate) {
        if (this._views_csjc[viewType]) {
            var view = this._views_csjc[viewType];
            var coms = view._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        viewBase.openView(data);
                        break;
                    }
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
            return;
        }
        var viewUrl = String(viewType);
        var self = this;
        Laya.Scene.load(viewUrl, Laya.Handler.create(this, function (owner) {
            Laya.stage.addChild(owner);
            var view = owner;
            self._views_csjc[viewType] = view;
            var coms = owner._components;
            var viewBase = null;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        viewBase = element;
                        element._viewDef = viewType;
                        viewBase.openView(data);
                        break;
                    }
                }
            }
            if (oncomplate) {
                oncomplate(viewBase);
            }
        }));
    };
    ViewMgr_csjc.prototype.closeView_csjc = function (viewType) {
        var view = this._views_csjc[viewType];
        if (view) {
            var owner = view;
            var coms = owner._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.onClose();
                        break;
                    }
                }
            }
            view.removeSelf();
            view.destroy();
            this._views_csjc[viewType] = null;
        }
    };
    ViewMgr_csjc.prototype.showView_csjc = function (viewType) {
        var view = this._views_csjc[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.show();
                        break;
                    }
                }
            }
        }
    };
    ViewMgr_csjc.prototype.hideView_csjc = function (viewType) {
        var view = this._views_csjc[viewType];
        if (view) {
            var coms = view._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (element._viewBase) {
                        element.hide();
                        break;
                    }
                }
            }
        }
    };
    ViewMgr_csjc.prototype.getView_csjc = function (viewType) {
        return this._views_csjc[viewType];
    };
    ViewMgr_csjc.prototype.showTips_csjc = function (msg) {
        this.openView_csjc(ViewDef_csjc.TipsView, msg);
    };
    ViewMgr_csjc.instance_csjc = new ViewMgr_csjc();
    return ViewMgr_csjc;
}());
exports.default = ViewMgr_csjc;
},{}],13:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CryptoJS = require("./aes.js");
var AesTools_csjc = /** @class */ (function () {
    function AesTools_csjc() {
    }
    //加密
    AesTools_csjc.encrypt_csjc = function (str) {
        var key = CryptoJS.enc.Utf8.parse(AesTools_csjc.KEY); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(AesTools_csjc.IV); //向量iv
        var encrypted = CryptoJS.AES.encrypt(str, key, { iv: iv, mode: CryptoJS.mode.CBC, padding: CryptoJS.pad.Pkcs7 });
        return encrypted.toString();
    };
    //解密
    AesTools_csjc.decrypt_csjc = function (str) {
        var key = CryptoJS.enc.Utf8.parse(AesTools_csjc.KEY); // 秘钥
        var iv = CryptoJS.enc.Utf8.parse(AesTools_csjc.IV); //向量iv
        var decrypted = CryptoJS.AES.decrypt(str, key, { iv: iv, padding: CryptoJS.pad.Pkcs7 });
        return decrypted.toString(CryptoJS.enc.Utf8);
    };
    AesTools_csjc.KEY = 'b#63fFJ6AvkK3YT*';
    AesTools_csjc.IV = 'J$f4DU%sNL73M&Go';
    return AesTools_csjc;
}());
exports.default = AesTools_csjc;
},{"./aes.js":16}],14:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NetConfig_1 = require("./NetConfig");
var User_1 = require("../User/User");
var AesTools_1 = require("./AesTools");
var requestData_csjc = /** @class */ (function () {
    function requestData_csjc() {
        this.meth = "post";
        this.header = null;
        this.url = "";
        this.onSuccess = null;
        this.onFail = null;
        this.data = {};
    }
    return requestData_csjc;
}());
exports.requestData_csjc = requestData_csjc;
var HttpUnit_csjc = /** @class */ (function () {
    function HttpUnit_csjc() {
    }
    HttpUnit_csjc.request = function (req) {
        if (req.url.indexOf("https://") > -1 ||
            req.url.indexOf("http://") > -1) {
            req.url = req.url;
        }
        else {
            req.url = NetConfig_1.default.serverUrl_csjc + req.url;
        }
        var completeFunc = function (res) {
            console.log(res, "http Success");
            if (req.onSuccess) {
                req.onSuccess(res);
            }
            req.onSuccess = null;
            req = null;
        };
        var errorFunc = function (res) {
            console.log(res, "http fail");
            if (req.onFail) {
                req.onFail(res);
            }
            req.onFail = null;
            req = null;
        };
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, HttpUnit_csjc, completeFunc);
        xhr.once(Laya.Event.ERROR, HttpUnit_csjc, errorFunc);
        // let dataStr:string = JSON.stringify(req.data);
        if (Laya.Browser.onMiniGame /* || AppConfig.onTTMiniGame */) {
            req.data.code = User_1.default.code_csjc;
        }
        else if (Laya.Browser.onQGMiniGame) //OPPO小游戏
         {
            req.data.oppotoken = User_1.default.code_csjc;
        }
        else if (Laya.Browser.onQQMiniGame) //qq小游戏
         {
            req.data.code = User_1.default.code_csjc;
        }
        else {
            // req.data.code = User_csjc.code_csjc;
        }
        var time = "time=" + String(Date.now());
        if (req.header == null) {
            req.header =
                [
                    "Content-Type", "application/json",
                    "state", NetConfig_1.default.state_csjc,
                    "gameid", NetConfig_1.default.gameid_csjc,
                    "sign", AesTools_1.default.encrypt_csjc(time),
                ];
        }
        if (User_1.default.token_csjc) {
            req.header.push("token");
            req.header.push(User_1.default.token_csjc);
        }
        xhr.send(req.url, /* JSON.stringify( */ req.data /* ) */, req.meth, "json", req.header);
    };
    //todo:这里添加你们和服务器相互的接口
    HttpUnit_csjc.login_csjc = function (onSuccess, onFail) {
        var req = new requestData_csjc();
        req.url = NetConfig_1.default.login_csjc;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit_csjc.request(req);
    };
    HttpUnit_csjc.saveGameData_csjc = function (gameData, onSuccess, onFail) {
        var req = new requestData_csjc();
        req.url = NetConfig_1.default.saveGameData_csjc;
        req.data.gameData = gameData;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit_csjc.request(req);
    };
    HttpUnit_csjc.getGameData_csjc = function (onSuccess, onFail) {
        var req = new requestData_csjc();
        req.url = NetConfig_1.default.getUser_csjc;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit_csjc.request(req);
    };
    /**
     * IP屏蔽方法，需要在NetConfig类中设置IpBlock的接口地址
     * onSuccess方法返回参数的范例为 Object {code: 0, msg: "准一线", time: "1571034447", data: null}
     * @static
     * @memberof HttpUnit
     */
    HttpUnit_csjc.GetIpBlock_csjc = function (onSuccess, onFail) {
        if (-1 != NetConfig_1.default.gameid_csjc) {
            var req = new requestData_csjc();
            req.url = NetConfig_1.default.ipBlock;
            req.onSuccess = onSuccess;
            req.onFail = onFail;
            HttpUnit_csjc.request(req);
        }
    };
    HttpUnit_csjc.reportExport_csjc = function (appid, game_name, onSuccess, onFail) {
        var req = new requestData_csjc();
        req.url = NetConfig_1.default.reportExport;
        req.data.wbappid = appid;
        req.data.game_name = game_name;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit_csjc.request(req);
    };
    HttpUnit_csjc.reportImport_csjc = function (appid, channel, onSuccess, onFail) {
        var req = new requestData_csjc();
        req.url = NetConfig_1.default.reportImport;
        req.data.wbappid = appid;
        req.data.channel = channel;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit_csjc.request(req);
    };
    HttpUnit_csjc.getuserip_csjc = function (onSuccess, onFail) {
        var req = new requestData_csjc();
        req.url = NetConfig_1.default.getuserip;
        req.onSuccess = onSuccess;
        req.onFail = onFail;
        HttpUnit_csjc.request(req);
    };
    return HttpUnit_csjc;
}());
exports.default = HttpUnit_csjc;
},{"../User/User":67,"./AesTools":13,"./NetConfig":15}],15:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var NetConfig_csjc = /** @class */ (function () {
    function NetConfig_csjc() {
    }
    NetConfig_csjc.state_csjc = 0;
    NetConfig_csjc.gameid_csjc = -1;
    NetConfig_csjc.serverUrl_csjc = "";
    NetConfig_csjc.login_csjc = "";
    NetConfig_csjc.saveGameData_csjc = "";
    NetConfig_csjc.getUser_csjc = "";
    /* 用来对IP地址进行屏蔽的接口地址，可以使用接口的返回值让某些广告逻辑在微信的审核地区(广州)发生变化 */
    NetConfig_csjc.ipBlock = "";
    NetConfig_csjc.reportExport = "/api/share/getwaibuad";
    NetConfig_csjc.reportImport = "/api/share/getzjadml";
    NetConfig_csjc.getuserip = "/api/share/getuserip";
    return NetConfig_csjc;
}());
exports.default = NetConfig_csjc;
},{}],16:[function(require,module,exports){
var CryptoJS = CryptoJS || function (u, p) {
  var d = {}, l = d.lib = {}, s = function () { }, t = l.Base = { extend: function (a) { s.prototype = this; var c = new s; a && c.mixIn(a); c.hasOwnProperty("init") || (c.init = function () { c.$super.init.apply(this, arguments) }); c.init.prototype = c; c.$super = this; return c }, create: function () { var a = this.extend(); a.init.apply(a, arguments); return a }, init: function () { }, mixIn: function (a) { for (var c in a) a.hasOwnProperty(c) && (this[c] = a[c]); a.hasOwnProperty("toString") && (this.toString = a.toString) }, clone: function () { return this.init.prototype.extend(this) } },
  r = l.WordArray = t.extend({
    init: function (a, c) { a = this.words = a || []; this.sigBytes = c != p ? c : 4 * a.length }, toString: function (a) { return (a || v).stringify(this) }, concat: function (a) { var c = this.words, e = a.words, j = this.sigBytes; a = a.sigBytes; this.clamp(); if (j % 4) for (var k = 0; k < a; k++)c[j + k >>> 2] |= (e[k >>> 2] >>> 24 - 8 * (k % 4) & 255) << 24 - 8 * ((j + k) % 4); else if (65535 < e.length) for (k = 0; k < a; k += 4)c[j + k >>> 2] = e[k >>> 2]; else c.push.apply(c, e); this.sigBytes += a; return this }, clamp: function () {
      var a = this.words, c = this.sigBytes; a[c >>> 2] &= 4294967295 <<
        32 - 8 * (c % 4); a.length = u.ceil(c / 4)
    }, clone: function () { var a = t.clone.call(this); a.words = this.words.slice(0); return a }, random: function (a) { for (var c = [], e = 0; e < a; e += 4)c.push(4294967296 * u.random() | 0); return new r.init(c, a) }
  }), w = d.enc = {}, v = w.Hex = {
    stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++) { var k = c[j >>> 2] >>> 24 - 8 * (j % 4) & 255; e.push((k >>> 4).toString(16)); e.push((k & 15).toString(16)) } return e.join("") }, parse: function (a) {
      for (var c = a.length, e = [], j = 0; j < c; j += 2)e[j >>> 3] |= parseInt(a.substr(j,
        2), 16) << 24 - 4 * (j % 8); return new r.init(e, c / 2)
    }
  }, b = w.Latin1 = { stringify: function (a) { var c = a.words; a = a.sigBytes; for (var e = [], j = 0; j < a; j++)e.push(String.fromCharCode(c[j >>> 2] >>> 24 - 8 * (j % 4) & 255)); return e.join("") }, parse: function (a) { for (var c = a.length, e = [], j = 0; j < c; j++)e[j >>> 2] |= (a.charCodeAt(j) & 255) << 24 - 8 * (j % 4); return new r.init(e, c) } }, x = w.Utf8 = { stringify: function (a) { try { return decodeURIComponent(escape(b.stringify(a))) } catch (c) { throw Error("Malformed UTF-8 data"); } }, parse: function (a) { return b.parse(unescape(encodeURIComponent(a))) } },
  q = l.BufferedBlockAlgorithm = t.extend({
    reset: function () { this._data = new r.init; this._nDataBytes = 0 }, _append: function (a) { "string" == typeof a && (a = x.parse(a)); this._data.concat(a); this._nDataBytes += a.sigBytes }, _process: function (a) { var c = this._data, e = c.words, j = c.sigBytes, k = this.blockSize, b = j / (4 * k), b = a ? u.ceil(b) : u.max((b | 0) - this._minBufferSize, 0); a = b * k; j = u.min(4 * a, j); if (a) { for (var q = 0; q < a; q += k)this._doProcessBlock(e, q); q = e.splice(0, a); c.sigBytes -= j } return new r.init(q, j) }, clone: function () {
      var a = t.clone.call(this);
      a._data = this._data.clone(); return a
    }, _minBufferSize: 0
  }); l.Hasher = q.extend({
    cfg: t.extend(), init: function (a) { this.cfg = this.cfg.extend(a); this.reset() }, reset: function () { q.reset.call(this); this._doReset() }, update: function (a) { this._append(a); this._process(); return this }, finalize: function (a) { a && this._append(a); return this._doFinalize() }, blockSize: 16, _createHelper: function (a) { return function (b, e) { return (new a.init(e)).finalize(b) } }, _createHmacHelper: function (a) {
      return function (b, e) {
        return (new n.HMAC.init(a,
          e)).finalize(b)
      }
    }
  }); var n = d.algo = {}; return d
}(Math);
(function () {
  var u = CryptoJS, p = u.lib.WordArray; u.enc.Base64 = {
    stringify: function (d) { var l = d.words, p = d.sigBytes, t = this._map; d.clamp(); d = []; for (var r = 0; r < p; r += 3)for (var w = (l[r >>> 2] >>> 24 - 8 * (r % 4) & 255) << 16 | (l[r + 1 >>> 2] >>> 24 - 8 * ((r + 1) % 4) & 255) << 8 | l[r + 2 >>> 2] >>> 24 - 8 * ((r + 2) % 4) & 255, v = 0; 4 > v && r + 0.75 * v < p; v++)d.push(t.charAt(w >>> 6 * (3 - v) & 63)); if (l = t.charAt(64)) for (; d.length % 4;)d.push(l); return d.join("") }, parse: function (d) {
      var l = d.length, s = this._map, t = s.charAt(64); t && (t = d.indexOf(t), -1 != t && (l = t)); for (var t = [], r = 0, w = 0; w <
        l; w++)if (w % 4) { var v = s.indexOf(d.charAt(w - 1)) << 2 * (w % 4), b = s.indexOf(d.charAt(w)) >>> 6 - 2 * (w % 4); t[r >>> 2] |= (v | b) << 24 - 8 * (r % 4); r++ } return p.create(t, r)
    }, _map: "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/="
  }
})();
(function (u) {
  function p(b, n, a, c, e, j, k) { b = b + (n & a | ~n & c) + e + k; return (b << j | b >>> 32 - j) + n } function d(b, n, a, c, e, j, k) { b = b + (n & c | a & ~c) + e + k; return (b << j | b >>> 32 - j) + n } function l(b, n, a, c, e, j, k) { b = b + (n ^ a ^ c) + e + k; return (b << j | b >>> 32 - j) + n } function s(b, n, a, c, e, j, k) { b = b + (a ^ (n | ~c)) + e + k; return (b << j | b >>> 32 - j) + n } for (var t = CryptoJS, r = t.lib, w = r.WordArray, v = r.Hasher, r = t.algo, b = [], x = 0; 64 > x; x++)b[x] = 4294967296 * u.abs(u.sin(x + 1)) | 0; r = r.MD5 = v.extend({
    _doReset: function () { this._hash = new w.init([1732584193, 4023233417, 2562383102, 271733878]) },
    _doProcessBlock: function (q, n) {
      for (var a = 0; 16 > a; a++) { var c = n + a, e = q[c]; q[c] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360 } var a = this._hash.words, c = q[n + 0], e = q[n + 1], j = q[n + 2], k = q[n + 3], z = q[n + 4], r = q[n + 5], t = q[n + 6], w = q[n + 7], v = q[n + 8], A = q[n + 9], B = q[n + 10], C = q[n + 11], u = q[n + 12], D = q[n + 13], E = q[n + 14], x = q[n + 15], f = a[0], m = a[1], g = a[2], h = a[3], f = p(f, m, g, h, c, 7, b[0]), h = p(h, f, m, g, e, 12, b[1]), g = p(g, h, f, m, j, 17, b[2]), m = p(m, g, h, f, k, 22, b[3]), f = p(f, m, g, h, z, 7, b[4]), h = p(h, f, m, g, r, 12, b[5]), g = p(g, h, f, m, t, 17, b[6]), m = p(m, g, h, f, w, 22, b[7]),
        f = p(f, m, g, h, v, 7, b[8]), h = p(h, f, m, g, A, 12, b[9]), g = p(g, h, f, m, B, 17, b[10]), m = p(m, g, h, f, C, 22, b[11]), f = p(f, m, g, h, u, 7, b[12]), h = p(h, f, m, g, D, 12, b[13]), g = p(g, h, f, m, E, 17, b[14]), m = p(m, g, h, f, x, 22, b[15]), f = d(f, m, g, h, e, 5, b[16]), h = d(h, f, m, g, t, 9, b[17]), g = d(g, h, f, m, C, 14, b[18]), m = d(m, g, h, f, c, 20, b[19]), f = d(f, m, g, h, r, 5, b[20]), h = d(h, f, m, g, B, 9, b[21]), g = d(g, h, f, m, x, 14, b[22]), m = d(m, g, h, f, z, 20, b[23]), f = d(f, m, g, h, A, 5, b[24]), h = d(h, f, m, g, E, 9, b[25]), g = d(g, h, f, m, k, 14, b[26]), m = d(m, g, h, f, v, 20, b[27]), f = d(f, m, g, h, D, 5, b[28]), h = d(h, f,
          m, g, j, 9, b[29]), g = d(g, h, f, m, w, 14, b[30]), m = d(m, g, h, f, u, 20, b[31]), f = l(f, m, g, h, r, 4, b[32]), h = l(h, f, m, g, v, 11, b[33]), g = l(g, h, f, m, C, 16, b[34]), m = l(m, g, h, f, E, 23, b[35]), f = l(f, m, g, h, e, 4, b[36]), h = l(h, f, m, g, z, 11, b[37]), g = l(g, h, f, m, w, 16, b[38]), m = l(m, g, h, f, B, 23, b[39]), f = l(f, m, g, h, D, 4, b[40]), h = l(h, f, m, g, c, 11, b[41]), g = l(g, h, f, m, k, 16, b[42]), m = l(m, g, h, f, t, 23, b[43]), f = l(f, m, g, h, A, 4, b[44]), h = l(h, f, m, g, u, 11, b[45]), g = l(g, h, f, m, x, 16, b[46]), m = l(m, g, h, f, j, 23, b[47]), f = s(f, m, g, h, c, 6, b[48]), h = s(h, f, m, g, w, 10, b[49]), g = s(g, h, f, m,
            E, 15, b[50]), m = s(m, g, h, f, r, 21, b[51]), f = s(f, m, g, h, u, 6, b[52]), h = s(h, f, m, g, k, 10, b[53]), g = s(g, h, f, m, B, 15, b[54]), m = s(m, g, h, f, e, 21, b[55]), f = s(f, m, g, h, v, 6, b[56]), h = s(h, f, m, g, x, 10, b[57]), g = s(g, h, f, m, t, 15, b[58]), m = s(m, g, h, f, D, 21, b[59]), f = s(f, m, g, h, z, 6, b[60]), h = s(h, f, m, g, C, 10, b[61]), g = s(g, h, f, m, j, 15, b[62]), m = s(m, g, h, f, A, 21, b[63]); a[0] = a[0] + f | 0; a[1] = a[1] + m | 0; a[2] = a[2] + g | 0; a[3] = a[3] + h | 0
    }, _doFinalize: function () {
      var b = this._data, n = b.words, a = 8 * this._nDataBytes, c = 8 * b.sigBytes; n[c >>> 5] |= 128 << 24 - c % 32; var e = u.floor(a /
        4294967296); n[(c + 64 >>> 9 << 4) + 15] = (e << 8 | e >>> 24) & 16711935 | (e << 24 | e >>> 8) & 4278255360; n[(c + 64 >>> 9 << 4) + 14] = (a << 8 | a >>> 24) & 16711935 | (a << 24 | a >>> 8) & 4278255360; b.sigBytes = 4 * (n.length + 1); this._process(); b = this._hash; n = b.words; for (a = 0; 4 > a; a++)c = n[a], n[a] = (c << 8 | c >>> 24) & 16711935 | (c << 24 | c >>> 8) & 4278255360; return b
    }, clone: function () { var b = v.clone.call(this); b._hash = this._hash.clone(); return b }
  }); t.MD5 = v._createHelper(r); t.HmacMD5 = v._createHmacHelper(r)
})(Math);
(function () {
  var u = CryptoJS, p = u.lib, d = p.Base, l = p.WordArray, p = u.algo, s = p.EvpKDF = d.extend({ cfg: d.extend({ keySize: 4, hasher: p.MD5, iterations: 1 }), init: function (d) { this.cfg = this.cfg.extend(d) }, compute: function (d, r) { for (var p = this.cfg, s = p.hasher.create(), b = l.create(), u = b.words, q = p.keySize, p = p.iterations; u.length < q;) { n && s.update(n); var n = s.update(d).finalize(r); s.reset(); for (var a = 1; a < p; a++)n = s.finalize(n), s.reset(); b.concat(n) } b.sigBytes = 4 * q; return b } }); u.EvpKDF = function (d, l, p) {
    return s.create(p).compute(d,
      l)
  }
})();
CryptoJS.lib.Cipher || function (u) {
  var p = CryptoJS, d = p.lib, l = d.Base, s = d.WordArray, t = d.BufferedBlockAlgorithm, r = p.enc.Base64, w = p.algo.EvpKDF, v = d.Cipher = t.extend({
    cfg: l.extend(), createEncryptor: function (e, a) { return this.create(this._ENC_XFORM_MODE, e, a) }, createDecryptor: function (e, a) { return this.create(this._DEC_XFORM_MODE, e, a) }, init: function (e, a, b) { this.cfg = this.cfg.extend(b); this._xformMode = e; this._key = a; this.reset() }, reset: function () { t.reset.call(this); this._doReset() }, process: function (e) { this._append(e); return this._process() },
    finalize: function (e) { e && this._append(e); return this._doFinalize() }, keySize: 4, ivSize: 4, _ENC_XFORM_MODE: 1, _DEC_XFORM_MODE: 2, _createHelper: function (e) { return { encrypt: function (b, k, d) { return ("string" == typeof k ? c : a).encrypt(e, b, k, d) }, decrypt: function (b, k, d) { return ("string" == typeof k ? c : a).decrypt(e, b, k, d) } } }
  }); d.StreamCipher = v.extend({ _doFinalize: function () { return this._process(!0) }, blockSize: 1 }); var b = p.mode = {}, x = function (e, a, b) {
    var c = this._iv; c ? this._iv = u : c = this._prevBlock; for (var d = 0; d < b; d++)e[a + d] ^=
      c[d]
  }, q = (d.BlockCipherMode = l.extend({ createEncryptor: function (e, a) { return this.Encryptor.create(e, a) }, createDecryptor: function (e, a) { return this.Decryptor.create(e, a) }, init: function (e, a) { this._cipher = e; this._iv = a } })).extend(); q.Encryptor = q.extend({ processBlock: function (e, a) { var b = this._cipher, c = b.blockSize; x.call(this, e, a, c); b.encryptBlock(e, a); this._prevBlock = e.slice(a, a + c) } }); q.Decryptor = q.extend({
    processBlock: function (e, a) {
      var b = this._cipher, c = b.blockSize, d = e.slice(a, a + c); b.decryptBlock(e, a); x.call(this,
        e, a, c); this._prevBlock = d
    }
  }); b = b.CBC = q; q = (p.pad = {}).Pkcs7 = { pad: function (a, b) { for (var c = 4 * b, c = c - a.sigBytes % c, d = c << 24 | c << 16 | c << 8 | c, l = [], n = 0; n < c; n += 4)l.push(d); c = s.create(l, c); a.concat(c) }, unpad: function (a) { a.sigBytes -= a.words[a.sigBytes - 1 >>> 2] & 255 } }; d.BlockCipher = v.extend({
    cfg: v.cfg.extend({ mode: b, padding: q }), reset: function () {
      v.reset.call(this); var a = this.cfg, b = a.iv, a = a.mode; if (this._xformMode == this._ENC_XFORM_MODE) var c = a.createEncryptor; else c = a.createDecryptor, this._minBufferSize = 1; this._mode = c.call(a,
        this, b && b.words)
    }, _doProcessBlock: function (a, b) { this._mode.processBlock(a, b) }, _doFinalize: function () { var a = this.cfg.padding; if (this._xformMode == this._ENC_XFORM_MODE) { a.pad(this._data, this.blockSize); var b = this._process(!0) } else b = this._process(!0), a.unpad(b); return b }, blockSize: 4
  }); var n = d.CipherParams = l.extend({ init: function (a) { this.mixIn(a) }, toString: function (a) { return (a || this.formatter).stringify(this) } }), b = (p.format = {}).OpenSSL = {
    stringify: function (a) {
      var b = a.ciphertext; a = a.salt; return (a ? s.create([1398893684,
        1701076831]).concat(a).concat(b) : b).toString(r)
    }, parse: function (a) { a = r.parse(a); var b = a.words; if (1398893684 == b[0] && 1701076831 == b[1]) { var c = s.create(b.slice(2, 4)); b.splice(0, 4); a.sigBytes -= 16 } return n.create({ ciphertext: a, salt: c }) }
  }, a = d.SerializableCipher = l.extend({
    cfg: l.extend({ format: b }), encrypt: function (a, b, c, d) { d = this.cfg.extend(d); var l = a.createEncryptor(c, d); b = l.finalize(b); l = l.cfg; return n.create({ ciphertext: b, key: c, iv: l.iv, algorithm: a, mode: l.mode, padding: l.padding, blockSize: a.blockSize, formatter: d.format }) },
    decrypt: function (a, b, c, d) { d = this.cfg.extend(d); b = this._parse(b, d.format); return a.createDecryptor(c, d).finalize(b.ciphertext) }, _parse: function (a, b) { return "string" == typeof a ? b.parse(a, this) : a }
  }), p = (p.kdf = {}).OpenSSL = { execute: function (a, b, c, d) { d || (d = s.random(8)); a = w.create({ keySize: b + c }).compute(a, d); c = s.create(a.words.slice(b), 4 * c); a.sigBytes = 4 * b; return n.create({ key: a, iv: c, salt: d }) } }, c = d.PasswordBasedCipher = a.extend({
    cfg: a.cfg.extend({ kdf: p }), encrypt: function (b, c, d, l) {
      l = this.cfg.extend(l); d = l.kdf.execute(d,
        b.keySize, b.ivSize); l.iv = d.iv; b = a.encrypt.call(this, b, c, d.key, l); b.mixIn(d); return b
    }, decrypt: function (b, c, d, l) { l = this.cfg.extend(l); c = this._parse(c, l.format); d = l.kdf.execute(d, b.keySize, b.ivSize, c.salt); l.iv = d.iv; return a.decrypt.call(this, b, c, d.key, l) }
  })
}();
(function () {
  for (var u = CryptoJS, p = u.lib.BlockCipher, d = u.algo, l = [], s = [], t = [], r = [], w = [], v = [], b = [], x = [], q = [], n = [], a = [], c = 0; 256 > c; c++)a[c] = 128 > c ? c << 1 : c << 1 ^ 283; for (var e = 0, j = 0, c = 0; 256 > c; c++) { var k = j ^ j << 1 ^ j << 2 ^ j << 3 ^ j << 4, k = k >>> 8 ^ k & 255 ^ 99; l[e] = k; s[k] = e; var z = a[e], F = a[z], G = a[F], y = 257 * a[k] ^ 16843008 * k; t[e] = y << 24 | y >>> 8; r[e] = y << 16 | y >>> 16; w[e] = y << 8 | y >>> 24; v[e] = y; y = 16843009 * G ^ 65537 * F ^ 257 * z ^ 16843008 * e; b[k] = y << 24 | y >>> 8; x[k] = y << 16 | y >>> 16; q[k] = y << 8 | y >>> 24; n[k] = y; e ? (e = z ^ a[a[a[G ^ z]]], j ^= a[a[j]]) : e = j = 1 } var H = [0, 1, 2, 4, 8,
    16, 32, 64, 128, 27, 54], d = d.AES = p.extend({
      _doReset: function () {
        for (var a = this._key, c = a.words, d = a.sigBytes / 4, a = 4 * ((this._nRounds = d + 6) + 1), e = this._keySchedule = [], j = 0; j < a; j++)if (j < d) e[j] = c[j]; else { var k = e[j - 1]; j % d ? 6 < d && 4 == j % d && (k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255]) : (k = k << 8 | k >>> 24, k = l[k >>> 24] << 24 | l[k >>> 16 & 255] << 16 | l[k >>> 8 & 255] << 8 | l[k & 255], k ^= H[j / d | 0] << 24); e[j] = e[j - d] ^ k } c = this._invKeySchedule = []; for (d = 0; d < a; d++)j = a - d, k = d % 4 ? e[j] : e[j - 4], c[d] = 4 > d || 4 >= j ? k : b[l[k >>> 24]] ^ x[l[k >>> 16 & 255]] ^ q[l[k >>>
          8 & 255]] ^ n[l[k & 255]]
      }, encryptBlock: function (a, b) { this._doCryptBlock(a, b, this._keySchedule, t, r, w, v, l) }, decryptBlock: function (a, c) { var d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d; this._doCryptBlock(a, c, this._invKeySchedule, b, x, q, n, s); d = a[c + 1]; a[c + 1] = a[c + 3]; a[c + 3] = d }, _doCryptBlock: function (a, b, c, d, e, j, l, f) {
        for (var m = this._nRounds, g = a[b] ^ c[0], h = a[b + 1] ^ c[1], k = a[b + 2] ^ c[2], n = a[b + 3] ^ c[3], p = 4, r = 1; r < m; r++)var q = d[g >>> 24] ^ e[h >>> 16 & 255] ^ j[k >>> 8 & 255] ^ l[n & 255] ^ c[p++], s = d[h >>> 24] ^ e[k >>> 16 & 255] ^ j[n >>> 8 & 255] ^ l[g & 255] ^ c[p++], t =
          d[k >>> 24] ^ e[n >>> 16 & 255] ^ j[g >>> 8 & 255] ^ l[h & 255] ^ c[p++], n = d[n >>> 24] ^ e[g >>> 16 & 255] ^ j[h >>> 8 & 255] ^ l[k & 255] ^ c[p++], g = q, h = s, k = t; q = (f[g >>> 24] << 24 | f[h >>> 16 & 255] << 16 | f[k >>> 8 & 255] << 8 | f[n & 255]) ^ c[p++]; s = (f[h >>> 24] << 24 | f[k >>> 16 & 255] << 16 | f[n >>> 8 & 255] << 8 | f[g & 255]) ^ c[p++]; t = (f[k >>> 24] << 24 | f[n >>> 16 & 255] << 16 | f[g >>> 8 & 255] << 8 | f[h & 255]) ^ c[p++]; n = (f[n >>> 24] << 24 | f[g >>> 16 & 255] << 16 | f[h >>> 8 & 255] << 8 | f[k & 255]) ^ c[p++]; a[b] = q; a[b + 1] = s; a[b + 2] = t; a[b + 3] = n
      }, keySize: 8
    }); u.AES = p._createHelper(d)
})();

module.exports = CryptoJS;
},{}],17:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CachedWXBannerAd_csjc = /** @class */ (function () {
    function CachedWXBannerAd_csjc() {
    }
    Object.defineProperty(CachedWXBannerAd_csjc, "GetBannerId_csjc", {
        get: function () {
            if (this._wxBannerIds_csjc.length == 0)
                return "";
            var index = this._bannerIndex_csjc;
            if (this._bannerIndex_csjc > this._wxBannerIds_csjc.length - 1) {
                this._bannerIndex_csjc = 0;
                index = this._bannerIndex_csjc;
            }
            this._bannerIndex_csjc++;
            return this._wxBannerIds_csjc[index];
        },
        enumerable: true,
        configurable: true
    });
    CachedWXBannerAd_csjc.preloadBanner_csjc = function () {
        var bannerTodayBannerMax = 10;
        var preLoadBanners = new Array();
        for (var i = 0; i < this._wxBannerIds_csjc.length; ++i) {
            preLoadBanners.push(this._wxBannerIds_csjc[i]);
        }
        if (preLoadBanners.length > bannerTodayBannerMax) {
            var delNum = preLoadBanners.length - bannerTodayBannerMax;
            for (var i = 0; i < delNum; ++i) {
                preLoadBanners.splice(Math.floor(Math.random() * preLoadBanners.length), 1);
            }
        }
        console.log("开始预创建微信Bannaer", preLoadBanners);
        console.log("Bannaer 最大数限制 ：", bannerTodayBannerMax);
        var counter = 0;
        Laya.timer.loop(2000, CachedWXBannerAd_csjc._preLoopObj_csjc, function () {
            if (counter >= preLoadBanners.length) {
                Laya.timer.clearAll(CachedWXBannerAd_csjc._preLoopObj_csjc);
                return;
            }
            var bannerid = preLoadBanners[counter];
            var banner = CachedWXBannerAd_csjc._bannerCache_csjc[bannerid];
            if (null == banner) {
                banner = CachedWXBannerAd_csjc.create_csjc(bannerid);
                if (null != banner) {
                    CachedWXBannerAd_csjc._bannerCache_csjc[bannerid] = banner;
                    console.log("预创建微信Bannaer", bannerid, "完成");
                }
            }
            ++counter;
        });
    };
    CachedWXBannerAd_csjc.getBanner_csjc = function (bannerid) {
        if (null == bannerid || "" == bannerid)
            return null;
        var banner = CachedWXBannerAd_csjc._bannerCache_csjc[bannerid];
        if (null == banner) {
            banner = CachedWXBannerAd_csjc.create_csjc(bannerid);
            if (null != banner) {
                CachedWXBannerAd_csjc._bannerCache_csjc[bannerid] = banner;
            }
        }
        return banner;
    };
    CachedWXBannerAd_csjc.create_csjc = function (bannerid) {
        if (Laya.Browser.onMiniGame) {
            if (this._sysInfo == null) {
                this._sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            }
            var sw = this._sysInfo.screenWidth;
            var sh = this._sysInfo.screenHeight;
            var dpr = Laya.stage.height / sh;
            var banner = Laya.Browser.window["wx"].createBannerAd({
                adUnitId: bannerid,
                adIntervals: 30,
                style: {
                    left: (sw - 300) / 2,
                    top: sh - 115,
                    width: 300,
                }
            });
            if (banner) {
                banner.onLoad(function (res) {
                    console.log("CachedWXBanner 广告 加载完成", bannerid);
                });
                banner.onError(function (err) {
                    console.log("CachedWXBanner 广告 加载失败", bannerid);
                });
                banner.onResize(function (res) {
                    console.log(banner.style.realWidth, banner.style.realHeight);
                });
            }
            return banner;
        }
        else {
            return null;
        }
    };
    CachedWXBannerAd_csjc.show_csjc = function (style) {
        if (CachedWXBannerAd_csjc._curBanner_csjc != null) {
            if (style == -1) {
                CachedWXBannerAd_csjc._curBanner_csjc.style.left = 35;
            }
            else if (style == 1) {
                CachedWXBannerAd_csjc._curBanner_csjc.style.left = this._sysInfo.screenWidth - 300;
            }
            else {
                CachedWXBannerAd_csjc._curBanner_csjc.style.left = (this._sysInfo.screenWidth - 300) / 2;
            }
            CachedWXBannerAd_csjc._curBanner_csjc.show();
            console.log("CachedWXBanner 广告显示 bannerid ： ", this._curBannerId_csjc);
        }
        else {
            this._curBannerId_csjc = this.GetBannerId_csjc;
            var banner = CachedWXBannerAd_csjc.getBanner_csjc(this._curBannerId_csjc);
            if (banner) {
                CachedWXBannerAd_csjc._curBanner_csjc = banner;
                // var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
                // var sw = sysInfo.screenWidth;
                // var sh = sysInfo.screenHeight;
                // CachedWXBannerAd_csjc._curBanner_csjc.style.top = (Laya.stage.height - 240) / Laya.stage.height * sh;
                if (style == -1) {
                    CachedWXBannerAd_csjc._curBanner_csjc.style.left = 35;
                }
                else if (style == 1) {
                    CachedWXBannerAd_csjc._curBanner_csjc.style.left = this._sysInfo.screenWidth - 300;
                }
                else {
                    CachedWXBannerAd_csjc._curBanner_csjc.style.left = (this._sysInfo.screenWidth - 300) / 2;
                }
                CachedWXBannerAd_csjc._curBanner_csjc.show();
                console.log("CachedWXBanner 广告显示 bannerid ： ", this._curBannerId_csjc);
            }
            else {
                console.log("CachedWXBanner 不存在 bannerid ： ", this._curBannerId_csjc);
            }
        }
    };
    CachedWXBannerAd_csjc.hide_csjc = function (destroy) {
        if (destroy === void 0) { destroy = true; }
        Laya.timer.clearAll(CachedWXBannerAd_csjc);
        if (null != CachedWXBannerAd_csjc._curBanner_csjc) {
            var rd = Math.random() > Math.max(0.5, (this._bannerDestoryTime / 15));
            if (rd && destroy) {
                CachedWXBannerAd_csjc._curBanner_csjc.destroy();
                var banner = this.create_csjc(this._curBannerId_csjc);
                if (null != banner) {
                    CachedWXBannerAd_csjc._bannerCache_csjc[this._curBannerId_csjc] = banner;
                    console.log("开始隐藏销毁重新创建微信Bannaer", this._curBannerId_csjc);
                }
                this._bannerDestoryTime++;
            }
            else {
                CachedWXBannerAd_csjc._curBanner_csjc.hide();
                console.log("CachedWXBanner 广告单纯隐藏 bannerid ： ", this._curBannerId_csjc);
            }
            CachedWXBannerAd_csjc._curBanner_csjc = null;
        }
    };
    CachedWXBannerAd_csjc.changeShow_csjc = function (style, destroy) {
        if (destroy === void 0) { destroy = true; }
        if (null != CachedWXBannerAd_csjc._curBanner_csjc) {
            CachedWXBannerAd_csjc._curBanner_csjc.hide(destroy);
            CachedWXBannerAd_csjc._curBanner_csjc = null;
        }
        CachedWXBannerAd_csjc.show_csjc(style);
    };
    // public static changeShow_csjc(style: number, destroy: boolean = true) {
    //     console.log("CachedWXBanner 广告切换");
    //     this.hide_csjc(destroy);
    //     this._curBannerId_csjc = this.GetBannerId_csjc;
    //     console.log(1111111111111111111111);
    //     console.log(this._curBannerId_csjc);
    //     console.log(this.getBanner_csjc(this._curBanner_csjc));
    //     var banner = CachedWXBannerAd_csjc.getBanner_csjc(this._curBannerId_csjc);
    //     CachedWXBannerAd_csjc._curBanner_csjc = banner;
    //     CachedWXBannerAd_csjc.show_csjc(style);
    //     this.preloadNext();
    //     console.log(2222222222222);
    //     console.log(this._curBannerId_csjc);
    //     console.log(this.getBanner_csjc(this._curBanner_csjc));
    // }
    CachedWXBannerAd_csjc.clear_csjc = function () {
        Laya.timer.clearAll(CachedWXBannerAd_csjc);
        for (var key in CachedWXBannerAd_csjc._bannerCache_csjc) {
            var banner = CachedWXBannerAd_csjc._bannerCache_csjc[key];
            if (null != banner) {
                banner.destroy();
            }
            CachedWXBannerAd_csjc._bannerCache_csjc[key] = null;
        }
    };
    CachedWXBannerAd_csjc._bannerCache_csjc = {};
    CachedWXBannerAd_csjc._curBanner_csjc = null;
    CachedWXBannerAd_csjc._preLoopObj_csjc = {};
    CachedWXBannerAd_csjc._wxBannerIds_csjc = [
        "adunit-b56f2105151c8af4",
        "adunit-da778e192859eeb2",
        "adunit-02f4a57b7c1a334a"
        // ,
        // "adunit-2f8440701664c50a",
        // "adunit-184455f3f8e74277",
    ];
    CachedWXBannerAd_csjc._curBannerId_csjc = "";
    CachedWXBannerAd_csjc._bannerIndex_csjc = 0;
    CachedWXBannerAd_csjc._bannerDestoryTime = 0;
    return CachedWXBannerAd_csjc;
}());
exports.default = CachedWXBannerAd_csjc;
},{}],18:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("../Net/HttpUnit");
var OPPOAPI_csjc = /** @class */ (function () {
    function OPPOAPI_csjc() {
    }
    Object.defineProperty(OPPOAPI_csjc, "GetNativeAd_csjc", {
        get: function () {
            OPPOAPI_csjc.nativeIndex++;
            if (OPPOAPI_csjc.nativeIndex > OPPOAPI_csjc.nativeAdList_csjc.length - 1) {
                OPPOAPI_csjc.nativeIndex = 0;
            }
            console.log("拿取原生返回Id： ", OPPOAPI_csjc.nativeAdList_csjc[OPPOAPI_csjc.nativeIndex]);
            return OPPOAPI_csjc.nativeAdList_csjc[OPPOAPI_csjc.nativeIndex];
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(OPPOAPI_csjc, "BannerInstance_csjc", {
        get: function () {
            return OPPOAPI_csjc._banner_csjc;
        },
        enumerable: true,
        configurable: true
    });
    OPPOAPI_csjc.Login_csjc = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].login({
                success: function (res) {
                    var token = res.data.token;
                    onSuccess(token);
                    console.log("OPPO 登陆成功,获取到 token : " + token);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                },
                fail: function (res) {
                    console.log("OPPO 登陆失败", res);
                    for (var key in res) {
                        console.log(key, res[key]);
                    }
                }
            });
        }
    };
    OPPOAPI_csjc.initAdService_csjc = function (onSuccess, onFail, onComplete) {
        Laya.Browser.window["qg"].initAdService({
            appId: OPPOAPI_csjc.appId_csjc,
            isDebug: false,
            success: function (res) {
                console.log("oppo initAdService success");
                if (onSuccess) {
                    onSuccess(res);
                }
            },
            fail: function (res) {
                console.log("oppo initAdService fail: ", res.code, res.msg);
                if (onFail) {
                    onFail(res);
                }
            },
            complete: function (res) {
                console.log("oppo initAdService complete");
                if (onComplete) {
                    onComplete(res);
                }
            }
        });
    };
    OPPOAPI_csjc.showRewardedVideoAd_csjc = function (onAdClose, onFailed) {
        if (Laya.Browser.onQGMiniGame) {
            var videoAd = Laya.Browser.window["qg"].createRewardedVideoAd({
                posId: OPPOAPI_csjc.adUnitId_csjc,
            });
            videoAd.onLoad(function () {
                console.log("oppo 视频广告加载完成");
                videoAd.show();
            });
            videoAd.onVideoStart(function () {
                console.log("oppo 视频广告开始播放");
            });
            videoAd.onClose(function (res) {
                if (res.isEnded) {
                    console.log("oppo 视频广告观看 完成");
                    onAdClose(true);
                }
                else {
                    console.log("oppo 视频广告观看 未完成");
                    onAdClose(false);
                }
                videoAd.destroy();
            });
            videoAd.onError(function (err) {
                console.log("oppo 视频广告获取失败", err);
                for (var key in err) {
                    console.log(key, err[key]);
                }
                videoAd.destroy();
                onFailed();
            });
            videoAd.load();
        }
        else {
            onAdClose(true);
        }
    };
    OPPOAPI_csjc.navigateToMiniProgram_csjc = function (pkgName, gameName, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onQGMiniGame) {
            console.log("OPPO 跳转游戏： " + pkgName);
            HttpUnit_1.default.reportExport_csjc(pkgName, gameName, function (result) {
                if (1 == result.code) {
                    console.log("OPPO 导出上报成功");
                }
                else {
                    console.log("OPPO 导出上报失败", result.msg);
                }
            }, function (result) {
                console.log("OPPO 导出上报失败");
                for (var key in result) {
                    console.log(key, result[key]);
                }
            });
            var time = Date.now();
            while (Date.now() - time <= 500) {
            }
            Laya.Browser.window["qg"].navigateToMiniGame({
                pkgName: pkgName,
                path: path,
                extraData: {
                    from: OPPOAPI_csjc.appId_csjc
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
            });
        }
    };
    // public static showInterstitialAd_csjc(onAdClose: Function, onFailed: Function) {
    //     if (Laya.Browser.onQGMiniGame) {
    //         var insertAd = qg.createInsertAd({
    //             posId: OPPOAPI_csjc.insAdUnitId_csjc
    //         })
    //         insertAd.load();
    //         insertAd.onLoad(() => {
    //             console.log("插屏广告加载完成");
    //             insertAd.show();
    //         })
    //         insertAd.onShow(() => {
    //             console.log("插屏广告显示成功");
    //         })
    //         insertAd.onError((err) => {
    //             console.log("插屏广告拉取失败", err);
    //             for (var key in err) {
    //                 console.log(key, err[key]);
    //             }
    //             insertAd.destroy();
    //             if (onFailed) {
    //                 onFailed();
    //             }
    //         })
    //     }
    //     else {
    //         onAdClose();
    //     }
    // }
    OPPOAPI_csjc.showBannaerAd_csjc = function () {
        if (Laya.Browser.onQGMiniGame) {
            console.log("OPPO显示Banner");
            if (OPPOAPI_csjc._banner_csjc) {
                OPPOAPI_csjc._banner_csjc.show();
                return;
            }
            var bannerAd = qg.createBannerAd({
                posId: OPPOAPI_csjc.bannerAdUnitId_csjc
            });
            bannerAd.onError(function (err) {
                console.log("Banner广告拉取失败", err);
                for (var key in err) {
                    console.log(key, err[key]);
                }
            });
            bannerAd.show();
            OPPOAPI_csjc._banner_csjc = bannerAd;
        }
    };
    OPPOAPI_csjc.hideBannerAd_csjc = function () {
        if (OPPOAPI_csjc._banner_csjc) {
            OPPOAPI_csjc._banner_csjc.hide();
        }
    };
    OPPOAPI_csjc.getLaunchOptionsSync_csjc = function () {
        var obj = { query: "", referrerInfo: { package: "", extraData: { appid: "" } } };
        if (Laya.Browser.onQGMiniGame) {
            var options = Laya.Browser.window["qg"].getLaunchOptionsSync();
            if (null != options && options != "") {
                obj = options;
            }
            else {
                console.log("没有启动设置！！！");
            }
            return obj;
        }
        return obj;
    };
    OPPOAPI_csjc.share_csjc = function (complate, titel, imageUrl) {
        complate(false);
    };
    OPPOAPI_csjc.createDesktopIcon_csjc = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].hasShortcutInstalled({
                success: function (res) {
                    if (res == false) {
                        Laya.Browser.window["qg"].installShortcut({
                            success: function () {
                                if (onSuccess) {
                                    onSuccess();
                                }
                            },
                            fail: function (err) {
                                if (onFail) {
                                    onFail();
                                }
                                console.log("创建桌面图标失败！！！！", err);
                                for (var key in err) {
                                    console.log(key, err);
                                }
                            },
                            complete: function () {
                            }
                        });
                    }
                    else {
                        console.log("桌面图标已存在！！！！");
                        if (onFail) {
                            onFail();
                        }
                    }
                },
                fail: function (err) {
                    if (onFail) {
                        onFail();
                    }
                    console.log("判断桌面图标是否存在失败！！！", err);
                    for (var key in err) {
                        console.log(key, err);
                    }
                },
                complete: function () {
                }
            });
        }
        else {
            if (onFail) {
                onFail();
            }
        }
    };
    OPPOAPI_csjc.hasDesktopIcon_csjc = function (onSuccess, onFail) {
        if (Laya.Browser.onQGMiniGame) {
            Laya.Browser.window["qg"].hasShortcutInstalled({
                success: function (res) {
                    if (res == false) {
                        console.log("桌面图标不存在！！！！");
                        if (onSuccess) {
                            onSuccess(false);
                        }
                    }
                    else {
                        console.log("桌面图标已存在！！！！");
                        if (onSuccess) {
                            onSuccess(true);
                        }
                    }
                },
                fail: function (err) {
                    if (onFail) {
                        onFail();
                    }
                    console.log("判断桌面图标是否存在失败！！！", err);
                    for (var key in err) {
                        console.log(key, err);
                    }
                },
                complete: function () {
                }
            });
        }
        else {
            if (onFail) {
                onFail();
            }
        }
    };
    OPPOAPI_csjc.appId_csjc = "30263446";
    OPPOAPI_csjc.adUnitId_csjc = "258312";
    OPPOAPI_csjc.bannerAdUnitId_csjc = "258306";
    // public static readonly insAdUnitId_csjc = "";
    // public static readonly openScreenAdUnitId_csjc = "176944";
    OPPOAPI_csjc.nativeAdId_csjc = "258308";
    OPPOAPI_csjc.nativeAdList_csjc = [
        "258308",
        "258309",
        "258310",
    ];
    OPPOAPI_csjc.nativeIndex = 0;
    OPPOAPI_csjc._banner_csjc = null;
    return OPPOAPI_csjc;
}());
exports.default = OPPOAPI_csjc;
},{"../Net/HttpUnit":14}],19:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var User_1 = require("../User/User");
var GameConfig_1 = require("../GameConfig");
var SoundMgr_1 = require("../Mgr/SoundMgr");
var GameSettings_1 = require("../GameSettings");
var VIVOAPI_csjc = /** @class */ (function () {
    function VIVOAPI_csjc() {
    }
    Object.defineProperty(VIVOAPI_csjc, "BannerInstance_csjc", {
        get: function () {
            return VIVOAPI_csjc._banner_csjc;
        },
        enumerable: true,
        configurable: true
    });
    VIVOAPI_csjc.Login_csjc = function (onSuccess, onFail) {
        console.log("vivo 开始登陆");
        if (Laya.Browser.window["qg"].getSystemInfoSync().platformVersionCode >= 1053) {
            Laya.Browser.window["qg"].login().then(function (res) {
                console.log("开始登陆成功 >= 1053");
                if (res.data.token) {
                    // 使用token进行服务端对接
                    var token = res.data.token;
                    onSuccess(token, true);
                    console.log("vivo 登陆成功,获取到 token : " + token);
                }
            }, function (err) {
                console.log('登录失败' + JSON.stringify(err));
                VIVOAPI_csjc.showDialog_csjc();
            });
        }
        else {
            Laya.Browser.window["qg"].authorize({
                type: "token",
                success: function (data) {
                    // 使用token进行服务端对接
                    Laya.Browser.window["qg"].getProfile({
                        token: data.accessToken,
                        success: function (data) {
                            console.log('openid获取成功', data.openid);
                            onSuccess(data.openid, false);
                        },
                        fail: function (data, code) {
                            VIVOAPI_csjc.showDialog_csjc();
                            console.log("获取openid失败 : " + code);
                        }
                    });
                },
                fail: function (data, code) {
                    console.log('登录失败' + code);
                    VIVOAPI_csjc.showDialog_csjc();
                }
            });
        }
    };
    //提示弹窗
    VIVOAPI_csjc.showDialog_csjc = function () {
        Laya.Browser.window["qg"].showDialog({
            title: '提示',
            message: '登录失败，点击确定按钮重试',
            buttons: [
                {
                    text: '确定',
                    color: '#33dd44'
                }
            ],
            success: function (data) {
                console.log('handling callback');
                VIVOAPI_csjc.VIVOLogin_csjc();
            },
            cancel: function () {
                console.log('handling cancel');
            },
            fail: function (data, code) {
                console.log("handling fail, code = " + code);
            }
        });
    };
    //vivo登录
    VIVOAPI_csjc.VIVOLogin_csjc = function () {
        var _this = this;
        VIVOAPI_csjc.Login_csjc(function (code, type) {
            if (type) {
                console.log("登陆token1111:", code);
                User_1.default.code_csjc = code;
            }
            else {
                User_1.default.openId_csjc = code;
            }
            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(this, function () {
            }));
        }, function () {
            GameConfig_1.default.startScene && Laya.Scene.open(GameConfig_1.default.startScene, false, Laya.Handler.create(_this, function () {
            }));
        });
    };
    //创建视频广告
    VIVOAPI_csjc.createRewardedVideoAd_csjc = function () {
        if (Laya.Browser.onVVMiniGame) {
            VIVOAPI_csjc.rewardedAd_csjc = Laya.Browser.window["qg"].createRewardedVideoAd({
                posId: VIVOAPI_csjc.adUnitId_csjc,
                style: {}
            });
            VIVOAPI_csjc.rewardedAd_csjc.onError(function (err) {
                switch (err.errCode) {
                    case -3:
                        console.log("激励广告加载失败---调用太频繁", JSON.stringify(err));
                        break;
                    case -4:
                        console.log("激励广告加载失败--- 一分钟内不能重复加载", JSON.stringify(err));
                        break;
                    case 30008:
                        // 当前启动来源不支持激励视频广告，请选择其他激励策略
                        break;
                    default:
                        // 参考 https://minigame.vivo.com.cn/documents/#/lesson/open-ability/ad?id=广告错误码信息 对错误码做分类处理
                        console.log("激励广告展示失败");
                        console.log(JSON.stringify(err));
                        break;
                }
            });
        }
    };
    //显示视频广告
    VIVOAPI_csjc.showRewardedVideoAd_csjc = function (onAdClose, onFailed) {
        if (Laya.Browser.onVVMiniGame) {
            SoundMgr_1.default.instance_csjc.stopBGM_csjc();
            console.log("---------------------------------- VIVOAPI.rewardedAd:", VIVOAPI_csjc.rewardedAd_csjc + ",VIVOAPI.rewardedAdNum:", VIVOAPI_csjc.rewardedAdNum_csjc);
            // if (VIVOAPI.rewardedAd == null) {
            //     onFailed();
            //     return;
            // }
            if (VIVOAPI_csjc.rewardedAdNum_csjc == 0) {
                VIVOAPI_csjc.createRewardedVideoAd_csjc();
            }
            else {
                // 第一次creat后广告可以在onload里面直接show
                // 后续的加载必须要load才能触发onload接着才能show出广告
                var adLoad = VIVOAPI_csjc.rewardedAd_csjc.load(); //第一次调用 可能会报-3  广告能正常展示就可以忽略
                // 捕捉load失败的错误
                adLoad && adLoad.catch(function (err) {
                    console.log("激励广告load失败" + JSON.stringify(err));
                    onFailed();
                });
            }
            VIVOAPI_csjc.rewardedAdNum_csjc = 1;
            console.log("近来showRewardedVideoAd");
            VIVOAPI_csjc.rewardedAd_csjc.onLoad(function () {
                var adshow = VIVOAPI_csjc.rewardedAd_csjc.show();
                // 捕捉show失败的错误
                adshow && adshow.then(function () {
                    console.log("激励广告展示成功");
                }).catch(function (err) {
                    console.log("激励广告展示失败" + JSON.stringify(err));
                    onFailed();
                });
            });
            VIVOAPI_csjc.rewardedAd_csjc.onClose(function (res) {
                if (res && res.isEnded) {
                    console.log("正常播放结束，可以下发游戏奖励");
                    onAdClose(true);
                }
                else {
                    console.log("播放中途退出，不下发游戏奖励");
                    onAdClose(false);
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    VIVOAPI_csjc.showBannerAd_csjc = function () {
        var self = VIVOAPI_csjc;
        if (Laya.Browser.onVVMiniGame) {
            console.log('===========bannerAd showBanerAd');
            var systemInfo = Laya.Browser.window["qg"].getSystemInfoSync();
            var sw = systemInfo.screenWidth;
            var sh = systemInfo.screenHeight;
            VIVOAPI_csjc.mBannerAd_csjc = qg.createBannerAd({
                posId: VIVOAPI_csjc.bannerAdUnitId_csjc,
                style: {}
            });
            var adshow = VIVOAPI_csjc.mBannerAd_csjc.show();
            // 调用then和catch之前需要对show的结果做下判空处理，防止出错（如果没有判空，在平台版本为1052以及以下的手机上将会出现错误）
            adshow && adshow.then(function () {
                console.log("banner广告展示成功");
            }).catch(function (err) {
                switch (err.code) {
                    case 30003:
                        console.log("新用户7天内不能曝光Banner，请将手机时间调整为7天后，退出游戏重新进入");
                        break;
                    case 30009:
                        console.log("10秒内调用广告次数超过1次，10秒后再调用");
                        // setTimeout(() => {
                        //     show()
                        // }, 10000);
                        break;
                    case 30002:
                        console.log("加载广告失败，重新加载广告");
                        // setTimeout(() => {
                        //     retryShow()
                        // }, 10000);             
                        break;
                    default:
                        // 参考 https://minigame.vivo.com.cn/documents/#/lesson/open-ability/ad?id=广告错误码信息 对错误码做分类处理
                        console.log("banner广告展示失败");
                        console.log(JSON.stringify(err));
                        break;
                }
            });
            VIVOAPI_csjc.mBannerAd_csjc.onError(function (err) {
                console.log('Banner广告加载失败111:' + JSON.stringify(err));
            });
        }
    };
    VIVOAPI_csjc.hideBannerAd_csjc = function () {
        if (VIVOAPI_csjc.mBannerAd_csjc) {
            console.log('===========bannerAd 隐藏');
            VIVOAPI_csjc.mBannerAd_csjc.hide();
            VIVOAPI_csjc.mBannerAd_csjc.destroy();
            // this.mBannerAd = null;
        }
        else {
            console.log('===========bannerAd 为空');
        }
    };
    VIVOAPI_csjc.navigateToMiniProgram_csjc = function (pkgName, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onVVMiniGame) {
            console.log("vivo 跳转游戏： " + pkgName);
            Laya.Browser.window["qg"].navigateToMiniGame({
                pkgName: pkgName,
                path: path,
                extraData: {
                    from: GameSettings_1.default.AppID_csjc
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    VIVOAPI_csjc.preLoadInterstitialAd_csjc = function () {
        if (Laya.Browser.onVVMiniGame) {
            VIVOAPI_csjc._insertAd = Laya.Browser.window["qg"].createInterstitialAd({
                posId: VIVOAPI_csjc.insAdUnitId_csjc
            });
        }
    };
    VIVOAPI_csjc.showInterstitialAd_csjc = function (onAdClose, onFailed) {
        var _this = this;
        if (Laya.Browser.onVVMiniGame) {
            if (VIVOAPI_csjc._insertAd == null)
                return;
            VIVOAPI_csjc._insertAd.onLoad(function () {
                console.log("插屏广告加载完成");
            });
            VIVOAPI_csjc._insertAd.onClose(function () {
                _this._insertAd = null;
                if (onAdClose)
                    onAdClose();
            });
            VIVOAPI_csjc._insertAd.onError(function (err) {
                console.log("插屏广告拉取失败", JSON.stringify(err));
                if (onFailed) {
                    onFailed();
                }
            });
            VIVOAPI_csjc._insertAd.show().then(function () {
                console.log('插屏广告展示完成');
            }).catch(function (err) {
                console.log('插屏广告展示失败', JSON.stringify(err));
            });
        }
        else {
            if (onAdClose)
                onAdClose();
        }
    };
    VIVOAPI_csjc.getLaunchOptionsSync_csjc = function () {
        return {};
    };
    VIVOAPI_csjc.share_csjc = function (complate) {
        if (Laya.Browser.onVVMiniGame) {
            Laya.Browser.window["qg"].share({
                success: function () {
                    if (complate != null) {
                        complate(true);
                    }
                    Laya.Browser.window["qg"].showToast({
                        message: "分享成功"
                    });
                },
                fail: function (erromsg, errocode) {
                    // Laya.Browser.window["qg"].showToast({
                    //     message: "分享失败：" + errocode + ': ' + erromsg
                    // })
                    Laya.Browser.window["qg"].showToast({
                        message: "分享失败"
                    });
                },
                cancel: function () {
                    Laya.Browser.window["qg"].showToast({
                        message: "分享失败"
                    });
                },
                complete: function () {
                }
            });
        }
    };
    VIVOAPI_csjc.createDesktopIcon_csjc = function (onSuccess, onFail) {
        if (Laya.Browser.onVVMiniGame) {
            Laya.Browser.window["qg"].hasShortcutInstalled({
                success: function (res) {
                    if (res == false) {
                        Laya.Browser.window["qg"].installShortcut({
                            success: function () {
                                if (onSuccess) {
                                    onSuccess();
                                }
                            },
                            fail: function (err) {
                                if (onFail) {
                                    onFail();
                                }
                                console.log("创建桌面图标失败！！！！", err);
                                for (var key in err) {
                                    console.log(key, err);
                                }
                            },
                            complete: function () {
                            }
                        });
                    }
                    else {
                        console.log("桌面图标已存在！！！！");
                        if (onFail) {
                            onFail();
                        }
                    }
                },
                fail: function (err) {
                    if (onFail) {
                        onFail();
                    }
                    console.log("判断桌面图标是否存在失败！！！", err);
                    for (var key in err) {
                        console.log(key, err);
                    }
                },
                complete: function () {
                }
            });
        }
        else {
            if (onFail) {
                onFail();
            }
        }
    };
    VIVOAPI_csjc.hasDesktopIcon_csjc = function (onSuccess, onFail) {
        if (Laya.Browser.onVVMiniGame) {
            Laya.Browser.window["qg"].hasShortcutInstalled({
                success: function (res) {
                    if (res == false) {
                        console.log("桌面图标不存在！！！！");
                        if (onSuccess) {
                            onSuccess(false);
                        }
                    }
                    else {
                        console.log("桌面图标已存在！！！！");
                        if (onSuccess) {
                            onSuccess(true);
                        }
                    }
                },
                fail: function (err) {
                    if (onFail) {
                        onFail();
                    }
                    console.log("判断桌面图标是否存在失败！！！", err);
                    for (var key in err) {
                        console.log(key, err);
                    }
                },
                complete: function () {
                }
            });
        }
        else {
            if (onFail) {
                onFail();
            }
        }
    };
    VIVOAPI_csjc.adUnitId_csjc = "a8a44fd39bcd4e80a52e39be99074ac1"; //视频广告
    VIVOAPI_csjc.bannerAdUnitId_csjc = "bc2f7435abde42aeb30186460ff3c57b"; //banner广告
    VIVOAPI_csjc.nativeAdId_csjc = "caa8404ca6e7413795c43ed17189faff"; //原生广告
    VIVOAPI_csjc.insAdUnitId_csjc = "6ab8564f134e45508dc6a2be9b2d544f"; //插屏广告
    VIVOAPI_csjc.rewardedAd_csjc = null;
    VIVOAPI_csjc.rewardedAdNum_csjc = 0;
    VIVOAPI_csjc._banner_csjc = null;
    VIVOAPI_csjc.nativeAdList_csjc = [];
    VIVOAPI_csjc.nativeIndex_csjc = 0;
    VIVOAPI_csjc.mBannerAd_csjc = null;
    VIVOAPI_csjc._insertAd = null;
    return VIVOAPI_csjc;
}());
exports.default = VIVOAPI_csjc;
},{"../GameConfig":7,"../GameSettings":8,"../Mgr/SoundMgr":10,"../User/User":67}],20:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI_csjc = /** @class */ (function () {
    function WXAPI_csjc() {
    }
    WXAPI_csjc.wxLogin_csjc = function (onSuccess, onFail) {
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window.wx.login({
                success: function (res) {
                    if (res.code) {
                        var code = res.code;
                        onSuccess(code);
                        console.log("登陆成功,获取到code : " + code);
                    }
                }
            });
        }
    };
    WXAPI_csjc.onRewardedVideoAdLoad_csjc = function () {
        console.log('激励视频 广告加载完成');
    };
    WXAPI_csjc.onRewardedVideoAdError_csjc = function (err) {
        console.log('激励视频 广告加载失败' + err);
        if (WXAPI_csjc._onRewardedVideoAdFailed_csjc) {
            WXAPI_csjc._onRewardedVideoAdFailed_csjc();
        }
    };
    WXAPI_csjc.onRewardedVideoAdClose_csjc = function (res) {
        if ((res && res.isEnded) || res == null) {
            console.log('激励视频 已完整观看');
            if (WXAPI_csjc._onRewardedVideoAdClose_csjc) {
                WXAPI_csjc._onRewardedVideoAdClose_csjc(true);
            }
        }
        else {
            console.log('激励视频 未完整观看');
            if (WXAPI_csjc._onRewardedVideoAdClose_csjc) {
                WXAPI_csjc._onRewardedVideoAdClose_csjc(false);
            }
        }
    };
    WXAPI_csjc.regRewardedVideoAdEvent_csjc = function (rewardedVideoAd) {
        rewardedVideoAd.onLoad(WXAPI_csjc.onRewardedVideoAdLoad_csjc);
        rewardedVideoAd.onError(WXAPI_csjc.onRewardedVideoAdError_csjc);
        rewardedVideoAd.onClose(WXAPI_csjc.onRewardedVideoAdClose_csjc);
        WXAPI_csjc._isRegRewardedVideoAdEvent_csjc = true;
    };
    WXAPI_csjc.showRewardedVideoAd_csjc = function (onAdClose, onFailed) {
        if (Laya.Browser.onMiniGame) {
            WXAPI_csjc._onRewardedVideoAdClose_csjc = onAdClose;
            WXAPI_csjc._onRewardedVideoAdFailed_csjc = onFailed;
            var rewardedVideoAd = Laya.Browser.window["wx"].createRewardedVideoAd({
                adUnitId: WXAPI_csjc.adUnitId_csjc,
            });
            if (!WXAPI_csjc._isRegRewardedVideoAdEvent_csjc) {
                WXAPI_csjc.regRewardedVideoAdEvent_csjc(rewardedVideoAd);
            }
            rewardedVideoAd.load().then(function () {
                var promise = rewardedVideoAd.show();
                promise.then(function () { return console.log('激励视频 广告显示成功'); });
                promise.catch(function (err) {
                    rewardedVideoAd.load()
                        .then(function () { return rewardedVideoAd.show(); })
                        .catch(function (err) {
                        console.log('激励视频 广告显示失败');
                        if (onFailed) {
                            onFailed();
                        }
                    });
                });
            }).catch(function (err) {
                console.log('激励视频 广告加载失败');
                if (onFailed) {
                    onFailed();
                }
            });
        }
        else {
            onAdClose(true);
        }
    };
    //----------------------------------------------------------------
    //-------------------------小游戏跳转---------------------------
    WXAPI_csjc.navigateToMiniProgram_csjc = function (appId, path, onSuccess, onFail, onComplate) {
        if (Laya.Browser.onMiniGame) {
            console.log("跳转游戏： " + appId);
            Laya.Browser.window["wx"].navigateToMiniProgram({
                appId: appId,
                path: path,
                extraData: {
                    foo: 'bar'
                },
                envVersion: 'release',
                success: function (res) {
                    if (onSuccess) {
                        onSuccess(res);
                    }
                },
                fail: function (res) {
                    if (onFail) {
                        onFail(res);
                    }
                },
                complete: function (res) {
                    if (onComplate) {
                        onComplate(res);
                    }
                }
            });
        }
    };
    WXAPI_csjc.share_csjc = function (complate, titel, imageUrl) {
        var _this = this;
        if (Laya.Browser.onMiniGame) {
            WXAPI_csjc._onShow_csjc = function () {
                Laya.Browser.window["wx"].offShow(WXAPI_csjc._onShow_csjc);
                WXAPI_csjc._onShow_csjc = null;
                var c = Date.now() - _this._lastShareTime_csjc;
                if (complate) {
                    if (Date.now() - _this._lastShareTime_csjc > 2000) {
                        complate(true);
                    }
                    else {
                        complate(false);
                    }
                }
            };
            Laya.Browser.window["wx"].onShow(WXAPI_csjc._onShow_csjc);
            WXAPI_csjc._lastShareTime_csjc = Date.now();
            Laya.Browser.window["wx"].shareAppMessage({
                title: titel,
                imageUrl: imageUrl
            });
        }
    };
    //----------------------------------------------------------------------
    //--------------------插屏幕广告---------------------------------------
    WXAPI_csjc.showInterstitialAd_csjc = function (onAdClose, onFailed) {
        if (Laya.Browser.onMiniGame) {
            var interstitialAd = Laya.Browser.window["wx"].createInterstitialAd({
                adUnitId: WXAPI_csjc.insAdUnitId_csjc,
            });
            interstitialAd.onLoad(function () {
                console.log('插屏广告 加载完成');
                interstitialAd.show().catch(function (err) {
                    console.log('插屏广告 显示失败 ：' + err);
                    if (onFailed) {
                        onFailed();
                    }
                });
            });
            interstitialAd.onError(function (err) {
                console.log('插屏广告 加载失败' + err);
                if (onFailed) {
                    onFailed();
                }
            });
            interstitialAd.onClose(function () {
                console.log('插屏广告 关闭');
                if (onAdClose) {
                    onAdClose();
                }
            });
        }
        else {
            onAdClose();
        }
    };
    /**
     * 得到小程序启动参数的同步方法，可得到一个Object返回值，返回值具体的数据结构在下面的列表中
     * scene	number	启动小游戏的场景值
     * query	Object	启动小游戏的 query 参数
     * shareTicket	string	shareTicket，详见获取更多转发信息
     * referrerInfo	object	来源信息。从另一个小程序、公众号或 App 进入小程序时返回。否则返回 {}
     * https://developers.weixin.qq.com/minigame/dev/api/base/app/life-cycle/wx.getLaunchOptionsSync.html
     * @static
     * @returns {LaunchOptions}
     * @memberof WXAPI
     */
    WXAPI_csjc.getLaunchOptionsSync_csjc = function () {
        // let result = { scene: 0, query: null, shareTicket: "", referrerInfo: null };
        if (Laya.Browser.onMiniGame) {
            var obj_1 = Laya.Browser.window["wx"].getLaunchOptionsSync();
            console.log("场景值 " + obj_1.scene);
            var str = JSON.stringify(obj_1.query);
            // console.log("Query参数 " + str);
            var key = obj_1.query["key"];
            // console.log("Query参数：key " + key);
            // console.log("ShareTicket " + obj.shareTicket);
            // console.log("ReferrerInfo.appId " + obj.referrerInfo.appId);
            // console.log("ReferrerInfo.extraData " + obj.referrerInfo.extraData);
            return obj_1;
        }
        var obj = { scene: 1001, query: "", shareTicket: "", appId: "", extraData: "" };
        return obj;
    };
    //----------------------------------------------------------------------
    /**
     * 打开微信左上角分享转发点击事件,在游戏逻辑中调用一次即可
     * 注意此方法只会在真机上执行，在微信模拟器环境下点击转发按钮什么都不会发生
     *
     * @static
     * @param {string} titel 分享标题
     * @param {string} imageUrl 分享图片地址
     * @param {Function} [success] 成功回调函数(可不填)
     * @param {Function} [fail] 失败回调函数(可不填)
     * @param {Function} [complate] 完成回调函数，成功失败都会执行(可不填)
     * @memberof WXAPI
     */
    WXAPI_csjc.SetShareMenu_csjc = function (titel, imageUrl, success, fail, complate) {
        if (Laya.Browser.onMiniGame) {
            console.log("小游戏设置转发按钮");
            Laya.Browser.window["wx"].showShareMenu({
                withShareTicket: false,
                success: success,
                fail: fail,
                complete: complate
            });
            Laya.Browser.window["wx"].onShareAppMessage(function () {
                return {
                    title: titel,
                    imageUrl: imageUrl
                };
            });
        }
    };
    //检测更新
    WXAPI_csjc.checkUpdate_csjc = function () {
        if (Laya.Browser.onMiniGame) {
            var updateManager = Laya.Browser.window["wx"].getUpdateManager();
            updateManager.onCheckForUpdate(function (res) {
                console.log("是否需要更新 : ", res.hasUpdate);
            });
            updateManager.onUpdateReady(function () {
                Laya.Browser.window["wx"].showModal({
                    title: '更新提示',
                    content: '新版本已经准备好，是否重启小游戏？',
                    success: function (res) {
                        if (res.confirm) {
                            updateManager.applyUpdate();
                        }
                    }
                });
            });
            updateManager.onUpdateFailed(function () {
                console.log("新版本下载失败!!!");
            });
        }
    };
    WXAPI_csjc.adUnitId_csjc = "adunit-d03608b9c917e381";
    WXAPI_csjc.bannerAdUnitId_csjc = "adunit-184455f3f8e74277";
    WXAPI_csjc.insAdUnitId_csjc = "";
    WXAPI_csjc.nativeadId_csjc = "adunit-eeceae41aefd1185";
    //-------------------------激励视频---------------------------------
    WXAPI_csjc._isRegRewardedVideoAdEvent_csjc = false;
    WXAPI_csjc._onRewardedVideoAdFailed_csjc = null;
    WXAPI_csjc._onRewardedVideoAdClose_csjc = null;
    //----------------------------------------------------------------------
    //---------------------分享----------------------------------------
    WXAPI_csjc._onShow_csjc = null;
    WXAPI_csjc._lastShareTime_csjc = 0;
    return WXAPI_csjc;
}());
exports.default = WXAPI_csjc;
},{}],21:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpUnit_1 = require("./HttpUnit");
var GameSettings_1 = require("../GameSettings");
var User_1 = require("../User/User");
var WXAPI_1 = require("../PlatformApi/WXAPI");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var EventMgr_2 = require("../Event/EventMgr");
/** 组件样式 */
var ComponentStyle;
(function (ComponentStyle) {
    ComponentStyle[ComponentStyle["ce_la_lan"] = 1] = "ce_la_lan";
    ComponentStyle[ComponentStyle["h_slider"] = 2] = "h_slider";
    ComponentStyle[ComponentStyle["banner"] = 3] = "banner";
    ComponentStyle[ComponentStyle["big_export_ui"] = 4] = "big_export_ui";
    ComponentStyle[ComponentStyle["over_ui"] = 5] = "over_ui";
    ComponentStyle[ComponentStyle["wei_tui_chu"] = 6] = "wei_tui_chu";
})(ComponentStyle = exports.ComponentStyle || (exports.ComponentStyle = {}));
/** APP操作记录 */
var APPItemRecord = /** @class */ (function () {
    function APPItemRecord() {
        /** 展示次数 */
        this.displayCount = 0;
        /** 点击次数 */
        this.clickCount = 0;
        /** 导出次数 */
        this.exportCount = 0;
        /** 是否成功导出 1已导出 */
        this.isExport = 0;
    }
    return APPItemRecord;
}());
exports.APPItemRecord = APPItemRecord;
/** APP信息 */
var APPItem = /** @class */ (function () {
    function APPItem() {
        /**动图序列帧 */
        this.gifList = [];
        /** 插屏图片列表 */
        this.screenList = [];
        /** banner图片列表 */
        this.bannerList = [];
        /** 权重 */
        this.weight = 1;
        // /** icon图片列表 */
        this.iconFilletList = [];
        /** 展示次数 */
        this.displayCount = 0;
        /**使用的图片资源，length为1表示静图，>1表示使用gift */
        this.useImgList = [];
    }
    return APPItem;
}());
exports.APPItem = APPItem;
var AdDataMgr = /** @class */ (function () {
    function AdDataMgr() {
        this.mAppId = ''; //产品的appid
        this.mOpenId = ''; //用户的openid
        this.mProductId = 0; //产品id
        this.mServerRootUrl = '"https://qp.qingpukj.com:8055/'; //游戏服务器接口url根路径
        this._canUsedStyle = []; // 可开启的导出组件类型 (ComponentStyle)
        this._products = []; // 全产品信息 
        this._isCheck = false; // 是否已过审
        this._loaded = false; //数据加载成功
        this.shareCount = 0;
        /** style导出次数 */
        this._materiaList = [];
        /** 导出产品记录 */
        this._exportProductList = [];
        /** 上报数据 */
        this._url_matrixReport = "reportGame/matrixReport";
        /** 记录 */
        this._recording = false;
        this.iconList = [];
        this.screenList = [];
        this.bannerList = [];
        this.iconNames = [];
        this.screenNames = [];
    }
    Object.defineProperty(AdDataMgr, "Instance", {
        get: function () {
            if (this._instance == null) {
                this._instance = new AdDataMgr();
            }
            return this._instance;
        },
        enumerable: true,
        configurable: true
    });
    AdDataMgr.prototype.InitMatix = function (callback, serverRootUrl) {
        if (serverRootUrl === void 0) { serverRootUrl = "https://qp.qingpukj.com:8055/"; }
        this.mAppId = GameSettings_1.default.AppID_csjc;
        this.mServerRootUrl = serverRootUrl;
        this.Init(callback || null);
    };
    AdDataMgr.prototype.Init = function (callback, shareUser) {
        if (shareUser === void 0) { shareUser = ''; }
        var self = this;
        this.LoadInfo(shareUser, function (res) {
            setInterval(function () {
                self.UpdateRecord();
            }, 30000);
            callback && callback(res);
        });
    };
    /** 加载配置 */
    AdDataMgr.prototype.LoadInfo = function (shareUser, callback) {
        var _this = this;
        var self = this;
        var option = WXAPI_1.default.getLaunchOptionsSync_csjc();
        var sceneCode = option.scene;
        var sceneAppId = '';
        if (option.referrerInfo && option.referrerInfo.appId)
            sceneAppId = option.referrerInfo.appId;
        var url = self.mServerRootUrl + 'business/product/game/getProductInfo';
        var paramsObj = {};
        paramsObj.appId = GameSettings_1.default.AppID_csjc;
        paramsObj.code = User_1.default.code_csjc;
        paramsObj.sceneCode = sceneCode;
        paramsObj.sceneAppId = sceneAppId;
        paramsObj.shareUser = shareUser;
        var paramsMsg = AdDataMgr.Instance.GetParamsMsgForObj(paramsObj);
        HttpUnit_1.HttpTools.Post(url, paramsMsg, this, function (data) {
            console.log("[Matrix]读取服务矩阵数据：", data);
            if (data && data.code == 0) {
                self._canUsedStyle = [];
                var canUseStringStyle = data.styleAssembly.split(",");
                for (var i = 0; i < canUseStringStyle.length; ++i) {
                    self._canUsedStyle.push(Number(canUseStringStyle[i]));
                }
                self.mProductId = data.productId;
                self._isCheck = (Number(data.isCheck) == 1); //1通过，2不通过 (string类型)
                self._products = [];
                if (!data.productExportList) {
                    self._loaded = false;
                    return;
                }
                for (var i = 0; i < data.productExportList.length; i++) {
                    var app = data.productExportList[i];
                    var productInfo = new APPItem();
                    productInfo.screenList = app.screenList;
                    productInfo.gifList = app.gifList;
                    productInfo.gameName = app.gameName;
                    productInfo.bannerList = app.bannerList;
                    productInfo.appId = app.appId;
                    productInfo.advertPath = app.advertPath;
                    productInfo.weight = app.weight;
                    productInfo.iconFilletList = app.iconFilletList;
                    productInfo.advertId = app.advertId;
                    productInfo.displayCount = 0;
                    self._products.push(productInfo);
                }
                if (User_1.default.openId_csjc == "") {
                    _this.mOpenId = data.openId;
                    User_1.default.openId_csjc = _this.mOpenId;
                }
                console.error("矩阵列表", _this._products);
                self._loaded = true;
            }
            _this.loadAllLink();
            callback && callback(data);
        }, function (data) {
            if (true /* PlatformManager.Instance.CurrentAgent.ContentName == "Default" */) {
                self._products = [];
                for (var i = 0; i < 10; i++) {
                    var data1 = {
                        advertId: 233,
                        advertPath: "?wxgamecid=CCBgAAoXkpQAM2KVNXRf9BKQ",
                        appId: "wxc5d17fdf515fbbc2",
                        bannerList: ["https://hn.g58mall.com/gameDevopsImgs/20200915/20200915104328_he7v.jpg"],
                        displayCount: 0,
                        gameName: "香肠大决斗",
                        gifList: [],
                        iconFilletList: ["https://hn.g58mall.com/gameDevopsImgs/20201022/20201022162732_utao.jpg", "https://hn.g58mall.com/gameDevopsImgs/20201022/20201022162744_58vd.png"],
                        screenList: ["https://hn.g58mall.com/gameDevopsImgs/20200915/20200915104244_kepk.jpg", "https://hn.g58mall.com/gameDevopsImgs/20200917/20200917160524_hxbi.png"],
                        useImgList: [],
                        weight: 10
                    };
                    self._products.push(data1);
                }
                self._loaded = true;
                _this.loadAllLink();
            }
            callback && callback(data);
        });
    };
    /** 应用跳转 */
    AdDataMgr.prototype.NavigateTo = function (style, data, _success, _fail) {
        AdDataMgr.Instance.AddClickRecord(style, data);
        WXAPI_1.default.navigateToMiniProgram_csjc(data.appId, data.advertPath, function (res) {
            AdDataMgr.Instance.AddOpenRecord(style, data, true);
            AdDataMgr.Instance.UpdateRecord();
            EventMgr_2.default.dispatch_csjc(EventDef_1.EventDef_csjc.AD_OnShareAdSuccess_csjc, style);
            if (_success)
                _success(res);
        }, function (res) {
            console.log(res.errMsg);
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.AD_OnShareAdFail_csjc);
            if (_fail)
                _fail(res);
        }, function (res) { });
    };
    /** 获取通用组件数据
    * style： 控件类型
    * count： 生成数量
    * return：没有数据时返回空数组
    */
    // public GetDataByStyleAndCount(style: ComponentStyle, count: number): Array<APPItem> {
    //     let result: APPItem[] = [];
    //     if (!this._products || this._products.length == 0) return result;
    //     if (!this.CanUseStyle(style)) return result;
    //     if (!this._loaded) return result;
    //     let libs: APPItem[] = [];
    //     for (let i = 0; i < this._products.length; i++) {
    //         libs[i] = this._products[i];
    //     }
    //     let usedImgsArray: Array<string> = [];
    //     let useGifAdIdsArray: Array<string> = [];
    //     let loopCount = 0;
    //     while (result.length < count && libs.length > 0 && loopCount < count * 50) {
    //         ++loopCount;
    //         let index = AdDataMgr.Instance.GetRandomByWeight(libs);
    //         let randData = JSON.parse(JSON.stringify(libs[index]));
    //         let isCanUseGif = (useGifAdIdsArray.indexOf(randData.appId) == -1);
    //         let useImgUrls = AdDataMgr.Instance.GetUseImgUrl(style, randData, isCanUseGif, usedImgsArray);
    //         if (useImgUrls.length > 0) {
    //             randData.useImgList = useImgUrls;
    //             result.push(randData);
    //             if (useImgUrls.length == 1) {
    //                 usedImgsArray.push(useImgUrls[0]);
    //             }
    //             else {
    //                 useGifAdIdsArray.push(randData.appId);
    //             }
    //         }
    //         else {
    //             libs.splice(index, 1);
    //         }
    //     }
    //     result = this.RepetitionArr(result);
    //     return result;
    // }
    /** 获取通用组件数据
    * style： 控件类型
    * count： 生成数量
    * return：没有数据时返回空数组
    */
    AdDataMgr.prototype.GetDataByStyleAndCount = function (style, count) {
        // cc.error('style ===>', style, count);
        var result = [];
        if (!this._products || this._products.length == 0)
            return result;
        // if (!this.canUseStyle(style)) return result;
        if (!this._loaded)
            return result;
        var arr = [4];
        if (this.screenList.length < count || this.iconList.length < count)
            this.loadAllLink();
        if (style == 3) {
            result = this.bannerList.splice(0, count);
        }
        else if (arr.indexOf(style) > -1) {
            result = this.screenList.splice(0, count);
        }
        else {
            result = this.iconList.splice(0, count);
        }
        this.AddShowRecord(style);
        // cc.error('res ==', result);
        return result;
    };
    AdDataMgr.prototype.loadAllLink = function () {
        this.iconList = [];
        this.screenList = [];
        // this.iconNames = [];
        // this.screenNames = [];
        for (var i = 0; i < this._products.length; i++) {
            var appItem = this._products[i];
            appItem.iconFilletList.sort(function (a, b) { return Math.random() - 0.5; });
            appItem.screenList.sort(function (a, b) { return Math.random() - 0.5; });
        }
        for (var i = 0; i < 4; i++) {
            var _iconList1 = [];
            var _iconList2 = [];
            var _screenList1 = [];
            var _screenList2 = [];
            for (var j = 0; j < this._products.length; j++) {
                var appItem = JSON.parse(JSON.stringify(this._products[j]));
                if (appItem.iconFilletList[i]) {
                    appItem = JSON.parse(JSON.stringify(this._products[j]));
                    appItem.useImgList = [appItem.iconFilletList[i]];
                    j > this._products.length / 2 ? _iconList1.push(appItem) : _iconList2.push(appItem);
                    // this.iconNames.push({gameName: appItem.gameName, useImgList: appItem.useImgList});
                }
                if (appItem.screenList[i]) {
                    appItem = JSON.parse(JSON.stringify(this._products[j]));
                    appItem.useImgList = [appItem.screenList[i]];
                    j > this._products.length / 2 ? _screenList1.push(appItem) : _screenList2.push(appItem);
                    // this.screenNames.push({gameName: appItem.gameName, useImgList: appItem.useImgList});
                }
                if (appItem.bannerList[i]) {
                    appItem = JSON.parse(JSON.stringify(this._products[j]));
                    appItem.useImgList = [appItem.bannerList[i]];
                    this.bannerList.push(appItem);
                }
            }
            _iconList1.sort(function (a, b) { return Math.random() - 0.5; });
            _iconList2.sort(function (a, b) { return Math.random() - 0.5; });
            _screenList1.sort(function (a, b) { return Math.random() - 0.5; });
            _screenList2.sort(function (a, b) { return Math.random() - 0.5; });
            this.bannerList.sort(function (a, b) { return Math.random() - 0.5; });
            this.iconList = this.iconList.concat(_iconList1, _iconList2);
            this.screenList = this.iconList.concat(_screenList1, _screenList2);
        }
        // console.log('this.iconList ==>', this.iconList);
        // console.log('this.screenList ==>', this.screenList);
        // console.log('this.iconNames ==>', this.iconNames);
        // console.log('this.screenNames ==>', this.screenNames);
    };
    AdDataMgr.prototype.RepetitionArr = function (list) {
        var data = {};
        for (var index = 0; index < list.length; index++) {
            var app = list[index];
            var array = data[app.appId];
            if (!array) {
                array = [];
            }
            array.push(app);
            data[app.appId] = array;
        }
        var apps = [];
        for (var index = 0; index < 5; index++) {
            for (var key in data) {
                if (Object.prototype.hasOwnProperty.call(data, key)) {
                    var element = data[key];
                    var appitem = element[index];
                    if (appitem) {
                        apps.push(element[index]);
                    }
                }
            }
        }
        return apps;
    };
    // 获取广告在特定位置的图片路径集合
    AdDataMgr.prototype.GetUseImgUrl = function (style, data, isCanUseGif, ginoreUrls) {
        if (!data) {
            return [];
        }
        var giftList = [];
        if (this.GetIsCanUseGifByStyle(style) && isCanUseGif && data.gifList && data.gifList.length > 0) {
            giftList = data.gifList;
        }
        var iconsArray = [];
        switch (style) {
            case ComponentStyle.ce_la_lan:
                iconsArray = data.screenList;
                break;
            case ComponentStyle.big_export_ui:
                iconsArray = data.screenList;
                break;
            case ComponentStyle.banner:
                iconsArray = data.bannerList;
                break;
            case ComponentStyle.h_slider:
                iconsArray = data.iconFilletList;
                break;
            case ComponentStyle.over_ui:
                iconsArray = data.iconFilletList;
                break;
        }
        var targetNum = 0.5;
        if (giftList.length == 0) {
            targetNum = 1.1;
        }
        var randValue = Math.random();
        if (randValue > targetNum) {
            return giftList;
        }
        if (iconsArray.length == 0) {
            return [];
        }
        var canUseImgArray = [];
        for (var i = 0; i < iconsArray.length; ++i) {
            if (ginoreUrls.indexOf(iconsArray[i]) == -1) {
                canUseImgArray.push(iconsArray[i]);
            }
        }
        if (canUseImgArray.length == 0) {
            return [];
        }
        var randIndex = Math.floor(Math.random() * canUseImgArray.length);
        return [canUseImgArray[randIndex]];
    };
    /** 根据权重随机 */
    AdDataMgr.prototype.GetRandomByWeight = function (arr) {
        var total = 0;
        for (var i = 0; i < arr.length; i++) {
            total += arr[i].weight;
        }
        var r = Math.floor(Math.random() * total);
        var index = 0;
        for (var i = 0; i < arr.length; i++) {
            if (i > 0) {
                r -= arr[i - 1].weight;
            }
            if (r < arr[i].weight) {
                index = i;
                break;
            }
        }
        return index;
    };
    AdDataMgr.prototype.GetIsCanUseGifByStyle = function (style) {
        return (style == ComponentStyle.ce_la_lan || style == ComponentStyle.big_export_ui || style == ComponentStyle.h_slider);
    };
    AdDataMgr.prototype.GetParamsMsgForObj = function (paramsObj) {
        var res = [];
        for (var key in paramsObj) {
            res.push(key + '=' + paramsObj[key]);
        }
        return res.join('&');
    };
    /** 保存展示次数 */
    AdDataMgr.prototype.AddShowRecord = function (style) {
        var isHased = false;
        for (var i = 0; i < this._materiaList.length; i++) {
            var ml = this._materiaList[i];
            if (style == Number(ml.locationCode)) {
                this._materiaList[i].displayCount++;
                isHased = true;
            }
        }
        if (!isHased) {
            var ml = new APPItemRecord();
            ml.locationCode = "" + style;
            ml.displayCount = 1;
            ml.clickCount = 0;
            ml.isExport = 0;
            ml.exportCount = 0;
            ml.exportProductId = "";
            this._materiaList.push(ml);
        }
    };
    /** 保存点击次数 */
    AdDataMgr.prototype.AddClickRecord = function (style, data) {
        var isHased = false;
        for (var i = 0; i < this._exportProductList.length; i++) {
            var epl = this._exportProductList[i];
            if (data.advertId == Number(epl.productId)) {
                this._exportProductList[i].clickCount++;
                isHased = true;
            }
        }
        if (!isHased) {
            var epl = {
                productId: "" + data.advertId,
                clickCount: 1
            };
            this._exportProductList.push(epl);
        }
        for (var i = 0; i < this._materiaList.length; i++) {
            var ml = this._materiaList[i];
            if (style == Number(ml.locationCode)) {
                this._materiaList[i].clickCount++;
            }
        }
    };
    /** 保存导出数据 */
    AdDataMgr.prototype.AddOpenRecord = function (style, data, success) {
        for (var i = 0; i < this._materiaList.length; i++) {
            var ml = this._materiaList[i];
            if (style == Number(ml.locationCode)) {
                if (success) {
                    this._materiaList[i].exportCount++;
                    this._materiaList[i].exportProductId = data.advertId + "";
                    this._materiaList[i].isExport = 1;
                    break;
                }
            }
        }
    };
    /** 上报数据 */
    AdDataMgr.prototype.UpdateRecord = function () {
        var _this = this;
        if (this._recording) {
            console.log('[Matrix]数据上报中');
            return;
        }
        if ((this._exportProductList.length <= 0 && !this.CheckMateria())) {
            console.log('[Matrix]数据无变更，不需要上报');
            return;
        }
        this._recording = true;
        var params = {
            openId: User_1.default.openId_csjc,
            productId: this.mProductId,
            materiaList: this._materiaList,
            exportProductList: this._exportProductList,
            shareCount: this.shareCount
        };
        if (params.materiaList.length == 0 && params.exportProductList.length == 0 && params.shareCount == 0) {
            return;
        }
        console.log("[Matrix]上传数据到服务器 params:\n", JSON.stringify(params));
        var url = this.mServerRootUrl + 'reportGame/matrixReport';
        HttpUnit_1.HttpTools.PostJson(url, params, this, function (data) {
            console.log("[Matrix]上传数据到服务器结果：", JSON.stringify(data));
            if (data != -1 && data.code == 200) {
                _this.clearRecord();
            }
            _this._recording = false;
        }, null);
    };
    /** 检测数据变动 */
    AdDataMgr.prototype.CheckMateria = function () {
        if (this._materiaList.length <= 0)
            return false;
        for (var i = 0; i < this._materiaList.length; i++) {
            if (this._materiaList[i].clickCount != 0 ||
                this._materiaList[i].displayCount != 0 ||
                this._materiaList[i].exportCount != 0 ||
                this._materiaList[i].isExport != 0) {
                return true;
            }
        }
        return false;
    };
    /** 清除导出数据 */
    AdDataMgr.prototype.clearRecord = function () {
        for (var i = 0; i < this._materiaList.length; i++) {
            this._materiaList[i].clickCount = 0;
            this._materiaList[i].displayCount = 0;
            this._materiaList[i].exportCount = 0;
            this._materiaList[i].isExport = 0;
        }
        this._exportProductList = [];
        // for (let i = 0; i < this._exportProductList.length; i++) {
        //     this._exportProductList[i].clickCount = 0;
        // }
        this.shareCount = 0;
    };
    /** 是否已过审 */
    AdDataMgr.prototype.GetIsPassed = function () {
        return this._isCheck;
    };
    /** 是否启用该类型 */
    AdDataMgr.prototype.CanUseStyle = function (style) {
        return this._canUsedStyle.indexOf(style) > -1;
    };
    return AdDataMgr;
}());
exports.AdDataMgr = AdDataMgr;
},{"../Event/EventDef":5,"../Event/EventMgr":6,"../GameSettings":8,"../PlatformApi/WXAPI":20,"../User/User":67,"./HttpUnit":29}],22:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WXAPI_1 = require("../../PlatformApi/WXAPI");
var AdDataMgr_1 = require("../AdDataMgr");
var CachedWXBannerAd_1 = require("../../PlatformApi/CachedWXBannerAd");
var ExamineMgr_1 = require("../../CommomAPI/ExamineMgr");
var TmBannerAdView = /** @class */ (function (_super) {
    __extends(TmBannerAdView, _super);
    function TmBannerAdView() {
        var _this = _super.call(this) || this;
        /** @prop {name:RefreshTime, tips:"刷新速度,单位为毫秒", type:Number, default:6000}*/
        _this.RefreshTime = 6000;
        _this._data = null;
        _this._wxBanner = null;
        return _this;
    }
    TmBannerAdView.prototype.onAwake = function () {
        this._showSp = this.owner.getChildByName("Display");
        if (this._showSp == null) {
            this._showSp = this.owner;
        }
    };
    TmBannerAdView.prototype.onDisable = function () {
        this.clearBannerWx();
    };
    TmBannerAdView.prototype.onStart = function () {
        if (ExamineMgr_1.default.CanShowAd_Wx) {
            this.refreshAd();
        }
        else {
            this._showSp.visible = false;
        }
    };
    TmBannerAdView.prototype.refreshAd = function () {
        /* if (Laya.Browser.onMiniGame || Laya.Browser.onQQMiniGame) {
            console.log("Banner组件显示BannerWx");
            CachedWXBannerAd_csjc.changeShow_csjc();
            // this.refreshBannerWx();
        }
        else */ {
            console.log("Banner组件显示BannerAd");
            this.refreshBannerAd();
            Laya.timer.loop(this.RefreshTime, this, this.refreshBannerAd);
        }
    };
    TmBannerAdView.prototype.refreshBannerAd = function () {
        this._data = AdDataMgr_1.AdDataMgr.Instance.GetDataByStyleAndCount(AdDataMgr_1.ComponentStyle.banner, 1)[0];
        if (this._data) {
            console.log(this._data);
            this._showSp.loadImage(this._data.bannerList[Math.floor(Math.random() * this._data.bannerList.length)]);
        }
    };
    TmBannerAdView.prototype.onClick = function () {
        if (this._data) {
            console.log("跳转游戏： " + this._data.gameName);
            if (Laya.Browser.onMiniGame) {
                AdDataMgr_1.AdDataMgr.Instance.NavigateTo(AdDataMgr_1.ComponentStyle.banner, this._data);
            }
            else {
                console.log("跳转完成");
            }
        }
    };
    TmBannerAdView.prototype.refreshBannerWx = function () {
        var _this = this;
        Laya.timer.clear(this, this.refreshBannerAd);
        if (!Laya.Browser.onMiniGame || !this.owner.visible)
            return;
        this.clearBannerWx();
        var self = this;
        var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
        var sw = sysInfo.screenWidth;
        var sh = sysInfo.screenHeight;
        var pos = this._showSp.localToGlobal(new Laya.Point(0, 0));
        var left = pos.x / Laya.stage.width * sw;
        var top = pos.y / Laya.stage.height * sh;
        var width = this.WXBannerWidth ? this.WXBannerWidth / Laya.stage.width * sw : sw;
        this._wxBanner = Laya.Browser.window["wx"].createBannerAd({
            adUnitId: WXAPI_1.default.bannerAdUnitId_csjc,
            adIntervals: 30,
            style: {
                left: left,
                top: top,
                width: width,
            }
        });
        self._wxBanner.onLoad(function (res) {
            console.log("WXBanner广告 加载完成");
            console.log(res);
        });
        this._wxBanner.onError(function (err) {
            console.log("WXBanner广告 加载失败");
            console.log(err);
            _this.refreshBannerAd();
            _this.clearBannerWx();
        });
        this._wxBanner.onResize(function (res) {
            console.log(self._wxBanner.style.realWidth, self._wxBanner.style.realHeight);
        });
        self._wxBanner.show();
    };
    TmBannerAdView.prototype.clearBannerWx = function () {
        if (this._wxBanner) {
            this._wxBanner.destroy();
        }
        this._wxBanner = null;
        CachedWXBannerAd_1.default.hide_csjc();
        Laya.timer.clear(this, this.refreshBannerAd);
    };
    TmBannerAdView.prototype.onViewShow = function () {
    };
    TmBannerAdView.prototype.onViewHide = function () {
        this.clearBannerWx();
    };
    return TmBannerAdView;
}(Laya.Script));
exports.default = TmBannerAdView;
},{"../../CommomAPI/ExamineMgr":2,"../../PlatformApi/CachedWXBannerAd":17,"../../PlatformApi/WXAPI":20,"../AdDataMgr":21}],23:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AdDataMgr_1 = require("../AdDataMgr");
var QpListAdBox = /** @class */ (function (_super) {
    __extends(QpListAdBox, _super);
    function QpListAdBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._data = null;
        // protected _originW: number = 200;
        // protected _originH: number = 200;
        _this._fontSize = 25;
        _this._positionId = 0;
        _this._creativeId = 0;
        _this._appId = "";
        return _this;
    }
    QpListAdBox.prototype.onAwake = function () {
        this._displaySp = this.owner.getChildByName("Display");
        // this._originW = this._displaySp.width;
        // this._originH = this._displaySp.height;
        this._disText = this.owner.getChildByName("TitleText");
        this._disText.text = "";
        this._fontSize = this._disText.fontSize;
    };
    // onEnable(): void {
    //     this._displaySp.on(Laya.Event.CLICK, this, this.Clicked);
    // }
    // onDisable(): void {
    //     this._displaySp.off(Laya.Event.CLICK, this, this.onClick);
    // }
    QpListAdBox.prototype.setData = function (data, parent, index) {
        if (data) {
            this._data = data;
            this._displaySp.loadImage(this._data.useImgList[Math.floor(Math.random() * this._data.useImgList.length)], Laya.Handler.create(this, function () {
                // if (!this._displaySp.destroyed) {
                //     this._displaySp.width = this._originW;
                //     this._displaySp.height = this._originH;
                // }
            }));
            // var str = String(data.show_config.title);
            // var num = str.length;
            // num = Math.max(5,num);
            // var fontSize = Math.floor((5 / num) * this._fontSize);
            // this._disText.fontSize = fontSize;
            this._disText.text = this._data.gameName;
        }
        this._parentAdView = parent;
    };
    QpListAdBox.prototype.onMouseDown = function () {
        this.NavigateTo();
    };
    QpListAdBox.prototype.NavigateTo = function () {
        if (this._data) {
            console.log("跳转游戏： " + this._data.gameName);
            if (Laya.Browser.onMiniGame) {
                AdDataMgr_1.AdDataMgr.Instance.NavigateTo(AdDataMgr_1.ComponentStyle.h_slider, this._data);
            }
            else {
                console.log("跳转完成");
            }
        }
    };
    return QpListAdBox;
}(Laya.Script));
exports.default = QpListAdBox;
},{"../AdDataMgr":21}],24:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var QpListAdBox_1 = require("./QpListAdBox");
var AdDataMgr_1 = require("../AdDataMgr");
var ExamineMgr_1 = require("../../CommomAPI/ExamineMgr");
/**
 * 用于显示滚动广告列表的类
 *
 * @export
 * @class ListAdView
 * @extends {Laya.Script}
 */
var ListAdView = /** @class */ (function (_super) {
    __extends(ListAdView, _super);
    function ListAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** @prop {name:AdStyle, tips:"广告位类型", type:Option, default:"Slider",option:"Slider,Export"}*/
        _this.AdStyle = "Slider";
        /** @prop {name:ScrollDirection,tips:"滚动方向,水平或竖直",type:Option,option:"Horizontal,Vertical",default:"Horizontal"}*/
        _this.ScrollDirection = "Horizontal";
        /** @prop {name:ScrollSpeed, tips:"滚动速度", type:Number, default:100}*/
        _this.ScrollSpeed = 100;
        /** @prop {name:ListCount, tips:"数量", type:Number, default:20}*/
        _this.ListCount = 20;
        _this._scrollForward = true;
        return _this;
    }
    ListAdView.prototype.onAwake = function () {
        this._ownerSp = this.owner;
        this._list = this.owner.getChildByName("List");
        this._list.elasticEnabled = true;
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        if (this.ScrollDirection == "Horizontal") {
            this._list.hScrollBarSkin = "";
        }
        else {
            this._list.vScrollBarSkin = "";
        }
        this.owner.on("AdRefresh", this, this.RefreshAdList);
    };
    ListAdView.prototype.onEnable = function () {
        if (ExamineMgr_1.default.CanShowAd_Wx) {
            this.RefreshAdList();
        }
        else {
            this._ownerSp.visible = false;
        }
    };
    ListAdView.prototype.onUpdate = function () {
        var scrollValue = this.ScrollSpeed * Laya.timer.delta / 1000;
        this._list.scrollBar.value += scrollValue;
        if (this._list.scrollBar.value >= this._list.scrollBar.max) {
            this._list.scrollBar.value = 0;
        }
        else if (this._list.scrollBar.value < 0) {
            this._list.scrollBar.value = this._list.scrollBar.max;
        }
    };
    ListAdView.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        var listAdBox = cell.getComponent(QpListAdBox_1.default);
        listAdBox.setData(data, this.owner, index);
    };
    ListAdView.prototype.RefreshAdList = function () {
        var style = AdDataMgr_1.ComponentStyle.h_slider;
        switch (this.AdStyle) {
            case "Slider":
                style = AdDataMgr_1.ComponentStyle.h_slider;
                break;
            case "Banner":
                style = AdDataMgr_1.ComponentStyle.banner;
                break;
            case "Export":
                style = AdDataMgr_1.ComponentStyle.big_export_ui;
                break;
        }
        var data = AdDataMgr_1.AdDataMgr.Instance.GetDataByStyleAndCount(style, 30);
        if (data.length > 0 && data.length < this.ListCount) {
            var resetCount = this.ListCount - data.length;
            var dataTemp = data.concat();
            for (var index = 0; index < resetCount; index++) {
                var element = data[index];
                dataTemp.push(element);
            }
            this._list.array = dataTemp;
        }
        else {
            this._list.array = data;
        }
    };
    return ListAdView;
}(Laya.Script));
exports.default = ListAdView;
},{"../../CommomAPI/ExamineMgr":2,"../AdDataMgr":21,"./QpListAdBox":23}],25:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AdDataMgr_1 = require("../AdDataMgr");
var ExamineMgr_1 = require("../../CommomAPI/ExamineMgr");
var QpGameSwitch_1 = require("../QpGameSwitch");
var QpRandomJump = /** @class */ (function (_super) {
    __extends(QpRandomJump, _super);
    function QpRandomJump() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._clickTimer = 500;
        return _this;
    }
    QpRandomJump.prototype.onUpdate = function () {
        if (this._clickTimer > 0) {
            this._clickTimer -= Laya.timer.delta;
        }
    };
    QpRandomJump.prototype.onClick = function () {
        if (Laya.Browser.onMiniGame) {
            console.log("\u81EA\u52A8\u8DF3\u529F\u80FD\u5C4F\u853D" + ExamineMgr_1.default.CanDoScz_Wx + ",\u5F00\u5173" + (QpGameSwitch_1.default.GameSwitch.popAd == 1));
            if (ExamineMgr_1.default.CanDoScz_Wx && QpGameSwitch_1.default.GameSwitch.popAd == 1 && QpGameSwitch_1.default.GameSwitch.indexAd) {
                if (this._clickTimer > 0)
                    return;
                this._clickTimer = 3000;
                var arr = AdDataMgr_1.AdDataMgr.Instance.GetDataByStyleAndCount(AdDataMgr_1.ComponentStyle.h_slider, 10);
                if (arr.length > 0) {
                    var game = arr[Math.floor(Math.random() * arr.length)];
                    if (game) {
                        AdDataMgr_1.AdDataMgr.Instance.NavigateTo(AdDataMgr_1.ComponentStyle.h_slider, game);
                    }
                }
            }
        }
    };
    return QpRandomJump;
}(Laya.Script));
exports.default = QpRandomJump;
},{"../../CommomAPI/ExamineMgr":2,"../AdDataMgr":21,"../QpGameSwitch":30}],26:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var QpListAdBox_1 = require("./QpListAdBox");
var QpRdListAdBox = /** @class */ (function (_super) {
    __extends(QpRdListAdBox, _super);
    function QpRdListAdBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** @prop {name:RdName, tips:"广告位类型", type:String, default:""}*/
        _this.RdName = "";
        /** @prop {name:RdCount, tips:"广告位类型", type:Number, default:"0"}*/
        _this.RdCount = 0;
        return _this;
    }
    QpRdListAdBox.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._rdSp = this.owner.getChildByName("RdSp");
    };
    // onEnable(): void {
    //     this._displaySp.on(Laya.Event.CLICK, this, this.Clicked);
    // }
    // onDisable(): void {
    //     this._displaySp.off(Laya.Event.CLICK, this, this.onClick);
    // }
    QpRdListAdBox.prototype.setData = function (data, parent, index) {
        if (data) {
            this._data = data;
            this._displaySp.loadImage(this._data.useImgList[Math.floor(Math.random() * this._data.useImgList.length)], Laya.Handler.create(this, function () {
                // if (!this._displaySp.destroyed) {
                //     this._displaySp.width = this._originW;
                //     this._displaySp.height = this._originH;
                // }
            }));
            // var str = String(data.show_config.title);
            // var num = str.length;
            // num = Math.max(5,num);
            // var fontSize = Math.floor((5 / num) * this._fontSize);
            // this._disText.fontSize = fontSize;
            this._disText.text = this._data.gameName;
            if (this.RdName != null && this.RdCount > 0 && this._rdSp != null) {
                var i = index % this.RdCount;
                var resname = this.RdName + i + ".png";
                this._rdSp.skin = resname;
            }
        }
        this._parentAdView = parent;
    };
    return QpRdListAdBox;
}(QpListAdBox_1.default));
exports.default = QpRdListAdBox;
},{"./QpListAdBox":23}],27:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var QpListAdBox_1 = require("./QpListAdBox");
var AdDataMgr_1 = require("../AdDataMgr");
var ExamineMgr_1 = require("../../CommomAPI/ExamineMgr");
var QpShakeAd2View = /** @class */ (function (_super) {
    __extends(QpShakeAd2View, _super);
    function QpShakeAd2View() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** @prop {name:AdStyle, tips:"广告位类型", type:Option, default:"Slider",option:"Slider,Export,Banner"}*/
        _this.AdStyle = "Slider";
        /** @prop {name:ShakeRestTime, tips:"闪动休息", type:Number, default:1000}*/
        _this.ShakeRestTime = 1500;
        /** @prop {name:ShakeTime, tips:"闪动速度", type:Number, default:300}*/
        _this.ShakeTime = 300;
        /** @prop {name:ShakeNeedCount, tips:"闪动次数", type:Number, default:4}*/
        _this.ShakeNeedCount = 4;
        /** @prop {name:ChaneAdTime, tips:"更换广告速度", type:Number, default:6000}*/
        _this.ChaneAdTime = 6000;
        /** @prop {name:RotaAngel, tips:"晃动角度", type:Number, default:10}*/
        _this.RotaAngel = 10;
        /** @prop {name:Scale, tips:"晃动缩放", type:Number, default:0.1}*/
        _this.Scale = 0.1;
        _this._shakeTimer = 0;
        return _this;
        // onClick() {
        //     if (Laya.Browser.onMiniGame) {
        //         let arr = AdDataMgr.Instance.GetDataByStyleAndCount(ComponentStyle.h_slider, 10);
        //         if (arr.length > 0) {
        //             let game = arr[Math.floor(Math.random() * arr.length)];
        //             if (game) {
        //                 AdDataMgr.Instance.NavigateTo(ComponentStyle.h_slider, game);
        //             }
        //         }
        //     }
        // }
    }
    QpShakeAd2View.prototype.onAwake = function () {
        this._ownerSp = this.owner;
        this._list = this.owner.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._cells = this._list.cells;
    };
    QpShakeAd2View.prototype.onEnable = function () {
        if (ExamineMgr_1.default.CanShowAd_Wx) {
            this.RefreshAdList();
        }
        else {
            this._ownerSp.visible = false;
        }
    };
    QpShakeAd2View.prototype.onUpdate = function () {
        if (this._shakeTimer <= this.ChaneAdTime) {
            this._shakeTimer += Laya.timer.delta;
        }
        else {
            this._shakeTimer = 0;
            this.RefreshAdList();
            return;
        }
        // if (this.ShakeTime * this.ShakeNeedTime)
        //     for (let index = 0; index < this._cells.length; index++) {
        //         const box = this._cells[index];
        //         let period = curTime / this.ShakeTime;
        //         let aniPeriod = Math.sin(period * 3.14 * 2);
        //         box.rotation = aniPeriod * this.RotaAngel;
        //         box.scaleX = 1 - (aniPeriod * this.Scale);
        //         box.scaleY = box.scaleX;
        //     }
        if (this._shakeTimer > this.ShakeRestTime && this._shakeTimer <= (this.ShakeRestTime + (this.ShakeTime * this.ShakeNeedCount))) {
            var period = ((this._shakeTimer - this.ShakeRestTime) % this.ShakeTime) / this.ShakeTime;
            var aniPeriod = Math.sin(period * 3.14 * 2);
            for (var index = 0; index < this._cells.length; index++) {
                var box = this._cells[index];
                box.rotation = aniPeriod * this.RotaAngel;
                box.scaleX = 1 - (aniPeriod * this.Scale);
                box.scaleY = box.scaleX;
            }
        }
        else {
            for (var index = 0; index < this._cells.length; index++) {
                var box = this._cells[index];
                box.rotation = 0;
                box.scaleX = 1;
                box.scaleY = 1;
            }
        }
    };
    QpShakeAd2View.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        var loopAdBox = cell.getComponent(QpListAdBox_1.default);
        loopAdBox.setData(data, this.owner, index);
    };
    QpShakeAd2View.prototype.RefreshAdList = function () {
        var style = AdDataMgr_1.ComponentStyle.h_slider;
        switch (this.AdStyle) {
            case "Slider":
                style = AdDataMgr_1.ComponentStyle.h_slider;
                break;
            case "Banner":
                style = AdDataMgr_1.ComponentStyle.banner;
                break;
            case "Export":
                style = AdDataMgr_1.ComponentStyle.big_export_ui;
                break;
        }
        var data = AdDataMgr_1.AdDataMgr.Instance.GetDataByStyleAndCount(style, this._cells.length);
        this._list.array = data;
    };
    return QpShakeAd2View;
}(Laya.Script));
exports.default = QpShakeAd2View;
},{"../../CommomAPI/ExamineMgr":2,"../AdDataMgr":21,"./QpListAdBox":23}],28:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var QpShakeAd2View_1 = require("./QpShakeAd2View");
var QpListAdBox_1 = require("./QpListAdBox");
var QpShakeAd3View = /** @class */ (function (_super) {
    __extends(QpShakeAd3View, _super);
    function QpShakeAd3View() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** @prop {name:AdStyle, tips:"广告位类型", type:Option, default:"Slider",option:"Slider,Export,Banner"}*/
        _this.AdStyle = "Slider";
        /** @prop {name:ShakeRestTime, tips:"闪动休息", type:Number, default:1000}*/
        _this.ShakeRestTime = 1500;
        /** @prop {name:ShakeTime, tips:"闪动速度", type:Number, default:300}*/
        _this.ShakeTime = 300;
        /** @prop {name:ShakeNeedCount, tips:"闪动次数", type:Number, default:4}*/
        _this.ShakeNeedCount = 4;
        /** @prop {name:ChaneAdTime, tips:"更换广告速度", type:Number, default:6000}*/
        _this.ChaneAdTime = 6000;
        /** @prop {name:RotaAngel, tips:"晃动角度", type:Number, default:10}*/
        _this.RotaAngel = 10;
        /** @prop {name:Scale, tips:"晃动缩放", type:Number, default:0.1}*/
        _this.Scale = 0.1;
        return _this;
    }
    QpShakeAd3View.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._list2 = this.owner.getChildByName("List2");
        this._list2.renderHandler = Laya.Handler.create(this, this.onList2Render, null, false);
    };
    QpShakeAd3View.prototype.onList2Render = function (cell, index) {
        var data = this._list.array[index];
        var loopAdBox = cell.getComponent(QpListAdBox_1.default);
        loopAdBox.setData(data, this.owner, index);
    };
    QpShakeAd3View.prototype.RefreshAdList = function () {
        _super.prototype.RefreshAdList.call(this);
        this._list2.array = this._list.array.concat();
    };
    return QpShakeAd3View;
}(QpShakeAd2View_1.default));
exports.default = QpShakeAd3View;
},{"./QpListAdBox":23,"./QpShakeAd2View":27}],29:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var HttpTools = /** @class */ (function () {
    function HttpTools() {
    }
    HttpTools.Requset = function (url, data, caller, completed, error, method, responseType, headers) {
        var _this = this;
        if (responseType === void 0) { responseType = "json"; }
        if (headers === void 0) { headers = null; }
        var xhr = new Laya.HttpRequest();
        xhr.once(Laya.Event.COMPLETE, null, function (data) {
            if (data.code != 200 && data.code != 0) {
                _this.Error(xhr, data);
                error && error.call(data);
                return;
            }
            completed && completed.call(caller, data);
        });
        xhr.once(Laya.Event.ERROR, caller, error);
        xhr.once(Laya.Event.ERROR, HttpTools, this.Error);
        xhr.send(url, data, method, responseType, headers);
    };
    HttpTools.Post = function (url, data, caller, completed, error, responseType, headers) {
        if (responseType === void 0) { responseType = "json"; }
        if (headers === void 0) { headers = null; }
        this.Requset(url, data, caller, completed, error, "post", responseType, headers);
    };
    HttpTools.Get = function (url, data, caller, completed, error, responseType, headers) {
        if (responseType === void 0) { responseType = "json"; }
        if (headers === void 0) { headers = null; }
        this.Requset(url, data, caller, completed, error, "get", responseType, headers);
    };
    HttpTools.PostJson = function (url, data, caller, completed, error) {
        this.Post(url, data, caller, completed, error, "json");
    };
    HttpTools.Error = function (xhr, message) {
        console.log("Requset Error, Url:" + xhr.url + ", Error Message:" + JSON.stringify(message));
    };
    HttpTools.JsonToKeyValue = function (param) {
        var res = [];
        for (var key in param) {
            res.push(key + '=' + param[key]);
        }
        return res.join('&');
    };
    return HttpTools;
}());
exports.HttpTools = HttpTools;
},{}],30:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameSettings_1 = require("../GameSettings");
var sdkcustom = /** @class */ (function () {
    function sdkcustom() {
        this.wudianSwitch = 1; //所有误点狂点的总开关
        this.export = 1; //大导出页面
        this.endExport = 1; //胜利失败后，额外的导出页面
        this.btnShowTimer = 2; //所有下一步按钮延迟出现的时间
        this.btnMoveTimer = 2.5; //所有误点按钮上移的时间
        this.bannerMoveTimer = 1.5; //所有误点Banner上移的时间
        this.bannerKuangdian1 = 0; //开局的狂点
        this.bannerKuangdian2 = 0; //结束狂点
        this.bannerWudian = 0; //所有界面的误点
        this.cityList = []; //屏蔽审核的城市列表
        this.indexPanel = 0; //好友热玩功能
        this.popAd = 0; //自动弹导出
        this.sceneList = [1005, 1006, 1007, 1008, 1011, 1012, 1013, 1014, 1017, 1020, 1023, 1024, 1025,
            1030, 1031, 1032, 1036, 1042, 1044, 1047, 1048, 1049, 1053, 1102]; //屏蔽场景值
        this.kuangdianTime = [11, 12, 13, 14, 18, 19, 20];
        this.startVideo = 0;
        this.indexAd = 1;
    }
    return sdkcustom;
}());
exports.sdkcustom = sdkcustom;
var QpGameSwitch = /** @class */ (function () {
    function QpGameSwitch() {
    }
    QpGameSwitch.getCustomKey = function (success) {
        var _this = this;
        this.httpRequest("https://qp.qingpukj.com:8055/business/product/game/getAttribute", "appid=" + GameSettings_1.default.AppID_csjc, "application/x-www-form-urlencoded", function (res) {
            var key = JSON.parse(res.msg);
            if (key) {
                if (key.wudianSwitch)
                    _this.customkey.wudianSwitch = key.wudianSwitch;
                if (key.export)
                    _this.customkey.export = key.export;
                if (key.endExport)
                    _this.customkey.endExport = key.endExport;
                if (key.btnShowTimer)
                    _this.customkey.btnShowTimer = key.btnShowTimer;
                if (key.btnMoveTimer)
                    _this.customkey.btnMoveTimer = key.btnMoveTimer;
                if (key.bannerMoveTimer)
                    _this.customkey.bannerMoveTimer = key.bannerMoveTimer;
                if (key.bannerKuangdian1)
                    _this.customkey.bannerKuangdian1 = key.bannerKuangdian1;
                if (key.bannerKuangdian2)
                    _this.customkey.bannerKuangdian2 = key.bannerKuangdian2;
                if (key.bannerWudian)
                    _this.customkey.bannerWudian = key.bannerWudian;
                if (key.indexPanel)
                    _this.customkey.indexPanel = key.indexPanel;
                if (key.popAd)
                    _this.customkey.popAd = key.popAd;
                if (key.cityList)
                    _this.customkey.cityList = JSON.parse(key.cityList);
                if (key.sceneList)
                    _this.customkey.sceneList = JSON.parse(key.sceneList);
                if (key.kuangdianTime)
                    _this.customkey.kuangdianTime = JSON.parse(key.kuangdianTime);
                if (key.startVideo)
                    _this.customkey.startVideo = key.startVideo;
                if (key.indexAd)
                    _this.customkey.indexAd = key.indexAd;
            }
            if (success)
                success();
        });
    };
    Object.defineProperty(QpGameSwitch, "IsIpPass", {
        get: function () {
            if (this._city == null) {
                // console.log("不通过,当前地址为空");
            }
            else {
                for (var index = 0; index < this.customkey.cityList.length; index++) {
                    var city = this.customkey.cityList[index];
                    if (this._city.search(city) > -1) {
                        // console.log("不通过,当前地址为:", this._city, "city:", city);
                        return false;
                    }
                }
                // console.log("通过,当前地址为:", this._city);
                return true;
            }
        },
        enumerable: true,
        configurable: true
    });
    QpGameSwitch.UpdateIpCity = function (success) {
        var _this = this;
        this.httpRequest("https://qp.qingpukj.com:8055/business/product/game/getIPArea", "appid=" + GameSettings_1.default.AppID_csjc, "application/x-www-form-urlencoded", function (res) {
            console.log("IP", res);
            if (res && res.area) {
                _this._city = res.area;
            }
            if (success)
                success();
        });
    };
    Object.defineProperty(QpGameSwitch, "GameSwitch", {
        get: function () {
            return this.customkey;
        },
        enumerable: true,
        configurable: true
    });
    QpGameSwitch.httpRequest = function (url, data, content_type, complete, method) {
        if (method === void 0) { method = 'POST'; }
        if (Laya.Browser.onMiniGame) {
            Laya.Browser.window['wx'].request({
                url: url,
                data: data,
                method: method,
                header: {
                    'content-type': content_type // 默认值
                },
                success: function (res) {
                    if (complete)
                        complete(res.data);
                    console.log("连接成功", res);
                }, fail: function (res) {
                    if (complete)
                        complete(null);
                    console.log("连接错误", res);
                }
            });
        }
    };
    QpGameSwitch.customkey = new sdkcustom();
    return QpGameSwitch;
}());
exports.default = QpGameSwitch;
},{"../GameSettings":8}],31:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Camera2UI = /** @class */ (function () {
    function Camera2UI() {
    }
    /**[SixGod]
     * 世界坐标转屏幕坐标
     * @param {Laya.Camera} camera   参照相机
     * @param {Laya.Vector3} point   需要转换的点
     */
    Camera2UI.WorldToScreen2 = function (camera, point) {
        var pointA = this.InverseTransformPoint(camera.transform, point);
        var distance = pointA.z;
        var out = new Laya.Vector3();
        camera.viewport.project(point, camera.projectionViewMatrix, out);
        var value = new Laya.Vector3(out.x / Laya.stage.clientScaleX, out.y / Laya.stage.clientScaleY, distance);
        return value;
    };
    /**[SixGod]
     * 世界坐标转相对坐标
     * @param {Laya.Transform} origin   camera.transform
     * @param {Laya.Vector3} point      需要转换的点
     */
    Camera2UI.InverseTransformPoint = function (origin, point) {
        var xx = new Laya.Vector3();
        origin.getRight(xx);
        var yy = new Laya.Vector3();
        origin.getUp(yy);
        var zz = new Laya.Vector3();
        origin.getForward(zz);
        var zz1 = new Laya.Vector3(-zz.x, -zz.y, -zz.z);
        var x = this.ProjectDistance(point, origin.position, xx);
        var y = this.ProjectDistance(point, origin.position, yy);
        var z = this.ProjectDistance(point, origin.position, zz1);
        var value = new Laya.Vector3(x, y, z);
        return value;
    };
    /**[SixGod]
     * 向量投影长度, 向量CA 在向量 CB 上的投影长度
     * @param {Laya.Vector3} A
     * @param {Laya.Vector3} C
     * @param {Laya.Vector3} B
     */
    Camera2UI.ProjectDistance = function (A, C, B) {
        var CA = new Laya.Vector3();
        Laya.Vector3.subtract(A, C, CA);
        var angle = this.Angle2(CA, B) * Math.PI / 180;
        var distance = Laya.Vector3.distance(A, C);
        distance *= Math.cos(angle);
        return distance;
    };
    /**[SixGod]
     * 向量夹角
     * @param {Laya.Vector3} ma 向量A
     * @param {Laya.Vector3} mb 向量B
     */
    Camera2UI.Angle2 = function (ma, mb) {
        var v1 = (ma.x * mb.x) + (ma.y * mb.y) + (ma.z * mb.z);
        var ma_val = Math.sqrt(ma.x * ma.x + ma.y * ma.y + ma.z * ma.z);
        var mb_val = Math.sqrt(mb.x * mb.x + mb.y * mb.y + mb.z * mb.z);
        var cosM = v1 / (ma_val * mb_val);
        if (cosM < -1)
            cosM = -1;
        if (cosM > 1)
            cosM = 1;
        var angleAMB = Math.acos(cosM) * 180 / Math.PI;
        return angleAMB;
    };
    return Camera2UI;
}());
exports.default = Camera2UI;
},{}],32:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Enums_1 = require("./Enums");
var GameSetting_1 = require("./GameSetting");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
/**
 * 控制摄像机移动的类,使用时调用InitCamera()方法初始化，传入的参数为玩家组件的引用，以及在地面和空中摄像机的初始偏移
 * 此类使用消息中心解耦合，如果需要触发摄像机事件，需要使用消息中心dispatch(EventDef.Camera_Event)事件
 *
 * @export
 * @class CameraCtr
 * @extends {Laya.Script}
 */
var CameraCtr = /** @class */ (function (_super) {
    __extends(CameraCtr, _super);
    // private _speedEffect: Laya.Sprite3D;
    /**构造函数
     * Creates an instance of CameraCtr.
     * @memberof CameraCtr
     */
    function CameraCtr() {
        var _this = _super.call(this) || this;
        //在地面时摄像机离玩家的距离
        _this._goundOffset = GameSetting_1.CameraSetting.GoundOffset;
        //摄像机视角
        _this._fieldOfView = GameSetting_1.CameraSetting.FieldOfView;
        //当前摄像机离玩家的距离
        _this._currentOffset = new Laya.Vector3();
        //摄像机相对于玩家的角度
        _this._currentrotate = new Laya.Point();
        //摄像机X轴旋转角度
        _this._angleX = -60;
        //摄像机Y轴旋转角度
        _this._angleY = -90;
        //摄像机目标左右偏移
        // private _targetOffset: number = 0;
        //摄像机当前左右偏移
        // private _cameraOffset: number = 0;
        //摄像机固定跟随点
        // private _fixedFollowPos: Laya.Vector3;
        //当前摄像机向前看的值
        _this._curViewForward = 0;
        //摄像机应当向前看的值
        _this._needViewForward = GameSetting_1.CameraSetting.FrontBackOffset;
        //摄像机抖动
        _this._shakeTime = 0;
        //摄像机高度
        _this._height = 0;
        //摄像机转换目标时的速度
        _this._changeMoveSpeed = 0;
        //摄像机转换目标一共需要走的距离
        _this._changeTotlaDistance = 0;
        //摄像机转换目标当前走的距离
        _this._changeCurrentDistance = 0;
        return _this;
    }
    Object.defineProperty(CameraCtr.prototype, "Sprite3D", {
        get: function () { return this.owner; },
        enumerable: true,
        configurable: true
    });
    /**
     * 初始化，注册摄像机事件
     *
     * @memberof CameraCtr
     */
    CameraCtr.prototype.onAwake = function () {
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.Camera_Event_csjc, this, this.ChangeCameraState);
    };
    /**
     * 脚本被删除时自动反注册事件
     *
     * @memberof CameraCtr
     */
    CameraCtr.prototype.onDestroy = function () {
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.Camera_Event_csjc, this, this.ChangeCameraState);
    };
    /**
     * 摄像机位置移动在LateUpdate中运行
     *
     * @memberof CameraCtr
     */
    CameraCtr.prototype.onLateUpdate = function () {
        if (this._cameraState == Enums_1.CameraState.ChangeingFollowObj) {
            if (this._changeCurrentDistance > this._changeTotlaDistance) {
                this._cameraState = Enums_1.CameraState.Normal;
                return;
            }
            this._changeCurrentDistance += (Laya.timer.delta / 1000) * this._changeMoveSpeed;
            var finalOffset = new Laya.Vector3();
            var progress = this._changeCurrentDistance / this._changeTotlaDistance;
            Laya.Vector3.lerp(this._preFollowObj.transform.position, this._followObjSp3D.transform.position, progress, finalOffset);
            Laya.Vector3.add(finalOffset, this._followObjSp3D.transform.position, this.Sprite3D.transform.position);
            this.Sprite3D.transform.position = this.Sprite3D.transform.position;
            return;
        }
        if (this._followObjSp3D == null)
            return;
        var deltaTime = Laya.timer.delta / 1000;
        // let finalOffser = this.GetOffsetByAngel();
        var finalOffser = this.RotateCamera();
        /* 下面的代码是按照摄像机和玩家的偏移_currentOffset求出摄像机的位置 */
        var offset_x = new Laya.Vector3();
        this._followObjSp3D.transform.getRight(offset_x);
        Laya.Vector3.scale(offset_x, finalOffser.x, offset_x);
        var offset_y = new Laya.Vector3();
        this._followObjSp3D.transform.getUp(offset_y);
        Laya.Vector3.scale(offset_y, finalOffser.y, offset_y);
        var offset_z = new Laya.Vector3();
        this._followObjSp3D.transform.getForward(offset_z);
        Laya.Vector3.scale(offset_z, finalOffser.z, offset_z);
        var offset = new Laya.Vector3();
        Laya.Vector3.add(offset_x, offset_y, offset);
        Laya.Vector3.add(offset, offset_z, offset);
        // let scale = Math.min(this._height / 5, 1);
        // Laya.Vector3.scale(offset, 1 + scale, offset);
        offset.y += this._height;
        // offset.x -= Math.max(0, this._height - 1.5) * 3;        
        offset.x -= this._height;
        offset.z -= this._height;
        /* 改良前的方法 */
        var finalPos = new Laya.Vector3();
        var followPos = new Laya.Vector3();
        /* 左右平移平滑函数 */
        /* if (this._cameraState == CameraState.Fixed) {
            // if (this._fixedFollowPos != null) {
            //     followPos =
            // }
            followPos = this._fixedFollowPos;
        }
        else  */
        if (this._cameraState == Enums_1.CameraState.RotatedAround) {
            followPos = this._followObjSp3D.transform.position;
            if (this._curViewForward > 0) {
                this._curViewForward -= (deltaTime) * GameSetting_1.CameraSetting.FrontBackOffsetMoveSpd;
                if (this._curViewForward < 0) {
                    this._curViewForward = 0;
                }
            }
            else if (this._curViewForward < 0) {
                this._curViewForward += (deltaTime) * GameSetting_1.CameraSetting.FrontBackOffsetMoveSpd;
                if (this._curViewForward > 0) {
                    this._curViewForward = 0;
                }
            }
        }
        else {
            if (this._curViewForward < this._needViewForward) {
                this._curViewForward += (deltaTime) * GameSetting_1.CameraSetting.FrontBackOffsetMoveSpd;
                if (this._curViewForward > this._needViewForward) {
                    this._curViewForward = this._needViewForward;
                }
            }
            else if (this._curViewForward > this._needViewForward) {
                this._curViewForward -= (deltaTime) * GameSetting_1.CameraSetting.FrontBackOffsetMoveSpd;
                if (this._curViewForward < this._needViewForward) {
                    this._curViewForward = this._needViewForward;
                }
            }
            /* if (this._posObj.CurrentPosOnRoad != null) {
                let distance = (deltaTime) * CameraSetting.LeftRightMoveSpd;
                if (this._cameraOffset > this._targetOffset) {
                    this._cameraOffset -= distance;
                    if (this._cameraOffset <= this._targetOffset) {
                        this._cameraOffset = this._targetOffset;
                    }
                }
                else if (this._cameraOffset < this._targetOffset) {
                    this._cameraOffset += distance;
                    if (this._cameraOffset >= this._targetOffset) {
                        this._cameraOffset = this._targetOffset;
                    }
                }
                followPos = this.GetPosByOffset(this._posObjSp3D.transform, this._posObj.CurrentPosOnRoad.PosWithOutOffset, this._cameraOffset);
            }
            else  */ {
                followPos = this._followObjSp3D.transform.position;
            }
        }
        Laya.Vector3.add(offset, followPos, finalPos);
        this._cameraParent.transform.position = finalPos;
        var dir = new Laya.Vector3();
        this._followObjSp3D.transform.getForward(dir);
        Laya.Vector3.normalize(dir, dir);
        Laya.Vector3.scale(dir, this._curViewForward * -1, dir);
        Laya.Vector3.add(dir, followPos, dir);
        this._cameraParent.transform.lookAt(dir, Laya.Vector3._Up, false);
        if (this._camera != null) {
            this._camera.fieldOfView = this._fieldOfView;
            if (this._shakeTime > 0) {
                var shakeFrequency = this._shakeTime * 2 * Math.PI * GameSetting_1.CameraSetting.ShakeFrequency;
                // let pos = new Laya.Vector3(Math.sin(shakeFrequency) * 0.1, Math.cos(shakeFrequency) * 0.1, Math.cos(shakeFrequency) * 0.1);
                var pos = new Laya.Vector3(Math.sin(shakeFrequency) * GameSetting_1.CameraSetting.ShakeStrength, 0, 0);
                this._cameraParent.transform.getRight(pos);
                Laya.Vector3.scale(pos, Math.sin(shakeFrequency) * GameSetting_1.CameraSetting.ShakeStrength, pos);
                Laya.Vector3.add(pos, this._camera.transform.position, pos);
                this._camera.transform.position = pos;
                this._shakeTime -= Laya.timer.delta / 1000;
            }
        }
    };
    /**
     * 按照角度得到摄像机偏移，用于旋转摄像机
     *
     * @returns {Laya.Vector3}
     * @memberof CameraCtr
     */
    CameraCtr.prototype.GetOffsetByAngel = function () {
        var result;
        var dis = Laya.Vector3.distance(this._currentOffset, Laya.Vector3._ZERO.clone());
        //当摄像机状态为非旋转状态时
        if (this._cameraState != Enums_1.CameraState.RotatedAround) {
            //当摄像机状态为非旋转状态且当前角度不为0时，先将角度转为0
            if (this._angleY > 180) {
                this._angleY += Laya.timer.delta / 1000 * 360;
            }
            else if (this._angleY > 0 && this._angleY < 180) {
                this._angleY -= Laya.timer.delta / 1000 * 360;
            }
            //当摄像机状态为非旋转状态且当前角度为0时
            if (this._angleY < 0 || this._angleY >= 360) {
                this._angleY = 0;
            }
            result = this.RotateAroundYByAngle(dis, this._currentOffset, this._angleY);
        }
        else {
            this._angleY += Laya.timer.delta / 1000 * 30;
            if (this._angleY > 360) {
                this._angleY = this._angleY - 360;
            }
            result = this.RotateAroundYByAngle(dis, this._currentOffset, this._angleY);
        }
        return result;
    };
    CameraCtr.prototype.RotateCamera = function () {
        var result;
        var dis = Laya.Vector3.distance(this._currentOffset, Laya.Vector3._ZERO.clone());
        result = this.RotateAroundByAngle(dis, this._currentOffset, this._angleX, this._angleY);
        return result;
    };
    /**
     * 按照世界坐标的Y轴旋转
     *
     * @param {Laya.Vector3} vector
     * @param {number} angelY
     * @returns {Laya.Vector3}
     * @memberof CameraCtr
     */
    CameraCtr.prototype.RotateAroundYByAngle = function (radius, vector, angelY) {
        //角度为0的时候不需要旋转直接返回原位移，可以节约性能
        if (angelY == 0) {
            return vector;
        }
        var result = new Laya.Vector3();
        var rad = (angelY / 180) * Math.PI;
        result.x = Math.sin(rad) * radius;
        result.y = vector.y;
        result.z = Math.cos(rad) * radius;
        return result;
    };
    /**
     * 按照世界坐标的X轴旋转
     *
     * @param {Laya.Vector3} vector
     * @param {number} angelX
     * @returns {Laya.Vector3}
     * @memberof CameraCtr
     */
    CameraCtr.prototype.RotateAroundXByAngle = function (radius, vector, angelX) {
        //角度为0的时候不需要旋转直接返回原位移，可以节约性能
        if (angelX == 0) {
            return vector;
        }
        var result = new Laya.Vector3();
        var rad = (angelX / 180) * Math.PI;
        result.x = vector.x;
        result.y = Math.sin(rad) * radius;
        result.z = Math.cos(rad) * radius;
        return result;
    };
    CameraCtr.prototype.RotateAroundByAngle = function (radius, vector, angelX, angelY) {
        var result = vector.clone();
        var radx = (angelX / 180) * Math.PI;
        var rady = (angelY / 180) * Math.PI;
        // console.log(radx);
        result.x = Math.sin(radx) * Math.cos(rady) * radius;
        result.y = Math.cos(radx) * radius;
        result.z = Math.sin(radx) * Math.sin(rady) * radius;
        return result;
    };
    /**
     * 设置摄像机动画状态的方法
     *
     * @param {*} args
     * @memberof CameraCtr
     */
    CameraCtr.prototype.ChangeCameraState = function (args) {
        // let transformOffset: Laya.Vector3;//摄像机与角色的transform偏移
        // let rotate: Laya.Vector3;//摄像机的旋转
        var fieldOfView; //摄像机角度，用来表现加速减速的效果
        // let cameraState = args.CameraState as CameraState;
        var speedState = args.SpeedState;
        var cameraOffSet = args.CameraOffset;
        var cameraRotate = args.CameraRotate;
        var cameraRotateX = args.CameraRotateX;
        var cameraRotateY = args.CameraRotateY;
        var cameraViewForward = args.CameraViewForward;
        // let roadOffset = args.RoadOffset as number;
        var shakeTime = args.ShakeTime;
        var height = args.Height;
        if (shakeTime) {
            this._shakeTime = Math.max(0, shakeTime);
        }
        if (height) {
            this._height = Math.max(0, height);
        }
        // if (roadOffset) {
        //     this._targetOffset = roadOffset * CameraSetting.LeftRightRate;
        //     // if (this._cameraState == CameraState.GroundRun && cameraState == CameraState.Ground) {
        //     //     this._cameraOffset = offset;
        //     // }
        //     // else {
        //     //     this._targetOffset = offset * 0.6;
        //     // }
        // }
        /* 切换摄像机跟随状态 */
        // if (cameraState) {
        //     this._cameraState = cameraState;
        //     /*             switch (cameraState) {
        //                     case CameraState.RotatedAround:
        //                         break;
        //                     case CameraState.Normal:
        //                         this
        //                         break;
        //                 }
        //                 // if (this._cameraState == CameraState.Fixed) {
        //                 //     this._fixedFollowPos = this._player.transform.position.clone();
        //                 // }
        //      */
        // }
        if (cameraOffSet) {
            var dis = Laya.Vector3.distance(this._currentOffset, cameraOffSet);
            var time = dis;
            if (dis > 0.1) {
                Laya.Tween.to(this._currentOffset, { x: cameraOffSet.x, y: cameraOffSet.y, z: cameraOffSet.z }, Math.min(1000, time * 1000), Laya.Ease.linearNone, null, 0, true);
            }
        }
        if (cameraRotateX) {
            this._angleX += cameraRotateX;
            if (this._angleX > -10) {
                this._angleX = -10;
            }
            else if (this._angleX < -120) {
                this._angleX = -120;
            }
        }
        if (cameraRotate) {
            // this._angleX = cameraRotate.x;
            // this._angleY = cameraRotate.y;
            var dis = Math.pow(cameraRotate.x - this._angleX, 2) + Math.pow(cameraRotate.y - this._angleY, 2);
            if (dis > 1) {
                Laya.Tween.to(this, { _angleX: cameraRotate.x, _angleY: cameraRotate.y }, 1000, Laya.Ease.linearNone, null, 0, true);
            }
        }
        if (cameraRotateY) {
            this._angleY += cameraRotateY;
        }
        if (cameraViewForward != null) {
            this._needViewForward = cameraViewForward;
        }
        /* 摄像机加速减速效果，加速时会扩大加大fieldOfView，减速时则相反 */
        if (speedState) {
            switch (speedState) {
                case Enums_1.SpeedState.SpeedUp:
                    // this._speedEffect.active = true;
                    fieldOfView = 70;
                    break;
                case Enums_1.SpeedState.SpeedDown:
                    // this._speedEffect.active = false;
                    fieldOfView = 55;
                    break;
                case Enums_1.SpeedState.Normal:
                    // this._speedEffect.active = false;
                    fieldOfView = 60;
                    break;
            }
            if (this._speedState != speedState && fieldOfView && this._fieldOfView != fieldOfView) {
                // 等测试完毕之后使用这个方法
                this._speedState = speedState;
                var time = ((Math.abs(Math.abs(this._fieldOfView) - Math.abs(fieldOfView))) / 45) * 1000;
                Laya.Tween.to(this, { _fieldOfView: fieldOfView }, time, Laya.Ease.linearNone, null, 0, true);
            }
        }
        // if (rotate && this._rotate != rotate) {
        //     Laya.Tween.to(this._rotate, { x: rotate.x, y: rotate.y, z: rotate.z }, 300, Laya.Ease.circOut, null, 0, true);
        // }
    };
    /**
     * 初始化摄像机
     *
     * @param {Laya.Sprite3D} playerCtr 玩家控制器的引用
     * @param {Laya.Vector3} goundOffset 玩家在地面时，摄像机位移
     * @param {Laya.Vector3} skyOffset 玩家在空中时，摄像机位移
     * @param {number} [fieldOfView = 60] 正常情况下的视角
     * @memberof CameraCtr
     */
    CameraCtr.prototype.InitCamera = function (posObj) {
        this._cameraParent = this.owner;
        this._camera = this.owner;
        if (this._followObjSp3D != null && this._cameraState == Enums_1.CameraState.ChangeFollowObj) {
            this._cameraState = Enums_1.CameraState.ChangeingFollowObj;
            this._preFollowObj = this._followObjSp3D;
            this._followObjSp3D = posObj;
            this._changeTotlaDistance = Laya.Vector3.distance(this._preFollowObj.transform.position, this._followObjSp3D.transform.position);
            this._changeMoveSpeed = this._changeTotlaDistance / GameSetting_1.CameraSetting.ChangeObjTime;
            this._changeCurrentDistance = 0;
        }
        else {
            this._followObjSp3D = posObj;
        }
        // this._camera = this._cameraParent.getChildByName("Main Camera") as Laya.Camera;
        // this._speedEffect = this._cameraParent.getChildByName("shexian") as Laya.Sprite3D;
        this._currentOffset = this._goundOffset.clone();
        this._cameraParent.transform.position = this._followObjSp3D.transform.position.clone();
        this._cameraState = Enums_1.CameraState.Normal;
    };
    return CameraCtr;
}(Laya.Script3D));
exports.default = CameraCtr;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"./Enums":40,"./GameSetting":47}],33:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var CharacterCtr_1 = require("./CharacterCtr");
var Enums_1 = require("../Enums");
var FSMSystem_1 = require("../Fsm/FSMSystem");
var TRexState_1 = require("../FsmStates/TRexState");
var KingkingState_1 = require("../FsmStates/KingkingState");
var SceneMgr_1 = require("../SceneMgr");
var BossRobot = /** @class */ (function (_super) {
    __extends(BossRobot, _super);
    function BossRobot() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._die = false;
        _this._timer = 0;
        _this._ani = null;
        _this._isAtk = false;
        return _this;
    }
    Object.defineProperty(BossRobot.prototype, "Player", {
        get: function () { return SceneMgr_1.default.Instance.Player.FollowObj; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BossRobot.prototype, "AniSprite", {
        get: function () { return this._mowner.getChildAt(0); },
        enumerable: true,
        configurable: true
    });
    BossRobot.prototype.onEnable = function () {
        _super.prototype.onEnable.call(this);
        this._mowner = this._playerKind != Enums_1.PlayerType.Kingkong ? this._tRex : this._kingkong;
        this._ani = this._mowner.getChildAt(0).getComponent(Laya.Animator);
        this._rigidBody3D = this._mowner.getComponent(Laya.Rigidbody3D);
        this._physicsComponent = this._mowner.getComponent(Laya.PhysicsComponent);
        // this._physicsComponent.collisionGroup = CollisionGroup.Obstacle;
        // this._physicsComponent.canCollideWith = CollisionGroup.None | CollisionGroup.Ground | CollisionGroup.Character;
        this._rigidBody3D.isKinematic = false;
    };
    // onDisable()
    // {
    //     this._rigidBody3D.isKinematic = true
    // }
    BossRobot.prototype.Input = function (point) {
    };
    BossRobot.prototype.MakeFsm = function () {
        this._fsm = new FSMSystem_1.default(this);
        if (SceneMgr_1.default.Instance.BossKind == Enums_1.PlayerType.Kingkong) {
            this._fsm.AddState(this._kingkong.addComponent(KingkingState_1.default));
            this._fsmboss = this._kingkong.getComponent(KingkingState_1.default);
            this._kingkong.getChildAt(0).getChildByName("Attack1_Kingkong").name = "Attack1kk";
            this._tRex.active = false;
            this._playerKind = Enums_1.PlayerType.Kingkong;
        }
        else {
            this._fsm.AddState(this._tRex.addComponent(TRexState_1.default));
            this._fsmboss = this._tRex.getComponent(TRexState_1.default);
            this._kingkong.active = false;
            this._playerKind = Enums_1.PlayerType.TRex;
        }
    };
    BossRobot.prototype.SetFollowObj = function (obj) {
    };
    BossRobot.prototype.onUpdate = function () {
        // console.log("*---------------------------------攻击中罚站",this._isAtk)
        var _this = this;
        // console.log("*---------------------------------xxxxxxxxxx",this._isAtk)
        if (SceneMgr_1.default.Instance.BossVisible == false || SceneMgr_1.default.Instance.GameOver != 0)
            return;
        _super.prototype.onUpdate.call(this);
        // return
        if (this._die || SceneMgr_1.default.Instance.Player == null)
            return;
        var dis = Laya.Vector3.distance(this.Sprite3D.transform.position, this.Player.transform.position);
        var inPlane = Math.abs(this.Sprite3D.transform.position.y - this.Player.transform.position.y) <= 1;
        this.AniSprite.transform.localRotationEulerY = 0;
        this.ChaseMethod();
        if (this._isAtk == true)
            return;
        if (dis <= 10 && inPlane && this._timer <= 0) {
            this.Attack();
            this._rigidBody3D.linearVelocity = Laya.Vector3._ZERO;
            this._isAtk = true;
            this._ani.speed = 1.5;
            Laya.timer.once(3000, this, function () {
                _this._isAtk = false;
            });
        }
        else if (dis < 80 && inPlane) {
            // if(dis<60)
            // {
            //     this._ani.play("Walk");
            //     this._rigidBody3D.linearVelocity = new Laya.Vector3(Math.sin(this._mowner.transform.position.y) * 3 , 
            //     this._rigidBody3D.linearVelocity.y, Math.cos(this._mowner.transform.position.y) * 3 );
            // }
            // else
            {
                var speed = 0.3 + (dis / 80) * 0.7;
                this._ani.play("Walk");
                this._ani.speed = speed;
                this._rigidBody3D.linearVelocity = new Laya.Vector3(Math.sin(this.Sprite3D.transform.rotationEuler.y) * 8 * speed, this._rigidBody3D.linearVelocity.y, Math.cos(this.Sprite3D.transform.rotationEuler.y) * 8 * speed);
            }
        }
        else {
            this._ani.play("Idle");
            this._rigidBody3D.linearVelocity = Laya.Vector3._ZERO;
            // this.ChaseMethod();
        }
    };
    BossRobot.prototype.Attack = function () {
        this.AniSprite.transform.localRotationEulerY = 0;
        this._timer = 4000;
        this.ChaseMethod();
        this.EnemyTrun();
        this._fsm.CurrentState.Reason({ InputType: Enums_1.InputType.Attack });
    };
    BossRobot.prototype.ChaseMethod = function () {
        if (this._timer <= 0) {
            this.EnemyTrun();
            // this.EnemyMove();
        }
        else {
            this._timer -= Laya.timer.delta;
        }
    };
    BossRobot.prototype.EnemyTrun = function () {
        this.AniSprite.transform.localRotationEulerY = 0;
        var dir = new Laya.Vector3();
        Laya.Vector3.subtract(this.Sprite3D.transform.position, this.Player.transform.position, dir);
        Laya.Vector3.add(this.Sprite3D.transform.position, dir, dir);
        this.Sprite3D.transform.lookAt(dir, Laya.Vector3._Up);
    };
    return BossRobot;
}(CharacterCtr_1.default));
exports.default = BossRobot;
},{"../Enums":40,"../Fsm/FSMSystem":44,"../FsmStates/KingkingState":42,"../FsmStates/TRexState":43,"../SceneMgr":50,"./CharacterCtr":34}],34:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FSMSystem_1 = require("../Fsm/FSMSystem");
var TRexState_1 = require("../FsmStates/TRexState");
var SceneMgr_1 = require("../SceneMgr");
var KingkingState_1 = require("../FsmStates/KingkingState");
var Enums_1 = require("../Enums");
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var CharacterCtr = /** @class */ (function (_super) {
    __extends(CharacterCtr, _super);
    function CharacterCtr() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._selecetKind = 0;
        _this._canRO = true;
        _this._mowner = null;
        _this._fireSound = "subRes/sound/Fire.mp3";
        return _this;
    }
    Object.defineProperty(CharacterCtr.prototype, "FollowObj", {
        get: function () { return this._followObj; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CharacterCtr.prototype, "StateId", {
        get: function () { return this._fsm.CurrentStateID; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CharacterCtr.prototype, "State", {
        get: function () { return this._fsmboss; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(CharacterCtr.prototype, "Sprite3D", {
        get: function () { return this._mowner; },
        enumerable: true,
        configurable: true
    });
    CharacterCtr.prototype.onAwake = function () {
        this._tRex = this.owner.getChildByName("TRex");
        this._kingkong = this.owner.getChildByName("Kingkong");
        // this._pter = this.owner.getChildByName("PteroShort") as Laya.Sprite3D;
        this.MakeFsm();
    };
    CharacterCtr.prototype.onEnable = function () {
        this._mowner = this._playerKind != Enums_1.PlayerType.Kingkong ? this._tRex.getChildAt(0) : this._kingkong.getChildAt(0);
        this._canRO = true;
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.Game_Input_csjc, this, this.Input_csjc);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.BossVisible, this, this.OnSelectHero);
    };
    CharacterCtr.prototype.onDisable = function () {
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.Game_Input_csjc, this, this.Input_csjc);
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.BossVisible, this, this.OnSelectHero);
    };
    // RemoveEvent() {
    //     super.RemoveEvent
    // }
    /**监听选择英雄 */
    CharacterCtr.prototype.OnSelectHero = function () {
        if (SceneMgr_1.default.Instance.PlayerKind == Enums_1.PlayerType.Kingkong) {
            this._selecetKind = 0;
        }
        else {
            this._selecetKind = 1;
        }
        console.log("----------------------------xxx选择结果", this._selecetKind);
    };
    CharacterCtr.prototype.onUpdate = function () {
        this._fsm.CurrentState.Act();
    };
    CharacterCtr.prototype.Input_csjc = function (point) {
        var _this = this;
        if (SceneMgr_1.default.Instance.BossVisible == false)
            return;
        if (!point)
            return;
        var type = point.InputType;
        if (type == Enums_1.InputType.Attack && this._canRO == true) {
            this._canRO = false;
            Laya.timer.once(1000, this, function () {
                _this._canRO = true;
            });
            var dir = new Laya.Vector3();
            Laya.Vector3.subtract(this.Sprite3D.transform.position, SceneMgr_1.default.Instance.BossSprite3D.getChildAt(this._selecetKind).transform.position, dir);
            Laya.Vector3.add(this.Sprite3D.transform.position, dir, dir);
            // console.log("-------------旋转输出",SceneMgr_cscj.Instance.BossSprite3D.getChildAt(this._selecetKind).name,this.Sprite3D.transform.rotationEuler.y)
            this.Sprite3D.transform.lookAt(dir, Laya.Vector3._Up);
            // this.Sprite3D.transform.lookAt((SceneMgr_cscj.Instance.BossSprite3D.getChildAt(this._selecetKind) as Laya.Sprite3D).transform.position, Laya.Vector3._Up);
            // this.Sprite3D.transform.localRotationEulerY+=180
            // console.log("-------------输出22222222222222",this.Sprite3D.transform.rotationEuler.y)
        }
    };
    CharacterCtr.prototype.MakeFsm = function () {
        this._fsm = new FSMSystem_1.default(this);
        // this._fsm.AddState(this._kingkong.addComponent(KingkingState));
        // this._fsm.AddState(this._tRex.addComponent(TRexState));
        // this._kingkong.active=false
        if (SceneMgr_1.default.Instance.PlayerKind == Enums_1.PlayerType.TRex) {
            this._fsm.AddState(this._tRex.addComponent(TRexState_1.default));
            this._fsmboss = this._tRex.getComponent(TRexState_1.default);
            this._kingkong.active = false;
            this._playerKind = Enums_1.PlayerType.TRex;
        }
        else {
            this._fsm.AddState(this._kingkong.addComponent(KingkingState_1.default));
            this._fsmboss = this._kingkong.getComponent(KingkingState_1.default);
            this._tRex.active = false;
            this._playerKind = Enums_1.PlayerType.Kingkong;
        }
    };
    CharacterCtr.prototype.PerformTransition = function (trs) {
        this._fsm.PerformTransition(trs);
    };
    CharacterCtr.prototype.Input = function (point) {
        // console.log("---------------------------输入",point)
        this._fsm.CurrentState.Reason(point);
    };
    CharacterCtr.prototype.SetFollowObj = function (obj) {
        this._followObj = obj;
        SceneMgr_1.default.Instance.CameraCtr.InitCamera(this._followObj);
    };
    CharacterCtr.prototype.FireSound = function (volume) {
        if (Laya.Browser.onMiniGame) {
            if (!this._vsound1) {
                this._vsound1 = wx.createInnerAudioContext();
            }
            if (this._curUrl == this._fireSound) {
                if (this._vsound1.paused) {
                    this._vsound1.play();
                }
                this._vsound1.volume = volume;
            }
            else {
                this._curUrl = this._fireSound;
                this._vsound1.stop();
                this._vsound1.src = this._fireSound;
                this._vsound1.loop = true;
                this._vsound1.play();
            }
        }
    };
    CharacterCtr.prototype.StopSound = function () {
        if (Laya.Browser.onMiniGame) {
            if (this._vsound1) {
                this._vsound1.stop();
            }
        }
    };
    return CharacterCtr;
}(Laya.Script3D));
exports.default = CharacterCtr;
},{"../../../Event/EventDef":5,"../../../Event/EventMgr":6,"../Enums":40,"../Fsm/FSMSystem":44,"../FsmStates/KingkingState":42,"../FsmStates/TRexState":43,"../SceneMgr":50}],35:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Enums_1 = require("../Enums");
var SceneMgr_1 = require("../SceneMgr");
var SoundMgr_1 = require("../../../Mgr/SoundMgr");
var DestructibleObj = /** @class */ (function (_super) {
    __extends(DestructibleObj, _super);
    function DestructibleObj() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._isbreak = false;
        _this._timer = -1;
        return _this;
    }
    Object.defineProperty(DestructibleObj.prototype, "Sprite3D", {
        get: function () { return this.owner; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DestructibleObj.prototype, "isBreak", {
        get: function () { return this._isbreak; },
        enumerable: true,
        configurable: true
    });
    DestructibleObj.prototype.onAwake = function () {
        this._physicsComponent = this.owner.getComponent(Laya.PhysicsComponent);
        if (this._physicsComponent != null) {
            this._physicsComponent.collisionGroup = Enums_1.CollisionGroup.Obstacle;
            this._physicsComponent.canCollideWith = Enums_1.CollisionGroup.None | Enums_1.CollisionGroup.Character;
        }
    };
    DestructibleObj.prototype.onUpdate = function () {
        if (this._timer > 50) {
            if (this.Sprite3D.active) {
                this.Sprite3D.active = false;
            }
        }
        else if (this._timer >= 0) {
            this._timer += Laya.timer.delta;
        }
    };
    DestructibleObj.prototype.onTriggerEnter = function (res) {
        SoundMgr_1.default.instance_csjc.playSound_csjc("Broken");
        console.log("-----------------物体名字查看", this.owner.name);
        var replace = SceneMgr_1.default.Instance.ReplaceObj.getChildByName(this.owner.name + "Replace");
        var ani = replace.getComponent(Laya.Animator);
        ani.play(null, 0, 0);
        replace.transform.worldMatrix = this.Sprite3D.transform.worldMatrix;
        if (this._timer < 0) {
            this._timer = 0;
        }
        this._isbreak = true;
        // this._physicsComponent.enabled = false;
    };
    return DestructibleObj;
}(Laya.Script3D));
exports.default = DestructibleObj;
},{"../../../Mgr/SoundMgr":10,"../Enums":40,"../SceneMgr":50}],36:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SceneMgr_1 = require("../SceneMgr");
var SoundMgr_1 = require("../../../Mgr/SoundMgr");
var DestructibleObj_1 = require("./DestructibleObj");
var DestructibleObjBuilds = /** @class */ (function (_super) {
    __extends(DestructibleObjBuilds, _super);
    function DestructibleObjBuilds() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    DestructibleObjBuilds.prototype.onTriggerEnter = function (res) {
        // this.keyList.indexOf(e.keyCode) < 0
        console.log("-----------------物体名字查看", res.owner.name);
        if (res.owner.name.indexOf("Kingkong") > 0)
            return;
        SoundMgr_1.default.instance_csjc.playSound_csjc("Broken");
        var replace = SceneMgr_1.default.Instance.ReplaceObj.getChildByName(this.owner.name + "Replace");
        var ani = replace.getComponent(Laya.Animator);
        ani.play(null, 0, 0);
        replace.active = true;
        replace.transform.worldMatrix = this.Sprite3D.transform.worldMatrix;
        if (this._timer < 0) {
            this._timer = 0;
        }
        Laya.timer.once(3000, this, function () {
            replace.active = false;
        });
        this._isbreak = true;
        // this._physicsComponent.enabled = false;
    };
    return DestructibleObjBuilds;
}(DestructibleObj_1.default));
exports.default = DestructibleObjBuilds;
},{"../../../Mgr/SoundMgr":10,"../SceneMgr":50,"./DestructibleObj":35}],37:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SceneMgr_1 = require("../SceneMgr");
var Enums_1 = require("../Enums");
var SoundMgr_1 = require("../../../Mgr/SoundMgr");
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var Enemy = /** @class */ (function (_super) {
    __extends(Enemy, _super);
    function Enemy() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._timer = 0;
        _this._die = false;
        return _this;
    }
    Object.defineProperty(Enemy.prototype, "EnemySprite3D", {
        get: function () { return this.Sprite3D; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "Alive", {
        get: function () { return !this._die; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "Sprite3D", {
        get: function () { return this.owner; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(Enemy.prototype, "Player", {
        get: function () { return SceneMgr_1.default.Instance.Player.FollowObj; },
        enumerable: true,
        configurable: true
    });
    Enemy.prototype.onAwake = function () {
        this._eff = this.owner.getChildAt(1);
        this._physicsComponent = this.owner.getComponent(Laya.PhysicsComponent);
        this._physicsComponent.collisionGroup = Enums_1.CollisionGroup.Obstacle;
        this._physicsComponent.canCollideWith = Enums_1.CollisionGroup.None | Enums_1.CollisionGroup.Ground | Enums_1.CollisionGroup.Character;
    };
    Enemy.prototype.onUpdate = function () {
        if (this._die || SceneMgr_1.default.Instance.Player == null)
            return;
        var dis = Laya.Vector3.distance(this.Sprite3D.transform.position, this.Player.transform.position);
        var inPlane = Math.abs(this.Sprite3D.transform.position.y - this.Player.transform.position.y) <= 1;
        // if (dis <= 0.5 && inPlane) {
        //     // this._animator.play("Idle_Crazy_Robot");
        //     this.Attack();
        // }
        // else 
        if (dis < 7 && inPlane) {
            this.ChaseMethod();
        }
        else if (dis < 15 && inPlane) {
            if (this._eff.active) {
                this._eff.active = false;
            }
        }
        else {
        }
    };
    Enemy.prototype.ChaseMethod = function () {
        if (this._timer <= 0) {
            this.EnemyTrun();
            // this.EnemyMove();
        }
        else {
            this._timer -= Laya.timer.delta;
        }
    };
    // Attack() {
    //     this._timer = 1000;
    //     this.EnemyTrun();
    // }
    Enemy.prototype.EnemyTrun = function () {
        var dir = new Laya.Vector3();
        Laya.Vector3.subtract(this.Sprite3D.transform.position, this.Player.transform.position, dir);
        Laya.Vector3.add(this.Sprite3D.transform.position, dir, dir);
        this.Sprite3D.transform.lookAt(dir, Laya.Vector3._Up);
    };
    // EnemyMove() {
    //     let dir = new Laya.Vector3();
    //     Laya.Vector3.subtract(this.Player.transform.position, this.Sprite3D.transform.position, dir);
    //     Laya.Vector3.normalize(dir, dir);
    //     Laya.Vector3.scale(dir, Laya.timer.delta / 1000 * 2, dir);
    //     Laya.Vector3.add(dir, this.Sprite3D.transform.position, dir);
    //     this.Sprite3D.transform.position = dir;
    // }
    Enemy.prototype.onCollisionEnter = function (collision) {
        var _this = this;
        console.log("--------------吃物品xxxx", collision.other.owner.name);
        if (this._die)
            return;
        /* if (collision.other.owner.name.search("Attack") > -1 || collision.other.owner.name.search("-Car") > -1 || collision.other.owner.name.search("-Robot") > -1)  */ {
            SoundMgr_1.default.instance_csjc.playSound_csjc("Broken");
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.EnemyDead);
            this._die = true;
            this._physicsComponent.enabled = false;
            this._eff.active = false;
            Laya.timer.frameOnce(20, this, function () {
                _this.owner.active = false;
            });
        }
    };
    return Enemy;
}(Laya.Script3D));
exports.default = Enemy;
},{"../../../Event/EventDef":5,"../../../Event/EventMgr":6,"../../../Mgr/SoundMgr":10,"../Enums":40,"../SceneMgr":50}],38:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundMgr_1 = require("../../../Mgr/SoundMgr");
var MyAnimatorEvent = /** @class */ (function (_super) {
    __extends(MyAnimatorEvent, _super);
    function MyAnimatorEvent() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    MyAnimatorEvent.prototype.SetCharacter = function (ctr) {
        this._baseState = ctr;
    };
    MyAnimatorEvent.prototype.Attack1 = function () {
        SoundMgr_1.default.instance_csjc.playSound_csjc("Attack1");
    };
    MyAnimatorEvent.prototype.Attack2 = function () {
        SoundMgr_1.default.instance_csjc.playSound_csjc("Attack2");
    };
    MyAnimatorEvent.prototype.Walk = function () {
        if (this._baseState.CurrentAni == "Walk") {
            SoundMgr_1.default.instance_csjc.playSound_csjc("Step");
        }
    };
    return MyAnimatorEvent;
}(Laya.Script3D));
exports.default = MyAnimatorEvent;
},{"../../../Mgr/SoundMgr":10}],39:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Enums_1 = require("../Enums");
var PoolManager_1 = require("../GameTools/PoolManager");
var StoneMgr = /** @class */ (function (_super) {
    __extends(StoneMgr, _super);
    function StoneMgr() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._forwardV3 = new Laya.Vector3();
        return _this;
        // // SetFirePos(targetPos: Laya.Vector3, curPos: Laya.Vector3, pter: Laya.Sprite3D) {
        // //     this._targetPos = targetPos;
        // //     this.Sprite3D.transform.position = curPos;
        // //     let forward = new Laya.Vector3();
        // //     Laya.Vector3.subtract(this.Sprite3D.transform.position, targetPos, forward);
        // //     Laya.Vector3.add(this.Sprite3D.transform.position, forward, forward);
        // //     this.Sprite3D.transform.lookAt(forward, Laya.Vector3._Up);
        // // }
        // // onCollisionEnter(other: Laya.Collision) {
        // //     if (other.other.owner.name.search("Enemy") > -1) {
        // //         SoundMgr_csjc.instance_csjc.playSound_csjc("Explore");
        // //     }
        // // }
    }
    Object.defineProperty(StoneMgr.prototype, "Sprite3D", {
        get: function () { return this.owner; },
        enumerable: true,
        configurable: true
    });
    StoneMgr.prototype.onAwake = function () {
        this._rigidBody3D = this.owner.getComponent(Laya.Rigidbody3D);
        this._rigidBody3D.isKinematic = false;
        this._rigidBody3D.gravity = new Laya.Vector3(0, -10, 0);
        this._rigidBody3D.collisionGroup = Enums_1.CollisionGroup.Character;
        this._rigidBody3D.canCollideWith = Enums_1.CollisionGroup.None | Enums_1.CollisionGroup.Ground | Enums_1.CollisionGroup.Obstacle;
    };
    StoneMgr.prototype.onEnable = function () {
        // Laya.timer.frameOnce(120,this,()=>{
        //     this.comeBackPool()
        // })
        // this.creatPath()
    };
    StoneMgr.prototype.onUpdate = function () {
        // this._rigidBody3D.isKinematic
        // console.log("-------------线速度",this._rigidBody3D.isKinematic,this._rigidBody3D.linearVelocity)
    };
    /**
     * 初始化投掷
    */
    StoneMgr.prototype.Init = function (roy) {
        // roy+=90
        var curAngle = this.Sprite3D.transform.localRotationEulerY * 3.14 / 180;
        // console.log("-------------添加线速度",roy,Math.sin(roy), Math.cos(roy))
        this._rigidBody3D.linearVelocity = new Laya.Vector3(Math.sin(curAngle) * 50, 15, Math.cos(curAngle) * 50);
    };
    StoneMgr.prototype.onTriggerEnter = function (res) {
        // this.keyList.indexOf(e.keyCode) < 0
        console.log("-----------------物体名字查看", res.owner.name);
        this.comeBackPool();
    };
    // protected getForward()
    // {
    //     this.Sprite3D.transform.getForward(this._forwardV3)
    //     return this._forwardV3
    // }
    // protected tempV3:Laya.Vector3 = new Laya.Vector3()
    // /**
    //  * 设置中心变量v3
    //  * @param x 
    //  * @param y 
    //  * @param z 
    //  */
    // setTempV3(x:number=0,y:number=0,z:number=0)
    // {
    //     this.tempV3.x = x;
    //     this.tempV3.y = y;
    //     this.tempV3.z = z;
    //     return this.tempV3
    // }
    // protected creatPath()
    // {
    //     // moosnow.event.sendEventImmediately(EventType.CAMERA_PULL);
    //     let points = []
    //     let point1 = new Laya.Vector3(this.Sprite3D.transform.position.x, this.Sprite3D.transform.position.y, this.Sprite3D.transform.position.z) // 起点        
    //     let point2 = new Laya.Vector3(this.Sprite3D.transform.position.x, this.Sprite3D.transform.position.y+4, this.Sprite3D.transform.position.z)//一个顶点 还可以继续添加 点
    //     let point3 = new Laya.Vector3(this.Sprite3D.transform.position.x+30*this.getForward().x, -10, this.Sprite3D.transform.position.z+30*this.getForward().z)//终点    
    //     points.push(point1)
    //     points.push(point2)
    //     points.push(point3)
    //     let maxdd = 65
    //     let array = BezierPath.CreateBezierPoints(points, maxdd)
    //     let index = 0
    //     Laya.timer.frameLoop(1, this, ()=> {
    //         if (index <= array.length - 1)  {
    //             this.Sprite3D.transform.rotate
    //             // (this.setTempV3(this.roSpeed*this.mainSpeedCtr*this.getForward().x,0,this.getForward().z),false)
    //             if(array[index])
    //             this.Sprite3D.transform.position = this.setTempV3(array[index].x,array[index].y,array[index].z)//new Laya.Vector3(array[index].x, array[index].y, array[index].z)
    //             index+=1
    //         }
    //         else
    //         {
    //             // Laya.timer.clearAll(this)
    //             this.Sprite3D.transform.localScaleX = 1
    //             this.Sprite3D.transform.localScaleY = 1
    //             this.Sprite3D.transform.localScaleZ = 1
    //             this.Sprite3D.active =false
    //             this.comeBackPool()
    //         }
    //     })
    // }
    StoneMgr.prototype.comeBackPool = function () {
        // console.log("-----------------隐藏")
        Laya.timer.clearAll(this);
        PoolManager_1.default.getInstance().EnqueueItem(0, this.owner);
        this._rigidBody3D.linearVelocity = Laya.Vector3._ZERO;
    };
    return StoneMgr;
}(Laya.Script3D));
exports.default = StoneMgr;
},{"../Enums":40,"../GameTools/PoolManager":48}],40:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * 摄像机的跟随状态枚举
 *
 * @enum {number}
 */
var CameraState;
(function (CameraState) {
    CameraState[CameraState["Normal"] = 1] = "Normal";
    CameraState[CameraState["RotatedAround"] = 2] = "RotatedAround";
    CameraState[CameraState["ChangeFollowObj"] = 3] = "ChangeFollowObj";
    CameraState[CameraState["ChangeingFollowObj"] = 4] = "ChangeingFollowObj";
})(CameraState = exports.CameraState || (exports.CameraState = {}));
/**
 * 角色加速状态枚举
 *
 * @export
 * @enum {number}
 */
var SpeedState;
(function (SpeedState) {
    SpeedState[SpeedState["Normal"] = 1] = "Normal";
    SpeedState[SpeedState["SpeedUp"] = 2] = "SpeedUp";
    SpeedState[SpeedState["SpeedDown"] = 3] = "SpeedDown";
    SpeedState[SpeedState["SpeedBackward"] = 4] = "SpeedBackward";
})(SpeedState = exports.SpeedState || (exports.SpeedState = {}));
var CharacterState;
(function (CharacterState) {
    CharacterState["Idle"] = "Idle";
    CharacterState["Paused"] = "Paused";
    CharacterState["GroundMoving"] = "GroundMoving";
    CharacterState["EndSpeed"] = "EndSpeed";
    CharacterState["EndKick"] = "EndKick";
    CharacterState["EndRoll"] = "EndRoll";
    CharacterState["GameOver"] = "GameOver";
})(CharacterState = exports.CharacterState || (exports.CharacterState = {}));
/**
 * 碰撞组别
 *
 * @export
 * @enum {number}
 */
var CollisionGroup;
(function (CollisionGroup) {
    CollisionGroup[CollisionGroup["All"] = -1] = "All";
    CollisionGroup[CollisionGroup["None"] = 0] = "None";
    CollisionGroup[CollisionGroup["Character"] = Math.pow(2, 0)] = "Character";
    CollisionGroup[CollisionGroup["Obstacle"] = Math.pow(2, 1)] = "Obstacle";
    CollisionGroup[CollisionGroup["Ground"] = Math.pow(2, 3)] = "Ground";
    CollisionGroup[CollisionGroup["Kingkong"] = Math.pow(2, 4)] = "Kingkong";
    CollisionGroup[CollisionGroup["TRex"] = Math.pow(2, 5)] = "TRex";
})(CollisionGroup = exports.CollisionGroup || (exports.CollisionGroup = {}));
var SkinState;
(function (SkinState) {
    SkinState[SkinState["NotOwned"] = 0] = "NotOwned";
    SkinState[SkinState["Owned"] = 1] = "Owned";
    SkinState[SkinState["Seleced"] = 2] = "Seleced";
})(SkinState = exports.SkinState || (exports.SkinState = {}));
var GameState;
(function (GameState) {
    GameState[GameState["GameLoad"] = 0] = "GameLoad";
    GameState[GameState["Prepare"] = 1] = "Prepare";
    GameState[GameState["Gameing"] = 2] = "Gameing";
    GameState[GameState["GameOver"] = 3] = "GameOver";
})(GameState = exports.GameState || (exports.GameState = {}));
var InputType;
(function (InputType) {
    InputType[InputType["RockerAxis"] = 0] = "RockerAxis";
    InputType[InputType["CameraAxis"] = 1] = "CameraAxis";
    InputType[InputType["Jump"] = 2] = "Jump";
    InputType[InputType["Transform"] = 3] = "Transform";
    InputType[InputType["Attack"] = 4] = "Attack";
    InputType[InputType["UP"] = 5] = "UP";
    InputType[InputType["Down"] = 6] = "Down";
    InputType[InputType["Fire"] = 7] = "Fire";
    InputType[InputType["FireBall"] = 8] = "FireBall";
    InputType[InputType["ThrowStone"] = 9] = "ThrowStone";
})(InputType = exports.InputType || (exports.InputType = {}));
var PlayerType;
(function (PlayerType) {
    PlayerType[PlayerType["TRex"] = 0] = "TRex";
    PlayerType[PlayerType["Kingkong"] = 1] = "Kingkong";
})(PlayerType = exports.PlayerType || (exports.PlayerType = {}));
},{}],41:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FsmState_1 = require("../Fsm/FsmState");
var Enums_1 = require("../Enums");
var BaseState = /** @class */ (function (_super) {
    __extends(BaseState, _super);
    function BaseState() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._rockerInputTimer = 0;
        _this._jumpInputTimer = 0;
        _this._fireInputTimer = 0;
        _this._fireBallInputTimer = 0;
        _this._transformInputTimer = 0;
        _this._attackInputTimer = 0;
        _this._upTimer = 0;
        _this._downTimer = 0;
        _this._throwstoneTimer = 0;
        _this._isHited = false;
        _this.ray = new Laya.Ray(new Laya.Vector3(), new Laya.Vector3());
        _this.hitResults = [];
        _this.forwardV3 = new Laya.Vector3();
        _this._cameraAxis = new Laya.Point();
        return _this;
    }
    Object.defineProperty(BaseState.prototype, "Animator", {
        get: function () { return this._animator; },
        set: function (v) { this._animator = v; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "CurrentAni", {
        get: function () { return this._currentAni; },
        set: function (v) { this._currentAni = v; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "Sprite3D", {
        get: function () { return this.owner; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "Model", {
        get: function () { return this.owner.getChildAt(0); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "mOwner", {
        get: function () { return this.owner; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "Hp", {
        get: function () { return this._hp; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "HpSum", {
        get: function () { return this._hpSum; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "RockerAxis", {
        get: function () {
            if (this._rockerInputTimer <= 0) {
                this._rockerAxis = null;
            }
            return this._rockerAxis;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "JumpInput", {
        get: function () {
            return this._jumpInputTimer > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "ThrowStoneInput", {
        get: function () {
            return this._throwstoneTimer > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "FireInput", {
        get: function () {
            return this._fireInputTimer > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "FireBallInput", {
        get: function () {
            return this._fireBallInputTimer > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "TransformInput", {
        get: function () {
            return this._transformInputTimer > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "AttackInput", {
        get: function () {
            return this._attackInputTimer > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "UpInput", {
        get: function () {
            return this._upTimer > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "DownInput", {
        get: function () {
            return this._downTimer > 0;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(BaseState.prototype, "CameraAxis", {
        get: function () { return this._cameraAxis; },
        enumerable: true,
        configurable: true
    });
    BaseState.prototype.Reason = function (any) {
        // console.log("-----------------------输入数据",any)
        var input = any;
        if (!input)
            return;
        var type = input.InputType;
        var value = input.Value;
        switch (type) {
            case Enums_1.InputType.RockerAxis:
                if (value != null) {
                    this._rockerAxis = value;
                    this._rockerInputTimer = 150;
                }
                else {
                    this._rockerAxis = null;
                    this._rockerInputTimer = 0;
                }
                break;
            case Enums_1.InputType.CameraAxis:
                this._cameraAxis = value;
                break;
            case Enums_1.InputType.Jump:
                this._jumpInputTimer = 100;
                break;
            case Enums_1.InputType.Fire:
                this._fireInputTimer = 100;
                break;
            case Enums_1.InputType.FireBall:
                this._fireBallInputTimer = 100;
                break;
            case Enums_1.InputType.Transform:
                this._transformInputTimer = 100;
                break;
            case Enums_1.InputType.Attack:
                this._attackInputTimer = 100;
                break;
            case Enums_1.InputType.UP:
                this._upTimer = 100;
                break;
            case Enums_1.InputType.Down:
                this._downTimer = 100;
                break;
            case Enums_1.InputType.ThrowStone:
                console.log("----------------丢石头");
                this._throwstoneTimer = 100;
                break;
        }
    };
    BaseState.prototype.Act = function (any) {
        this._attackInputTimer -= Laya.timer.delta;
        this._rockerInputTimer -= Laya.timer.delta;
        this._transformInputTimer -= Laya.timer.delta;
        this._jumpInputTimer -= Laya.timer.delta;
        this._fireInputTimer -= Laya.timer.delta;
        this._fireBallInputTimer -= Laya.timer.delta;
        this._upTimer -= Laya.timer.delta;
        this._downTimer -= Laya.timer.delta;
        this._throwstoneTimer -= Laya.timer.delta;
    };
    return BaseState;
}(FsmState_1.default));
exports.default = BaseState;
},{"../Enums":40,"../Fsm/FsmState":46}],42:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseState_1 = require("./BaseState");
var FsmEnum_1 = require("../Fsm/FsmEnum");
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var SceneMgr_1 = require("../SceneMgr");
var SoundMgr_1 = require("../../../Mgr/SoundMgr");
var Enums_1 = require("../Enums");
var MyAnimatorEvent_1 = require("../Character/MyAnimatorEvent");
var PoolManager_1 = require("../GameTools/PoolManager");
var StoneMgr_1 = require("../Character/StoneMgr");
var KingkongSubState;
(function (KingkongSubState) {
    KingkongSubState[KingkongSubState["Idle"] = 0] = "Idle";
    KingkongSubState[KingkongSubState["Move"] = 1] = "Move";
    KingkongSubState[KingkongSubState["Trans2Pter"] = 2] = "Trans2Pter";
    KingkongSubState[KingkongSubState["Attack"] = 3] = "Attack";
    KingkongSubState[KingkongSubState["SpitFire"] = 4] = "SpitFire";
    KingkongSubState[KingkongSubState["Jumping"] = 5] = "Jumping";
    KingkongSubState[KingkongSubState["Falling"] = 6] = "Falling";
    KingkongSubState[KingkongSubState["Eating"] = 7] = "Eating";
    KingkongSubState[KingkongSubState["Climb"] = 8] = "Climb";
    KingkongSubState[KingkongSubState["ClimbEnd"] = 9] = "ClimbEnd";
    KingkongSubState[KingkongSubState["ThrowStone"] = 10] = "ThrowStone";
    KingkongSubState[KingkongSubState["Hited"] = 11] = "Hited";
    KingkongSubState[KingkongSubState["Die"] = 12] = "Die";
})(KingkongSubState || (KingkongSubState = {}));
var KingkingState = /** @class */ (function (_super) {
    __extends(KingkingState, _super);
    function KingkingState() {
        var _this = _super.call(this) || this;
        _this._subState = KingkongSubState.Idle;
        _this._attackTimer = 0;
        _this.stateID = FsmEnum_1.StateID.KingKong;
        _this._onGround = true;
        _this._isClimb = false;
        _this._climbMask = false;
        _this._isThrow = false;
        _this.tempV3 = new Laya.Vector3();
        _this.AddTransition(FsmEnum_1.Transition.Kingkong2Trex, FsmEnum_1.StateID.KingKong);
        return _this;
    }
    Object.defineProperty(KingkingState.prototype, "Hp", {
        get: function () { return this._hp; },
        enumerable: true,
        configurable: true
    });
    // private _attack1: Laya.PhysicsComponent;
    // private _attack2: Laya.PhysicsComponent;
    KingkingState.prototype.onAwake = function () {
        // console.log("-----------------------开始爬楼")
        this._animator = this.Model.getComponent(Laya.Animator);
        // this._animator.avatar. = false
        this._rigidBody3D = this.owner.getComponent(Laya.Rigidbody3D);
        this._rigidBody3D.angularFactor = new Laya.Vector3(0, 0, 0);
        // this._rigidBody3D.ang = new Laya.Vector3(0, 0, 0);
        this._rigidBody3D.isKinematic = false;
        this._rigidBody3D.collisionGroup = Enums_1.CollisionGroup.Character;
        this._rigidBody3D.canCollideWith = Enums_1.CollisionGroup.All ^ Enums_1.CollisionGroup.Character;
        // console.log("-------------------------获取节点",this.owner,this.owner.getChildByName("AtkStone"))
        this._atkStonePos = this.owner.getChildAt(0).getChildByName("AtkStone");
        var ani = this.Model.addComponent(MyAnimatorEvent_1.default);
        this._isClimb = false;
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.AttackInput, this, this.Hited);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.EnemyDead, this, this.EatingEvent);
        ani.SetCharacter(this);
        this.SetAttack();
    };
    KingkingState.prototype.SetAttack = function () {
        // this._attack1 = this.Model.getChildByName("Attack1").getComponent(Laya.PhysicsComponent);
        // this._attack1.collisionGroup = CollisionGroup.Character
        // this._attack1.canCollideWith = CollisionGroup.All | CollisionGroup.Obstacle ^ CollisionGroup.Character;
        // this._attack2 = this.Model.getChildByName("Attack2").getComponent(Laya.PhysicsComponent);
        // this._attack2.collisionGroup = CollisionGroup.Character
        // this._attack2.canCollideWith = CollisionGroup.All | CollisionGroup.Obstacle ^ CollisionGroup.Character;
        // this.Animator.play("Climbing Up Wall");
    };
    KingkingState.prototype.DoBeforeEntering = function (any) {
        this.characterCtr.SetFollowObj(this.Sprite3D);
        this.Animator.play("Idle");
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.TransformEvent, [false]);
        console.log("------------------------注册被攻击事件");
        //测试为30
        this._hpSum = 10;
        this._hp = this._hpSum;
    };
    KingkingState.prototype.EatingEvent = function () {
        this._subState = KingkongSubState.Eating;
        SoundMgr_1.default.instance_csjc.playSound_csjc("Eating");
    };
    /**受击 */
    KingkingState.prototype.Hited = function (data) {
        // console.log("-------------------名字",data,this.owner.name)
        if (data.name == this.owner.name)
            return;
        var dis = Laya.Vector3.distance(this.Sprite3D.transform.position, data.v3);
        // console.log("-------------------攻击距离",dis)
        if (dis > 8)
            return;
        if (this.CurrentAni != "Hit Left") {
            this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 0, 0);
            this._subState = KingkongSubState.Hited;
        }
    };
    KingkingState.prototype.DoBeforeLeaving = function (any) {
        this._subState = KingkongSubState.Idle;
        this.characterCtr.StopSound();
    };
    KingkingState.prototype.Reason = function (any) {
        // console.log("-----------------------输入数据",any)
        _super.prototype.Reason.call(this, any);
    };
    /**
     * 反应
     *
     * @param {*} [any]
     *
     * @memberOf RobotState
     */
    KingkingState.prototype.Act = function (any) {
        // console.log("--------------------------------排除在外",this._subState,this.CurrentAni == "Death" ||
        //  this._isThrow == true,(this.CurrentAni == "Jump") && this.Animator.getCurrentAnimatorPlayState(0).normalizedTime <= 0.6)
        if (this.CurrentAni == "Death" || this._isThrow == true) {
            console.log("-*-------------------死亡了");
            return;
        }
        // console.log("------------------------输出",this._rigidBody3D.isKinematic)
        if ((this.CurrentAni == "Jump") && this.Animator.getCurrentAnimatorPlayState(0).normalizedTime <= 0.6)
            return;
        this._onGround = this.OnGroundCheck();
        if (this._subState != KingkongSubState.ClimbEnd && this._climbMask == false) {
            this.OnWallCheck();
            if (this._isClimb) {
                this.ClimbMethod();
                return;
            }
        }
        // this.OnWallCheck();
        this._onGround = this.OnGroundCheck();
        // console.log("--------------------------------状态机",this._subState)
        _super.prototype.Act.call(this, any);
        {
            switch (this._subState) {
                case KingkongSubState.Idle:
                    this.IdleMethod();
                    break;
                case KingkongSubState.Move:
                    this.MoveMethod();
                    break;
                case KingkongSubState.Attack:
                    this.AttackMethod();
                    break;
                case KingkongSubState.Jumping:
                    this.JumpMethod();
                    break;
                case KingkongSubState.Falling:
                    this.Falling();
                    break;
                case KingkongSubState.Eating:
                    this.EatingMethod();
                    break;
                case KingkongSubState.Climb:
                    this.ClimbMethod();
                case KingkongSubState.ClimbEnd:
                    this.ClimbOverMethod();
                    break;
                case KingkongSubState.ThrowStone:
                    this.ThrowStoneMethod();
                    break;
                case KingkongSubState.Hited:
                    this.HitedMethod();
                    break;
                case KingkongSubState.Die:
                    this.DieMethod();
                    break;
            }
        }
    };
    KingkingState.prototype.AttackMethod = function () {
        // console.log("-------------------攻击",this.owner.name)
        this.StopMove();
        this.characterCtr.StopSound();
        this._attackTimer -= Laya.timer.delta;
        var angle = 0;
        var spd = 1;
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.AttackInput, { name: this.owner.name, v3: this.Sprite3D.transform.position });
        if (this.RockerAxis != null) {
            angle = (Math.atan2(this.RockerAxis.x, this.RockerAxis.y) / 3.14 * 180) + 180;
            spd = Math.min(1, Math.max(0.7, this.RockerAxis.distance(0, 0)));
        }
        if (this.CurrentAni == "Attack" && this._attackTimer > 600) {
            this.TurnAndMove(angle, spd * 5);
        }
        else if (this.CurrentAni == "Attack Box" && this._attackTimer < 800 && this._attackTimer > 700) {
            this.TurnAndMove(angle, spd * 5);
        }
        if (this._attackTimer <= 200 && this.AttackInput) {
            if (this.CurrentAni == "Attack") {
                this._attackTimer = 1400;
                this.Animator.play("Attack Box");
                this.CurrentAni = "Attack Box";
                SoundMgr_1.default.instance_csjc.playSound_csjc("Attack1");
            }
            else {
                this._attackTimer = 1000;
                this.Animator.play("Attack");
                this.CurrentAni = "Attack";
                SoundMgr_1.default.instance_csjc.playSound_csjc("Attack1");
            }
        }
        else if (this._attackTimer <= 0) {
            this._subState = KingkongSubState.Idle;
        }
    };
    KingkingState.prototype.JumpMethod = function () {
        // if(this._attackTimer<)
        this.characterCtr.StopSound();
        if (this.CurrentAni != "Jump") {
            this.CurrentAni = "Jump";
            this.Animator.speed = 1;
            this.Animator.play("Jump", 0, 0);
            SoundMgr_1.default.instance_csjc.playSound_csjc("Land");
        }
        else if (this.CurrentAni == "Jump") {
            if (this.Animator.getCurrentAnimatorPlayState(0).normalizedTime > 0.5) {
                this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 20, 0);
                this._subState = KingkongSubState.Falling;
            }
        }
    };
    KingkingState.prototype.Falling = function () {
        console.log("*-----------------------向下落");
        if (this._onGround) {
            this._subState = KingkongSubState.Idle;
            SoundMgr_1.default.instance_csjc.playSound_csjc("Land");
        } /*
        else if (this.FaceWall) {
            this._subState = TRexSubState.Climbing;
        } */
        if (this.CurrentAni != "Idle" && this._rigidBody3D.linearVelocity.y < 0) {
            this.CurrentAni = "Idle";
            this.Animator.speed = 1;
            this.Animator.crossFade("Idle", 0.5);
        }
        if (this.RockerAxis != null) {
            var angle = (Math.atan2(this.RockerAxis.x, this.RockerAxis.y) / 3.14 * 180) + 180;
            var spd = Math.min(1, Math.max(0.7, this.RockerAxis.distance(0, 0)));
            this.TurnAndMove(angle, spd * 2);
        }
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterFalling);
    };
    /**
     * 暂停
     *
     *
     * @memberOf CharacterCtr
     */
    KingkingState.prototype.IdleMethod = function () {
        // console.log("-*--------------------普通")
        // EventMgr_csjc.dispatch_csjc(EventDef_csjc.CharacterNormal);
        if (!this._onGround) {
            this._subState = KingkongSubState.Falling;
        }
        else if (this.FireInput) {
            this._subState = KingkongSubState.SpitFire;
        }
        else if (this.TransformInput) {
            this._subState = KingkongSubState.Trans2Pter;
        }
        else if (this.AttackInput) {
            this._subState = KingkongSubState.Attack;
        }
        else if (this.RockerAxis != null) {
            this._subState = KingkongSubState.Move;
        }
        else if (this.JumpInput) {
            this._subState = KingkongSubState.Jumping;
        }
        else if (this.ThrowStoneInput) {
            console.log("----------------丢石头方法状态");
            this._subState = KingkongSubState.ThrowStone;
        }
        else {
            if (this.CurrentAni != "Idle") {
                if (this.CurrentAni != "Idle") {
                    this.CurrentAni = "Idle";
                    this.Animator.speed = 1;
                    this.Animator.crossFade("Idle", 0.1);
                    this.StopMove();
                }
            }
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterNormal);
        }
    };
    KingkingState.prototype.MoveMethod = function () {
        if (this.TransformInput) {
            this._subState = KingkongSubState.Trans2Pter;
        }
        else if (this.AttackInput) {
            this._subState = KingkongSubState.Attack;
        }
        else if (this.JumpInput) {
            this._subState = KingkongSubState.Jumping;
        }
        else if (this.ThrowStoneInput) {
            this._subState = KingkongSubState.ThrowStone;
        }
        else if (this.RockerAxis != null) {
            var angle = (Math.atan2(this.RockerAxis.x, this.RockerAxis.y) / 3.14 * 180) + 180;
            // let spd = Math.min(1, Math.max(0.7, this.RockerAxis.distance(0, 0)));
            var spd = Math.min(1, Math.max(0.2, this.RockerAxis.distance(0, 0)));
            {
                if (this.CurrentAni != "Walk") {
                    this.Animator.play("Walk");
                    this.CurrentAni = "Walk";
                }
                else {
                    this.Animator.speed = spd;
                }
            }
            this.TurnAndMove(angle, spd * 3);
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterNormal);
        }
        else {
            this._subState = KingkongSubState.Idle;
        }
    };
    KingkingState.prototype.StopMove = function () {
        this._rigidBody3D.linearVelocity = Laya.Vector3._ZERO.clone();
    };
    /*
        机器角色转向移动
    */
    KingkingState.prototype.TurnAndMove = function (angle, spd) {
        if (this._onGround == false) {
            this._subState = KingkongSubState.Falling;
        }
        this.TurnByCamera(angle);
        this.MoveForward(spd);
        // if (this.TurnByCamera(angle)) {
        //     this.MoveForward(spd);
        // }
    };
    KingkingState.prototype.Turn = function (angle) {
        var curAngle = this.Model.transform.localRotationEulerY;
        if (Math.abs(curAngle - angle) < 3)
            return;
        if (curAngle > angle) {
            if (curAngle - angle > 180) {
                curAngle += 3;
            }
            else {
                curAngle -= 3;
            }
        }
        else if (angle > curAngle) {
            if (angle - curAngle > 180) {
                curAngle -= 3;
            }
            else {
                curAngle += 3;
            }
        }
        curAngle = curAngle % 360;
        if (curAngle < 0) {
            curAngle += 360;
        }
        this.Model.transform.localRotationEulerY = curAngle;
    };
    /*
        机器角色转向
    */
    KingkingState.prototype.TurnByCamera = function (angle) {
        var dir = new Laya.Vector3();
        Laya.Vector3.subtract(SceneMgr_1.default.Instance.Camera.transform.position, this.Model.transform.position, dir);
        dir.y = 0;
        var angle2 = (Math.atan2(dir.x, dir.z) / Math.PI * 180) + 180;
        angle = (angle + angle2) % 360;
        var curAngle = this.Model.transform.localRotationEulerY;
        if (Math.abs(curAngle - angle) < 3)
            return;
        if (curAngle > angle) {
            if (curAngle - angle > 180) {
                curAngle += 3;
            }
            else {
                curAngle -= 3;
            }
        }
        else if (angle > curAngle) {
            if (angle - curAngle > 180) {
                curAngle -= 3;
            }
            else {
                curAngle += 3;
            }
        }
        curAngle = curAngle % 360;
        if (curAngle < 0) {
            curAngle += 360;
        }
        this.Model.transform.localRotationEulerY = curAngle;
    };
    /*
        向前移动
     */
    KingkingState.prototype.MoveForward = function (spd) {
        var curAngle = this.Model.transform.localRotationEulerY * 3.14 / 180;
        this._rigidBody3D.linearVelocity = new Laya.Vector3(Math.sin(curAngle) * 3 * spd, this._rigidBody3D.linearVelocity.y, Math.cos(curAngle) * 3 * spd);
    };
    KingkingState.prototype.OnGroundCheck = function () {
        var up = new Laya.Vector3(0, 5, 0);
        var down = new Laya.Vector3(0, -0.1, 0);
        Laya.Vector3.add(this.Sprite3D.transform.position, down, down);
        Laya.Vector3.add(this.Sprite3D.transform.position, up, up);
        var hitResults = new Laya.HitResult();
        var collisionGroup = Enums_1.CollisionGroup.Character;
        var canCollisionWith = Enums_1.CollisionGroup.None | Enums_1.CollisionGroup.Ground | Enums_1.CollisionGroup.Obstacle;
        var res = SceneMgr_1.default.Instance.CurrentScene.physicsSimulation.raycastFromTo(up, down, hitResults, collisionGroup, canCollisionWith);
        return res;
    };
    KingkingState.prototype.getForward = function () {
        this.Model.transform.getForward(this.forwardV3);
        return this.forwardV3;
    };
    /**
     * 设置中心变量v3
     * @param x
     * @param y
     * @param z
     */
    KingkingState.prototype.setTempV3 = function (x, y, z) {
        if (x === void 0) { x = 0; }
        if (y === void 0) { y = 0; }
        if (z === void 0) { z = 0; }
        this.tempV3.x = x;
        this.tempV3.y = y;
        this.tempV3.z = z;
        return this.tempV3;
    };
    KingkingState.prototype.OnWallCheck = function () {
        var tempY = this.CurrentAni == "Climbing Up Wall" ? 15 : 5;
        this.LineRayCast(this.setTempV3(this.Sprite3D.transform.position.x, this.Sprite3D.transform.position.y + tempY, this.Sprite3D.transform.position.z), this.getForward(), -3, true);
        var checkres = false;
        for (var i = 0; i < this.hitResults.length; i++) {
            var collider = this.hitResults[i].collider;
            // console.log("---------------查看前方",collider)
            if (collider.owner.parent.name == "Buildings") {
                this._subState = KingkongSubState.Climb;
                this._isClimb = true;
                EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterClimbing);
                checkres = true;
            }
        }
        if (this.CurrentAni == "Climbing Up Wall" && checkres == false) {
            this._subState = KingkongSubState.ClimbEnd;
            this._isClimb = false;
        }
    };
    KingkingState.prototype.LineRayCast = function (m_origin, driect, distance, isTest) {
        if (isTest === void 0) { isTest = false; }
        // if(isTest==true)
        // {
        //     if(this.TextLine)
        //     {
        //         this.TextLine.destroy();
        //     }
        //     var lineDir = new Laya.Vector3(driect.x*distance,driect.y*distance,driect.z*distance)
        //     var lineSprite:Laya.PixelLineSprite3D = SceneMgr_cscj.Instance.CurrentScene.addChild(new Laya.PixelLineSprite3D(1)) as Laya.PixelLineSprite3D;
        //     lineSprite.addLine(m_origin, new Laya.Vector3(m_origin.x+lineDir.x,m_origin.y+lineDir.y,m_origin.z+lineDir.z), Laya.Color.RED, Laya.Color.RED);
        //     this.TextLine = lineSprite
        // }
        this.ray.origin = m_origin; //= new Laya.Ray(origin, driect);
        this.ray.direction = driect;
        SceneMgr_1.default.Instance.CurrentScene.physicsSimulation.rayCastAll(this.ray, this.hitResults, distance);
    };
    KingkingState.prototype.onCollisionEnter = function (collision) {
        var enemy = collision.other.owner;
        if (enemy.name.search("Enemy") > -1) {
            this._subState = KingkongSubState.Eating;
            SoundMgr_1.default.instance_csjc.playSound_csjc("Eating");
        }
    };
    KingkingState.prototype.EatingMethod = function () {
        this.characterCtr.StopSound();
        if (this.CurrentAni != "Eating") {
            this.CurrentAni = "Eating";
            this.Animator.speed = 1;
            this.Animator.play("Eating", 0, 0);
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterFalling);
            this.StopMove();
        }
        else if (this.CurrentAni == "Eating" && this.Animator.getCurrentAnimatorPlayState(0).normalizedTime >= 1) {
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterNormal);
            this._subState = KingkongSubState.Idle;
        }
    };
    KingkingState.prototype.DieMethod = function () {
        if (this.CurrentAni != "Death") {
            this.CurrentAni = "Death";
            this.Animator.speed = 1;
            this.Animator.play("Death");
            this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 0, 0);
            // Laya.timer.once(this.Animator.getCurrentAnimatorPlayState(0).duration*1000,this,()=>{
            //     EventMgr_csjc.dispatch_csjc(EventDef_csjc.CharacterNormal);
            //     this._subState = KingkongSubState.Idle;
            //     this._isHited = false;
            // })
        }
    };
    /**受击 */
    KingkingState.prototype.HitedMethod = function () {
        var _this = this;
        // if (this.CurrentAni != "Hit Left") {
        //     this.CurrentAni = "Hit Left";
        //     this.Animator.speed = 1;
        //     this.Animator.play("Hit Left");
        //     this._hp=this._hp>0?this._hp-1:1;
        // }
        // else if ((this.CurrentAni == "Hit Left" )&& this.Animator.getCurrentAnimatorPlayState(0).normalizedTime >= 1) {
        //     EventMgr_csjc.dispatch_csjc(EventDef_csjc.CharacterNormal);
        //     this._subState = KingkongSubState.Idle;
        //     this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 0, 0);
        // }
        if (this.CurrentAni != "Hit Left") {
            this.CurrentAni = "Hit Left";
            this.Animator.speed = 1;
            this.Animator.play("Hit Left");
            this._hp = this._hp > 0 ? this._hp - 1 : 1;
            if (this._hp <= 0) {
                SceneMgr_1.default.Instance.BossVisible = false;
                this.Animator.play("Death");
                this.CurrentAni = "Death";
                this._subState = KingkongSubState.Die;
                return;
            }
            console.log("------------------------s受击");
            this._isHited = true;
            // console.log("----------------扣血",this._hp);
            Laya.timer.once(this.Animator.getCurrentAnimatorPlayState(0).duration * 500, this, function () {
                EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterNormal);
                _this._subState = KingkongSubState.Idle;
                _this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 0, 0);
                _this._isHited = false;
            });
        }
    };
    /**丢石头 */
    KingkingState.prototype.ThrowStoneMethod = function () {
        var _this = this;
        if (this.CurrentAni != "ThrowStone") {
            this._isThrow = true;
            this._rigidBody3D.linearVelocity = Laya.Vector3._ZERO;
            this.CurrentAni = "ThrowStone";
            this.Animator.speed = 1;
            this.Animator.play("ThrowStone");
            // let efcol :Laya.Sprite3D = PoolManager.getInstance().DequeueItem(0)as Laya.MeshSprite3D;
            // efcol.active = true
            // this._atkStonePos.addChild(efcol)
            // efcol.transform.localPosition = Laya.Vector3._ZERO
            console.log("----------------当前动画播放", this.Animator.getCurrentAnimatorPlayState(0).duration);
            Laya.timer.once(4.9 * 200, this, function () {
                // this._atkStonePos.removeChild(efcol)
                // SceneMgr_cscj.Instance.CurrentScene.addChild(efcol);
                var efcol = PoolManager_1.default.getInstance().DequeueItem(0);
                SceneMgr_1.default.Instance.CurrentScene.addChild(efcol);
                efcol.active = true;
                efcol.transform.position = _this._atkStonePos.transform.position.clone();
                efcol.transform.rotationEuler = _this.Model.transform.rotationEuler.clone();
                if (efcol.getComponent(StoneMgr_1.default) == null) {
                    efcol.addComponent(StoneMgr_1.default);
                }
                efcol.getComponent(StoneMgr_1.default).Init(efcol.transform.rotationEuler.y);
                Laya.timer.once(4.9 * 200, _this, function () {
                    _this._isThrow = false;
                });
            });
        }
        else if (this.CurrentAni == "ThrowStone" && this.Animator.getCurrentAnimatorPlayState(0).normalizedTime >= 1) {
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterNormal);
            this._subState = KingkongSubState.Idle;
            this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 0, 0);
        }
    };
    /**
     * 攀爬结束
     */
    KingkingState.prototype.ClimbOverMethod = function () {
        var _this = this;
        // this.characterCtr.StopSound();
        if (this.CurrentAni != "ClimbingOver") {
            this.CurrentAni = "ClimbingOver";
            this.Animator.speed = 1;
            console.log("---------------开始攀爬");
            this.Animator.play("ClimbingOver");
            Laya.timer.once(this.Animator.getCurrentAnimatorPlayState(0).duration * 600, this, function () {
                _this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 5, 0);
                Laya.timer.once(_this.Animator.getCurrentAnimatorPlayState(0).duration * 200, _this, function () {
                    var localy = _this.Sprite3D.transform.localPositionY + 10;
                    Laya.Tween.to(_this.Sprite3D.transform, { localPositionY: localy }, 300);
                    // this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 20, 0);
                });
            });
            Laya.timer.once(this.Animator.getCurrentAnimatorPlayState(0).duration * 1000, this, function () {
                _this.MoveForward(1.5);
                Laya.timer.once(300, _this, function () {
                    _this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 0, 0);
                });
            });
        }
        else if (this.CurrentAni == "ClimbingOver" && this.Animator.getCurrentAnimatorPlayState(0).normalizedTime >= 1) {
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterNormal);
            this._subState = KingkongSubState.Idle;
            // this._rigidBody3D.isKinematic = true
            this._rigidBody3D.gravity = this.setTempV3(0, -10, 0);
            this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 0, 0);
        }
    };
    KingkingState.prototype.ClimbMask = function () {
        this._climbMask = false;
    };
    /**
     * 攀爬函数
     */
    KingkingState.prototype.ClimbMethod = function () {
        if (this._onGround) {
            this._subState = KingkongSubState.Falling;
        }
        else if (this.JumpInput) {
            // console.log("---------------------输入条约")
            this._isClimb = false;
            this._climbMask = true;
            Laya.timer.clear(this, this.ClimbMask);
            Laya.timer.frameOnce(500, this, this.ClimbMask);
            this._rigidBody3D.gravity = this.setTempV3(0, -10, 0);
            this._subState = KingkongSubState.Jumping;
            return;
        }
        this.characterCtr.StopSound();
        if (this.CurrentAni != "Climbing Up Wall") {
            this.CurrentAni = "Climbing Up Wall";
            this.Animator.speed = 1;
            this.Animator.play("Climbing Up Wall");
        }
        this._rigidBody3D.gravity = this.setTempV3(0, 0, 0);
        if (this.RockerAxis != null) {
            var isup = this.RockerAxis.y >= 0 ? 1 : -1;
            var spd = Math.min(1, Math.max(0.7, this.RockerAxis.distance(0, 0)));
            this.Animator.speed = this.RockerAxis == null ? 0 : isup * spd * -1;
            // let curAngle = this.Model.transform.localRotationEulerY * 3.14 / 180;
            // console.log("----------------------爬上爬下",this.RockerAxis.y,spd)
            this._rigidBody3D.linearVelocity = new Laya.Vector3(0, isup * spd * -3, 0);
        }
        else {
            this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 0, 0);
            this.Animator.speed = 0;
        }
    };
    KingkingState.prototype.onDestroy = function () {
        this.characterCtr.StopSound();
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.AttackInput, this, this.Hited);
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.EnemyDead, this, this.EatingEvent);
    };
    return KingkingState;
}(BaseState_1.default));
exports.default = KingkingState;
},{"../../../Event/EventDef":5,"../../../Event/EventMgr":6,"../../../Mgr/SoundMgr":10,"../Character/MyAnimatorEvent":38,"../Character/StoneMgr":39,"../Enums":40,"../Fsm/FsmEnum":45,"../GameTools/PoolManager":48,"../SceneMgr":50,"./BaseState":41}],43:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var BaseState_1 = require("./BaseState");
var FsmEnum_1 = require("../Fsm/FsmEnum");
var EventMgr_1 = require("../../../Event/EventMgr");
var EventDef_1 = require("../../../Event/EventDef");
var SceneMgr_1 = require("../SceneMgr");
var SoundMgr_1 = require("../../../Mgr/SoundMgr");
var Enums_1 = require("../Enums");
var MyAnimatorEvent_1 = require("../Character/MyAnimatorEvent");
var TRexSubState;
(function (TRexSubState) {
    TRexSubState[TRexSubState["Idle"] = 0] = "Idle";
    TRexSubState[TRexSubState["Move"] = 1] = "Move";
    TRexSubState[TRexSubState["Trans2Pter"] = 2] = "Trans2Pter";
    TRexSubState[TRexSubState["Attack"] = 3] = "Attack";
    TRexSubState[TRexSubState["SpitFire"] = 4] = "SpitFire";
    TRexSubState[TRexSubState["Jumping"] = 5] = "Jumping";
    TRexSubState[TRexSubState["Falling"] = 6] = "Falling";
    TRexSubState[TRexSubState["Eating"] = 7] = "Eating";
    TRexSubState[TRexSubState["Hited"] = 8] = "Hited";
    TRexSubState[TRexSubState["Die"] = 9] = "Die";
})(TRexSubState || (TRexSubState = {}));
var TRexState = /** @class */ (function (_super) {
    __extends(TRexState, _super);
    function TRexState() {
        var _this = _super.call(this) || this;
        _this._subState = TRexSubState.Idle;
        _this._attackTimer = 0;
        _this.stateID = FsmEnum_1.StateID.TRex;
        _this._onGround = true;
        // FireRay() {
        //     let front = new Laya.Vector3();
        //     let cur = new Laya.Vector3(0, 0, 0);
        //     this.Model.transform.getForward(front);
        //     Laya.Vector3.normalize(front, front);
        //     Laya.Vector3.scale(front, -10, front);
        //     Laya.Vector3.add(this.Model.transform.position, front, front);
        //     let hitResults: Array<Laya.HitResult> = [];
        //     let collisionGroup = CollisionGroup.Character;
        //     let canCollisionWith = CollisionGroup.Obstacle | CollisionGroup.Ground;
        //     let colliderShape = new Laya.SphereColliderShape(5);
        //     let res = SceneMgr_cscj.Instance.CurrentScene.physicsSimulation.shapeCastAll(colliderShape, this.Model.transform.position, front,
        //         hitResults, Laya.Quaternion.NAN, Laya.Quaternion.NAN, collisionGroup, canCollisionWith, 1);
        //     if (res) {
        //         for (let index = 0; index < hitResults.length; index++) {
        //             const element = hitResults[index];
        //         }
        //     }
        //     return res;
        // }
        _this._fireTimer = 0;
        _this.AddTransition(FsmEnum_1.Transition.Trex2Kingkong, FsmEnum_1.StateID.TRex);
        return _this;
    }
    TRexState.prototype.onAwake = function () {
        this._animator = this.Model.getComponent(Laya.Animator);
        this._rigidBody3D = this.owner.getComponent(Laya.Rigidbody3D);
        this._rigidBody3D.angularFactor = new Laya.Vector3(0, 0, 0);
        this._rigidBody3D.collisionGroup = Enums_1.CollisionGroup.Character;
        this._rigidBody3D.canCollideWith = Enums_1.CollisionGroup.All;
        this._rigidBody3D.isKinematic = false;
        // if (this._rigidBody3D.colliderShape != null) {
        //     this._rigidBody3D.colliderShape.destroy();
        // }
        // let shape = new Laya.CapsuleColliderShape(3, 8, 0);
        // shape.localOffset = new Laya.Vector3(0, 3, 0);
        // this._rigidBody3D.colliderShape = shape;
        this._fire = this.Model.getChildByName("Flamestrike");
        this._fireCol = this._fire.getComponent(Laya.PhysicsComponent);
        this._fireCol.collisionGroup = Enums_1.CollisionGroup.Character;
        this._fireCol.canCollideWith = Enums_1.CollisionGroup.None | Enums_1.CollisionGroup.Obstacle;
        this._fire.active = false;
        this._fireCol.enabled = false;
        var ani = this.Model.addComponent(MyAnimatorEvent_1.default);
        ani.SetCharacter(this);
        this.SetAttack();
    };
    TRexState.prototype.SetAttack = function () {
        var _this = this;
        this._attack1 = this.Model.getChildByName("Attack1_TRex").getComponent(Laya.PhysicsComponent);
        this._attack1.collisionGroup = Enums_1.CollisionGroup.Character;
        this._attack1.canCollideWith = Enums_1.CollisionGroup.All | Enums_1.CollisionGroup.Obstacle ^ Enums_1.CollisionGroup.Character;
        // this._attack1.
        this._attack2 = this.Model.getChildByName("Attack2_TRex").getComponent(Laya.PhysicsComponent);
        this._attack2.collisionGroup = Enums_1.CollisionGroup.Character;
        this._attack2.canCollideWith = Enums_1.CollisionGroup.All | Enums_1.CollisionGroup.Obstacle ^ Enums_1.CollisionGroup.Character;
        Laya.timer.frameOnce(30, this, function () {
            _this.characterCtr.PerformTransition(FsmEnum_1.Transition.Trex2Kingkong);
            console.log("----------------转换形态");
        });
    };
    TRexState.prototype.DoBeforeEntering = function (any) {
        this.characterCtr.SetFollowObj(this.Sprite3D);
        this.Animator.play("End Sleeping");
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.TransformEvent, [false]);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.AttackInput, this, this.Hited);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.EnemyDead, this, this.EatingEvent);
        //初步测试用30
        this._hpSum = 10;
        this._hp = this._hpSum;
        // EventMgr_csjc.dispatch_csjc(EventDef_csjc.Camera_Event_csjc, { CameraOffset: new Laya.Vector3(0, 20, 10), CameraViewForward: 0 });
    };
    TRexState.prototype.onDisable = function () {
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.AttackInput, this, this.Hited);
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.EnemyDead, this, this.EatingEvent);
    };
    TRexState.prototype.EatingEvent = function () {
        this._subState = TRexSubState.Eating;
        SoundMgr_1.default.instance_csjc.playSound_csjc("Eating");
    };
    /**受击 */
    TRexState.prototype.Hited = function (data) {
        if (data.name == this.owner.name)
            return;
        var dis = Laya.Vector3.distance(this.Sprite3D.transform.position, data.v3);
        if (dis > 8)
            return;
        // console.log("-------------------恐龙攻击",dis)
        if (this.CurrentAni != "End Sleeping") {
            this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 0, 0);
            this._subState = TRexSubState.Hited;
        }
    };
    TRexState.prototype.DoBeforeLeaving = function (any) {
        this._subState = TRexSubState.Idle;
        this.characterCtr.StopSound();
    };
    /**
     * 反应
     *
     * @param {*} [any]
     *
     * @memberOf RobotState
     */
    TRexState.prototype.Act = function (any) {
        if (this.CurrentAni == "Start Sliping")
            return;
        this._onGround = this.OnGroundCheck();
        _super.prototype.Act.call(this, any);
        // if (this._climbOver >= 0) {
        //     if (this._subState == TRexSubState.Move ||
        //         this._subState == TRexSubState.Idle ||
        //     ) {
        //         this._climbOver -= Laya.timer.delta;;
        //     }
        // }
        /* if (!this.IsTransforming)  */ {
            switch (this._subState) {
                case TRexSubState.Idle:
                    this.IdleMethod();
                    break;
                case TRexSubState.Move:
                    this.MoveMethod();
                    break;
                case TRexSubState.Attack:
                    this.AttackMethod();
                    break;
                case TRexSubState.Trans2Pter:
                    this.Trasform2PterMethod();
                    break;
                case TRexSubState.Jumping:
                    this.JumpMethod();
                    break;
                case TRexSubState.Falling:
                    this.Falling();
                    break;
                case TRexSubState.SpitFire:
                    this.SpitFireMethod();
                    break;
                case TRexSubState.Eating:
                    this.EatingMethod();
                    break;
                case TRexSubState.Hited:
                    this.HitedMethod();
                    break;
                case TRexSubState.Die:
                    this.DieMethod();
                    break;
            }
        }
    };
    TRexState.prototype.AttackMethod = function () {
        this.StopMove();
        this.characterCtr.StopSound();
        this._attackTimer -= Laya.timer.delta;
        var angle = 0;
        var spd = 1;
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.AttackInput, { name: this.owner.name, v3: this.Sprite3D.transform.position });
        if (this.RockerAxis != null) {
            angle = (Math.atan2(this.RockerAxis.x, this.RockerAxis.y) / 3.14 * 180) + 180;
            spd = Math.min(1, Math.max(0.7, this.RockerAxis.distance(0, 0)));
        }
        if (this.CurrentAni == "Attack Jaw" && this._attackTimer > 600) {
            this.TurnAndMove(angle, spd * 5);
            this.EnableAttack();
        }
        else if (this.CurrentAni == "Attack Tail" && this._attackTimer < 800 && this._attackTimer > 700) {
            this.TurnAndMove(angle, spd * 5);
            this.EnableAttack();
        }
        if (this._attackTimer <= 200 && this.AttackInput) {
            if (this.CurrentAni == "Attack Jaw") {
                this._attackTimer = 1400;
                this.Animator.play("Attack Tail");
                this.CurrentAni = "Attack Tail";
            }
            else {
                this._attackTimer = 1000;
                this.Animator.play("Attack Jaw");
                this.CurrentAni = "Attack Jaw";
                SoundMgr_1.default.instance_csjc.playSound_csjc("Attack Jaw");
            }
        }
        else if (this._attackTimer <= 0) {
            this._subState = TRexSubState.Idle;
            this.DisableAttack();
        }
    };
    TRexState.prototype.JumpMethod = function () {
        // if(this._attackTimer<)
        this.characterCtr.StopSound();
        if (this.CurrentAni != "Jumping") {
            this.CurrentAni = "Jumping";
            this.Animator.speed = 1;
            this.Animator.play("Jumping", 0, 0);
            SoundMgr_1.default.instance_csjc.playSound_csjc("Land");
        }
        else if (this.CurrentAni == "Jumping") {
            if (this.Animator.getCurrentAnimatorPlayState(0).normalizedTime > 0.0) {
                this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 20, 0);
                this._subState = TRexSubState.Falling;
            }
        }
    };
    TRexState.prototype.Falling = function () {
        if (this._onGround) {
            console.log("*-----------------------落下碰到地面");
            this._subState = TRexSubState.Idle;
            SoundMgr_1.default.instance_csjc.playSound_csjc("Land");
        } /*
        else if (this.FaceWall) {
            this._subState = TRexSubState.Climbing;
        } */
        if (this.CurrentAni != "Looking Up" && this._rigidBody3D.linearVelocity.y < 0) {
            this.CurrentAni = "Looking Up";
            this.Animator.speed = 1;
            this.Animator.crossFade("Looking Up", 0.5);
        }
        if (this.RockerAxis != null) {
            var angle = (Math.atan2(this.RockerAxis.x, this.RockerAxis.y) / 3.14 * 180) + 180;
            var spd = Math.min(1, Math.max(0.7, this.RockerAxis.distance(0, 0)));
            this.TurnAndMove(angle, spd * 2);
        }
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterFalling);
    };
    /**
     * 暂停
     *
     *
     * @memberOf CharacterCtr
     */
    TRexState.prototype.IdleMethod = function () {
        if (!this._onGround) {
            this._subState = TRexSubState.Falling;
        }
        else if (this.FireInput) {
            this._subState = TRexSubState.SpitFire;
        }
        else if (this.TransformInput) {
            this._subState = TRexSubState.Trans2Pter;
        }
        else if (this.AttackInput) {
            this._subState = TRexSubState.Attack;
        }
        else if (this.RockerAxis != null) {
            this._subState = TRexSubState.Move;
        }
        else if (this.JumpInput) {
            this._subState = TRexSubState.Jumping;
        }
        else {
            if (this.CurrentAni != "Idle") {
                if (this.CurrentAni != "Idle") {
                    this.CurrentAni = "Idle";
                    this.Animator.speed = 1;
                    this.Animator.crossFade("Idle", 0.1);
                    this.StopMove();
                }
            }
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterNormal);
        }
    };
    TRexState.prototype.MoveMethod = function () {
        /* if (!this.OnGround) {
            this._subState = TRexSubState.Falling;
        }
        else if (this.FaceWall) {
            this._subState = TRexSubState.Climbing;
        }
        else  */ if (this.TransformInput) {
            this._subState = TRexSubState.Trans2Pter;
        }
        else if (this.AttackInput) {
            this._subState = TRexSubState.Attack;
        }
        else if (this.JumpInput) {
            this._subState = TRexSubState.Jumping;
        }
        else if (this.RockerAxis != null) {
            var angle = (Math.atan2(this.RockerAxis.x, this.RockerAxis.y) / 3.14 * 180) + 180;
            // let spd = Math.min(1, Math.max(0.7, this.RockerAxis.distance(0, 0)));
            var spd = Math.min(1, Math.max(0.2, this.RockerAxis.distance(0, 0)));
            /* if (spd < 0.5) {
                if (this.CurrentAni != "Walk") {
                    this.Animator.crossFade("Walk", 0.1);
                    this.CurrentAni = "Walk";
                }
                else {
                    this.Animator.speed = spd;
                }
            }
            else */ {
                if (this.CurrentAni != "Walk") {
                    this.Animator.play("Walk");
                    this.CurrentAni = "Walk";
                }
                else {
                    this.Animator.speed = spd;
                }
            }
            this.TurnAndMove(angle, spd * 3);
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterNormal);
        }
        else {
            this._subState = TRexSubState.Idle;
        }
    };
    TRexState.prototype.Trasform2PterMethod = function () {
        console.log("---------------------------------变身！！！！！！！！");
        if (this.CurrentAni != "Start Sliping") {
            this.CurrentAni = "Start Sliping";
            this.Animator.speed = 1;
            this.Animator.play("Start Sliping", 0, 0);
            SoundMgr_1.default.instance_csjc.playSound_csjc("Roar1");
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterFalling);
        }
        else if (this.CurrentAni == "Start Sliping" && this.Animator.getCurrentAnimatorPlayState(0).normalizedTime >= 1) {
            SoundMgr_1.default.instance_csjc.playSound_csjc("Roar2");
            this.characterCtr.PerformTransition(FsmEnum_1.Transition.TRex2Pter);
        }
        this.StopMove();
    };
    TRexState.prototype.StopMove = function () {
        this._rigidBody3D.linearVelocity = Laya.Vector3._ZERO.clone();
    };
    /*
        机器角色转向移动
    */
    TRexState.prototype.TurnAndMove = function (angle, spd) {
        this.TurnByCamera(angle);
        this.MoveForward(spd);
        // if (this.TurnByCamera(angle)) {
        //     this.MoveForward(spd);
        // }
    };
    TRexState.prototype.Turn = function (angle) {
        var curAngle = this.Model.transform.localRotationEulerY;
        if (Math.abs(curAngle - angle) < 3)
            return;
        if (curAngle > angle) {
            if (curAngle - angle > 180) {
                curAngle += 3;
            }
            else {
                curAngle -= 3;
            }
        }
        else if (angle > curAngle) {
            if (angle - curAngle > 180) {
                curAngle -= 3;
            }
            else {
                curAngle += 3;
            }
        }
        curAngle = curAngle % 360;
        if (curAngle < 0) {
            curAngle += 360;
        }
        this.Model.transform.localRotationEulerY = curAngle;
    };
    /*
        机器角色转向
    */
    TRexState.prototype.TurnByCamera = function (angle) {
        var dir = new Laya.Vector3();
        Laya.Vector3.subtract(SceneMgr_1.default.Instance.Camera.transform.position, this.Model.transform.position, dir);
        dir.y = 0;
        var angle2 = (Math.atan2(dir.x, dir.z) / Math.PI * 180) + 180;
        angle = (angle + angle2) % 360;
        var curAngle = this.Model.transform.localRotationEulerY;
        if (Math.abs(curAngle - angle) < 3)
            return;
        if (curAngle > angle) {
            if (curAngle - angle > 180) {
                curAngle += 3;
            }
            else {
                curAngle -= 3;
            }
        }
        else if (angle > curAngle) {
            if (angle - curAngle > 180) {
                curAngle -= 3;
            }
            else {
                curAngle += 3;
            }
        }
        curAngle = curAngle % 360;
        if (curAngle < 0) {
            curAngle += 360;
        }
        this.Model.transform.localRotationEulerY = curAngle;
    };
    /*
        向前移动
     */
    TRexState.prototype.MoveForward = function (spd) {
        var curAngle = this.Model.transform.localRotationEulerY * 3.14 / 180;
        this._rigidBody3D.linearVelocity = new Laya.Vector3(Math.sin(curAngle) * 3 * spd, this._rigidBody3D.linearVelocity.y, Math.cos(curAngle) * 3 * spd);
    };
    TRexState.prototype.EnableAttack = function () {
        if (!this._attack1.enabled) {
            this._attack1.enabled = true;
        }
        if (!this._attack2.enabled) {
            this._attack2.enabled = true;
        }
    };
    TRexState.prototype.DisableAttack = function () {
        if (this._attack1.enabled) {
            this._attack1.enabled = false;
        }
        if (this._attack2.enabled) {
            this._attack2.enabled = false;
        }
    };
    TRexState.prototype.OnGroundCheck = function () {
        var up = new Laya.Vector3(0, 5, 0);
        var down = new Laya.Vector3(0, -0.1, 0);
        Laya.Vector3.add(this.Sprite3D.transform.position, down, down);
        Laya.Vector3.add(this.Sprite3D.transform.position, up, up);
        var hitResults = new Laya.HitResult();
        var collisionGroup = Enums_1.CollisionGroup.Character;
        var canCollisionWith = Enums_1.CollisionGroup.None | Enums_1.CollisionGroup.Ground | Enums_1.CollisionGroup.Obstacle;
        var res = SceneMgr_1.default.Instance.CurrentScene.physicsSimulation.raycastFromTo(up, down, hitResults, collisionGroup, canCollisionWith);
        return res;
    };
    TRexState.prototype.SpitFireMethod = function () {
        var _this = this;
        if (this.FireInput) {
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.AttackInput, { name: this.owner.name, v3: this._fire.transform.position });
            this._fireTimer = 300;
            this.StopMove();
            this.characterCtr.FireSound(1);
            if (this.CurrentAni != "Roarning") {
                this.CurrentAni = "Roarning";
                this.Animator.speed = 1;
                this.Animator.play("Roarning", 0, 0);
                Laya.timer.once(200, this, function () {
                    _this._fire.active = true;
                    _this._fireCol.enabled = true;
                });
            }
            if (this.RockerAxis != null) {
                this.Model.transform.localRotationEulerY -= this.RockerAxis.x * 3;
                // this._fire.transform.localRotationEulerY = this.Model.transform.localRotationEulerY;
                if (this._fireCol.colliderShape != null) {
                    this._fireCol.colliderShape.destroy();
                }
                var shape = new Laya.BoxColliderShape(5, 6, 30);
                shape.localOffset = new Laya.Vector3(0, -2, 15);
                this._fireCol.colliderShape = shape;
                EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterNormal);
            }
            // this.FireRay();
        }
        else {
            if (this._fireTimer > 0) {
                this._fireTimer -= Laya.timer.delta;
            }
            this.characterCtr.StopSound();
            if (this._fireTimer > 0)
                return;
            Laya.timer.once(1000, this, function () {
                _this.characterCtr.StopSound();
            });
            this._fire.active = false;
            this._fireCol.enabled = false;
            if (this.TransformInput) {
                this._subState = TRexSubState.Trans2Pter;
            }
            else if (this.AttackInput) {
                this._subState = TRexSubState.Attack;
            }
            else if (this.JumpInput) {
                this._subState = TRexSubState.Jumping;
            }
            else {
                this._subState = TRexSubState.Idle;
            }
        }
    };
    TRexState.prototype.onCollisionEnter = function (collision) {
        // let enemy = collision.other.owner as Laya.Sprite3D;
        // if (enemy.name.search("Enemy") > -1) {
        //     this._subState = TRexSubState.Eating;
        //     SoundMgr_csjc.instance_csjc.playSound_csjc("Eating");
        // }
        // console.log("----------------我是恐龙攻击我",enemy.name)
        // if()
    };
    TRexState.prototype.DieMethod = function () {
        if (this.CurrentAni != "Start Sliping") {
            this.CurrentAni = "Start Sliping";
            this.Animator.speed = 1;
            this.Animator.play("Start Sliping");
            this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 0, 0);
        }
    };
    /**受击 */
    TRexState.prototype.HitedMethod = function () {
        var _this = this;
        if (this.CurrentAni != "End Sleeping") {
            this.CurrentAni = "End Sleeping";
            this.Animator.speed = 1;
            this.Animator.play("End Sleeping");
            // console.log("---------------------发送攻击事件")
            this._hp = this._hp > 0 ? this._hp - 1 : 1;
            console.log("-----------------------hp", this._hp);
            if (this._hp <= 0) {
                console.log("---------------------死亡");
                SceneMgr_1.default.Instance.BossVisible = false;
                this.Animator.play("Start Sliping");
                this.CurrentAni = "Start Sliping";
                this._subState = TRexSubState.Die;
                return;
            }
            this._isHited = true;
            // console.log("----------------扣血",this._hp);
            Laya.timer.once(this.Animator.getCurrentAnimatorPlayState(0).duration * 500, this, function () {
                EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterNormal);
                _this._subState = TRexSubState.Idle;
                _this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 0, 0);
                _this._isHited = false;
            });
        }
        // else if ((this.CurrentAni == "End Sleeping" )&& this.Animator.getCurrentAnimatorPlayState(0).normalizedTime >= 1) {
        //     EventMgr_csjc.dispatch_csjc(EventDef_csjc.CharacterNormal);
        //     this._subState = TRexSubState.Idle;
        //     this._rigidBody3D.linearVelocity = new Laya.Vector3(0, 0, 0);
        // }
    };
    /**进食 */
    TRexState.prototype.EatingMethod = function () {
        this.characterCtr.StopSound();
        if (this.CurrentAni != "Eating") {
            this.CurrentAni = "Eating";
            this.Animator.speed = 1;
            this.Animator.play("Eating", 0, 0);
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterFalling);
            this.StopMove();
        }
        else if (this.CurrentAni == "Eating" && this.Animator.getCurrentAnimatorPlayState(0).normalizedTime >= 1) {
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.CharacterNormal);
            this._subState = TRexSubState.Idle;
        }
    };
    TRexState.prototype.onDestroy = function () {
        this.characterCtr.StopSound();
    };
    return TRexState;
}(BaseState_1.default));
exports.default = TRexState;
},{"../../../Event/EventDef":5,"../../../Event/EventMgr":6,"../../../Mgr/SoundMgr":10,"../Character/MyAnimatorEvent":38,"../Enums":40,"../Fsm/FsmEnum":45,"../SceneMgr":50,"./BaseState":41}],44:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FsmEnum_1 = require("./FsmEnum");
/**
A Finite State Machine System based on Chapter 3.1 of Game Programming Gems 1 by Eric Dybsand
 
Written by Roberto Cezar Bianchini, July 2010
 
 
How to use:
    1. Place the labels for the transitions and the states of the Finite State System
        in the corresponding enums.
 
    2. Write new class(es) inheriting from FSMState and fill each one with pairs (transition-state).
        These pairs represent the state S2 the FSMSystem should be if while being on state S1, a
        transition T is fired and state S1 has a transition from it to S2. Remember this is a Deterministic FSM.
        You can't have one transition leading to two different states.
 
       Method Reason is used to determine which transition should be fired.
       You can write the code to fire transitions in another place, and leave this method empty if you
       feel it's more appropriate to your project.
 
       Method Act has the code to perform the actions the NPC is supposed do if it's on this state.
       You can write the code for the actions in another place, and leave this method empty if you
       feel it's more appropriate to your project.
 
    3. Create an instance of FSMSystem class and add the states to it.
 
    4. Call Reason and Act (or whichever methods you have for firing transitions and making the NPCs
         behave in your game) from your Update or FixedUpdate methods.
 
    Asynchronous transitions from Unity Engine, like OnTriggerEnter, SendMessage, can also be used,
    just call the Method PerformTransition from your FSMSystem instance with the correct Transition
    when the event occurs.
 
 
 
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,
INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE
AND NON-INFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
*/
/// <summary>
/// FSMSystem class represents the Finite State Machine class.
///  It has a List with the States the NPC has and methods to add,
///  delete a state, and to change the current state the Machine is on.
/// </summary>
var FSMSystem = /** @class */ (function () {
    function FSMSystem(characterCtr) {
        this.characterCtr = characterCtr;
        this.states = new Array();
    }
    Object.defineProperty(FSMSystem.prototype, "CurrentStateID", {
        get: function () { {
            return this.currentStateID;
        } },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FSMSystem.prototype, "CurrentState", {
        get: function () { {
            return this.currentState;
        } },
        enumerable: true,
        configurable: true
    });
    /// <summary>
    /// This method places new states inside the FSM,
    /// or prints an ERROR message if the state was already inside the List.
    /// First state added is also the initial state.
    /// </summary>
    FSMSystem.prototype.AddState = function (s) {
        // Check for Null reference before deleting
        if (s == null) {
            console.error("FSM ERROR: Null reference is not allowed");
        }
        // First State inserted is also the Initial state,
        //   the state the machine is in when the simulation begins
        if (this.states.length == 0) {
            s.SetCtr(this.characterCtr);
            this.states.push(s);
            this.currentState = s;
            this.currentStateID = s.ID;
            this.currentState.DoBeforeEntering();
            return;
        }
        // Add the state to the List if it's not inside it
        for (var index = 0; index < this.states.length; index++) {
            var state = this.states[index];
            if (state.ID == s.ID) {
                console.error("FSM ERROR: Impossible to add state " + s.ID + " because state has already been added");
                return;
            }
        }
        s.SetCtr(this.characterCtr);
        this.states.push(s);
    };
    /// <summary>
    /// This method delete a state from the FSM List if it exists, 
    ///   or prints an ERROR message if the state was not on the List.
    /// </summary>
    FSMSystem.prototype.DeleteState = function (id) {
        // Check for NullState before deleting
        if (id == FsmEnum_1.StateID.NullStateID) {
            console.error("FSM ERROR: NullStateID is not allowed for a real state");
            return;
        }
        // Search the List and delete the state if it's inside it
        for (var index = 0; index < this.states.length; index++) {
            var state = this.states[index];
            if (state.ID == id) {
                this.states.splice(index, 1);
                return;
            }
        }
        console.error("FSM ERROR: Impossible to delete state " + id + ". It was not on the list of states");
    };
    /// <summary>
    /// This method tries to change the state the FSM is in based on
    /// the current state and the transition passed. If current state
    ///  doesn't have a target state for the transition passed, 
    /// an ERROR message is printed.
    /// </summary>
    FSMSystem.prototype.PerformTransition = function (trans) {
        // Check for NullTransition before changing the current state
        if (trans == FsmEnum_1.Transition.NullTransition) {
            console.error("FSM ERROR: NullTransition is not allowed for a real transition");
            return;
        }
        // Check if the currentState has the transition passed as argument
        var id = this.currentState.GetOutputState(trans);
        if (id == FsmEnum_1.StateID.NullStateID) {
            console.error("FSM ERROR: State " + this.currentStateID + " does not have a target state " + " for transition " + trans);
            return;
        }
        // Update the currentStateID and currentState		
        this.currentStateID = id;
        for (var index = 0; index < this.states.length; index++) {
            var state = this.states[index];
            if (state.ID == this.currentStateID) {
                // Do the post processing of the state before setting the new one
                this.currentState.DoBeforeLeaving();
                this.currentState = state;
                // Reset the state to its desired condition before it can reason or act
                this.currentState.DoBeforeEntering();
                break;
            }
        }
    }; // PerformTransition()
    return FSMSystem;
}()); //class FSMSystem
exports.default = FSMSystem;
},{"./FsmEnum":45}],45:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/// <summary>
/// Place the labels for the Transitions in this enum.
/// Don't change the first label, NullTransition as FSMSystem class uses it.
/// </summary>
var Transition;
(function (Transition) {
    Transition[Transition["NullTransition"] = 0] = "NullTransition";
    Transition[Transition["TRex2Pter"] = 1] = "TRex2Pter";
    Transition[Transition["Pter2TRex"] = 2] = "Pter2TRex";
    Transition[Transition["KingKong2"] = 3] = "KingKong2";
    Transition[Transition["Trex2Kingkong"] = 4] = "Trex2Kingkong";
    Transition[Transition["Kingkong2Trex"] = 5] = "Kingkong2Trex";
})(Transition = exports.Transition || (exports.Transition = {}));
/// <summary>
/// Place the labels for the States in this enum.
/// Don't change the first label, NullTransition as FSMSystem class uses it.
/// </summary>
var StateID;
(function (StateID) {
    StateID[StateID["NullStateID"] = 0] = "NullStateID";
    StateID[StateID["TRex"] = 1] = "TRex";
    StateID[StateID["Pter"] = 2] = "Pter";
    StateID[StateID["KingKong"] = 3] = "KingKong";
})(StateID = exports.StateID || (exports.StateID = {}));
},{}],46:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var FsmEnum_1 = require("./FsmEnum");
/// <summary>
/// This class represents the States in the Finite State System.
/// Each state has a Dictionary with pairs (transition-state) showing
/// which state the FSM should be if a transition is fired while this state
/// is the current state.
/// Method Reason is used to determine which transition should be fired .
/// Method Act has the code to perform the actions the NPC is supposed do if it's on this state.
/// </summary>
var FSMState = /** @class */ (function (_super) {
    __extends(FSMState, _super);
    function FSMState() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.map = new Dictionary();
        return _this;
    }
    Object.defineProperty(FSMState.prototype, "ID", {
        get: function () { {
            return this.stateID;
        } },
        enumerable: true,
        configurable: true
    });
    FSMState.prototype.SetCtr = function (characterCtr) { this.characterCtr = characterCtr; };
    FSMState.prototype.AddTransition = function (trans, id) {
        // Check if anyone of the args is invalid
        if (trans == FsmEnum_1.Transition.NullTransition) {
            console.error("FSMState ERROR: NullTransition is not allowed for a real transition");
            return;
        }
        if (id == FsmEnum_1.StateID.NullStateID) {
            console.error("FSMState ERROR: NullStateID is not allowed for a real ID");
            return;
        }
        // Since this is a Deterministic FSM,
        //   check if the current transition was already inside the map
        if (this.map.ContainsKey(trans)) {
            console.error("FSMState ERROR: State " + this.stateID + " already has transition " + trans + "Impossible to assign to another state");
            return;
        }
        this.map.Add(trans, id);
    };
    /// <summary>
    /// This method deletes a pair transition-state from this state's map.
    /// If the transition was not inside the state's map, an ERROR message is printed.
    /// </summary>
    FSMState.prototype.DeleteTransition = function (trans) {
        // Check for NullTransition
        if (trans == FsmEnum_1.Transition.NullTransition) {
            console.error("FSMState ERROR: NullTransition is not allowed");
            return;
        }
        // Check if the pair is inside the map before deleting
        if (this.map.ContainsKey(trans)) {
            this.map.Remove(trans);
            return;
        }
        console.error("FSMState ERROR: Transition " + trans + " passed to " + this.stateID + " was not on the state's transition list");
    };
    /// <summary>
    /// This method returns the new state the FSM should be if
    ///    this state receives a transition and 
    /// </summary>
    FSMState.prototype.GetOutputState = function (trans) {
        // Check if the map has this transition
        if (this.map.ContainsKey(trans)) {
            return this.map.Get(trans);
        }
        return FsmEnum_1.StateID.NullStateID;
    };
    return FSMState;
}(Laya.Script3D)); // class FSMState
exports.default = FSMState;
var Dictionary = /** @class */ (function () {
    function Dictionary() {
        this._obj = {};
    }
    Dictionary.prototype.ContainsKey = function (key) {
        return this._obj[key] != null;
    };
    Dictionary.prototype.Add = function (key, value) {
        this._obj[key] = value;
    };
    Dictionary.prototype.Remove = function (key) {
        delete this._obj[key];
    };
    Dictionary.prototype.Get = function (key) {
        return this._obj[key];
    };
    return Dictionary;
}());
},{"./FsmEnum":45}],47:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SceneSetting = /** @class */ (function () {
    function SceneSetting() {
    }
    /* 道路最大偏移 */
    SceneSetting.MaxRoadOffset = 3.25;
    /* 难度设置,角色 */
    SceneSetting.Difficulty = 0;
    /* 重生时间 */
    SceneSetting.RespwanTime = 1000;
    return SceneSetting;
}());
exports.SceneSetting = SceneSetting;
/**
 * 摄像机设置
 *
 * @export
 * @class CameraSettings
 */
var CameraSetting = /** @class */ (function () {
    function CameraSetting() {
    }
    /* 地面摄像机视角偏移 */
    CameraSetting.GoundOffset = new Laya.Vector3(0, 20, 10);
    /* 皮肤摄像机视角偏移 */
    CameraSetting.SkinViewOffset = new Laya.Vector3(-4, 5, 4);
    /* 默认视角 */
    CameraSetting.FieldOfView = 60;
    /* 摄像机会以玩家的中心点加上一个前后的偏移作为最终的视角中心*/
    CameraSetting.FrontBackOffset = 0;
    /* 前后偏移归0时的速度 */
    CameraSetting.FrontBackOffsetMoveSpd = 10;
    /* 摄像机左右偏移移动速度 */
    CameraSetting.LeftRightMoveSpd = 100;
    /* 摄像机左右偏移比率 */
    CameraSetting.LeftRightRate = 0.5;
    /* 摄像机抖动频率 */
    CameraSetting.ShakeFrequency = 10;
    /* 摄像机抖动幅度 */
    CameraSetting.ShakeStrength = 0.2;
    /* 摄像机切换物体速度 */
    CameraSetting.ChangeObjTime = 10;
    return CameraSetting;
}());
exports.CameraSetting = CameraSetting;
/**
 * 玩家跳跃高度
 *
 * @export
 * @class CharacterSetting
 */
var CharacterSetting = /** @class */ (function () {
    function CharacterSetting() {
    }
    /* 角色在道路上的正常速度 */
    CharacterSetting.NormalSpeed = 9;
    /* 大大卷最后冲刺速度 */
    CharacterSetting.EndRollerSpeed = 25;
    /* 开始有多少卷 */
    CharacterSetting.StartPiece = 40;
    /* 角色在道路上处于加速状态获得的速率 */
    CharacterSetting.AccelerateSpeed = 0.5;
    return CharacterSetting;
}());
exports.CharacterSetting = CharacterSetting;
var SprialRollerConfigure = /** @class */ (function () {
    function SprialRollerConfigure() {
    }
    /* 小碎片长度 */
    SprialRollerConfigure.PieceLength = 0.25;
    /* 小碎片高度 */
    SprialRollerConfigure.PieceWidth = 1.5;
    /* 小碎片厚度 */
    SprialRollerConfigure.PieceThickness = 0.1;
    /* 螺旋线激活片数 */
    SprialRollerConfigure.ActivePiece = 45;
    /* 失去螺旋卷距离 */
    SprialRollerConfigure.EmptyLoseDis = 0.7;
    /* 终点失去螺旋卷距离 */
    SprialRollerConfigure.EndRollLoseDis = 0.6;
    //#region 下面的是螺旋生成核心参数
    SprialRollerConfigure.SizeOfPiece = 300;
    /* 螺旋卷最大的半径 */
    SprialRollerConfigure.MaxRadius = 8;
    /* 螺旋卷初始相位，一般不用改 */
    SprialRollerConfigure.InitialPhase = 45;
    /* 螺旋卷圈数 */
    SprialRollerConfigure.Cycles = 15;
    return SprialRollerConfigure;
}());
exports.SprialRollerConfigure = SprialRollerConfigure;
},{}],48:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var PoolManager = /** @class */ (function (_super) {
    __extends(PoolManager, _super);
    function PoolManager() {
        var _this = _super.call(this) || this;
        _this.m_ObjectPoolDic = {};
        _this.counter = 0;
        _this.node = new Laya.Node();
        _this.node.name = "Node";
        Laya.stage.addChild(_this.node);
        return _this;
    }
    PoolManager.getInstance = function () {
        return this._instance || (this._instance = new PoolManager());
    };
    //初始化
    //加载到内存中创建出来之后添加到这里面
    PoolManager.prototype.InitPool = function (key, MeshSprite) {
        //初始化id对应对象池， 第一次初始化则必须保证池中最少存在1个
        if (this.m_ObjectPoolDic[key]) {
            console.log("初始化有误，该值已经有对应的 对象池了");
        }
        else {
            this.m_ObjectPoolDic[key] = (MeshSprite);
            var childNode = new Laya.Node();
            childNode.name = key.toString();
            this.node.addChild(childNode);
        }
    };
    //按照编号取出对应对象池中的一个物体
    PoolManager.prototype.DequeueItem = function (key) {
        if (this.m_ObjectPoolDic[key]) {
            var childNode = this.node.getChildByName(key.toString());
            // console.log("-------------对象池",this.counter)//this.GetPoolLenght(1))
            if (childNode.numChildren == 0) {
                var tempobj = this.m_ObjectPoolDic[key].clone();
                ;
                tempobj.name = key.toString();
                this.counter++;
                return tempobj;
            }
            else {
                var tempobj = childNode.getChildAt(0);
                ;
                tempobj.removeSelf();
                tempobj.active = true;
                return tempobj;
            }
        }
        else {
            //对象池中不存在该 key 对应的池
            console.log("获取对象错误，没有 该值所对应的对象池");
            // let tempobj = Laya.Sprite3D.instantiate((PrefabMgr.preBall as Laya.Sprite3D))
            // tempobj.name=key.toString();
            return null;
        }
    };
    //对象回池，对象的状态信息，尽可能在回池前设置成默认状态
    // 比如说物体上添加的一些脚本，可以在回池前去掉或者 后面再对脚本进行判断
    //需要记住该物体对象池所对应的指定的编号，否则一旦添加错误，无法修改
    PoolManager.prototype.EnqueueItem = function (key, MeshSprite) {
        if (this.m_ObjectPoolDic[key]) {
            //对象池中存在该 key 对应的池
            var childNode = this.node.getChildByName(key.toString());
            MeshSprite.active = false;
            MeshSprite.removeSelf();
            childNode.addChild(MeshSprite);
        }
        else {
            //对象池中不存在该 key 对应的池
            console.log("获取对象错误，没有 该值所对应的对象池");
            return;
        }
    };
    //清理对象池 根据编号清理指定的对象池
    PoolManager.prototype.ClearPool = function (key) {
        if (this.m_ObjectPoolDic[key]) {
            //对象池中存在该 key 对应的池
            var QueuePool = this.m_ObjectPoolDic[key];
            this.m_ObjectPoolDic[key].destroy();
            delete this.m_ObjectPoolDic[key];
            var childNode = this.node.getChildByName(key.toString());
            childNode.destroyChildren();
            childNode.destroy();
        }
        else {
            //对象池中不存在该 key 对应的池
            console.log("获取对象错误，没有 该值所对应的对象池");
            return;
        }
    };
    //获取对象池长度 根据编号获取指定的对象池的长度
    PoolManager.prototype.GetPoolLenght = function (key) {
        if (this.m_ObjectPoolDic[key]) {
            //对象池中存在该 key 对应的池
            var childNode = this.node.getChildByName(key.toString());
            return childNode.numChildren;
        }
        else {
            //对象池中不存在该 key 对应的池
            console.log("获取对象错误，没有 该值所对应的对象池");
            return null;
        }
    };
    return PoolManager;
}(Laya.Sprite3D));
exports.default = PoolManager;
},{}],49:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var Enums_1 = require("./Enums");
var Rocker = /** @class */ (function (_super) {
    __extends(Rocker, _super);
    function Rocker() {
        var _this = _super.call(this) || this;
        _this._rocketType = 1; //摇杆类型,1固定，2以每次按下为中心
        _this._rocketShow = 1; //摇杆显示类型,1一直显示2按下时显示抬起时隐藏
        _this._moveRadius = 100;
        _this.m_isClick = false;
        _this.keyList = [];
        _this.keyDown = false;
        return _this;
    }
    Rocker.prototype.onAwake = function () {
        this._ownerSprite = this.owner;
        this._rockerZone = this.owner.parent;
        this._moveSp = this.owner.getChildByName("Btn");
        this._bgSp = this.owner;
        if (this._rocketShow == 2) {
            this._ownerSprite.visible = false;
        }
    };
    Rocker.prototype.onStart = function () {
        this._originPoint = new Laya.Point(this._ownerSprite.x, this._ownerSprite.y);
    };
    Rocker.prototype.onEnable = function () {
        this._rockerZone.on(Laya.Event.MOUSE_DOWN, this, this.onRokerZoneClickDown);
        this._moveSp.on(Laya.Event.MOUSE_UP, this, this.onMoveSpClickUp);
        this._moveSp.x = this._bgSp.width / 2;
        this._moveSp.y = this._bgSp.height / 2;
        Laya.stage.on(Laya.Event.KEY_UP, this, this.onkeyup);
        Laya.stage.on(Laya.Event.KEY_DOWN, this, this.onkeydown);
    };
    Rocker.prototype.onDisable = function () {
        this._rockerZone.off(Laya.Event.MOUSE_DOWN, this, this.onRokerZoneClickDown);
        this._moveSp.off(Laya.Event.MOUSE_UP, this, this.onMoveSpClickUp);
        this._rockerZone.off(Laya.Event.MOUSE_MOVE, this, this.onMoveSpClickMove);
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_Input_csjc, { InputType: Enums_1.InputType.RockerAxis, Value: null });
        this._moveSp.x = this._bgSp.width / 2;
        this._moveSp.y = this._bgSp.height / 2;
    };
    Rocker.prototype.onRokerZoneClickDown = function () {
        if (this._rocketType == 2) {
            var point = this._rockerZone.localToGlobal(new Laya.Point(Laya.stage.mouseX, Laya.stage.mouseY));
            this._ownerSprite.x = point.x;
            this._ownerSprite.y = point.y;
        }
        this._rockerZone.on(Laya.Event.MOUSE_MOVE, this, this.onMoveSpClickMove);
        this._rockerZone.on(Laya.Event.MOUSE_UP, this, this.onMoveSpClickUp);
        this._rockerZone.on(Laya.Event.MOUSE_OUT, this, this.onMoveSpClickUp);
        this.m_isClick = true;
        this._ownerSprite.visible = true;
        // EventMgr.instance.dispatch(EventDef.GameInput);
        // EventMgr.instance.dispatch(EventDef.Game_GuideShow, {result: false});
    };
    Rocker.prototype.onMoveSpClickUp = function () {
        this._rockerZone.off(Laya.Event.MOUSE_MOVE, this, this.onMoveSpClickMove);
        this._rockerZone.off(Laya.Event.MOUSE_UP, this, this.onMoveSpClickUp);
        this._rockerZone.off(Laya.Event.MOUSE_OUT, this, this.onMoveSpClickUp);
        var originX = this._bgSp.width / 2;
        var originY = this._bgSp.height / 2;
        Laya.Tween.to(this._moveSp, { x: originX, y: originY }, 100, Laya.Ease.linearNone);
        this._ownerSprite.x = this._originPoint.x;
        this._ownerSprite.y = this._originPoint.y;
        this.m_isClick = false;
        if (this._rocketShow == 2) {
            this._ownerSprite.visible = false;
        }
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_Input_csjc, { InputType: Enums_1.InputType.RockerAxis, Value: null });
    };
    Rocker.prototype.onMoveSpClickMove = function () {
        var parentView = this.owner.parent;
        var bgStagePoint = parentView.localToGlobal(new Laya.Point(this._bgSp.x, this._bgSp.y), true);
        var xx = Laya.stage.mouseX - bgStagePoint.x;
        var yy = Laya.stage.mouseY - bgStagePoint.y;
        var obl = Math.sqrt(Math.pow(xx, 2) + Math.pow(yy, 2));
        var rad = yy < 0 ? Math.acos(xx / obl) : (Math.PI * 2 - Math.acos(xx / obl));
        var angle = 180 / Math.PI * rad;
        if (obl > this._moveRadius) {
            var x = (this._moveRadius * xx) / obl + bgStagePoint.x;
            var y = (this._moveRadius * yy) / obl + bgStagePoint.y;
            var moveSpLocalPoint = this._bgSp.globalToLocal(new Laya.Point(x, y), true);
            this._moveSp.pos(moveSpLocalPoint.x, moveSpLocalPoint.y);
        }
        else {
            var pos = this._bgSp.globalToLocal(new Laya.Point(Laya.stage.mouseX, Laya.stage.mouseY), true);
            this._moveSp.pos(pos.x, pos.y);
        }
    };
    Rocker.prototype.getRockerVlaue = function () {
        var outX = (this._moveSp.x - this._bgSp.width / 2) / this._moveRadius;
        var outY = (this._moveSp.y - this._bgSp.height / 2) / this._moveRadius;
        var dir = new Laya.Point(outX, outY);
        // dir.normalize();
        return dir;
    };
    Rocker.prototype.onUpdate = function () {
        if (this.m_isClick) {
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_Input_csjc, { InputType: Enums_1.InputType.RockerAxis, Value: this.getRockerVlaue() });
            // console.log();
            // EventMgr.instance.dispatch(EventDef.Game_MoveInput, this.getRockerVlaue());
        }
        if (this.keyList.length > 0) {
            this.keyDown = true;
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_Input_csjc, { InputType: Enums_1.InputType.RockerAxis, Value: new Laya.Point(0, -1) });
        }
        else {
            if (this.keyDown == true) {
                this.keyDown = false;
                EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_Input_csjc, { InputType: Enums_1.InputType.RockerAxis, Value: null });
            }
        }
    };
    Rocker.prototype.onkeyup = function (e) {
        for (var i = 0; i < this.keyList.length; i++) {
            if (this.keyList[i] == e.keyCode) {
                this.keyList.splice(i, 1);
                break;
            }
        }
    };
    Rocker.prototype.onkeydown = function (e) {
        if (this.keyList.indexOf(e.keyCode) < 0) {
            this.keyList.push(e.keyCode);
        }
    };
    return Rocker;
}(Laya.Script));
exports.default = Rocker;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"./Enums":40}],50:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var CharacterCtr_1 = require("./Character/CharacterCtr");
var CameraCtr_1 = require("./CameraCtr");
var DestructibleObj_1 = require("./Character/DestructibleObj");
var Enemy_1 = require("./Character/Enemy");
var User_1 = require("../../User/User");
var Camera2UI_1 = require("./Camera2UI");
var BossRobot_1 = require("./Character/BossRobot");
var Enums_1 = require("./Enums");
var DestructibleObjBuilds_1 = require("./Character/DestructibleObjBuilds");
var PoolManager_1 = require("./GameTools/PoolManager");
var SceneMgr_cscj = /** @class */ (function (_super) {
    __extends(SceneMgr_cscj, _super);
    function SceneMgr_cscj() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.Scole = 0;
        _this._enemyList = [];
        _this._enemyAllList = [];
        _this._restTimer = 0;
        _this._gamePlaying = false;
        _this._enemyLocList = [];
        _this._enemyCount = 0;
        _this._enemyKillCount = 0;
        _this._gameOver = 0;
        _this._fireEffects = [];
        _this._playerKind = Enums_1.PlayerType.TRex;
        _this._bossKind = Enums_1.PlayerType.TRex;
        return _this;
    }
    Object.defineProperty(SceneMgr_cscj, "Instance", {
        get: function () { return this._instance; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "CurrentScene", {
        get: function () { return this.owner; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "ReplaceObj", {
        get: function () { return this._replaceObj; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "Player", {
        get: function () { return this._playerCtr; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "Boss", {
        get: function () { return this._boss; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "BossSprite3D", {
        get: function () { return this._boss.owner; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "RestTimer", {
        get: function () { return Math.floor(this._restTimer); },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "EnemyList", {
        get: function () { return this._enemyList; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "EnemyLocList", {
        get: function () { return this._enemyLocList; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "EnemCount", {
        get: function () { return this._enemyCount; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "EnemyKillCount", {
        get: function () { return this._enemyKillCount; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "CameraCtr", {
        get: function () { return this._cameraCtr; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "FireEffects", {
        get: function () { return this._fireEffects; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "CurrLockEnemy", {
        get: function () { return this._currLockEnemy; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "CurrLockEnemyPos", {
        get: function () { return this._currLockEnemyPos; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "StateId", {
        get: function () { return this.Player.StateId; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "Prefab", {
        get: function () { return this._prefabMain; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "GameOver", {
        get: function () { return this._gameOver; },
        set: function (v) { this._gameOver = v; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "BossVisible", {
        get: function () { return this._bossIsVivible; },
        set: function (v) { this._bossIsVivible = v; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "PlayerKind", {
        get: function () { return this._playerKind; },
        set: function (kind) { this._playerKind = kind; },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SceneMgr_cscj.prototype, "BossKind", {
        get: function () { return this._bossKind; },
        set: function (kind) { this._bossKind = kind; },
        enumerable: true,
        configurable: true
    });
    SceneMgr_cscj.prototype.onAwake = function () {
        console.log("---------------------进入游戏");
        SceneMgr_cscj._instance = this;
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_GameSceneLoadCompelete_csjc);
        this.Camera = this.owner.getChildByName("Main Camera");
        this._cameraCtr = this.Camera.addComponent(CameraCtr_1.default);
        this._prefabMain = this.owner.getChildByName("Prefab");
        this._restTimer = 150;
        this.InitGameObjects();
        this.prefabMgr();
    };
    /**
     * 预制体管理
     */
    SceneMgr_cscj.prototype.prefabMgr = function () {
        this._prefabMain.active = false;
        //石头
        PoolManager_1.default.getInstance().InitPool(0, this._prefabMain.getChildAt(0));
        console.log("-*---------------------对象池获取", this._prefabMain.getChildAt(0));
    };
    SceneMgr_cscj.prototype.onEnable = function () {
        this.addEvent();
    };
    SceneMgr_cscj.prototype.onDisable = function () {
        this.RemoveEvent();
    };
    SceneMgr_cscj.prototype.addEvent = function () {
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.Game_Input_csjc, this, this.Input_csjc);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.EnemyDead, this, this.OnEnemyDead);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.SelectHero, this, this.OnSelectHero);
    };
    SceneMgr_cscj.prototype.RemoveEvent = function () {
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.Game_Input_csjc, this, this.Input_csjc);
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.EnemyDead, this, this.OnEnemyDead);
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.SelectHero, this, this.OnSelectHero);
    };
    SceneMgr_cscj.prototype.OnSelectHero = function () {
        var player = this.owner.getChildByName("Player");
        var boss = this.owner.getChildByName("Boss");
        boss = player.clone();
        this.owner.addChild(boss);
        boss.transform.localPositionY += 5;
        boss.transform.position = new Laya.Vector3(0, 0, 0);
        boss.name = "boss";
        this._playerCtr = player.addComponent(CharacterCtr_1.default);
        this._boss = boss.addComponent(BossRobot_1.default);
        this._playerLoc = this.owner.getChildByName("PlayerLoc");
        if (User_1.default.getLeveNum_csjc() >= 1) {
            var index = Math.floor(Math.random() * this._playerLoc.numChildren);
            var loc = this._playerLoc.getChildAt(index);
            this._playerCtr.FollowObj.transform.worldMatrix = loc.transform.worldMatrix.clone();
        }
        this.BossSprite3D.active = false;
        this._bossIsVivible = false;
        // this.BossSprite3D.transform.localPositionY=5// = true
    };
    SceneMgr_cscj.prototype.OnEnemyDead = function () {
        this._enemyKillCount++;
        // this._enemyCount = 1
        if (this._enemyKillCount >= this._enemyCount) {
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.BossVisible);
            this.onBossVisible();
        }
    };
    /**
     * boss出现
     */
    SceneMgr_cscj.prototype.onBossVisible = function () {
        this.BossSprite3D.active = true;
        this._bossIsVivible = true;
        // this.BossSprite3D.transform.localPositionY=0
    };
    SceneMgr_cscj.prototype.PauseGame = function () {
        this._gamePlaying = false;
    };
    SceneMgr_cscj.prototype.StartGame = function () {
        this._gamePlaying = true;
    };
    SceneMgr_cscj.prototype.onUpdate = function () {
        if (this._gameOver != 0 || !this._gamePlaying)
            return;
        this._restTimer -= Math.min(50, Laya.timer.delta) / 1000;
        if (this._restTimer <= 0) {
            this._restTimer = 0;
            this.GameOver = -1;
        }
        this.CaEnemyLoc();
    };
    SceneMgr_cscj.prototype.CaEnemyLoc = function () {
        this._enemyLocList = [];
        var cent = new Laya.Point(Laya.stage.width / 2, Laya.stage.height / 2);
        var closeDis = -1;
        this._currLockEnemyPos = null;
        this._currLockEnemy = null;
        for (var index = 0; index < this.EnemyList.length; index++) {
            var enemy = this.EnemyList[index];
            if (enemy.Alive) {
                var pos = enemy.Sprite3D.transform.position.clone();
                pos.y += 2;
                pos = Camera2UI_1.default.WorldToScreen2(this.Camera, pos);
                var inRange = (pos.x > Laya.stage.width * 0.25) && (pos.x < Laya.stage.width * 0.75); /* &&
                (pos.y > cent.y * 0.25) && (pos.y < cent.y * 0.75) */
                if (pos.z <= 0 && inRange) {
                    var dis_1 = Math.pow((pos.x - cent.x), 2) + Math.pow((pos.y - cent.y), 2);
                    if (closeDis == -1 || closeDis > dis_1) {
                        closeDis = dis_1;
                        this._currLockEnemyPos = pos;
                        this._currLockEnemy = enemy.Sprite3D;
                    }
                }
                var dis = Laya.Vector3.distance(this._playerCtr.FollowObj.transform.position, enemy.Sprite3D.transform.position);
                this._enemyLocList.push({ Postion: pos, Distance: dis });
            }
        }
    };
    /**
     * 玩家输入
     *
     * @param {Laya.Point} point
     * @memberof ryw_SceneManager
     */
    SceneMgr_cscj.prototype.Input_csjc = function (point) {
        if (this._gameOver) {
            return;
        }
        if (point == null) {
            console.log("停止输入");
            // this._player.Input(point);
            // this._playerCtr.PlayerIdle();
        }
        else {
            // this._playerCtr.PlayerMove(point);
            // console.log(`输入值${point}`);
        }
        this._playerCtr.Input(point);
    };
    SceneMgr_cscj.prototype.InitGameObjects = function () {
        var boundary = this.owner.getChildByName("Boundary");
        for (var index = 0; index < boundary.numChildren; index++) {
            var ground = boundary.getChildAt(index).getComponent(Laya.PhysicsComponent);
            if (ground) {
                this.SetGround(ground);
            }
        }
        var buildings = this.owner.getChildByName("Buildings");
        for (var index = 0; index < buildings.numChildren; index++) {
            var buildCol = buildings.getChildAt(index).getComponent(Laya.PhysicsComponent);
            if (buildCol) {
                this.SetClimb(buildCol);
            }
        }
        var roadObj = this.owner.getChildByName("RoadObj");
        for (var index = 0; index < roadObj.numChildren; index++) {
            var obj = roadObj.getChildAt(index);
            if (obj.getComponent(Laya.PhysicsComponent) != null) {
                obj.addComponent(DestructibleObj_1.default);
            }
        }
        roadObj = this.owner.getChildByName("Buildings");
        for (var index = 0; index < roadObj.numChildren; index++) {
            var obj = roadObj.getChildAt(index);
            if (obj.getComponent(Laya.PhysicsComponent) != null) {
                obj.addComponent(DestructibleObjBuilds_1.default);
            }
        }
        this._replaceObj = this.owner.getChildByName("ReplaceObj");
        var freeObj = this.owner.getChildByName("FreeObj");
        for (var index = 0; index < freeObj.numChildren; index++) {
            var objCol = freeObj.getChildAt(index).getComponent(Laya.PhysicsComponent);
            if (objCol) {
                objCol.collisionGroup = Enums_1.CollisionGroup.Obstacle;
                objCol.canCollideWith = Enums_1.CollisionGroup.None | Enums_1.CollisionGroup.Character | Enums_1.CollisionGroup.Ground | Enums_1.CollisionGroup.Obstacle;
            }
        }
        this.CreatEnemy();
    };
    SceneMgr_cscj.prototype.CreatEnemy = function () {
        this._enemyPrefab = this.owner.getChildByName("Enemys").getChildAt(0);
        var enemyAll = this.owner.getChildByName("EnemyAllList");
        var enemyEx = this.owner.getChildByName("EnemyExList");
        this._enemyCount = 1;
        if (User_1.default.getLeveNum_csjc() == 1) {
            if (Math.random() > 0.5) {
                this._enemyCount = 2;
            }
        }
        else if (User_1.default.getLeveNum_csjc() > 1 && User_1.default.getLeveNum_csjc() < 3) {
            this._enemyCount = 3 + Math.floor(Math.random() * 3);
        }
        else {
            this._enemyCount = 4 + Math.floor(Math.random() * 3);
        }
        while (this._enemyList.length < this._enemyCount) {
            var enemyFake = enemyAll.getChildAt(Math.floor(Math.random() * enemyAll.numChildren));
            var eSp = Laya.Sprite3D.instantiate(this._enemyPrefab, this._enemyPrefab.parent);
            eSp.transform.worldMatrix = enemyFake.transform.worldMatrix;
            var e = eSp.addComponent(Enemy_1.default);
            this._enemyList.push(e);
        }
        var rd = Math.floor(Math.random() * 1) + 1;
        while (this._enemyList.length < this._enemyCount + rd) {
            var enemyFake = enemyEx.getChildAt(Math.floor(Math.random() * enemyEx.numChildren));
            var eSp = Laya.Sprite3D.instantiate(this._enemyPrefab, this._enemyPrefab.parent);
            eSp.transform.worldMatrix = enemyFake.transform.worldMatrix;
            var e = eSp.addComponent(Enemy_1.default);
            this._enemyList.push(e);
        }
        this._restTimer = 60 + (this._enemyList.length) * 30;
        this._enemyPrefab.removeSelf();
        this._enemyPrefab.destroy();
    };
    SceneMgr_cscj.prototype.SetGround = function (ground) {
        ground.collisionGroup = Enums_1.CollisionGroup.Obstacle;
        ground.canCollideWith = Enums_1.CollisionGroup.None | Enums_1.CollisionGroup.Character | Enums_1.CollisionGroup.Obstacle;
    };
    SceneMgr_cscj.prototype.SetClimb = function (buliding) {
        buliding.collisionGroup = Enums_1.CollisionGroup.Ground;
        buliding.canCollideWith = Enums_1.CollisionGroup.None | Enums_1.CollisionGroup.Character | Enums_1.CollisionGroup.Obstacle;
    };
    return SceneMgr_cscj;
}(Laya.Script3D));
exports.default = SceneMgr_cscj;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../User/User":67,"./Camera2UI":31,"./CameraCtr":32,"./Character/BossRobot":33,"./Character/CharacterCtr":34,"./Character/DestructibleObj":35,"./Character/DestructibleObjBuilds":36,"./Character/Enemy":37,"./Enums":40,"./GameTools/PoolManager":48}],51:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../Mgr/ViewMgr");
var User_1 = require("../User/User");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var WXAPI_1 = require("../PlatformApi/WXAPI");
var SceneMgr_1 = require("./GameCore/SceneMgr");
var SoundMgr_1 = require("../Mgr/SoundMgr");
var TmAPI_1 = require("../TmAPI/TmAPI");
//游戏管理器，游戏代码的入口
var GameMgr_csjc = /** @class */ (function (_super) {
    __extends(GameMgr_csjc, _super);
    function GameMgr_csjc() {
        var _this = _super.call(this) || this;
        _this.FirstAd = false;
        //#region 自己的代码
        /* 当前场景的引用 */
        _this.GameLose = 0;
        GameMgr_csjc._instance = _this;
        return _this;
    }
    GameMgr_csjc.getInstance = function () { return GameMgr_csjc._instance; };
    GameMgr_csjc.prototype.onAwake = function () {
        if (Laya.Browser.onMiniGame) {
            WXAPI_1.default.SetShareMenu_csjc("", "", function () {
            }, function () {
            }, function () {
            });
            Laya.Browser.window['wx'].onShow(function (res) {
                console.log("\u7A0B\u5E8F\u8FD4\u56DE,\u53C2\u6570\u4E3A" + res + ",\u573A\u666F\u503C" + res.scene);
                if (ViewMgr_1.default.instance_csjc.getView_csjc(ViewMgr_1.ViewDef_csjc.MainGameView) != null
                    || ViewMgr_1.default.instance_csjc.getView_csjc(ViewMgr_1.ViewDef_csjc.InGameView) != null
                // || ViewMgr_csjc.instance_csjc.getView_csjc(ViewDef_csjc.SuperStartClick1) != null
                // || ViewMgr_csjc.instance_csjc.getView_csjc(ViewDef_csjc.SuperStartClick2) != null
                // || ViewMgr_csjc.instance_csjc.getView_csjc(ViewDef_csjc.SignInView) != null
                // || ViewMgr_csjc.instance_csjc.getView_csjc(ViewDef_csjc.GetSkinView) != null
                // || ViewMgr_csjc.instance_csjc.getView_csjc(ViewDef_csjc.SuperStartView) != null
                ) {
                    SoundMgr_1.default.instance_csjc.playBGM_csjc("Bgm2");
                }
                /* let abtest = TmAbTestMgr_csjc.Instance_csjc.GetABTestByGroupId_csjc(88);
                if (abtest.groupId == 100172) { */
                /* let sceneGood = res.scene == 1037 || res.scene == 1038 || res.scene == 1089;
                let viewGood = ViewMgr_csjc.instance_csjc.getView_csjc(ViewDef_csjc.InGameView) == null
                    && ViewMgr_csjc.instance_csjc.getView_csjc(ViewDef_csjc.SuperStartClick) == null;
                console.log(`分享失败打开导出,场景值:${res.scene}`);
                if (sceneGood && viewGood) {
                    if (ViewMgr_csjc.instance_csjc.getView_csjc(ViewDef_csjc.Export2AdView) == null) {
                        ViewMgr_csjc.instance_csjc.openView_csjc(ViewDef_csjc.Export2AdView);
                    }
                } */
                /* } */
            });
        }
        // WudianMgr.UpdateIpBlockState();
        Laya.SoundManager.useAudioMusic = false;
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.AD_OnShareAdFail_csjc, this, this.ADShareFail);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.AD_OnShareAdSuccess_csjc, this, this.ShareAdSuccess);
    };
    GameMgr_csjc.prototype.onStart = function () {
        this.preCreateGame_csjc();
    };
    GameMgr_csjc.prototype.preCreateGame_csjc = function () {
        //todo：这里添加初始化主场景的代码。EventMgr.dispatch(EventDef.App_CloseFirstLoadingView); 添加到你的关卡加载完成的回调中，关闭加载界面
        EventMgr_1.default.regOnceEvent_csjc(EventDef_1.EventDef_csjc.Game_GameSceneLoadCompelete_csjc, this, function () {
            ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.MainGameView);
            // ViewMgr_csjc.instance_csjc.openView_csjc(ViewDef_csjc.HExport1AdView);
            // ViewMgr_csjc.instance_csjc.openView_csjc(ViewDef_csjc.MainGameView, { ShowSkin: false });
            // if (ExamineMgr.CanShowAd_Wx) {
            //     ViewMgr_csjc.instance_csjc.openView_csjc(ViewDef_csjc.Export2AdView);
            // }
        });
        this.CreatGameScene();
        this.CreatOpenContext();
    };
    Object.defineProperty(GameMgr_csjc.prototype, "CurrentScene", {
        get: function () {
            return this._currentScene;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(GameMgr_csjc.prototype, "CurrentLevel", {
        /* 当前等级 */
        get: function () {
            return User_1.default.getLeveNum_csjc();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 加载下一关游戏场景
     *
     * @memberof GameManager
     */
    GameMgr_csjc.prototype.CreatNextGameScene = function () {
        var lev = User_1.default.getLeveNum_csjc();
        lev++;
        User_1.default.setLeveNum_csjc(lev);
        User_1.default.SaveGameData_csjc();
        this.CreatGameScene();
    };
    /**
     * 加载游戏场景
     *
     * @memberof GameManager
     */
    GameMgr_csjc.prototype.CreatGameScene = function () {
        if (this._currentScene) {
            var directionLight = this._currentScene.getChildByName("Directional Light");
            directionLight.shadow = false;
            this._currentScene.removeSelf();
            this._currentScene.destroy();
        }
        var url = "";
        var tureLev = "1";
        url = "subRes/LayaScene_1/Conventional/" + tureLev + ".ls";
        /* let abtest = TmAbTestMgr_csjc.Instance_csjc.GetABTestByGroupId_csjc(86); */
        // /* if (abtest.groupId == 100166)  */{
        //     console.log("赛道加长");
        //     if (tureLev <= 4) {
        //         url = "subRes/LayaScene_Main/Conventional/" + tureLev + "-1.ls";
        //     }
        //     else {
        //         url = "subRes/LayaScene_Main/Conventional/" + tureLev + ".ls";
        //     }
        // }
        /* else {
            console.log("赛道不加长");
        } */
        Laya.Scene3D.load(url, Laya.Handler.create(this, this.LoadComplete));
    };
    /**
     * 加载完成之后需要执行的方法，包括了
     * 1：初始化赛道
     * 2：初始化玩家控制脚本
     *
     * @param {Laya.Scene3D} scene
     * @memberof GameManager
     */
    GameMgr_csjc.prototype.LoadComplete = function (scene) {
        this._currentScene = scene;
        Laya.stage.addChildAt(this._currentScene, 0);
        this._currentScene.addComponent(SceneMgr_1.default);
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_OnLevelStart_csjc);
    };
    //#endregion
    GameMgr_csjc.prototype.ADShareFail = function () {
        console.log("AdShareFail");
        /* let abtest = TmAbTestMgr_csjc.Instance_csjc.GetABTestByGroupId_csjc(83);
            console.log("分享失败打开导出");
            if (ExamineMgr.CanShowAd_Wx &&
                ViewMgr_csjc.instance_csjc.getView_csjc(ViewDef_csjc.Export2AdView) == null &&
                ViewMgr_csjc.instance_csjc.getView_csjc(ViewDef_csjc.Export1AdView) == null
            ) {
                ViewMgr_csjc.instance_csjc.openView_csjc(ViewDef_csjc.Export2AdView);
            }
        /* else {
            console.log("分享失败不打开导出");
        } */
    };
    GameMgr_csjc.prototype.CreatOpenContext = function () {
        this._my_open = new Laya.WXOpenDataViewer();
        this._my_open.width = Laya.stage.width;
        this._my_open.height = Laya.stage.height;
    };
    Object.defineProperty(GameMgr_csjc.prototype, "Context", {
        get: function () {
            return this._my_open;
        },
        enumerable: true,
        configurable: true
    });
    GameMgr_csjc.prototype.ShareAdSuccess = function (style) {
        //首页导出
        if (ViewMgr_1.default.instance_csjc.getView_csjc(ViewMgr_1.ViewDef_csjc.MainGameView)) {
            TmAPI_1.default.SendEvent("ExportAd", { View: 1, Style: style });
        }
        //游戏页导出
        else if (ViewMgr_1.default.instance_csjc.getView_csjc(ViewMgr_1.ViewDef_csjc.InGameView)) {
            TmAPI_1.default.SendEvent("ExportAd", { View: 2, Style: style });
        }
        else if (ViewMgr_1.default.instance_csjc.getView_csjc(ViewMgr_1.ViewDef_csjc.HExport1AdView)) {
            TmAPI_1.default.SendEvent("ExportAd", { View: 3, Style: style });
        }
        else if (ViewMgr_1.default.instance_csjc.getView_csjc(ViewMgr_1.ViewDef_csjc.GameOverWinView) ||
            ViewMgr_1.default.instance_csjc.getView_csjc(ViewMgr_1.ViewDef_csjc.GameOverFailView)) {
            TmAPI_1.default.SendEvent("ExportAd", { View: 4, Style: style });
        }
        else if (ViewMgr_1.default.instance_csjc.getView_csjc(ViewMgr_1.ViewDef_csjc.FriendExportView)) {
            TmAPI_1.default.SendEvent("ExportAd", { View: 5, Style: style });
        }
        else if (ViewMgr_1.default.instance_csjc.getView_csjc(ViewMgr_1.ViewDef_csjc.HExport2AdView)) {
            TmAPI_1.default.SendEvent("ExportAd", { View: 6, Style: style });
        }
    };
    GameMgr_csjc._instance = null;
    return GameMgr_csjc;
}(Laya.Script));
exports.default = GameMgr_csjc;
},{"../Event/EventDef":5,"../Event/EventMgr":6,"../Mgr/SoundMgr":10,"../Mgr/ViewMgr":12,"../PlatformApi/WXAPI":20,"../TmAPI/TmAPI":65,"../User/User":67,"./GameCore/SceneMgr":50}],52:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var Enums_1 = require("../GameCore/Enums");
var SceneMgr_1 = require("../GameCore/SceneMgr");
var BtnPanel = /** @class */ (function (_super) {
    __extends(BtnPanel, _super);
    function BtnPanel() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        // private _attackBtn: Laya.UIComponent;
        // private _jumpBtn: Laya.UIComponent;
        //翼龙ui
        // private _pterPanel: Laya.UIComponent;
        // private _frontBtn: Laya.UIComponent;
        // private _backBtn: Laya.UIComponent;
        // private _upBtn: Laya.UIComponent;
        // private _leftBtn: Laya.UIComponent;
        // private _rightBtn: Laya.UIComponent;
        // private _downBtn: Laya.UIComponent;
        // private _fireBallBtn: Laya.UIComponent;
        // private _CTransBtn: Laya.UIComponent;
        _this._left = false;
        _this._right = false;
        _this._front = false;
        _this._back = false;
        _this._up = false;
        _this._down = false;
        _this._fire = false;
        return _this;
    }
    BtnPanel.prototype.onAwake = function () {
        this._tRexPanle = this.owner.getChildByName("TRexPanel");
        this._RTransBtn = this._tRexPanle.getChildByName("TransBtn");
        this._attackBtn = this._tRexPanle.getChildByName("AttackBtn");
        this._jumpBtn = this._tRexPanle.getChildByName("JumpBtn");
        this._fireBtn = this._tRexPanle.getChildByName("FireBtn");
        //金刚战斗ui
        this._kingKongPanle = this.owner.getChildByName("KingkongPanel");
        this._kingKongAtkBtn = this._kingKongPanle.getChildByName("AttackBtn");
        this._kingKongJumpBtn = this._kingKongPanle.getChildByName("JumpBtn");
        this._kingKongFireBtnBtn = this._kingKongPanle.getChildByName("FireBtn");
        // this._jumpBtn = this._tRexPanle.getChildByName("JumpBtn") as Laya.UIComponent;
        // this._fireBtn = this._tRexPanle.getChildByName("FireBtn") as Laya.UIComponent;
        // //翼龙战斗ui
        // this._pterPanel = this.owner.getChildByName("PterPanel") as Laya.UIComponent;
        // this._frontBtn = this._pterPanel.getChildByName("FrontBtn") as Laya.UIComponent;
        // this._backBtn = this._pterPanel.getChildByName("BackBtn") as Laya.UIComponent;
        // this._rightBtn = this._pterPanel.getChildByName("RightBtn") as Laya.UIComponent;
        // this._leftBtn = this._pterPanel.getChildByName("LeftBtn") as Laya.UIComponent;
        // this._upBtn = this._pterPanel.getChildByName("UpBtn") as Laya.UIComponent;
        // this._downBtn = this._pterPanel.getChildByName("DownBtn") as Laya.UIComponent;
        // this._CTransBtn = this._pterPanel.getChildByName("TransBtn") as Laya.UIComponent;
        // this._fireBallBtn = this._pterPanel.getChildByName("FireBallBtn") as Laya.UIComponent;
        this.TransformPanle(false);
    };
    BtnPanel.prototype.onEnable = function () {
        this.addEvent();
    };
    BtnPanel.prototype.onDisable = function () {
        this.removeEvent();
    };
    BtnPanel.prototype.onUpdate = function () {
        // if (this._pterPanel.visible) {
        //     let point = new Laya.Point(0, 0);
        //     if (this._left) {
        //         point.x = 1;
        //     }
        //     else if (this._right) {
        //         point.x = -1;
        //     }
        //     else {
        //         point.x = 0;
        //     }
        //     if (this._front) {
        //         point.y = 1;
        //     }
        //     else if (this._back) {
        //         point.y = -1;
        //     }
        //     else {
        //         point.y = 0;
        //     }
        //     if (point.x == 0 && point.y == 0) {
        //         EventMgr_csjc.dispatch_csjc(EventDef_csjc.Game_Input_csjc, { InputType: InputType.RockerAxis, Value: null })
        //     }
        //     else {
        //         EventMgr_csjc.dispatch_csjc(EventDef_csjc.Game_Input_csjc, { InputType: InputType.RockerAxis, Value: point })
        //     }
        //     if (this._up) {
        //         EventMgr_csjc.dispatch_csjc(EventDef_csjc.Game_Input_csjc, { InputType: InputType.UP })
        //     }
        //     else if (this._down) {
        //         EventMgr_csjc.dispatch_csjc(EventDef_csjc.Game_Input_csjc, { InputType: InputType.Down })
        //     }
        // }
        // else 
        if (this._tRexPanle.visible) {
            if (this._fire) {
                EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_Input_csjc, { InputType: Enums_1.InputType.Fire });
            }
        }
        else if (this._kingKongPanle.visible) {
        }
    };
    BtnPanel.prototype.addEvent = function () {
        this._RTransBtn.on(Laya.Event.CLICK, this, this.OnTransBtn);
        this._attackBtn.on(Laya.Event.CLICK, this, this.OnAttackBtn);
        this._jumpBtn.on(Laya.Event.CLICK, this, this.OnJumpBtn);
        this._fireBtn.on(Laya.Event.MOUSE_DOWN, this, this.OnFireBtn, [true]);
        this._fireBtn.on(Laya.Event.MOUSE_UP, this, this.OnFireBtn, [false]);
        this._kingKongAtkBtn.on(Laya.Event.CLICK, this, this.OnAttackBtn);
        this._kingKongJumpBtn.on(Laya.Event.CLICK, this, this.OnJumpBtn);
        this._kingKongFireBtnBtn.on(Laya.Event.CLICK, this, this.OnThrowStoneBtn);
        // this._CTransBtn.on(Laya.Event.CLICK, this, this.OnTransBtn)
        // this._frontBtn.on(Laya.Event.MOUSE_DOWN, this, this.OnFront, [true]);
        // this._frontBtn.on(Laya.Event.MOUSE_UP, this, this.OnFront, [false]);
        // this._backBtn.on(Laya.Event.MOUSE_DOWN, this, this.OnBack, [true]);
        // this._backBtn.on(Laya.Event.MOUSE_UP, this, this.OnBack, [false]);
        // this._leftBtn.on(Laya.Event.MOUSE_DOWN, this, this.OnLeft, [true]);
        // this._leftBtn.on(Laya.Event.MOUSE_UP, this, this.OnLeft, [false]);
        // this._rightBtn.on(Laya.Event.MOUSE_DOWN, this, this.OnRight, [true]);
        // this._rightBtn.on(Laya.Event.MOUSE_UP, this, this.OnRight, [false]);
        // this._upBtn.on(Laya.Event.MOUSE_DOWN, this, this.OnUp, [true]);
        // this._upBtn.on(Laya.Event.MOUSE_UP, this, this.OnUp, [false]);
        // this._downBtn.on(Laya.Event.MOUSE_DOWN, this, this.OnDown, [true]);
        // this._downBtn.on(Laya.Event.MOUSE_UP, this, this.OnDown, [false]);
        // this._fireBallBtn.on(Laya.Event.MOUSE_DOWN, this, this.OnFireBallBtn);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.TransformEvent, this, this.TransformPanle);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.CharacterFalling, this, this.Falling);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.CharacterClimbing, this, this.Climbing);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.CharacterNormal, this, this.Normal);
    };
    BtnPanel.prototype.removeEvent = function () {
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.TransformEvent, this, this.TransformPanle);
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.CharacterFalling, this, this.Falling);
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.CharacterClimbing, this, this.Climbing);
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.CharacterNormal, this, this.Normal);
    };
    BtnPanel.prototype.TransformPanle = function (isCar) {
        this._tRexPanle.visible = SceneMgr_1.default.Instance.PlayerKind == Enums_1.PlayerType.TRex;
        this._kingKongPanle.visible = SceneMgr_1.default.Instance.PlayerKind == Enums_1.PlayerType.Kingkong;
        // this.Normal();
        // if (SceneMgr_cscj.Instance.PlayerKind == PlayerType.TRex) {
        //     // this._pterPanel.visible = true;
        //     this._tRexPanle.visible = false;
        // }
        // else {
        //     // this._pterPanel.visible = false;
        //     this._tRexPanle.visible = true;
        // }
        // EventMgr_csjc.dispatch_csjc(EventDef_csjc.Game_Input_csjc, { InputType: InputType.RockerAxis, Value: null })
    };
    BtnPanel.prototype.OnTransBtn = function () {
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_Input_csjc, { InputType: Enums_1.InputType.Transform });
    };
    BtnPanel.prototype.OnAttackBtn = function () {
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_Input_csjc, { InputType: Enums_1.InputType.Attack });
    };
    BtnPanel.prototype.OnJumpBtn = function () {
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_Input_csjc, { InputType: Enums_1.InputType.Jump });
    };
    BtnPanel.prototype.OnThrowStoneBtn = function () {
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_Input_csjc, { InputType: Enums_1.InputType.ThrowStone });
    };
    BtnPanel.prototype.OnFireBtn = function (isDown) {
        this._fire = isDown;
    };
    BtnPanel.prototype.OnFireBallBtn = function (isDown) {
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_Input_csjc, { InputType: Enums_1.InputType.FireBall });
    };
    BtnPanel.prototype.OnFront = function (isDown) {
        this._front = isDown;
        if (isDown) {
            this._back = false;
        }
    };
    BtnPanel.prototype.OnBack = function (isDown) {
        this._back = isDown;
        if (isDown) {
            this._front = false;
        }
    };
    BtnPanel.prototype.OnLeft = function (isDown) {
        this._left = isDown;
        if (isDown) {
            this._right = false;
        }
    };
    BtnPanel.prototype.OnRight = function (isDown) {
        this._right = isDown;
        if (isDown) {
            this._left = false;
        }
    };
    BtnPanel.prototype.OnUp = function (isDown) {
        this._up = isDown;
        if (isDown) {
            this._down = false;
        }
    };
    BtnPanel.prototype.OnDown = function (isDown) {
        this._down = isDown;
        if (isDown) {
            this._up = false;
        }
    };
    BtnPanel.prototype.Falling = function () {
        if (!this._attackBtn.gray)
            this._attackBtn.gray = true;
        if (!this._RTransBtn.gray)
            this._RTransBtn.gray = true;
        if (!this._jumpBtn.gray)
            this._jumpBtn.gray = true;
        if (!this._fireBtn.gray)
            this._fireBtn.gray = true;
        if (!this._kingKongAtkBtn.gray)
            this._kingKongAtkBtn.gray = true;
        if (!this._kingKongFireBtnBtn.gray)
            this._kingKongFireBtnBtn.gray = true;
    };
    BtnPanel.prototype.Climbing = function () {
        if (!this._attackBtn.gray)
            this._attackBtn.gray = true;
        if (!this._RTransBtn.gray)
            this._RTransBtn.gray = true;
        if (!this._fireBtn.gray)
            this._fireBtn.gray = true;
        if (this._jumpBtn.gray)
            this._jumpBtn.gray = false;
        if (!this._kingKongAtkBtn.gray)
            this._kingKongAtkBtn.gray = true;
        if (!this._kingKongFireBtnBtn.gray)
            this._kingKongFireBtnBtn.gray = true;
    };
    BtnPanel.prototype.Normal = function () {
        if (this._attackBtn.gray)
            this._attackBtn.gray = false;
        if (this._RTransBtn.gray)
            this._RTransBtn.gray = false;
        if (this._jumpBtn.gray)
            this._jumpBtn.gray = false;
        if (this._fireBtn.gray)
            this._fireBtn.gray = false;
        if (this._kingKongAtkBtn.gray)
            this._kingKongAtkBtn.gray = false;
        if (this._kingKongFireBtnBtn.gray)
            this._kingKongFireBtnBtn.gray = false;
    };
    return BtnPanel;
}(Laya.Script));
exports.default = BtnPanel;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../GameCore/Enums":40,"../GameCore/SceneMgr":50}],53:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var User_1 = require("../../User/User");
var CoinSubView = /** @class */ (function (_super) {
    __extends(CoinSubView, _super);
    function CoinSubView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._coinGetList = [];
        _this._effectCount = 0;
        _this._effectTimer = -1;
        _this._goldList = [];
        return _this;
    }
    CoinSubView.prototype.onAwake = function () {
        this._ownerSp = this.owner;
        this._coin_Sp = this.owner.getChildByName("CoinSp");
        this._coinCount_FontClip = this.owner.getChildByName("CoinCount_FontClip");
        this._coinCount_FontClip.value = User_1.default.getMoney_csjc().toString();
        this._originalScale = this._coinCount_FontClip.scaleX;
    };
    CoinSubView.prototype.onStart = function () {
        this.InitGetCointList();
    };
    CoinSubView.prototype.InitGetCointList = function () {
        var _this = this;
        var _loop_1 = function (index) {
            var sp = new Laya.Sprite();
            sp.loadImage("subRes/image/coin.png", Laya.Handler.create(this_1, function () {
                Laya.stage.addChild(sp);
                _this._coinGetList.push(sp);
                sp.visible = false;
                sp.x = 0;
                sp.y = 0;
            }));
        };
        var this_1 = this;
        for (var index = 0; index < 10; index++) {
            _loop_1(index);
        }
        for (var i = 0; i < 4; i++) {
            var text = new Laya.Text();
            text.text = "1000";
            text.width = 120;
            text.height = 40;
            text.pivotX = 60;
            text.pivotY = 20;
            text.align = "center";
            text.valign = "middle";
            text.font = "Microsoft YaHei";
            text.fontSize = 30;
            text.bold = true;
            text.color = "#FFFFFF";
            text.strokeColor = "#000000";
            text.stroke = 4;
            text.visible = false;
            this._ownerSp.addChild(text);
            this._goldList.push(text);
        }
    };
    CoinSubView.prototype.onEnable = function () {
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.Game_OnUserMoneyChange_csjc, this, this.CoinChange);
        // EventMgr_csjc.regEvent_csjc(EventDef_csjc.Game_OnUserMoneyChange_csjc, this, this.GetJumpDistance);
    };
    CoinSubView.prototype.onDestroy = function () {
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.Game_OnUserMoneyChange_csjc, this, this.CoinChange);
        // EventMgr_csjc.removeEvent_csjc(EventDef_csjc.Game_GetJumpDistance, this, this.GetJumpDistance);
    };
    CoinSubView.prototype.onUpdate = function () {
        if (this._effectTimer >= 0) {
            this._effectTimer += Laya.timer.delta / 1000;
            var angel = this._effectTimer * 1440;
            var rad = angel * Math.PI / 180;
            var scare = this._originalScale + 0.05 * (Math.sin(rad));
            this._coinCount_FontClip.scaleX = scare;
            this._coinCount_FontClip.scaleY = scare;
            var curcoin = parseInt(this._coinCount_FontClip.value);
            var countRemain = User_1.default.getMoney_csjc() - curcoin;
            var timeRemain = ((360 - angel) / 360) * 1000;
            timeRemain = (countRemain / timeRemain) * Laya.timer.delta;
            this._coinCount_FontClip.value = (curcoin + Math.floor(timeRemain)).toString();
            if (angel > 360) {
                this._effectTimer = -1;
                this._coinCount_FontClip.value = User_1.default.getMoney_csjc().toString();
            }
        }
    };
    CoinSubView.prototype.CoinChange = function (res) {
        if (res == null)
            return;
        if (res.curr > res.last) {
            if (res.getLoc) {
                var count = res.curr - res.last;
                if (count <= 25) {
                    this._effectCount = 1;
                }
                else if (count <= 50) {
                    this._effectCount = 3;
                }
                else if (count <= 200) {
                    this._effectCount = 5;
                }
                else if (count <= 400) {
                    this._effectCount = 7;
                }
                else {
                    this._effectCount = 10;
                }
                this._getLoc = res.getLoc;
                this.GetCoinStep1(count);
                // this.GetGoldCount(count);
                // Laya.timer.once(500, this, this.GetCoinStep2);
            }
            else {
                this._effectTimer = 0;
            }
        }
        else if (res.curr < res.last) {
            SoundMgr_1.default.instance_csjc.playSound_csjc("gold2");
            this._effectTimer = 0;
        }
    };
    // GetJumpDistance(point: Laya.Point, distance: number) {
    //     if (this._goldList.length <= 0) return;
    //     const goldText = this._goldList.pop();
    //     point = this._ownerSp.globalToLocal(point, true);
    //     goldText.x = point.x;
    //     goldText.y = point.y;
    //     goldText.fontSize = 50;
    //     goldText.bold = true;
    //     goldText.color = "#FFFFFF";
    //     goldText.strokeColor = "#000000";
    //     goldText.stroke = 4;
    //     goldText.text = "飞行距离:" + distance.toFixed(0);
    //     goldText.visible = true;
    //     Laya.timer.once(1000, this, () => {
    //         goldText.visible = false;
    //         this._goldList.push(goldText);
    //     });
    // }
    CoinSubView.prototype.GetGoldCount = function (count) {
        var _this = this;
        if (this._goldList.length <= 0)
            return;
        var goldText = this._goldList.pop();
        // console.log(sceenPos);
        var point = this._ownerSp.globalToLocal(this._getLoc, true);
        goldText.x = point.x;
        goldText.y = point.y;
        goldText.fontSize = 40;
        goldText.bold = true;
        goldText.color = "#FFFFFF";
        goldText.strokeColor = "#000000";
        goldText.stroke = 4;
        goldText.text = "获得金币" + count /*  + count */;
        goldText.visible = true;
        // Laya.Tween.to(goldText, { x: 0, y: 0 }, 500, null, Laya.Handler.create(this, () => {
        //     goldText.visible = false;
        // }), 300);
        Laya.timer.once(500, this, function () {
            goldText.visible = false;
            _this._goldList.push(goldText);
        });
    };
    CoinSubView.prototype.GetCoinStep1 = function (count) {
        var _this = this;
        var point = this._ownerSp.globalToLocal(this._getLoc, true);
        var _loop_2 = function (index) {
            if (this_2._coinGetList.length <= 0) {
                return "break";
            }
            var sp = this_2._coinGetList.pop();
            sp.x = point.x;
            sp.y = point.y;
            sp.visible = true;
            sp.zOrder = sp.parent.numChildren - 1;
            /* if (count > 50) */ {
                var rdx = point.x + (Math.random() * 300) - 150;
                var rdy = point.y + (Math.random() * 300) - 150;
                var coinPoint = this_2._ownerSp.localToGlobal(new Laya.Point(this_2._coin_Sp.x, this_2._coin_Sp.y));
                Laya.Tween.to(sp, { x: coinPoint.x, y: coinPoint.y }, 500, null, Laya.Handler.create(sp, function () {
                    SoundMgr_1.default.instance_csjc.playSound_csjc("gold2");
                    _this._effectTimer = 0;
                    sp.visible = false;
                    _this._coinGetList.push(sp);
                }), 200 + (50 * index));
                // Laya.Tween.to(sp, { x: rdx, y: rdy }, 200, null, Laya.Handler.create(this, () => {
                //     let coinPoint = this._ownerSp.localToGlobal(new Laya.Point(this._coin_Sp.x, this._coin_Sp.y));
                //     Laya.Tween.to(sp, { x: coinPoint.x, y: coinPoint.y }, 500, null, Laya.Handler.create(sp, () => {
                //         SoundMgr_csjc.instance_csjc.playSound_csjc("gold2");
                //         this._effectTimer = 0;
                //         sp.visible = false;
                //         this._coinGetList.push(sp);
                //     }), 200 + (50 * index));
                // }));
            }
            // else {
            //     let point = this._ownerSp.globalToLocal(this._getLoc);
            //     let coinPoint = /* this._ownerSp.globalToLocal( */new Laya.Point(this._coin_Sp.x, this._coin_Sp.y);
            //     Laya.Tween.to(sp, { x: coinPoint.x, y: coinPoint.y }, 500, null, Laya.Handler.create(sp, () => {
            //         SoundMgr.instance.playSound("gold");
            //         this._effectTimer = 0;
            //         sp.visible = false;
            //         this._coinGetList.push(sp);
            //     }), 500);
            // }
        };
        var this_2 = this;
        for (var index = 0; index < this._effectCount; index++) {
            var state_1 = _loop_2(index);
            if (state_1 === "break")
                break;
        }
    };
    CoinSubView.prototype.GetCoinStep2 = function (sp) {
        var _this = this;
        var point = this._ownerSp.globalToLocal(this._getLoc);
        var coinPoint = /* this._ownerSp.globalToLocal( */ new Laya.Point(this._coin_Sp.x, this._coin_Sp.y);
        var _loop_3 = function (index) {
            var sp_1 = this_3._coinGetList[index];
            // let rdx = point.x + Math.random() * 100;
            // let rdy = point.y + Math.random() * 100;
            Laya.Tween.to(sp_1, { x: coinPoint.x, y: coinPoint.y }, 500, null, Laya.Handler.create(sp_1, function () {
                SoundMgr_1.default.instance_csjc.playSound_csjc("gold2");
                _this._effectTimer = 0;
                sp_1.visible = false;
                _this._coinGetList.push(sp_1);
            }), 50 * index);
        };
        var this_3 = this;
        for (var index = 0; index < this._effectCount; index++) {
            _loop_3(index);
        }
    };
    return CoinSubView;
}(Laya.Script));
exports.default = CoinSubView;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Mgr/SoundMgr":10,"../../User/User":67}],54:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var Controller = /** @class */ (function (_super) {
    __extends(Controller, _super);
    function Controller() {
        return _super.call(this) || this;
    }
    /**
     * 鼠标按下时
     *
     * @memberof Controller
     */
    Controller.prototype.onMouseDown = function () {
        this._isMouseDown = true;
        this._lastX = null;
        this._lastY = null;
    };
    /**
     * 当鼠标移出时
     *
     * @memberof Controller
     */
    Controller.prototype.onMouseOut = function () {
        this._isMouseDown = false;
        this._lastX = null;
        this._lastY = null;
    };
    /**
     * 鼠标抬起
     *
     * @memberof Controller
     */
    Controller.prototype.onMouseUp = function () {
        this._isMouseDown = false;
        this._lastX = null;
        this._lastY = null;
    };
    /**
     * 鼠标移动
     *
     * @memberof Controller
     */
    Controller.prototype.onMouseMove = function () {
        if (this._isMouseDown) {
            if (this._lastX == null) {
                this._lastX = Laya.stage.mouseX;
            }
            else {
                var x = Laya.stage.mouseX - this._lastX;
                // EventMgr_csjc.dispatch_csjc(EventDef_csjc.Game_Input_csjc, { InputType: InputType.CameraAxis, Value: new Laya.Point(x, y) });
                EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Camera_Event_csjc, { CameraRotateY: -x * 0.3 });
                this._lastX = Laya.stage.mouseX;
            }
            if (this._lastY == null) {
                this._lastY = Laya.stage.mouseY;
            }
            else {
                var y = Laya.stage.mouseY - this._lastY;
                // EventMgr_csjc.dispatch_csjc(EventDef_csjc.Game_Input_csjc, { InputType: InputType.CameraAxis, Value: new Laya.Point(x, y) });
                EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Camera_Event_csjc, { CameraRotateX: y * 0.3 });
                this._lastY = Laya.stage.mouseY;
            }
        }
    };
    return Controller;
}(Laya.Script));
exports.default = Controller;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6}],55:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ExamineMgr_1 = require("../../CommomAPI/ExamineMgr");
var ExamineCheck = /** @class */ (function (_super) {
    __extends(ExamineCheck, _super);
    function ExamineCheck() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    ExamineCheck.prototype.onAwake = function () {
        this._owner = this.owner;
    };
    ExamineCheck.prototype.onStart = function () {
        if (!ExamineMgr_1.default.CanDoScz_Wx) {
            this._owner.visible = false;
        }
    };
    return ExamineCheck;
}(Laya.Script));
exports.default = ExamineCheck;
},{"../../CommomAPI/ExamineMgr":2}],56:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SceneMgr_1 = require("../GameCore/SceneMgr");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var FsmEnum_1 = require("../GameCore/Fsm/FsmEnum");
var GameStep = /** @class */ (function (_super) {
    __extends(GameStep, _super);
    function GameStep() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._enemyList = [];
        _this._testList = [];
        return _this;
    }
    GameStep.prototype.onAwake = function () {
        this._ownerSp = this.owner;
        this._gameTimer = this.owner.getChildByName("GameTimer");
        this._enemyDead = this.owner.getChildByName("EnemyDead");
        this._enemyCount = this.owner.getChildByName("EnemyCount");
        this._lock = this.owner.getChildByName("Lock");
        this._enemyDead.visible = false;
        this.InitGetCointList();
    };
    GameStep.prototype.onEnable = function () {
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.EnemyDead, this, this.EnemyDeadEvent);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.EnemyLock, this, this.EnemyDeadEvent);
    };
    GameStep.prototype.onDestroy = function () {
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.EnemyDead, this, this.EnemyDeadEvent);
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.EnemyLock, this, this.EnemyDeadEvent);
    };
    GameStep.prototype.InitGetCointList = function () {
        var _this = this;
        var _loop_1 = function (index) {
            var sp = new Laya.Sprite();
            sp.loadImage("subRes/image/biaoji.png", Laya.Handler.create(this_1, function () {
                _this._ownerSp.addChild(sp);
                _this._enemyList.push(sp);
                sp.visible = false;
                sp.x = 0;
                sp.y = 0;
                sp.pivotX = 25;
                sp.pivotY = 25;
            }));
        };
        var this_1 = this;
        for (var index = 0; index < 10; index++) {
            _loop_1(index);
        }
        for (var i = 0; i < 4; i++) {
            var text = new Laya.Text();
            text.text = "1000";
            text.width = 120;
            text.height = 40;
            text.pivotX = 60;
            text.pivotY = 20;
            text.align = "center";
            text.valign = "middle";
            text.font = "Microsoft YaHei";
            text.fontSize = 30;
            text.bold = true;
            text.color = "#FFFFFF";
            text.strokeColor = "#000000";
            text.stroke = 4;
            text.visible = false;
            this._ownerSp.addChild(text);
            this._testList.push(text);
        }
    };
    GameStep.prototype.onUpdate = function () {
        var list = SceneMgr_1.default.Instance.EnemyLocList;
        for (var index = 0; index < this._enemyList.length; index++) {
            var enemySp = this._enemyList[index];
            var obj = list[index];
            if (obj == null || (SceneMgr_1.default.Instance.Player.StateId == FsmEnum_1.StateID.Pter && obj.Postion == SceneMgr_1.default.Instance.CurrLockEnemyPos)) {
                if (enemySp.visible) {
                    enemySp.visible = false;
                }
            }
            else {
                var point = new Laya.Point();
                var loc = obj.Postion;
                var dis = obj.Distance;
                if (loc.z > 0) {
                    point.setTo(Laya.stage.width / 2, Laya.stage.height);
                }
                else {
                    point.setTo(loc.x, loc.y);
                }
                if (point.x < 0) {
                    point.x = 0;
                }
                else if (point.x > Laya.stage.width) {
                    point.x = Laya.stage.width;
                }
                this._ownerSp.globalToLocal(point);
                enemySp.x = point.x;
                enemySp.y = point.y;
                if (!enemySp.visible) {
                    enemySp.visible = true;
                }
                enemySp.scaleX = Math.min(1, Math.max(0.7, (dis / 50)));
                enemySp.scaleY = enemySp.scaleX;
            }
        }
        var time = SceneMgr_1.default.Instance.RestTimer;
        var min = Math.floor(time / 60);
        var sec = (time % 60);
        var minscr = "";
        var secscr = "";
        if (min < 10) {
            minscr = "0" + min;
        }
        else {
            minscr = min.toString();
        }
        if (sec < 10) {
            secscr = "0" + sec;
        }
        else {
            secscr = sec.toString();
        }
        this._gameTimer.value = minscr + ":" + secscr;
        this._enemyCount.value = SceneMgr_1.default.Instance.EnemyKillCount + "/" + SceneMgr_1.default.Instance.EnemCount;
        if (SceneMgr_1.default.Instance.CurrLockEnemyPos != null && SceneMgr_1.default.Instance.Player.StateId == FsmEnum_1.StateID.Pter) {
            if (!this._lock.visible) {
                this._lock.visible = true;
            }
            var point = new Laya.Point();
            point.setTo(SceneMgr_1.default.Instance.CurrLockEnemyPos.x, SceneMgr_1.default.Instance.CurrLockEnemyPos.y);
            this._ownerSp.globalToLocal(point);
            this._lock.x = point.x;
            this._lock.y = point.y;
        }
        else {
            if (this._lock.visible) {
                this._lock.visible = false;
            }
        }
    };
    GameStep.prototype.EnemyDeadEvent = function () {
        var _this = this;
        Laya.timer.once(500, this, function () {
            _this._enemyDead.visible = true;
        });
        Laya.timer.once(2000, this, function () {
            _this._enemyDead.visible = false;
        });
    };
    GameStep.prototype.EnemyLock = function (loc) {
    };
    return GameStep;
}(Laya.Script));
exports.default = GameStep;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../GameCore/Fsm/FsmEnum":45,"../GameCore/SceneMgr":50}],57:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var CachedWXBannerAd_1 = require("../../PlatformApi/CachedWXBannerAd");
var KdBannerView = /** @class */ (function (_super) {
    __extends(KdBannerView, _super);
    function KdBannerView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._needShowAni = true;
        _this._countTimer = 0; //效果计时器
        _this._progressWidth_csjc = 0; //进度条宽度
        _this._clickTime_csjc = 0; //用来保存用户当前点击次数
        _this._totalClickTime_csjc = 0; //用于计算客户总共点击了多少次按钮
        _this._totalClickTimer_csjc = 30; //用户一直没中套路，那么点击了这么多次都还是让他继续玩下去，不要卡死程序
        _this._needClickTime_csjc = 15; //一共点多少次能够获得奖励，用于显示进度条
        _this._bannerClickTime_csjc = Math.floor(Math.random() * 5) + 2; //点多少次开始显示bannerr套路用户  
        _this._bannerClicked_csjc = false; //Banner是否已经点击;
        _this.onOpenEvent = function () {
            CachedWXBannerAd_1.default.hide_csjc();
        };
        _this.onCloseEvent = function () {
            console.log("----------------狂点结束");
            ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.InGameView);
            CachedWXBannerAd_1.default.hide_csjc();
        };
        return _this;
    }
    KdBannerView.prototype.onAwake = function () {
        this._treasure_csjc = this.owner.getChildByName("Treasure");
        this._progress_csjc = this.owner.getChildByName("Progress");
        this._progressBar_csjc = this._progress_csjc.getChildByName("Bar");
        this._progressWidth_csjc = this._progressBar_csjc.width;
        this._progressBar_csjc.width = 0;
        this._clickBtn_csjc = this.owner.getChildByName("ClickBtn");
    };
    KdBannerView.prototype.onShow = function () {
        _super.prototype.onShow.call(this);
        console.log("----------------进入狂点");
    };
    KdBannerView.prototype.onUpdate = function () {
        // console.log("-*----------------------狂点内部")
        if (this._needShowAni) {
            this._countTimer += Laya.timer.delta / 1000;
            var angle = this._countTimer * 3.14 / 180 * 720;
            this._treasure_csjc.rotation = Math.sin(angle) * 15;
            var progress = this._clickTime_csjc / this._needClickTime_csjc;
            var spd = 2 + (progress * 2);
            if (this._progressBar_csjc.width >= spd) {
                this._progressBar_csjc.width -= spd;
            }
            if ((this._progressBar_csjc.width / this._progressWidth_csjc) + 0.1 < progress) {
                this._clickTime_csjc--;
            }
        }
        else {
            this._treasure_csjc.rotation = 0;
        }
    };
    KdBannerView.prototype.addEvent = function () {
        this._clickBtn_csjc.on(Laya.Event.CLICK, this, this.OnClickBtn);
    };
    KdBannerView.prototype.OnClickBtn = function () {
        var _this = this;
        this._totalClickTime_csjc++;
        this._clickTime_csjc++;
        if (this._clickTime_csjc > this._needClickTime_csjc) {
            this._clickTime_csjc = this._needClickTime_csjc;
        }
        if (this._clickTime_csjc >= this._bannerClickTime_csjc) {
            if (this._clickTime_csjc >= this._needClickTime_csjc) {
                this._clickTime_csjc = this._needClickTime_csjc - 1;
            }
            if (this._bannerClicked_csjc) {
                var progress_1 = this._clickTime_csjc / this._needClickTime_csjc;
                this._progressBar_csjc.width = progress_1 * this._progressWidth_csjc;
                return;
            }
            this._bannerClicked_csjc = true;
            this.ShowBanner();
            Laya.timer.once(1500, this, function () {
                _this.BannerClicked();
            });
        }
        else if (this._totalClickTime_csjc > this._totalClickTimer_csjc) {
            this.ShowBanner();
            this.BannerClicked();
        }
        var progress = this._clickTime_csjc / this._needClickTime_csjc;
        this._progressBar_csjc.width = progress * this._progressWidth_csjc;
    };
    KdBannerView.prototype.BannerClicked = function () {
        this._needShowAni = false;
        this._bannerClicked_csjc = true;
        this._clickTime_csjc = this._needClickTime_csjc;
        this._progressBar_csjc.width = this._progressWidth_csjc;
        this._clickBtn_csjc.visible = false;
        this.closeView();
    };
    KdBannerView.prototype.ShowBanner = function () {
        CachedWXBannerAd_1.default.changeShow_csjc(1);
    };
    return KdBannerView;
}(ViewBase_1.default));
exports.default = KdBannerView;
},{"../../Mgr/ViewMgr":12,"../../PlatformApi/CachedWXBannerAd":17,"../../View/ViewBase":90}],58:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var SceneMgr_1 = require("../GameCore/SceneMgr");
var TutorialView = /** @class */ (function (_super) {
    __extends(TutorialView, _super);
    function TutorialView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._index = 0;
        _this.onCloseEvent = function () {
            SceneMgr_1.default.Instance.StartGame();
        };
        return _this;
    }
    TutorialView.prototype.onAwake = function () {
        this._skipBtn = this.owner.getChildByName("SkipBtn");
        this._display = this.owner.getChildByName("Tutorial").getChildByName("Display");
        this._nextBtn = this.owner.getChildByName("NextBtn");
        this._display.skin = "subRes/image/0.jpg";
    };
    TutorialView.prototype.OnSkipBtn = function () {
        this.closeView();
    };
    TutorialView.prototype.addEvent = function () {
        this._skipBtn.on(Laya.Event.CLICK, this, this.OnSkipBtn);
        this._nextBtn.on(Laya.Event.CLICK, this, this.OnNextBtn);
    };
    TutorialView.prototype.OnNextBtn = function () {
        this._index++;
        if (this._index > 2) {
            this._index = 0;
        }
        this._display.skin = "subRes/image/" + this._index + ".jpg";
    };
    return TutorialView;
}(ViewBase_1.default));
exports.default = TutorialView;
},{"../../View/ViewBase":90,"../GameCore/SceneMgr":50}],59:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TmAPI_1 = require("../TmAPI");
var TmAppConfig_1 = require("../TmAppConfig");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var WXAPI_1 = require("../../PlatformApi/WXAPI");
var TmBannerAdView = /** @class */ (function (_super) {
    __extends(TmBannerAdView, _super);
    function TmBannerAdView() {
        var _this = _super.call(this) || this;
        /** @prop {name:AdLocationID, tips:"广告位ID", type:Number, default:ShareAd.LoopAdLocationID}*/
        _this.AdLocationID = TmAPI_1.default.BannerAdLocationId;
        /** @prop {name:RefreshTime, tips:"刷新速度,单位为秒", type:Number, default:10}*/
        _this.RefreshTime = 10;
        _this._data = null;
        _this._positionId = 0;
        _this._creativeId = 0;
        _this._appId = "";
        _this._wxBanner = null;
        return _this;
    }
    TmBannerAdView.prototype.onAwake = function () {
        this._ownerSp = this.owner;
    };
    TmBannerAdView.prototype.onDisable = function () {
        this.clearBannerWx();
    };
    TmBannerAdView.prototype.refreshAd = function () {
        if (TmAppConfig_1.default.CurrentConfig.wxBanner && (Laya.Browser.onMiniGame || Laya.Browser.onQQMiniGame)) {
            console.log("Banner组件显示BannerWx");
            this.refreshBannerWx();
        }
        else {
            console.log("Banner组件显示BannerAd");
            this.refreshBannerAd();
        }
    };
    TmBannerAdView.prototype.refreshBannerAd = function () {
        var _this = this;
        TmAPI_1.default.TryGetAdvs(this.AdLocationID, function (config) {
            if (config != null && config.IsOpen != null && !config.IsOpen) {
                console.log("广告位：", _this.AdLocationID, " 状态为关闭,隐藏控件");
                _this._ownerSp.visible = false;
                return;
            }
            else if (config == null || config.type != 11) {
                console.log("广告位：", _this.AdLocationID, " 数据位空或者类型错误");
                return;
            }
            if (_this.owner && !_this.owner.destroyed) {
                _this._data = config.creatives[0];
                _this._creativeId = _this._data.creativeId;
                _this._positionId = _this._data.positionId;
                _this._appId = config.appId;
                Laya.loader.load(_this._data.show_config.image, Laya.Handler.create(_this, function () {
                    _this._ownerSp.loadImage(_this._data.show_config.image);
                    Laya.timer.once(_this.RefreshTime * 1000, _this, _this.refreshBannerAd);
                }));
                // this._ownerSp.loadImage(this._data.show_config.image, Laya.Handler.create(this, () => {
                //     if (!this._ownerSp.destroyed) {
                //         this._ownerSp.width = 750;
                //         this._ownerSp.height = 260;
                //     }
                //     Laya.timer.once(this.RefreshTime * 1000, this, this.refreshBannerAd);
                // }));
            }
        });
    };
    TmBannerAdView.prototype.onClick = function () {
        if (this._data) {
            console.log("跳转游戏： " + this._appId);
            TmAPI_1.default.NavigateAndReport(this._positionId, this._creativeId, this._appId, function (flag, list) {
                if (!flag) {
                    EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.AD_OnShareAdFail_csjc);
                }
                if (list != null) {
                }
            });
        }
    };
    TmBannerAdView.prototype.refreshBannerWx = function () {
        var _this = this;
        if (!Laya.Browser.onMiniGame || !this.owner.visible)
            return;
        this.clearBannerWx();
        var self = this;
        var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
        var sw = sysInfo.screenWidth;
        var sh = sysInfo.screenHeight;
        var pos = this._ownerSp.localToGlobal(new Laya.Point(0, 0));
        var left = pos.x / Laya.stage.width * sw;
        var top = pos.y / Laya.stage.height * sh;
        var width = this.WXBannerWidth ? this.WXBannerWidth / Laya.stage.width * sw : sw;
        this._wxBanner = Laya.Browser.window["wx"].createBannerAd({
            adUnitId: WXAPI_1.default.bannerAdUnitId_csjc,
            adIntervals: 30,
            style: {
                left: left,
                top: top,
                width: width,
            }
        });
        self._wxBanner.onLoad(function (res) {
            console.log("WXBanner广告 加载完成");
            console.log(res);
        });
        this._wxBanner.onError(function (err) {
            console.log("WXBanner广告 加载失败");
            console.log(err);
            _this.refreshBannerAd();
            _this.clearBannerWx();
        });
        this._wxBanner.onResize(function (res) {
            console.log(self._wxBanner.style.realWidth, self._wxBanner.style.realHeight);
        });
        self._wxBanner.show();
    };
    TmBannerAdView.prototype.clearBannerWx = function () {
        if (this._wxBanner) {
            this._wxBanner.destroy();
        }
        this._wxBanner = null;
        Laya.timer.clear(this, this.refreshBannerAd);
    };
    TmBannerAdView.prototype.onViewShow = function () {
        this.refreshAd();
    };
    TmBannerAdView.prototype.onViewHide = function () {
        this.clearBannerWx();
    };
    return TmBannerAdView;
}(Laya.Script));
exports.default = TmBannerAdView;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../PlatformApi/WXAPI":20,"../TmAPI":65,"../TmAppConfig":66}],60:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var TmAPI_1 = require("../TmAPI");
var TmListAdBox = /** @class */ (function (_super) {
    __extends(TmListAdBox, _super);
    function TmListAdBox() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._data = null;
        // protected _originW: number = 200;
        // protected _originH: number = 200;
        _this._fontSize = 25;
        _this._positionId = 0;
        _this._creativeId = 0;
        _this._appId = "";
        return _this;
        // protected onSpClick() {
        //     var data = this._data;
        //     if (data) {
        //         console.log("跳转游戏： " + data.title);
        //         if (Laya.Browser.onMiniGame) {
        //             WXAPI.navigateToMiniProgram(data.appid, data.url, (res) => {
        //                 console.log("跳转成功")
        //                 ALD.aldSendReportAdClickSuccess(data);
        //             }, (res) => {
        //                 console.log("跳转失败")
        //                 EventMgr.dispatch(EventDef.AD_OnShareAdFail);
        //                 if (res.errMsg == "navigateToMiniProgram:fail cancel") {
        //                     console.log("用户取消跳转");
        //                     ALD.aldSendReportAdClickFail(data);
        //                 }
        //             }, (res) => {
        //                 console.log("跳转完成")
        //             });
        //         }
        //         else if (Laya.Browser.onQGMiniGame) {
        //             OPPOAPI.navigateToMiniProgram(data.appid, data.title, data.url, (res) => {
        //                 console.log("跳转成功")
        //             }, (res) => {
        //                 console.log("跳转失败")
        //                 EventMgr.dispatch(EventDef.AD_OnShareAdFail);
        //             }, (res) => {
        //                 console.log("跳转完成")
        //             });
        //         }
        //         else if (Laya.Browser.onQQMiniGame) //qq小游戏
        //         {
        //             QQMiniGameAPI.navigateToMiniProgram(data.appid, data.url, (res) => {
        //                 console.log("跳转成功")
        //             }, (res) => {
        //                 console.log("跳转失败")
        //                 EventMgr.dispatch(EventDef.AD_OnShareAdFail);
        //             }, (res) => {
        //                 console.log("跳转完成")
        //             });
        //         }
        //     }
        // }
    }
    TmListAdBox.prototype.onAwake = function () {
        this._displaySp = this.owner.getChildByName("Display");
        // this._originW = this._displaySp.width;
        // this._originH = this._displaySp.height;
        this._disText = this.owner.getChildByName("TitleText");
        this._disText.text = "";
        this._fontSize = this._disText.fontSize;
    };
    // onEnable(): void {
    //     this._displaySp.on(Laya.Event.CLICK, this, this.Clicked);
    // }
    // onDisable(): void {
    //     this._displaySp.off(Laya.Event.CLICK, this, this.onClick);
    // }
    TmListAdBox.prototype.setData = function (data, parent) {
        if (data) {
            this._creativeId = data.creativeId;
            this._positionId = data.positionId;
            this._appId = data.appId;
            this._displaySp.loadImage(data.show_config.image, Laya.Handler.create(this, function () {
                // if (!this._displaySp.destroyed) {
                //     this._displaySp.width = this._originW;
                //     this._displaySp.height = this._originH;
                // }
            }));
            var str = String(data.show_config.title);
            // var num = str.length;
            // num = Math.max(5,num);
            // var fontSize = Math.floor((5 / num) * this._fontSize);
            // this._disText.fontSize = fontSize;
            this._disText.text = str;
            this._data = data;
        }
        this._parentAdView = parent;
    };
    /**
     * 控件被点击事件
     *
     * @protected
     * @memberof TmListAdBox
     */
    TmListAdBox.prototype.onClick = function () {
        var _this = this;
        if (this._data) {
            console.log("跳转游戏： " + this._appId);
            TmAPI_1.default.NavigateAndReport(this._positionId, this._creativeId, this._appId, function (flag, list) {
                if (!flag) {
                    EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.AD_OnShareAdFail_csjc);
                }
                else {
                    _this._parentAdView.event("AdRefresh");
                }
                // if (list != null) {
                //     this._parentAdView.event("Refresh");
                // }
            });
        }
    };
    return TmListAdBox;
}(Laya.Script));
exports.default = TmListAdBox;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../TmAPI":65}],61:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TmListAdBox_1 = require("./TmListAdBox");
var TmAPI_1 = require("../TmAPI");
/**
 * 用于显示滚动广告列表的类
 *
 * @export
 * @class ListAdView
 * @extends {Laya.Script}
 */
var ListAdView = /** @class */ (function (_super) {
    __extends(ListAdView, _super);
    function ListAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** @prop {name:ScrollDirection,tips:"滚动方向,水平或竖直",type:Option,option:"Horizontal,Vertical",default:"Horizontal"}*/
        _this.ScrollDirection = "Horizontal";
        /** @prop {name:AdLocationID, tips:"广告位ID", type:Number, default:ShareAd.LoopAdLocationID}*/
        _this.AdLocationID = TmAPI_1.default.ListIcoAdLocationId;
        /** @prop {name:ScrollSpeed, tips:"滚动速度", type:Number, default:100}*/
        _this.ScrollSpeed = 100;
        _this._scrollForward = true;
        return _this;
    }
    ListAdView.prototype.onAwake = function () {
        this._ownerSp = this.owner;
        this._list = this.owner.getChildByName("List");
        this._list.elasticEnabled = true;
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        if (this.ScrollDirection == "Horizontal") {
            this._list.hScrollBarSkin = "";
        }
        else {
            this._list.vScrollBarSkin = "";
        }
        this.owner.on("AdRefresh", this, this.RefreshAdList);
    };
    ListAdView.prototype.onEnable = function () {
        this.RefreshAdList();
    };
    ListAdView.prototype.RefreshAdList = function () {
        var _this = this;
        TmAPI_1.default.TryGetAdvs(this.AdLocationID, function (config) {
            if (config != null && config.IsOpen != null && !config.IsOpen) {
                console.log("广告位：", _this.AdLocationID, " 状态为关闭,隐藏控件");
                _this._ownerSp.visible = false;
                return;
            }
            else if (config == null || config.type != 7) {
                console.log("广告位：", _this.AdLocationID, " 数据位空或者类型错误");
                _this._list.array = null;
                return;
            }
            if (_this.owner && !_this.owner.destroyed) {
                var datas = config.creatives;
                _this._list.array = datas;
                // if (datas && datas.length > 0 && datas.length < 50) {
                //     (this.owner as Laya.Sprite).visible = true;
                //     var temp = []
                //     var counter = 0;
                //     for (var i = 0; i < 50; ++i) {
                //         if (counter >= datas.length) {
                //             counter = 0;
                //         }
                //         temp.push(datas[counter]);
                //         ++counter;
                //     }
                //     this._list.array = temp;
                // }
                // else {
                //     this._list.array = datas;
                //     (this.owner as Laya.Sprite).visible = false;
                // }
            }
        });
    };
    // onUpdate() {
    //     let scrollValue = this.ScrollSpeed * Laya.timer.delta / 1000;
    //     if (this._scrollForward) {
    //         this._list.scrollBar.value += scrollValue;
    //         if (this._list.scrollBar.value >= this._list.scrollBar.max) {
    //             this._scrollForward = false;
    //         }
    //     }
    //     else {
    //         this._list.scrollBar.value -= scrollValue;
    //         if (this._list.scrollBar.value <= 0) {
    //             this._scrollForward = true;
    //         }
    //     }
    // }
    ListAdView.prototype.onUpdate = function () {
        var scrollValue = this.ScrollSpeed * Laya.timer.delta / 1000;
        this._list.scrollBar.value += scrollValue;
        if (this._list.scrollBar.value >= this._list.scrollBar.max) {
            this._list.scrollBar.value = 0;
        }
        else if (this._list.scrollBar.value < 0) {
            this._list.scrollBar.value = this._list.scrollBar.max;
        }
    };
    ListAdView.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        var listAdBox = cell.getComponent(TmListAdBox_1.default);
        listAdBox.setData(data, this.owner);
    };
    return ListAdView;
}(Laya.Script));
exports.default = ListAdView;
},{"../TmAPI":65,"./TmListAdBox":60}],62:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TmAPI_1 = require("../TmAPI");
var TmListAdBox_1 = require("./TmListAdBox");
var TmShakeAdView = /** @class */ (function (_super) {
    __extends(TmShakeAdView, _super);
    function TmShakeAdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** @prop {name:AdLocationID, tips:"广告位ID", type:Number, default:ShareAd.LoopAdLocationID}*/
        _this.AdLocationID = TmAPI_1.default.ListIcoAdLocationId;
        /** @prop {name:ShakeTime, tips:"闪动速度", type:Number, default:1000}*/
        _this.ShakeTime = 1000;
        /** @prop {name:ChaneAdTime, tips:"更换广告速度", type:Number, default:1000}*/
        _this.ChaneAdTime = 6000;
        /** @prop {name:RotaAngel, tips:"晃动角度", type:Number, default:10}*/
        _this.RotaAngel = 10;
        /** @prop {name:Scale, tips:"晃动缩放", type:Number, default:0.1}*/
        _this.Scale = 0.1;
        _this._shakeTimer = 0;
        _this._changeAdTimer = 0;
        _this._shakeIndex = 0;
        return _this;
    }
    ;
    TmShakeAdView.prototype.onAwake = function () {
        this._ownerSp = this.owner;
        this._list = this.owner.getChildByName("List");
        this._list.renderHandler = Laya.Handler.create(this, this.onListRender, null, false);
        this._cells = this._list.cells;
    };
    TmShakeAdView.prototype.onEnable = function () {
        this.RefreshAdList();
    };
    TmShakeAdView.prototype.onUpdate = function () {
        if (this._changeAdTimer <= this.ChaneAdTime) {
            this._changeAdTimer += Laya.timer.delta;
        }
        if (this._shakeTimer <= this.ShakeTime) {
            this._shakeTimer += Laya.timer.delta;
            var box = this._cells[this._shakeIndex];
            var period = this._shakeTimer / this.ShakeTime;
            var aniPeriod = 0;
            if (period >= 0 && period < 0.2) {
                aniPeriod = (period / 0.2);
            }
            else if (period >= 0.2 && period < 0.4) {
                aniPeriod = 1 - ((period - 0.2) / 0.2);
            }
            else if (period >= 0.4 && period < 0.6) {
                aniPeriod = -1 * ((period - 0.4) / 0.2);
            }
            else if (period >= 0.6 && period < 0.8) {
                aniPeriod = -1 + ((period - 0.6) / 0.2);
            }
            else {
                aniPeriod = 0;
            }
            box.rotation = aniPeriod * this.RotaAngel;
            box.scaleX = 1 - (aniPeriod * this.Scale);
            box.scaleY = box.scaleX;
        }
        else {
            this._shakeTimer = 0;
            this._shakeIndex++;
            if (this._shakeIndex > this._cells.length - 1) {
                this._shakeIndex = 0;
            }
            if (this._changeAdTimer > this.ChaneAdTime) {
                this._changeAdTimer = 0;
                this.RefreshAdList();
            }
        }
    };
    TmShakeAdView.prototype.onListRender = function (cell, index) {
        var data = this._list.array[index];
        var loopAdBox = cell.getComponent(TmListAdBox_1.default);
        loopAdBox.setData(data, this.owner);
    };
    TmShakeAdView.prototype.RefreshAdList = function () {
        var _this = this;
        TmAPI_1.default.TryGetAdvs(this.AdLocationID, function (config) {
            if (config != null && config.IsOpen != null && !config.IsOpen) {
                console.log("广告位：", _this.AdLocationID, " 状态为关闭,隐藏控件");
                _this._ownerSp.visible = false;
                return;
            }
            else if (config == null || config.type != 7) {
                console.log("广告位：", _this.AdLocationID, " 数据位空或者类型错误");
                _this._list.array = null;
                return;
            }
            if (_this.owner && !_this.owner.destroyed) {
                var datas = config.creatives;
                _this._list.array = datas;
                // if (datas && datas.length > 0 && datas.length < 50) {
                //     (this.owner as Laya.Sprite).visible = true;
                //     var temp = []
                //     var counter = 0;
                //     for (var i = 0; i < 50; ++i) {
                //         if (counter >= datas.length) {
                //             counter = 0;
                //         }
                //         temp.push(datas[counter]);
                //         ++counter;
                //     }
                //     this._list.array = temp;
                // }
                // else {
                //     this._list.array = datas;
                //     (this.owner as Laya.Sprite).visible = false;
                // }
            }
        });
    };
    return TmShakeAdView;
}(Laya.Script));
exports.default = TmShakeAdView;
},{"../TmAPI":65,"./TmListAdBox":60}],63:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var Utilit_1 = require("../../Utilit");
var TmSidePopAdView = /** @class */ (function (_super) {
    __extends(TmSidePopAdView, _super);
    function TmSidePopAdView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    TmSidePopAdView.prototype.onAwake = function () {
        this._ownerSp = this.owner;
        this._bg = this.owner.getChildByName("BG");
        this._popBtn = this._bg.getChildByName("PopADBtn");
        this._popOut_Img = this._popBtn.getChildByName("PopOut");
        this._popIn_Img = this._popBtn.getChildByName("PopIn");
        this._popOut_Img.visible = true;
        this._popIn_Img.visible = false;
    };
    TmSidePopAdView.prototype.onEnable = function () {
        var _this = this;
        this._popBtn.on(Laya.Event.CLICK, this, this.onPopBtnClick);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.AD_OnShareAdFail_csjc, this, this.onShareAdFail);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.AD_SidePopViewSwitch_csjc, this, function (res) { _this._ownerSp.visible = res; });
    };
    TmSidePopAdView.prototype.onDisable = function () {
        var _this = this;
        this._popBtn.off(Laya.Event.CLICK, this, this.onPopBtnClick);
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.AD_OnShareAdFail_csjc, this, this.onShareAdFail);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.AD_SidePopViewSwitch_csjc, this, function (res) { _this._ownerSp.visible = res; });
    };
    TmSidePopAdView.prototype.onPopBtnClick = function () {
        if (this._bg.x > 0) {
            this.popDown();
        }
        else {
            this.popUp();
        }
    };
    TmSidePopAdView.prototype.popDown = function () {
        Laya.Tween.to(this._bg, { x: 0 }, 250, Laya.Ease.circIn, Laya.Handler.create(this, function () {
        }), null, true);
    };
    TmSidePopAdView.prototype.popUp = function () {
        Utilit_1.default.forEachChild(this.owner, function (owner) {
            owner.event("AdRefresh");
        });
        Laya.Tween.to(this._bg, { x: this._bg.width }, 250, Laya.Ease.circIn, Laya.Handler.create(this, function () {
        }), null, true);
    };
    TmSidePopAdView.prototype.onShareAdFail = function () {
        this.popUp();
    };
    return TmSidePopAdView;
}(Laya.Script));
exports.default = TmSidePopAdView;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Utilit":68}],64:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TmAPI_1 = require("../TmAPI");
var TmSingleAdView = /** @class */ (function (_super) {
    __extends(TmSingleAdView, _super);
    function TmSingleAdView() {
        var _this = _super.call(this) || this;
        /** @prop {name:AdLocationID, tips:"广告位ID", type:Number, default:ShareAd.LoopAdLocationID}*/
        _this.AdLocationID = TmAPI_1.default.SingleAdLocationId;
        /** @prop {name:RefreshTime, tips:"刷新速度,单位为秒", type:Number, default:0}*/
        _this.RefreshTime = 0;
        _this._data = null;
        _this._positionId = 0;
        _this._creativeId = 0;
        _this._appId = "";
        _this._isAni = false;
        _this._aniImageIndex = 0;
        _this._aniImageArray = [];
        _this._fpsTimer = 0;
        _this._fpsTime = 0;
        return _this;
    }
    TmSingleAdView.prototype.onAwake = function () {
        this._ownerSp = this.owner;
        this._displaySp = this._ownerSp.getChildByName("Display");
    };
    TmSingleAdView.prototype.onEnable = function () {
        this.refreshAd();
    };
    TmSingleAdView.prototype.refreshAd = function () {
        var _this = this;
        TmAPI_1.default.TryGetAdvs(this.AdLocationID, function (config) {
            if (config != null && config.IsOpen != null && !config.IsOpen) {
                console.log("广告位：", _this.AdLocationID, " 状态为关闭,隐藏控件");
                _this._ownerSp.visible = false;
                return;
            }
            else if (config == null || config.type != 1) {
                console.log("广告位：", _this.AdLocationID, " 数据位空或者类型错误");
                return;
            }
            if (_this.owner && !_this.owner.destroyed) {
                _this._data = config.creatives[0];
                _this._creativeId = _this._data.creativeId;
                _this._positionId = _this._data.positionId;
                _this._appId = config.appId;
                if (_this._data.show_config.fps != null) {
                    console.log("SingleAd显示序列帧");
                    _this._aniImageArray = _this._data.show_config.images;
                    _this._fpsTime = _this._data.show_config.fps * 1000;
                    Laya.loader.load(_this._aniImageArray, Laya.Handler.create(_this, function (res) {
                        if (!res)
                            return;
                        if (_this.RefreshTime > 0) {
                            Laya.timer.once(_this.RefreshTime * 1000, _this, _this.refreshAd);
                        }
                        _this._aniImageIndex = 0;
                        _this._fpsTimer = 0;
                        _this._isAni = true;
                    }));
                }
                else {
                    console.log("SingleAd显示单独浮动");
                    _this._aniImageArray = [];
                    _this._fpsTime = 0;
                    _this._fpsTimer = 0;
                    _this._isAni = false;
                    Laya.loader.load(_this._data.show_config.image, Laya.Handler.create(_this, function () {
                        _this._displaySp.loadImage(_this._data.show_config.image);
                        if (_this.RefreshTime > 0) {
                            Laya.timer.once(_this.RefreshTime * 1000, _this, _this.refreshAd);
                        }
                    }));
                }
                // this._ownerSp.loadImage(this._data.show_config.image, Laya.Handler.create(this, () => {
                //     if (!this._ownerSp.destroyed) {
                //         this._ownerSp.width = 750;
                //         this._ownerSp.height = 260;
                //     }
                //     Laya.timer.once(this.RefreshTime * 1000, this, this.refreshBannerAd);
                // }));
            }
        });
    };
    TmSingleAdView.prototype.onUpdate = function () {
        if (this._isAni) {
            if (this._fpsTimer < this._fpsTime) {
                this._fpsTimer += Laya.timer.delta;
            }
            else {
                this._fpsTimer = 0;
                this._displaySp.loadImage(this._aniImageArray[this._aniImageIndex]);
                if (this._aniImageIndex > this._aniImageArray.length - 1) {
                    this._aniImageIndex++;
                }
                else {
                    this._aniImageIndex = 0;
                }
            }
        }
    };
    return TmSingleAdView;
}(Laya.Script));
exports.default = TmSingleAdView;
},{"../TmAPI":65}],65:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ALD_1 = require("../ALD");
var TmAppConfig_1 = require("./TmAppConfig");
var GameSettings_1 = require("../GameSettings");
/**
 * 天幕sdk系统API
 *
 * @export
 * @class TmAPI
 */
var TmAPI = /** @class */ (function () {
    function TmAPI() {
    }
    /**
     * 天幕SDK初始化
     *
     * @static
     * @memberof TmAPI
     */
    TmAPI.Init = function () {
        if (Laya.Browser.onMiniGame && this.UseSDK) {
            Laya.Browser.window["wx"].tmSDK.init({
                hideRequestLog: true,
                appVersion: this.AppVersion
            });
        }
    };
    /**
     * 登录接口
     *
     * @static
     * @param {Function} func
     * @memberof TmAPI
     */
    TmAPI.Login = function (func) {
        if (Laya.Browser.onMiniGame && this.UseSDK) {
            Laya.Browser.window["wx"].tmSDK.login().then(function (res) {
                console.log("登陆成功", res);
                if (func != null) {
                    func(res);
                }
            });
        }
    };
    TmAPI.NoLoginInit = function (openId) {
        if (Laya.Browser.onMiniGame && this.UseSDK) {
            console.log(openId);
            Laya.Browser.window["wx"].tmSDK.sendUserInfo({ openId: openId, gender: 1 });
            console.log("传入天幕OpenId: ", openId);
        }
    };
    /**
     * 尝试得到广告，会先检查广告位是否打开再真正拉取广告
     *
     * @static
     * @param {Function} func
     * @memberof TmAPI
     */
    TmAPI.TryGetAdvs = function (positionId, completeHandler) {
        var _this = this;
        if (!TmAppConfig_1.default.CurrentConfig.adSwitch) {
            console.log("广告总开关为关闭状态");
            completeHandler({ IsOpen: false });
            return;
        }
        if (Laya.Browser.onMiniGame && this.UseSDK) {
            Laya.Browser.window["wx"].tmSDK.checkFlowIsOpen({
                positionId: positionId
            }).then(function (res) {
                if (res.isOpen) {
                    _this.GetAdvs(positionId, completeHandler);
                }
                else {
                    completeHandler({ IsOpen: false });
                }
            });
        }
        else if (Laya.Browser.onQQMiniGame) {
        }
        else {
            console.log("编辑器下调用广告位,返回测试广告:", positionId);
            var AddDate = {
                creatives: [],
                isOpen: true
            };
            switch (positionId) {
                case this.ListIcoAdLocationId:
                    for (var index = 0; index < 20; index++) {
                        var creativeTemp = {
                            creativeId: 10000,
                            positionId: positionId,
                            appId: "Ico测试广告",
                            show_config: { image: "res/TmTestAd/TestIcoAd-" + (index % 5 + 1) + ".jpg", title: "1" }
                        };
                        AddDate.creatives.push(creativeTemp);
                    }
                    AddDate.type = 7;
                    break;
                case this.BannerAdLocationId:
                    var creativebanner = {
                        creativeId: 10000,
                        positionId: positionId,
                        show_config: { image: "res/TmTestAd/TestBannerAd-" + (Math.floor(Math.random() * 2) + 1) + ".jpg", title: "1" }
                    };
                    AddDate.appId = "Banner微信测试广告";
                    AddDate.creatives.push(creativebanner);
                    AddDate.type = 11;
                    break;
                case this.SingleAdLocationId:
                    var creativeSingle = {
                        creativeId: 10000,
                        positionId: positionId,
                        appId: "Single微信测试广告",
                        show_config: { image: "res/TmTestAd/TestFlowAd-" + (Math.floor(Math.random() * 2) + 1) + ".jpg", title: "1" }
                    };
                    AddDate.creatives.push(creativeSingle);
                    AddDate.type = 1;
                    break;
            }
            completeHandler(AddDate);
        }
    };
    /**
     * 拉取广告的方法,不要直接调用
     *
     * @static
     * @param {string} locationId
     * @param {Function} completeHandler
     * @memberof TmAPI
     */
    TmAPI.GetAdvs = function (positionId, completeHandler) {
        if (Laya.Browser.onMiniGame && this.UseSDK) {
            Laya.Browser.window["wx"].tmSDK.getFlowConfig({
                positionId: positionId
            }).then(function (config) {
                console.log(positionId, '该广告位是否开启:', config);
                completeHandler(config);
            });
        }
        else if (Laya.Browser.onQQMiniGame) {
        }
    };
    /**
     * 跳转和自动上报数据的集成化封装
     *
     * @static
     * @param {any} positionId
     * @param {any} creativeId
     * @memberof TmAPI
     */
    TmAPI.NavigateAndReport = function (positionId, creativeId, appid, completeFunc) {
        if (Laya.Browser.onMiniGame && this.UseSDK) {
            this.FlowNavigate(positionId, creativeId, function (flag, res) {
                console.log(flag, res);
                if (flag) {
                    ALD_1.default.aldSendReportAdClickSuccess_csjc(appid);
                }
                else {
                    if (res.navigateMessage.errMsg == "navigateToMiniProgram:fail cancel") {
                        console.log("用户取消跳转");
                        ALD_1.default.aldSendReportAdClickFail_csjc(appid);
                    }
                }
                if (completeFunc) {
                    completeFunc(flag, res);
                }
            });
        }
        else {
            if (completeFunc) {
                completeFunc(true, null);
            }
        }
    };
    /**
     * 跳转到其他小游戏
     *
     * @memberof TmAPI
     */
    TmAPI.FlowNavigate = function (positionId, creativeId, completeFunc) {
        if (Laya.Browser.onMiniGame && this.UseSDK) {
            Laya.Browser.window["wx"].tmSDK.flowNavigate({
                positionId: positionId,
                creativeId: creativeId,
            }).then(function (newList) {
                console.log('调用跳转函数成功');
                console.log('自动刷新列表：', newList); //返回最新列表 
                if (completeFunc) {
                    if (newList.navigateMessage.errMsg == "navigateToMiniProgram:ok") {
                        completeFunc(true, newList);
                    }
                    else {
                        completeFunc(false, newList);
                    }
                }
            }).catch(function (error) {
                console.log('调用跳转函数失败', error);
                if (completeFunc) {
                    completeFunc(false, error);
                }
            });
        }
        else {
            if (completeFunc) {
                console.log('在模拟器中调用跳转函数,返回虚假成功结果');
                completeFunc(true, null);
            }
        }
    };
    /**
     * 得到配置表
     *
     * @static
     * @memberof TmAPI
     */
    TmAPI.getAppJSONConfig = function (key, completeFunc) {
        if (Laya.Browser.onMiniGame && this.UseSDK) {
            Laya.Browser.window["wx"].tmSDK.getAppJSONConfig(key).then(function (res) {
                if (completeFunc) {
                    completeFunc(res);
                }
            });
        }
        else {
            if (completeFunc) {
                completeFunc();
            }
        }
    };
    /**
     * 发送事件
     *
     * @static
     * @param {string} eventId
     * @param {*} [res]
     * @memberof TmAPI
     */
    TmAPI.SendEvent = function (eventId, res) {
        if (Laya.Browser.onMiniGame && this.UseSDK) {
            console.log("发送事件:", eventId, "参数:", res);
            Laya.Browser.window["wx"].tmSDK.sendEvent(eventId, res);
        }
        else {
            console.log("在编辑器下发送Tm事件", eventId, res);
        }
    };
    TmAPI.UseSDK = false;
    //当前App版本
    TmAPI.AppVersion = GameSettings_1.default.Versions_csjc;
    //轮播广告位
    TmAPI.ListIcoAdLocationId = 1075799;
    //单个广告位
    TmAPI.SingleAdLocationId = 1075900;
    //Banner广告位
    TmAPI.BannerAdLocationId = 1076001;
    TmAPI._iphoneIgnoreAppIds = [
        "wx2d2acce3c45f4ddf",
        "wxeb93c1298ec7c62b"
    ];
    TmAPI.UserInformation = null;
    return TmAPI;
}());
exports.default = TmAPI;
},{"../ALD":1,"../GameSettings":8,"./TmAppConfig":66}],66:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TmAPI_1 = require("./TmAPI");
/**
 * 保存appConfig数值的类
 *
 * @export
 * @class TmAppConfigOptions
 */
var TmAppConfigOptions = /** @class */ (function () {
    function TmAppConfigOptions() {
        //所有导出广告的开关,true为有导出广告
        this.adSwitch = false;
        //是否打开微信banner,true为有微信banner
        this.wxBanner = false;
        //误点狂点功能总开关
        this.wudian = false;
        //审核屏蔽功能总开关,审核屏蔽的意义是让审核人员看不到某些敏感的功能,true为打开屏蔽功能
        this.examineBlock = true;
        //审核屏蔽的场景值，通过这些场景值进来的审核人员看不到某些敏感的功能
        this.examineSceneList = [
            1005, 1006, 1011, 1012, 1013, 1014, 1017, 1019,
            1020, 1023, 1024, 1025, 1030, 1031, 1032, 1036,
            1042, 1047, 1048, 1049, 1053, 1102, 1129
        ];
        //微信banner列表
        this.wxWuDianBanners = [];
        //按钮延迟出现的时间
        this.btnShowTimer = 0;
        //按钮上移的时间
        this.btnMoveTimer = 0;
        //Banner上移的时间
        this.bannerMoveTimer = 0;
        //Banner失败创建的个数
        this.bannerCreateFailNum = 3;
        //Banner每天最大创建次数
        this.bannerTodayBannerMax = 10;
        //买量功能的总开关，为了让通过买量进来的审核人员看不见广告
        this.maiLiangBlock = true;
        //买量功能的的场景值，为了让通过买量进来的审核人员看不见广告
        this.maiLiangSceneList = [
            1011, 1012, 1013, 1017, 1025, 1031, 1032, 1047,
            1048, 1049, 1072
        ];
        //下面是自定义的字段
    }
    /**
     * 初始化appConfigOption字段值
     * 如果表中没有，则设置为初始的默认值
     *
     * @param {*} res
     * @memberof TmAppConfigOptions
     */
    TmAppConfigOptions.prototype.initOptions = function (res) {
        //类型判断，如果是比较简单的number，boolean，string,function就用Typeof
        //如果是Array就用 instanceof
        if (res == null)
            return;
        if (typeof res.adSwitch == "boolean")
            this.adSwitch = res.adSwitch;
        if (typeof res.wxBanner == "boolean")
            this.wxBanner = res.wxBanner;
        if (typeof res.wudian == "boolean")
            this.wudian = res.wudian;
        if (typeof res.examineBlock == "boolean")
            this.examineBlock = res.examineBlock;
        if (res.examineSceneList instanceof Array)
            this.examineSceneList = res.examineSceneList;
        if (res.wxWuDianBanners instanceof Array)
            this.wxWuDianBanners = res.wxWuDianBanners;
        if (typeof res.btnShowTimer == "number")
            this.btnShowTimer = res.btnShowTimer;
        if (typeof res.btnMoveTimer == "number")
            this.btnMoveTimer = res.btnMoveTimer;
        if (typeof res.bannerMoveTimer == "boolean")
            this.bannerMoveTimer = res.bannerMoveTimer;
        if (typeof res.bannerCreateFailNum == "boolean")
            this.bannerCreateFailNum = res.bannerCreateFailNum;
        if (typeof res.bannerTodayBannerMax == "boolean")
            this.bannerTodayBannerMax = res.bannerTodayBannerMax;
        if (typeof res.maiLiangBlock == "boolean")
            this.maiLiangBlock = res.maiLiangBlock;
        if (res.maiLiangSceneList instanceof Array)
            this.maiLiangSceneList = res.maiLiangSceneList;
        //下面是自定义的字段
    };
    return TmAppConfigOptions;
}());
exports.TmAppConfigOptions = TmAppConfigOptions;
var TmAppConfig = /** @class */ (function () {
    function TmAppConfig() {
    }
    Object.defineProperty(TmAppConfig, "CurrentConfig", {
        get: function () {
            return this._currentConfig;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 调用在线版本的appConfig
     *
     * @static
     * @param {Function} completeFunc
     * @memberof TmAppConfig
     */
    TmAppConfig.UpdateConfig = function (completeFunc) {
        var _this = this;
        console.log("调用在线版本的appConfig");
        TmAPI_1.default.getAppJSONConfig("AppConfig", function (res) {
            _this._currentConfig.initOptions(res);
            console.log(_this._currentConfig);
            if (completeFunc) {
                completeFunc();
            }
        });
    };
    /**
     * 调用本地测试版本的appConfig
     *
     * @static
     * @param {Function} completeFunc
     * @memberof TmAppConfig
     */
    TmAppConfig.UpdateLocalConfig = function (completeFunc) {
        var _this = this;
        console.log("调用本地版本的appConfig");
        Laya.loader.load(this.LocalConfigPath, Laya.Handler.create(this, function (res) {
            _this._currentConfig.initOptions(res);
            console.log(_this._currentConfig);
            if (completeFunc) {
                completeFunc();
            }
        }));
    };
    //本地版本的appConfig存储位置
    TmAppConfig.LocalConfigPath = "res/json/AppConfigOption.json";
    //当前的appConfig对象
    TmAppConfig._currentConfig = new TmAppConfigOptions();
    return TmAppConfig;
}());
exports.default = TmAppConfig;
},{"./TmAPI":65}],67:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var StorageMgr_1 = require("../Mgr/StorageMgr");
var HttpUnit_1 = require("../Net/HttpUnit");
//游戏数据,为保持版本兼容，建议不要删除和修改字段名
var UserGameData = /** @class */ (function () {
    function UserGameData() {
        this.levelNum = 1; //当前关卡
        this.moneyNum = 0; //金币数量
        this.crystalNum = 0; //钻石数量    
        this.Piece = 1;
        this.Speed = 1;
        this.Foot = 1;
    }
    return UserGameData;
}());
exports.UserGameData = UserGameData;
var User_csjc = /** @class */ (function (_super) {
    __extends(User_csjc, _super);
    function User_csjc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    Object.defineProperty(User_csjc, "isLogin", {
        get: function () {
            return (User_csjc.code_csjc != "") || (User_csjc.token_csjc != "");
        },
        enumerable: true,
        configurable: true
    });
    User_csjc.getSaveData_csjc = function () {
        return JSON.stringify(User_csjc._gameData);
    };
    User_csjc.testInitUser_csjc = function () {
        User_csjc._gameData.levelNum = 1;
        User_csjc._gameData.moneyNum = 10000000;
        User_csjc._gameData.crystalNum = 10000000;
        User_csjc._gameData.Piece = 10;
        User_csjc._gameData.Speed = 10;
        User_csjc._gameData.Foot = 10;
    };
    User_csjc.initiUser_csjc = function (remoteData) {
        if (remoteData && 0 != remoteData) {
            User_csjc._useLocalStorage_csjc = false;
            console.log("获得在线存档");
            User_csjc.SetUserData_csjc(remoteData);
        }
        else {
            //todo：处理没有获取到玩家数据的情况,则直接调用本地数据
            console.log("获得本地存档");
            User_csjc._useLocalStorage_csjc = true;
            var dataStr = StorageMgr_1.default.getStorage_csjc("UserGameData");
            if (dataStr != null && dataStr != "") {
                var localdata = JSON.parse(dataStr);
                User_csjc.SetUserData_csjc(localdata);
            }
            else {
                this.SaveGameData_csjc();
            }
        }
    };
    User_csjc.SetUserData_csjc = function (data) {
        if (data.levelNum)
            User_csjc._gameData.levelNum = data.levelNum;
        if (data.moneyNum)
            User_csjc._gameData.moneyNum = data.moneyNum;
        if (data.crystalNum)
            User_csjc._gameData.crystalNum = data.crystalNum;
        if (data.Piece)
            User_csjc._gameData.Piece = data.Piece;
        if (data.Speed)
            User_csjc._gameData.Speed = data.Speed;
        if (data.Foot)
            User_csjc._gameData.Foot = data.Foot;
    };
    User_csjc.SaveGameData_csjc = function () {
        if (User_csjc._useLocalStorage_csjc) {
            User_csjc.SaveLocalGameDate_csjc();
        }
        else {
            HttpUnit_1.default.saveGameData_csjc(User_csjc.getSaveData_csjc(), function (res) {
                if (res.code == 1) {
                    console.log("存档成功");
                }
                else {
                    console.log("存档失败");
                }
            }, function (res) {
                console.log("存档失败");
            });
        }
    };
    User_csjc.SaveLocalGameDate_csjc = function () {
        var storage = new StorageMgr_1.StorageReq_csjc();
        storage.key = "UserGameData";
        storage.data = User_csjc._gameData;
        StorageMgr_1.default.setStorage_csjc(storage);
    };
    User_csjc.setLeveNum_csjc = function (levelNum) {
        User_csjc._gameData.levelNum = levelNum;
        this.SaveGameData_csjc();
    };
    User_csjc.getLeveNum_csjc = function () {
        return User_csjc._gameData.levelNum;
    };
    User_csjc.addMoney_csjc = function (add, getloc) {
        add = Math.ceil(add);
        var last = User_csjc._gameData.moneyNum;
        User_csjc._gameData.moneyNum += add;
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_OnUserMoneyChange_csjc, {
            curr: User_csjc._gameData.moneyNum,
            last: last,
            getLoc: getloc
        });
        this.SaveGameData_csjc();
    };
    User_csjc.subMoney_csjc = function (sub) {
        sub = Math.ceil(sub);
        var last = User_csjc._gameData.moneyNum;
        User_csjc._gameData.moneyNum -= sub;
        if (User_csjc._gameData.moneyNum < 0) {
            User_csjc._gameData.moneyNum = 0;
        }
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_OnUserMoneyChange_csjc, {
            curr: User_csjc._gameData.moneyNum,
            last: last
        });
        this.SaveGameData_csjc();
    };
    User_csjc.getMoney_csjc = function () {
        return User_csjc._gameData.moneyNum;
    };
    User_csjc.addCrystal_csjc = function (add, getloc) {
        add = Math.ceil(add);
        var last = User_csjc._gameData.crystalNum;
        User_csjc._gameData.crystalNum += add;
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_OnUserCrystalChange_csjc, {
            curr: User_csjc._gameData.crystalNum,
            last: last,
            getLoc: getloc
        });
        this.SaveGameData_csjc();
    };
    User_csjc.subCrystal_csjc = function (sub) {
        sub = Math.ceil(sub);
        var last = User_csjc._gameData.crystalNum;
        User_csjc._gameData.crystalNum -= sub;
        if (User_csjc._gameData.crystalNum < 0) {
            User_csjc._gameData.crystalNum = 0;
        }
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_OnUserCrystalChange_csjc, {
            curr: User_csjc._gameData.crystalNum,
            last: last
        });
        this.SaveGameData_csjc();
    };
    User_csjc.getCrystal_csjc = function () {
        return User_csjc._gameData.crystalNum;
    };
    User_csjc.GetSpeed_csjc = function () {
        return User_csjc._gameData.Speed;
    };
    User_csjc.SetSpeed_csjc = function (v) {
        User_csjc._gameData.Speed = v;
    };
    User_csjc.GetPiece_csjc = function () {
        return User_csjc._gameData.Piece;
    };
    User_csjc.SetPiece_csjc = function (v) {
        User_csjc._gameData.Piece = v;
    };
    User_csjc.GetFoot_csjc = function () {
        return User_csjc._gameData.Foot;
    };
    User_csjc.SetFoot_csjc = function (v) {
        User_csjc._gameData.Foot = v;
    };
    User_csjc.code_csjc = "";
    User_csjc.openId_csjc = "";
    User_csjc.token_csjc = null;
    User_csjc.nickName_csjc = "";
    User_csjc.gender_csjc = 0;
    User_csjc.city_csjc = "广州市";
    User_csjc._useLocalStorage_csjc = false; //是否使用本地储存数据
    User_csjc._gameData = new UserGameData();
    return User_csjc;
}(Laya.Script));
exports.default = User_csjc;
},{"../Event/EventDef":5,"../Event/EventMgr":6,"../Mgr/StorageMgr":11,"../Net/HttpUnit":14}],68:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var Utilit = /** @class */ (function () {
    function Utilit() {
    }
    Utilit.Lerp = function (form, to, delta) {
        if (form == to)
            return to;
        if (form > to) {
            var next = form - delta;
            if (next <= to)
                return to;
            return next;
        }
        else if (form < to) {
            var next = form + delta;
            if (next >= to)
                return to;
            return next;
        }
    };
    Utilit.lerpEulerAngle = function (form, to, delta) {
        var form = form % 360;
        form = form >= 0 ? form : (360 + form);
        var to = to % 360;
        to = to >= 0 ? to : (360 + to);
        var dis = Math.abs(to - form);
        if (dis > 180) {
            if (form < to)
                to = to - 360;
            else if (form > to)
                to = to + 360;
        }
        var next = Utilit.Lerp(form, to, delta);
        return next;
    };
    Utilit.getRotationByDir = function (v) {
        var dotValue = (v.x * Utilit.poinDown.x) + (v.y * Utilit.poinDown.y);
        var cos = dotValue / (v.distance(0, 0) * Utilit.poinDown.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = -rotation;
        }
        return rotation;
    };
    Utilit.getRotationByDirOn3DSpace = function (v) {
        var dotValue = (v.x * Utilit.poinUp.x) + (v.y * Utilit.poinUp.y);
        var cos = dotValue / (v.distance(0, 0) * Utilit.poinUp.distance(0, 0));
        var radian = Math.acos(cos);
        var rotation = radian / (2 * Math.PI) * 360;
        if (v.x < 0) {
            rotation = rotation + (180 - rotation) * 2;
        }
        return rotation;
    };
    Utilit.getDirByRotation = function (rotation) {
        var radian = (rotation - 90) * Math.PI / 180; // -90 是转换到场景坐标系
        var x = Math.cos(radian);
        var y = Math.sin(radian);
        var point = new Laya.Point(x, y);
        point.normalize();
        return point;
    };
    Utilit.getDirDirAngle = function (dir1, dir2) {
        var dotValue = (dir1.x * dir2.x) + (dir1.y * dir2.y);
        var cos = dotValue / (dir1.distance(0, 0) * dir2.distance(0, 0));
        var radian = Math.acos(cos);
        var angle = radian / (2 * Math.PI) * 360;
        return angle;
    };
    Utilit.getDirScalarLength = function (dir) {
        var sl = Math.sqrt(dir.x * dir.x + dir.y * dir.y);
        return sl;
    };
    Utilit.setSpOnParentCenter = function (sp) {
        if (null == sp.parent)
            return;
        var psp = sp.parent;
        var x = 0;
        var y = 0;
        var x = x - sp.width / 2 * sp.scaleX + psp.width / 2;
        var y = y - sp.height / 2 * sp.scaleY + psp.height / 2;
        sp.x = x;
        sp.y = y;
    };
    Utilit.getPointToLineDistance = function (x, y, LineStart, LineEnd) {
        var toStartDir = new Laya.Point(x - LineStart.x, y - LineStart.y);
        var toEndDir = new Laya.Point(x - LineEnd.x, y - LineEnd.y);
        var lineDir = new Laya.Point(LineEnd.x - LineStart.y, LineEnd.y - LineStart.y);
        var dotToStartDir = (lineDir.x * toStartDir.x) + (lineDir.y * toStartDir.y);
        if (dotToStartDir <= 0) {
            return toStartDir.distance(0, 0);
        }
        var dotToEndDir = (lineDir.x * toEndDir.x) + (lineDir.y * toEndDir.y);
        if (dotToEndDir <= 0) {
            return toEndDir.distance(0, 0);
        }
        var toStartDis = toStartDir.distance(0, 0);
        var lineDirDis = lineDir.distance(0, 0);
        var cos = dotToStartDir / (toStartDis * lineDirDis);
        var radians = Math.acos(cos);
        var dis = Math.sin(radians) * toStartDis;
        return dis;
    };
    Utilit.isIphoneX = function () {
        if (!Laya.Browser.onIPhone)
            return false;
        if ((Laya.Browser.width == 2436 && Laya.Browser.height == 1125)
            || (Laya.Browser.height == 2436 && Laya.Browser.width == 1125)) {
            return true;
        }
        return false;
    };
    Utilit.isIphone = function () {
        return Laya.Browser.onIPhone;
    };
    Utilit.getChild = function (node, name) {
        for (var i = 0; i < node.numChildren; ++i) {
            var child = node.getChildAt(i);
            if (child.name == name) {
                return child;
            }
            else {
                var target = Utilit.getChild(child, name);
                if (target)
                    return target;
            }
        }
        return null;
    };
    Utilit.forEachChild = function (node, each) {
        for (var i = 0; i < node.numChildren; ++i) {
            var child = node.getChildAt(i);
            each(child);
            Utilit.forEachChild(child, each);
        }
    };
    Utilit.OriginStageWidth = 1334;
    Utilit.OriginStageHeight = 750;
    Utilit.grayscaleMat = [0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0.3086, 0.6094, 0.0820, 0, 0,
        0, 0, 0, 1, 0];
    Utilit.grayscaleFilter = new Laya.ColorFilter(Utilit.grayscaleMat);
    Utilit.poinDown = new Laya.Point(0, -1);
    Utilit.poinUp = new Laya.Point(0, 1);
    return Utilit;
}());
exports.default = Utilit;
},{}],69:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var AlphaBreathingAni_csjc = /** @class */ (function (_super) {
    __extends(AlphaBreathingAni_csjc, _super);
    function AlphaBreathingAni_csjc() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        /** @prop {name:BreathingSpeed_csjc, tips:"呼吸速度", type:Number, default:0.5}*/
        _this.BreathingSpeed_csjc = 0.5;
        /** @prop {name:MinAlpha, tips:"最小透明值", type:Number, default:0.5}*/
        _this.MinAlpha = 0.5;
        _this._add_csjc = false;
        return _this;
    }
    AlphaBreathingAni_csjc.prototype.onAwake = function () {
        this._ownerSprite_csjc = this.owner;
    };
    AlphaBreathingAni_csjc.prototype.onUpdate = function () {
        if (this._ownerSprite_csjc.visible) {
            this.bgAni_csjc();
        }
    };
    AlphaBreathingAni_csjc.prototype.bgAni_csjc = function () {
        var spd = (Laya.timer.delta / 1000) * this.BreathingSpeed_csjc;
        if (!this._add_csjc) {
            this._ownerSprite_csjc.alpha = this._ownerSprite_csjc.alpha - spd;
            if (this._ownerSprite_csjc.alpha <= this.MinAlpha) {
                this._add_csjc = true;
            }
        }
        else {
            this._ownerSprite_csjc.alpha = this._ownerSprite_csjc.alpha + spd;
            if (this._ownerSprite_csjc.alpha >= 1) {
                this._add_csjc = false;
            }
        }
    };
    return AlphaBreathingAni_csjc;
}(Laya.Script));
exports.default = AlphaBreathingAni_csjc;
},{}],70:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var SoundMgr_1 = require("../Mgr/SoundMgr");
var ButtonAnim_csjc = /** @class */ (function (_super) {
    __extends(ButtonAnim_csjc, _super);
    function ButtonAnim_csjc() {
        var _this = _super.call(this) || this;
        _this.useSound_csjc = true;
        return _this;
    }
    ButtonAnim_csjc.prototype.onAwake = function () {
        this.owner.on(Laya.Event.MOUSE_DOWN, this, this.onDown_csjc);
        this.owner.on(Laya.Event.MOUSE_UP, this, this.onUp_csjc);
        this.owner.on(Laya.Event.MOUSE_OUT, this, this.onUp_csjc);
    };
    ButtonAnim_csjc.prototype.onDisable = function () {
        this.owner.offAll();
        Laya.Tween.clearAll(this);
    };
    ButtonAnim_csjc.prototype.onDown_csjc = function () {
        Laya.Tween.to(this.owner, { scaleX: 0.9, scaleY: 0.9 }, 50);
        if (this.useSound_csjc) {
            SoundMgr_1.default.instance_csjc.playSound_csjc("anniu");
        }
    };
    ButtonAnim_csjc.prototype.onUp_csjc = function () {
        Laya.Tween.to(this.owner, { scaleX: 1, scaleY: 1 }, 50);
    };
    return ButtonAnim_csjc;
}(Laya.Script));
exports.default = ButtonAnim_csjc;
},{"../Mgr/SoundMgr":10}],71:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var UniversalBottomZone_csjc = /** @class */ (function (_super) {
    __extends(UniversalBottomZone_csjc, _super);
    function UniversalBottomZone_csjc() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    UniversalBottomZone_csjc.prototype.onAwake = function () {
        this._ownerSprite_csjc = this.owner;
        this._autoZone_csjc = this._ownerSprite_csjc.getChildByName("AutoZone");
        this._loopADZone_csjc = this._ownerSprite_csjc.getChildByName("LoopAD");
        this._bannerADZone_csjc = this._ownerSprite_csjc.getChildByName("BannerAD");
    };
    UniversalBottomZone_csjc.prototype.onEnable = function () {
        var aspectRatio = Laya.stage.width / Laya.stage.height;
        if (aspectRatio < 0.5) {
            this._autoZone_csjc.bottom = this._loopADZone_csjc.height + this._bannerADZone_csjc.height;
            this._loopADZone_csjc.bottom = this._bannerADZone_csjc.height;
            this._bannerADZone_csjc.visible = true;
        }
        else {
            this._autoZone_csjc.bottom = this._loopADZone_csjc.height;
            this._loopADZone_csjc.bottom = 0;
            this._bannerADZone_csjc.visible = false;
        }
    };
    UniversalBottomZone_csjc.prototype.onDisable = function () {
    };
    UniversalBottomZone_csjc.prototype.onUpdate = function () {
        if (!this._bannerADZone_csjc.visible) {
            this._bannerADZone_csjc.onDisable();
        }
    };
    return UniversalBottomZone_csjc;
}(Laya.Script));
exports.default = UniversalBottomZone_csjc;
},{}],72:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var WudianView_1 = require("./WudianView");
var QpGameSwitch_1 = require("../../QpAPI/QpGameSwitch");
var TmAPI_1 = require("../../TmAPI/TmAPI");
var User_1 = require("../../User/User");
var AdDataMgr_1 = require("../../QpAPI/AdDataMgr");
var ExamineMgr_1 = require("../../CommomAPI/ExamineMgr");
var Export1AdView = /** @class */ (function (_super) {
    __extends(Export1AdView, _super);
    function Export1AdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._skipBtnMove = false;
        _this._hideFirst = true;
        _this._wudianTpye = 2;
        return _this;
    }
    Object.defineProperty(Export1AdView.prototype, "NeedWudian", {
        get: function () {
            var swc = QpGameSwitch_1.default.GameSwitch.bannerWudian == 1;
            var wudianSwitch = QpGameSwitch_1.default.GameSwitch.wudianSwitch == 1;
            console.log("wd\u529F\u80FD\u603B\u5F00\u5173wudianSwitch: " + wudianSwitch + "\uFF0C\u5206\u5F00\u5173bannerWudian\uFF1A" + swc);
            return swc && wudianSwitch;
        },
        enumerable: true,
        configurable: true
    });
    Export1AdView.prototype.OnSkipBtn = function () {
        this.closeView();
        if (ViewMgr_1.default.instance_csjc.getView_csjc(ViewMgr_1.ViewDef_csjc.InGameView)) {
            ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.InGameView);
        }
        else if (this._data == null) {
            ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.MainGameView);
        }
        else if (this._data.Win) {
            ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.GameOverWinView);
        }
        else {
            ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.GameOverFailView);
        }
    };
    Export1AdView.prototype.addEvent = function () {
        this._skipBtn.on(Laya.Event.CLICK, this, this.OnSkipBtn);
    };
    Export1AdView.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (User_1.default.getLeveNum_csjc() == 1) {
            TmAPI_1.default.SendEvent("GameStep", { Step: 4 });
        }
        var skeleton = new Laya.Skeleton();
        //添加到舞台
        this.owner.addChild(skeleton);
        skeleton.pos(700, 350);
        //通过加载直接创建动画
        skeleton.load("subRes/sk/NewProject.sk", Laya.Handler.create(this, function (sk) {
            sk.scaleX = 0.5;
            sk.scaleY = 0.5;
        }));
        if (Laya.Browser.onMiniGame) {
            console.log("\u81EA\u52A8\u8DF3\u529F\u80FD\u5C4F\u853D" + ExamineMgr_1.default.CanDoScz_Wx + ",\u5F00\u5173" + (QpGameSwitch_1.default.GameSwitch.popAd == 1));
            if (ExamineMgr_1.default.CanDoScz_Wx && QpGameSwitch_1.default.GameSwitch.popAd == 1) {
                var arr = AdDataMgr_1.AdDataMgr.Instance.GetDataByStyleAndCount(AdDataMgr_1.ComponentStyle.h_slider, 10);
                if (arr.length > 0) {
                    var game = arr[Math.floor(Math.random() * arr.length)];
                    if (game) {
                        AdDataMgr_1.AdDataMgr.Instance.NavigateTo(AdDataMgr_1.ComponentStyle.h_slider, game);
                    }
                }
            }
        }
    };
    return Export1AdView;
}(WudianView_1.default));
exports.default = Export1AdView;
},{"../../CommomAPI/ExamineMgr":2,"../../Mgr/ViewMgr":12,"../../QpAPI/AdDataMgr":21,"../../QpAPI/QpGameSwitch":30,"../../TmAPI/TmAPI":65,"../../User/User":67,"./WudianView":83}],73:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var WudianView_1 = require("./WudianView");
var QpGameSwitch_1 = require("../../QpAPI/QpGameSwitch");
var GameMgr_1 = require("../../Scripts/GameMgr");
var User_1 = require("../../User/User");
var TmAPI_1 = require("../../TmAPI/TmAPI");
var Export2AdView = /** @class */ (function (_super) {
    __extends(Export2AdView, _super);
    function Export2AdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._skipBtnMove = false;
        _this._hideFirst = false;
        _this._wudianTpye = 2;
        return _this;
    }
    Object.defineProperty(Export2AdView.prototype, "NeedWudian", {
        get: function () {
            var swc = QpGameSwitch_1.default.GameSwitch.bannerWudian == 1;
            var wudianSwitch = QpGameSwitch_1.default.GameSwitch.wudianSwitch == 1;
            console.log("wd\u529F\u80FD\u603B\u5F00\u5173wudianSwitch: " + wudianSwitch + "\uFF0C\u5206\u5F00\u5173bannerWudian\uFF1A" + swc);
            return swc && wudianSwitch;
        },
        enumerable: true,
        configurable: true
    });
    Export2AdView.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        GameMgr_1.default.getInstance().CreatNextGameScene();
    };
    Export2AdView.prototype.addEvent = function () {
        this._skipBtn.on(Laya.Event.CLICK, this, this.OnSkipBtn);
    };
    Export2AdView.prototype.OnSkipBtn = function () {
        this.closeView();
        ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.MainGameView);
    };
    Export2AdView.prototype.onStart = function () {
        var skeleton = new Laya.Skeleton();
        //添加到舞台
        this.owner.addChild(skeleton);
        skeleton.pos(700, 350);
        //通过加载直接创建动画
        skeleton.load("subRes/sk/NewProject.sk", Laya.Handler.create(this, function (sk) {
            sk.scaleX = 0.5;
            sk.scaleY = 0.5;
        }));
        if (User_1.default.getLeveNum_csjc() <= 2) {
            TmAPI_1.default.SendEvent("GameStep", { Step: 6 });
        }
    };
    return Export2AdView;
}(WudianView_1.default));
exports.default = Export2AdView;
},{"../../Mgr/ViewMgr":12,"../../QpAPI/QpGameSwitch":30,"../../Scripts/GameMgr":51,"../../TmAPI/TmAPI":65,"../../User/User":67,"./WudianView":83}],74:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var WudianView_1 = require("./WudianView");
var QpGameSwitch_1 = require("../../QpAPI/QpGameSwitch");
var AdDataMgr_1 = require("../../QpAPI/AdDataMgr");
var Export3AdView = /** @class */ (function (_super) {
    __extends(Export3AdView, _super);
    function Export3AdView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._skipBtnMove = true;
        _this._hideFirst = true;
        _this._wudianTpye = 2;
        _this.onCloseEvent = function () {
            ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.Export1AdView);
        };
        return _this;
    }
    Export3AdView.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._btn1 = this.owner.getChildByName("BG").getChildByName("Btn1");
        this._btn2 = this.owner.getChildByName("BG").getChildByName("Btn2");
        if (Laya.Browser.onMiniGame) {
            var arr = AdDataMgr_1.AdDataMgr.Instance.GetDataByStyleAndCount(AdDataMgr_1.ComponentStyle.h_slider, 10);
            if (arr.length > 0) {
                this._game1 = arr[Math.floor(Math.random() * arr.length)];
                this._game2 = arr[Math.floor(Math.random() * arr.length)];
            }
        }
    };
    Object.defineProperty(Export3AdView.prototype, "NeedWudian", {
        get: function () {
            var swc = QpGameSwitch_1.default.GameSwitch.bannerWudian == 1;
            var wudianSwitch = QpGameSwitch_1.default.GameSwitch.wudianSwitch == 1;
            console.log("wd\u529F\u80FD\u603B\u5F00\u5173wudianSwitch: " + wudianSwitch + "\uFF0C\u5206\u5F00\u5173bannerWudian\uFF1A" + swc);
            return swc && wudianSwitch;
        },
        enumerable: true,
        configurable: true
    });
    Export3AdView.prototype.addEvent = function () {
        this._skipBtn.on(Laya.Event.CLICK, this, this.closeView);
        this._btn1.on(Laya.Event.CLICK, this, this.Game1);
        this._btn2.on(Laya.Event.CLICK, this, this.Game2);
    };
    Export3AdView.prototype.OnSkipBtn = function () {
        this.closeView();
    };
    Export3AdView.prototype.Game1 = function () {
        if (Laya.Browser.onMiniGame) {
            if (this._game1) {
                AdDataMgr_1.AdDataMgr.Instance.NavigateTo(AdDataMgr_1.ComponentStyle.h_slider, this._game1);
            }
        }
    };
    Export3AdView.prototype.Game2 = function () {
        if (Laya.Browser.onMiniGame) {
            if (this._game2) {
                AdDataMgr_1.AdDataMgr.Instance.NavigateTo(AdDataMgr_1.ComponentStyle.h_slider, this._game2);
            }
        }
    };
    return Export3AdView;
}(WudianView_1.default));
exports.default = Export3AdView;
},{"../../Mgr/ViewMgr":12,"../../QpAPI/AdDataMgr":21,"../../QpAPI/QpGameSwitch":30,"./WudianView":83}],75:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var GameMgr_1 = require("../../Scripts/GameMgr");
var QpGameSwitch_1 = require("../../QpAPI/QpGameSwitch");
var FirstViewAd = /** @class */ (function (_super) {
    __extends(FirstViewAd, _super);
    function FirstViewAd() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    FirstViewAd.prototype.onStart = function () {
        if ((GameMgr_1.default.getInstance().FirstAd == false && QpGameSwitch_1.default.customkey.indexAd != 2) || QpGameSwitch_1.default.customkey.indexAd == 0) {
            this.owner.visible = false;
        }
    };
    return FirstViewAd;
}(Laya.Script));
exports.default = FirstViewAd;
},{"../../QpAPI/QpGameSwitch":30,"../../Scripts/GameMgr":51}],76:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var WudianView_1 = require("./WudianView");
var QpGameSwitch_1 = require("../../QpAPI/QpGameSwitch");
var TmAPI_1 = require("../../TmAPI/TmAPI");
var User_1 = require("../../User/User");
var GameMgr_1 = require("../../Scripts/GameMgr");
var FriendExport = /** @class */ (function (_super) {
    __extends(FriendExport, _super);
    function FriendExport() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._skipBtnMove = false;
        _this._hideFirst = true;
        _this._wudianTpye = 2;
        return _this;
    }
    Object.defineProperty(FriendExport.prototype, "NeedWudian", {
        get: function () {
            var swc = QpGameSwitch_1.default.GameSwitch.bannerWudian == 1;
            var wudianSwitch = QpGameSwitch_1.default.GameSwitch.wudianSwitch == 1;
            console.log("wd\u529F\u80FD\u603B\u5F00\u5173wudianSwitch: " + wudianSwitch + "\uFF0C\u5206\u5F00\u5173bannerWudian\uFF1A" + swc);
            return swc && wudianSwitch;
        },
        enumerable: true,
        configurable: true
    });
    FriendExport.prototype.OnSkipBtn = function () {
        this.closeView();
    };
    FriendExport.prototype.addEvent = function () {
        this._skipBtn.on(Laya.Event.CLICK, this, this.OnSkipBtn);
    };
    FriendExport.prototype.onStart = function () {
        _super.prototype.onStart.call(this);
        if (User_1.default.getLeveNum_csjc() == 1) {
            TmAPI_1.default.SendEvent("GameStep", { Step: 5 });
        }
        this.owner.addChild(GameMgr_1.default.getInstance().Context);
        GameMgr_1.default.getInstance().Context.postMsg({ cmd: "OpenExport", data: { width: Laya.stage.width, height: Laya.stage.height } });
    };
    FriendExport.prototype.onClose = function () {
        _super.prototype.onClose.call(this);
        ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.HExport2AdView);
    };
    FriendExport.prototype.onDestroy = function () {
        GameMgr_1.default.getInstance().Context.removeSelf();
        _super.prototype.onDestroy.call(this);
    };
    return FriendExport;
}(WudianView_1.default));
exports.default = FriendExport;
},{"../../Mgr/ViewMgr":12,"../../QpAPI/QpGameSwitch":30,"../../Scripts/GameMgr":51,"../../TmAPI/TmAPI":65,"../../User/User":67,"./WudianView":83}],77:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var QpGameSwitch_1 = require("../../QpAPI/QpGameSwitch");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var User_1 = require("../../User/User");
var GameOverWinVIew_1 = require("./GameOverWinVIew");
var TmAPI_1 = require("../../TmAPI/TmAPI");
var ExamineMgr_1 = require("../../CommomAPI/ExamineMgr");
var GameMgr_1 = require("../../Scripts/GameMgr");
var GameOverFailView = /** @class */ (function (_super) {
    __extends(GameOverFailView, _super);
    function GameOverFailView() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    GameOverFailView.prototype.GetReward = function () {
        var _this = this;
        if (!ExamineMgr_1.default.CanDoScz_Wx) {
            this.closeView();
            GameMgr_1.default.getInstance().CreatGameScene();
            ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.MainGameView);
        }
        else {
            this._skipBtn.mouseEnabled = false;
            var p = new Laya.Point(100, 100);
            this._money.localToGlobal(p, false);
            User_1.default.addMoney_csjc(100, p);
            Laya.timer.once(1500, this, function () {
                _this.closeView();
                console.log("\u597D\u53CB\u70ED\u73A9" + ExamineMgr_1.default.CanDoScz_Wx + ",\u5F00\u5173" + (QpGameSwitch_1.default.GameSwitch.indexPanel == 1));
                if (ExamineMgr_1.default.CanDoScz_Wx && QpGameSwitch_1.default.GameSwitch.indexPanel == 1) {
                    ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.FriendExportView);
                }
                else {
                    ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.HExport2AdView);
                }
            });
        }
    };
    GameOverFailView.prototype.SendGameResult = function () {
        TmAPI_1.default.SendEvent("GameResult", { Level: User_1.default.getLeveNum_csjc(), Result: 0 });
    };
    return GameOverFailView;
}(GameOverWinVIew_1.default));
exports.default = GameOverFailView;
},{"../../CommomAPI/ExamineMgr":2,"../../Mgr/ViewMgr":12,"../../QpAPI/QpGameSwitch":30,"../../Scripts/GameMgr":51,"../../TmAPI/TmAPI":65,"../../User/User":67,"./GameOverWinVIew":78}],78:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WudianView_1 = require("./WudianView");
var QpGameSwitch_1 = require("../../QpAPI/QpGameSwitch");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var User_1 = require("../../User/User");
var SceneMgr_1 = require("../../Scripts/GameCore/SceneMgr");
var TmAPI_1 = require("../../TmAPI/TmAPI");
var ExamineMgr_1 = require("../../CommomAPI/ExamineMgr");
var GameMgr_1 = require("../../Scripts/GameMgr");
var GameOverWinView = /** @class */ (function (_super) {
    __extends(GameOverWinView, _super);
    function GameOverWinView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._skipBtnMove = false;
        _this._hideFirst = true;
        _this._wudianTpye = 2;
        return _this;
    }
    Object.defineProperty(GameOverWinView.prototype, "NeedWudian", {
        get: function () {
            var swc = QpGameSwitch_1.default.GameSwitch.bannerWudian == 1;
            var wudianSwitch = QpGameSwitch_1.default.GameSwitch.wudianSwitch == 1;
            console.log("wd\u529F\u80FD\u603B\u5F00\u5173wudianSwitch: " + wudianSwitch + "\uFF0C\u5206\u5F00\u5173bannerWudian\uFF1A" + swc);
            return swc && wudianSwitch;
        },
        enumerable: true,
        configurable: true
    });
    GameOverWinView.prototype.OnSkipBtn = function () {
        this.GetReward();
    };
    GameOverWinView.prototype.addEvent = function () {
        this._skipBtn.on(Laya.Event.CLICK, this, this.OnSkipBtn);
    };
    GameOverWinView.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._money = this.owner.getChildByName("Money");
        this._enemyCount = this.owner.getChildByName("Destory").getChildByName("EnemyCount");
        this._enemyCount.value = (SceneMgr_1.default.Instance.EnemyKillCount) + "/" + SceneMgr_1.default.Instance.EnemCount;
        this.SendGameResult();
        if (!ExamineMgr_1.default.CanDoScz_Wx) {
            this._money.visible = false;
        }
    };
    GameOverWinView.prototype.GetReward = function () {
        var _this = this;
        if (!ExamineMgr_1.default.CanDoScz_Wx) {
            this.closeView();
            GameMgr_1.default.getInstance().CreatNextGameScene();
            ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.MainGameView);
        }
        else {
            this._skipBtn.mouseEnabled = false;
            var p = new Laya.Point(100, 100);
            this._money.localToGlobal(p, false);
            User_1.default.addMoney_csjc(500, p);
            Laya.timer.once(1500, this, function () {
                _this.closeView();
                console.log("\u597D\u53CB\u70ED\u73A9" + ExamineMgr_1.default.CanDoScz_Wx + ",\u5F00\u5173" + (QpGameSwitch_1.default.GameSwitch.indexPanel == 1));
                if (ExamineMgr_1.default.CanDoScz_Wx && QpGameSwitch_1.default.GameSwitch.indexPanel == 1) {
                    ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.FriendExportView);
                }
                else {
                    ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.HExport2AdView);
                }
            });
        }
    };
    GameOverWinView.prototype.SendGameResult = function () {
        TmAPI_1.default.SendEvent("GameResult", { Level: User_1.default.getLeveNum_csjc(), Result: 1 });
    };
    return GameOverWinView;
}(WudianView_1.default));
exports.default = GameOverWinView;
},{"../../CommomAPI/ExamineMgr":2,"../../Mgr/ViewMgr":12,"../../QpAPI/QpGameSwitch":30,"../../Scripts/GameCore/SceneMgr":50,"../../Scripts/GameMgr":51,"../../TmAPI/TmAPI":65,"../../User/User":67,"./WudianView":83}],79:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var WudianView_1 = require("./WudianView");
var QpGameSwitch_1 = require("../../QpAPI/QpGameSwitch");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var User_1 = require("../../User/User");
var SceneMgr_1 = require("../../Scripts/GameCore/SceneMgr");
var TmAPI_1 = require("../../TmAPI/TmAPI");
var ExamineMgr_1 = require("../../CommomAPI/ExamineMgr");
var GameMgr_1 = require("../../Scripts/GameMgr");
var GameOverWinView = /** @class */ (function (_super) {
    __extends(GameOverWinView, _super);
    function GameOverWinView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._skipBtnMove = false;
        _this._hideFirst = true;
        _this._wudianTpye = 2;
        return _this;
    }
    Object.defineProperty(GameOverWinView.prototype, "NeedWudian", {
        get: function () {
            var swc = QpGameSwitch_1.default.GameSwitch.bannerWudian == 1;
            var wudianSwitch = QpGameSwitch_1.default.GameSwitch.wudianSwitch == 1;
            console.log("wd\u529F\u80FD\u603B\u5F00\u5173wudianSwitch: " + wudianSwitch + "\uFF0C\u5206\u5F00\u5173bannerWudian\uFF1A" + swc);
            return swc && wudianSwitch;
        },
        enumerable: true,
        configurable: true
    });
    GameOverWinView.prototype.OnSkipBtn = function () {
        this.GetReward();
    };
    GameOverWinView.prototype.addEvent = function () {
        this._skipBtn.on(Laya.Event.CLICK, this, this.OnSkipBtn);
    };
    GameOverWinView.prototype.onAwake = function () {
        _super.prototype.onAwake.call(this);
        this._money = this.owner.getChildByName("Money");
        this._enemyCount = this.owner.getChildByName("Destory").getChildByName("EnemyCount");
        this._enemyCount.value = (SceneMgr_1.default.Instance.EnemyKillCount) + "/" + SceneMgr_1.default.Instance.EnemCount;
        this.SendGameResult();
        if (!ExamineMgr_1.default.CanDoScz_Wx) {
            this._money.visible = false;
        }
    };
    GameOverWinView.prototype.GetReward = function () {
        var _this = this;
        if (!ExamineMgr_1.default.CanDoScz_Wx) {
            this.closeView();
            GameMgr_1.default.getInstance().CreatNextGameScene();
            ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.MainGameView);
        }
        else {
            this._skipBtn.mouseEnabled = false;
            var p = new Laya.Point(100, 100);
            this._money.localToGlobal(p, false);
            User_1.default.addMoney_csjc(500, p);
            Laya.timer.once(1500, this, function () {
                _this.closeView();
                console.log("\u597D\u53CB\u70ED\u73A9" + ExamineMgr_1.default.CanDoScz_Wx + ",\u5F00\u5173" + (QpGameSwitch_1.default.GameSwitch.indexPanel == 1));
                if (ExamineMgr_1.default.CanDoScz_Wx && QpGameSwitch_1.default.GameSwitch.indexPanel == 1) {
                    ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.FriendExportView);
                }
                else {
                    ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.HExport2AdView);
                }
            });
        }
    };
    GameOverWinView.prototype.SendGameResult = function () {
        TmAPI_1.default.SendEvent("GameResult", { Level: User_1.default.getLeveNum_csjc(), Result: 1 });
    };
    return GameOverWinView;
}(WudianView_1.default));
exports.default = GameOverWinView;
},{"../../CommomAPI/ExamineMgr":2,"../../Mgr/ViewMgr":12,"../../QpAPI/QpGameSwitch":30,"../../Scripts/GameCore/SceneMgr":50,"../../Scripts/GameMgr":51,"../../TmAPI/TmAPI":65,"../../User/User":67,"./WudianView":83}],80:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var SceneMgr_1 = require("../../Scripts/GameCore/SceneMgr");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var User_1 = require("../../User/User");
var TmAPI_1 = require("../../TmAPI/TmAPI");
var ExamineMgr_1 = require("../../CommomAPI/ExamineMgr");
var CachedWXBannerAd_1 = require("../../PlatformApi/CachedWXBannerAd");
var Camera2UI_1 = require("../../Scripts/GameCore/Camera2UI");
var Enums_1 = require("../../Scripts/GameCore/Enums");
var InGameView = /** @class */ (function (_super) {
    __extends(InGameView, _super);
    function InGameView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._gameOver = false;
        _this._selecetKind = 0;
        _this.onCloseEvent = function () {
            CachedWXBannerAd_1.default.hide_csjc();
            SoundMgr_1.default.instance_csjc.stopBGM_csjc();
            // SceneMgr_cscj.Instance.Player.StopSound();
            if (User_1.default.getLeveNum_csjc() == 1) {
                TmAPI_1.default.SendEvent("GameStep", { Step: 3 });
            }
        };
        return _this;
    }
    InGameView.prototype.onAwake = function () {
        this._moreGameBtn = this.owner.getChildByName("MoreGameBtn");
        this._tutorialBtn = this.owner.getChildByName("TutorialBtn");
        this._complete = this.owner.getChildByName("Complete");
        this._pros = this.owner.getChildByName("progress");
        this._prosSpeedOf = this._pros.getChildAt(0);
        this._playerPros = this.owner.getChildByName("Playerprogress");
        this._playerProsSpeedOf = this._playerPros.getChildAt(0);
        this._pros.visible = false;
        this._playerPros.visible = false;
        this._fail = this.owner.getChildByName("Fail");
        this._complete.visible = false;
        this._fail.visible = false;
        if (ExamineMgr_1.default.CanDoScz_Wx) {
            this.ShowBanner();
        }
    };
    InGameView.prototype.addEvent = function () {
        this._tutorialBtn.on(Laya.Event.CLICK, this, this.OnTutorialBtn);
        this._moreGameBtn.on(Laya.Event.CLICK, this, this.OnMoreGameBtn);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.SelectHero, this, this.OnSelectHero);
        EventMgr_1.default.regEvent_csjc(EventDef_1.EventDef_csjc.BossVisible, this, this.onBossVisible);
    };
    InGameView.prototype.removeEvent = function () {
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.SelectHero, this, this.OnSelectHero);
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.BossVisible, this, this.onBossVisible);
    };
    /**
     * 怪物出现
     */
    InGameView.prototype.onBossVisible = function () {
        this._pros.visible = true;
        this._playerPros.visible = true;
    };
    /**监听选择英雄 */
    InGameView.prototype.OnSelectHero = function () {
        if (SceneMgr_1.default.Instance.PlayerKind == Enums_1.PlayerType.Kingkong) {
            this._playerProsSpeedOf.skin = "GamePlaying/boss_xuetiao_jingang.png";
            this._playerProsSpeedOf.getChildAt(0).skin = "GamePlaying/touxiang_jingang.png";
            this._prosSpeedOf.skin = "GamePlaying/boss_xuetiao_long.png";
            this._prosSpeedOf.getChildAt(0).skin = "GamePlaying/touxiang_long.png";
            this._selecetKind = 0;
        }
        else {
            this._playerProsSpeedOf.skin = "GamePlaying/boss_xuetiao_long.png";
            this._playerProsSpeedOf.getChildAt(0).skin = "GamePlaying/touxiang_long.png";
            this._prosSpeedOf.skin = "GamePlaying/boss_xuetiao_jingang.png";
            this._prosSpeedOf.getChildAt(0).skin = "GamePlaying/touxiang_jingang.png";
            this._selecetKind = 1;
        }
    };
    InGameView.prototype.onStart = function () {
        SoundMgr_1.default.instance_csjc.playBGM_csjc("Bgm2");
        if (User_1.default.getLeveNum_csjc() == 1) {
            TmAPI_1.default.SendEvent("GameStep", { Step: 2 });
        }
        // Scene3dMgr.Camera.viewport.project(Scene3dMgr.Monster.transform.position, Scene3dMgr.Camera.projectionViewMatrix, this.outpos)
        // subNum.pos(this.outpos.x / Laya.stage.clientScaleX ,this.outpos.y / Laya.stage.clientScaleY)
    };
    InGameView.prototype.OnMoreGameBtn = function () {
        SceneMgr_1.default.Instance.PauseGame();
        ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.HExport1AdView);
    };
    InGameView.prototype.OnTutorialBtn = function () {
        SceneMgr_1.default.Instance.PauseGame();
        ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.TutorialView);
    };
    InGameView.prototype.onShow = function () {
        _super.prototype.onShow.call(this);
        // SceneMgr_cscj.Instance.StartGame();
        ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.SelectHero);
        this._playerProsSpeedOf.width = 400;
        this._prosSpeedOf.width = 400;
    };
    InGameView.prototype.onUpdate = function () {
        // console.log("boss-------------",SceneMgr_cscj.Instance.Boss)
        // console.log("-+----------------------狂点",ViewMgr_csjc.instance_csjc.getView_csjc(ViewDef_csjc.KdBannerView))
        // ViewMgr_csjc.instance_csjc.closeView_csjc(ViewDef_csjc.KdBannerView);
        var _this = this;
        if (this._pros.visible == true && SceneMgr_1.default.Instance.Boss) {
            // console.log("----------------跟随boss")
            var closeDis = -1;
            var cent = new Laya.Point(Laya.stage.width / 2, Laya.stage.height / 2);
            var pos = SceneMgr_1.default.Instance.BossSprite3D.transform.position.clone();
            pos.y += 2;
            pos = Camera2UI_1.default.WorldToScreen2(SceneMgr_1.default.Instance.Camera, SceneMgr_1.default.Instance.BossSprite3D.getChildAt(this._selecetKind).transform.position);
            this._pros.x = pos.x - 300;
            this._pros.y = pos.y - 100;
            this.onCheckPros();
        }
        if (this._gameOver || SceneMgr_1.default.Instance.GameOver == 0)
            return;
        this._gameOver = true;
        if (SceneMgr_1.default.Instance.GameOver == 1) {
            this._complete.visible = true;
        }
        else if (SceneMgr_1.default.Instance.GameOver == -1) {
            this._fail.visible = true;
        }
        Laya.timer.once(3000, this, function () {
            if (SceneMgr_1.default.Instance.GameOver == 1) {
                _this.GameOver(true);
            }
            else if (SceneMgr_1.default.Instance.GameOver == -1) {
                _this.GameOver(false);
            }
        });
    };
    InGameView.prototype.onCheckPros = function () {
        this._playerProsSpeedOf.width = 400 * SceneMgr_1.default.Instance.Player.State.Hp / SceneMgr_1.default.Instance.Player.State.HpSum;
        this._prosSpeedOf.width = 400 * SceneMgr_1.default.Instance.Boss.State.Hp / SceneMgr_1.default.Instance.Boss.State.HpSum;
        // console.log("---------------------bosss血量",SceneMgr_cscj.Instance.Boss.State.Hp)
        if (SceneMgr_1.default.Instance.Boss.State.Hp <= 0) {
            SceneMgr_1.default.Instance.GameOver = 1;
        }
        if (SceneMgr_1.default.Instance.Player.State.Hp <= 0) {
            SceneMgr_1.default.Instance.GameOver = -1;
        }
    };
    InGameView.prototype.GameOver = function (win) {
        this.closeView();
        if (ExamineMgr_1.default.CanDoScz_Wx) {
            var data = { Win: false };
            if (win) {
                data.Win = true;
            }
            else {
                data.Win = false;
            }
            ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.HExport1AdView, data);
        }
        else {
            if (win) {
                ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.GameOverWinView);
            }
            else {
                ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.GameOverFailView);
            }
        }
    };
    InGameView.prototype.ShowBanner = function () {
        var _this = this;
        var rd = Math.random() * 5000;
        Laya.timer.once(15000 + rd, this, function () {
            // let rd = Math.random();
            // if (rd <= 0.33) {
            //     rd = -1
            // }
            // else if (rd > 0.33 && rd <= 0.66) {
            //     rd = 0;
            // }
            // else {
            //     rd = 1;
            // }
            CachedWXBannerAd_1.default.changeShow_csjc(0);
            Laya.timer.once(2500, _this, function () {
                CachedWXBannerAd_1.default.hide_csjc();
                _this.ShowBanner();
            });
        });
    };
    return InGameView;
}(ViewBase_1.default));
exports.default = InGameView;
},{"../../CommomAPI/ExamineMgr":2,"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Mgr/SoundMgr":10,"../../Mgr/ViewMgr":12,"../../PlatformApi/CachedWXBannerAd":17,"../../Scripts/GameCore/Camera2UI":31,"../../Scripts/GameCore/Enums":40,"../../Scripts/GameCore/SceneMgr":50,"../../TmAPI/TmAPI":65,"../../User/User":67,"../../View/ViewBase":90}],81:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var SoundMgr_1 = require("../../Mgr/SoundMgr");
var ExamineMgr_1 = require("../../CommomAPI/ExamineMgr");
var TmAPI_1 = require("../../TmAPI/TmAPI");
var User_1 = require("../../User/User");
var CachedWXBannerAd_1 = require("../../PlatformApi/CachedWXBannerAd");
var QpGameSwitch_1 = require("../../QpAPI/QpGameSwitch");
var WXAPI_1 = require("../../PlatformApi/WXAPI");
var GameMgr_1 = require("../../Scripts/GameMgr");
var MainGameView = /** @class */ (function (_super) {
    __extends(MainGameView, _super);
    function MainGameView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.canin = true;
        _this.onCloseEvent = function () {
            GameMgr_1.default.getInstance().FirstAd = true;
            CachedWXBannerAd_1.default.hide_csjc();
        };
        return _this;
    }
    MainGameView.prototype.onAwake = function () {
        this._aniZone = this.owner.getChildByName("AniZone");
        this._ani1 = this._aniZone.getChildByName("Robot");
        this._ani2 = this._aniZone.getChildByName("Car");
        // this._ani1.skin = "subRes/image/img_jiqiren.png";
        this._loopAd = this.owner.getChildByName("BottomLoopAd");
        // this._ani2.skin = "subRes/image/img_che.png";
        // if (!ExamineMgr.CanDoScz_Wx) {
        //     this._ani1.visible = false;
        // }
        this._startBtn = this.owner.getChildByName("StartBtn");
        this._moreGameBtn = this.owner.getChildByName("MoreGameBtn");
    };
    MainGameView.prototype.onStart = function () {
        if (User_1.default.getLeveNum_csjc() == 1) {
            TmAPI_1.default.SendEvent("GameStep", { Step: 1 });
        }
        if (Laya.Browser.onMiniGame) {
            var sysInfo = Laya.Browser.window["wx"].getSystemInfoSync();
            var sw = sysInfo.screenWidth;
            var sh = sysInfo.screenHeight;
            var dpr = Laya.stage.width / sw;
            console.log(sysInfo.screenWidth, sysInfo.screenHeight);
            this._loopAd.left = Laya.stage.width - ((sw - 350) * dpr);
        }
        else {
            this._loopAd.left = Laya.stage.width - 350;
        }
    };
    MainGameView.prototype.addEvent = function () {
        this.canin = true;
        this._startBtn.on(Laya.Event.CLICK, this, this.OnStartBtn);
        this._moreGameBtn.on(Laya.Event.CLICK, this, this.OnMoreGameBtn);
    };
    MainGameView.prototype.OnStartBtn = function () {
        var _this = this;
        if (Laya.Browser.onMiniGame) {
            if (ExamineMgr_1.default.CanDoKd_Wx && QpGameSwitch_1.default.customkey.startVideo == 1) {
                WXAPI_1.default.showRewardedVideoAd_csjc(function () {
                    _this.StartGame();
                }, function () {
                    _this.StartGame();
                });
            }
            else {
                this.StartGame();
            }
        }
        else {
            this.StartGame();
        }
    };
    MainGameView.prototype.StartGame = function () {
        if (this.canin == false)
            return;
        this.closeView();
        this.canin = false;
        console.log("-------------进入游戏界面");
        // ViewMgr_csjc.instance_csjc.openView_csjc(ViewDef_csjc.KdBannerView);
        // return
        if (ExamineMgr_1.default.CanDoScz_Wx && QpGameSwitch_1.default.GameSwitch.bannerKuangdian1 == 1) {
            ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.KdBannerView);
        }
        else {
            ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.InGameView);
        }
    };
    MainGameView.prototype.OnMoreGameBtn = function () {
        this.closeView();
        ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.HExport1AdView);
        // ViewMgr_csjc.instance_csjc.openView_csjc(ViewDef_csjc.FriendExportView);
    };
    MainGameView.prototype.onShow = function () {
        var _this = this;
        _super.prototype.onShow.call(this);
        CachedWXBannerAd_1.default.changeShow_csjc(-1);
        SoundMgr_1.default.instance_csjc.playBGM_csjc("Bgm2");
        Laya.timer.once(500, this, function () {
            Laya.Tween.to(_this._ani1, { right: 0 }, 500);
            Laya.Tween.to(_this._ani2, { left: -51 }, 500);
        });
    };
    return MainGameView;
}(ViewBase_1.default));
exports.default = MainGameView;
},{"../../CommomAPI/ExamineMgr":2,"../../Mgr/SoundMgr":10,"../../Mgr/ViewMgr":12,"../../PlatformApi/CachedWXBannerAd":17,"../../PlatformApi/WXAPI":20,"../../QpAPI/QpGameSwitch":30,"../../Scripts/GameMgr":51,"../../TmAPI/TmAPI":65,"../../User/User":67,"../ViewBase":90}],82:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var SceneMgr_1 = require("../../Scripts/GameCore/SceneMgr");
var Enums_1 = require("../../Scripts/GameCore/Enums");
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var SelectHero = /** @class */ (function (_super) {
    __extends(SelectHero, _super);
    function SelectHero() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._heroSlt_0 = null;
        _this._heroSlt_1 = null;
        _this._select = null;
        _this._startBtn = null;
        return _this;
        // onStart() {
        // }
    }
    SelectHero.prototype.onAwake = function () {
        this._heroSlt_0 = this.owner.getChildByName("hero1");
        this._heroSlt_1 = this.owner.getChildByName("hero2");
        this._select = this.owner.getChildByName("select");
        this._startBtn = this.owner.getChildByName("start");
    };
    SelectHero.prototype.addEvent = function () {
        this._heroSlt_0.on(Laya.Event.CLICK, this, this.clickKingKong);
        this._heroSlt_1.on(Laya.Event.CLICK, this, this.clickTRex);
        this._startBtn.on(Laya.Event.CLICK, this, this.onPlayGame);
        // this.clickKingKong()
    };
    SelectHero.prototype.removeEvent = function () {
        this._heroSlt_0.off(Laya.Event.CLICK, this, this.clickKingKong);
        this._heroSlt_1.off(Laya.Event.CLICK, this, this.clickTRex);
        this._startBtn.off(Laya.Event.CLICK, this, this.onPlayGame);
    };
    SelectHero.prototype.clickKingKong = function () {
        SceneMgr_1.default.Instance.PlayerKind = Enums_1.PlayerType.Kingkong;
        SceneMgr_1.default.Instance.BossKind = Enums_1.PlayerType.TRex;
        this._select.x = this._heroSlt_0.x;
        this.onPlayGame();
    };
    SelectHero.prototype.clickTRex = function () {
        SceneMgr_1.default.Instance.PlayerKind = Enums_1.PlayerType.TRex;
        SceneMgr_1.default.Instance.BossKind = Enums_1.PlayerType.Kingkong;
        this._select.x = this._heroSlt_1.x;
        this.onPlayGame();
    };
    SelectHero.prototype.onPlayGame = function () {
        SceneMgr_1.default.Instance.StartGame();
        this.closeView();
        // Laya.timer.frameOnce(5,this,()=>{
        //     ViewMgr_csjc.instance_csjc.closeView_csjc(ViewDef_csjc.KdBannerView);
        // })
        // ViewMgr_csjc.instance_csjc.closeView_csjc(ViewDef_csjc.KdBannerView);
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.SelectHero);
    };
    return SelectHero;
}(ViewBase_1.default));
exports.default = SelectHero;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6,"../../Scripts/GameCore/Enums":40,"../../Scripts/GameCore/SceneMgr":50,"../ViewBase":90}],83:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var QpGameSwitch_1 = require("../../QpAPI/QpGameSwitch");
var CachedWXBannerAd_1 = require("../../PlatformApi/CachedWXBannerAd");
var ExamineMgr_1 = require("../../CommomAPI/ExamineMgr");
var WudianView = /** @class */ (function (_super) {
    __extends(WudianView, _super);
    function WudianView() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._wudianTpye = 2;
        _this._hideFirst = false;
        _this._skipBtnMove = true;
        _this._bannerShowTime = 0;
        _this.onOpenEvent = function () {
            console.log("BtnMovetime:" + QpGameSwitch_1.default.GameSwitch.btnMoveTimer + ",bannerMoveTimer:" + QpGameSwitch_1.default.GameSwitch.bannerMoveTimer);
            CachedWXBannerAd_1.default.hide_csjc();
            if (!ExamineMgr_1.default.CanDoScz_Wx) {
                if (_this._skipBtnMove) {
                    CachedWXBannerAd_1.default.changeShow_csjc(0);
                }
                return;
            }
            if (_this.NeedWudian) {
                if (_this._skipBtnMove) {
                    _this._skipBtn.bottom = 100;
                }
                _this._skipBtn.offAllCaller(_this);
                if (_this._hideFirst) {
                    if (QpGameSwitch_1.default.GameSwitch.btnShowTimer > 0) {
                        _this._skipBtn.visible = false;
                        Laya.timer.once(QpGameSwitch_1.default.GameSwitch.btnShowTimer * 1000, _this, function () {
                            _this._skipBtn.visible = true;
                            _this.SelectWudianMethod();
                        });
                    }
                    else {
                        _this.SelectWudianMethod();
                    }
                }
                else {
                    _this.SelectWudianMethod();
                }
            }
            else {
                if (_this._skipBtnMove) {
                    _this._skipBtn.bottom = 320;
                    CachedWXBannerAd_1.default.changeShow_csjc(0);
                    Laya.timer.once(500, _this, function () {
                        CachedWXBannerAd_1.default.changeShow_csjc(0);
                    });
                }
                if (QpGameSwitch_1.default.GameSwitch.btnShowTimer > 0) {
                    _this._skipBtn.visible = false;
                    Laya.timer.once(QpGameSwitch_1.default.GameSwitch.btnShowTimer * 1000, _this, function () {
                        _this._skipBtn.visible = true;
                    });
                }
            }
        };
        return _this;
    }
    WudianView.prototype.onAwake = function () {
        this._skipBtn = this.owner.getChildByName("SkipBtn");
    };
    WudianView.prototype.onClose = function () {
        _super.prototype.onClose.call(this);
        CachedWXBannerAd_1.default.hide_csjc();
    };
    WudianView.prototype.SelectWudianMethod = function () {
        if (this._wudianTpye == 1) {
            // console.log("WMethod1");
            // this._skipBtn.once(Laya.Event.CLICK, this, this.WudianMethod1);
            console.log("WMethod1");
            this._skipBtn.offAllCaller(this);
            var rdtime = Math.random() * 1000 + 500;
            Laya.timer.once(rdtime, this, this.FlashBanner2);
        }
        else {
            // console.log("WMethod2");
            // this.WudianMethod2();
            console.log("WMethod2");
            this._skipBtn.once(Laya.Event.CLICK, this, this.WudianMethod1);
        }
    };
    /*
        传统误点， 按下按键后开始触发,
     */
    WudianView.prototype.WudianMethod1 = function () {
        var _this = this;
        Laya.timer.clearAll(this);
        CachedWXBannerAd_1.default.hide_csjc();
        var time = QpGameSwitch_1.default.GameSwitch.btnMoveTimer;
        var time2 = QpGameSwitch_1.default.GameSwitch.bannerMoveTimer;
        if (time < 100) {
            time *= 1000;
        }
        if (time2 < 100) {
            time2 *= 1000;
        }
        Laya.timer.once(time, this, function () {
            if (_this._skipBtnMove) {
                _this._skipBtn.bottom = 320;
            }
            _this._skipBtn.on(Laya.Event.CLICK, _this, _this.OnSkipBtn);
        });
        Laya.timer.once(time2, this, this.FlashBanner1);
    };
    /*
        闪现误点， 不需要按键自动触发
    */
    WudianView.prototype.WudianMethod2 = function () {
        var _this = this;
        var time = QpGameSwitch_1.default.GameSwitch.btnMoveTimer;
        var time2 = QpGameSwitch_1.default.GameSwitch.bannerMoveTimer;
        if (time < 100) {
            time *= 1000;
        }
        if (time2 < 100) {
            time2 *= 1000;
        }
        Laya.timer.once(time, this, function () {
            if (_this._skipBtnMove) {
                _this._skipBtn.bottom = 320;
            }
            _this._skipBtn.on(Laya.Event.CLICK, _this, _this.OnSkipBtn);
        });
        Laya.timer.once(time2, this, this.FlashBanner1);
    };
    WudianView.prototype.FlashBanner1 = function () {
        CachedWXBannerAd_1.default.changeShow_csjc(0);
        if (!this._skipBtnMove) {
            Laya.timer.once(2200, this, function () {
                CachedWXBannerAd_1.default.hide_csjc();
            });
        }
        /* else {
            Laya.timer.once(500, this, () => {
                CachedWXBannerAd_csjc.changeShow_csjc();
            })
        } */
        // this._bannerShowTime++;
        // if (this._bannerShowTime > 3) {
        //     Laya.timer.clear(this, this.FlashBanner);
        // }
        // else {
        // }
    };
    WudianView.prototype.FlashBanner2 = function () {
        /* Laya.timer.once(700, this, () => {
            CachedWXBannerAd_csjc.hide_csjc();
        }) */
        CachedWXBannerAd_1.default.changeShow_csjc(0);
        Laya.timer.once(500, this, function () {
            CachedWXBannerAd_1.default.hide_csjc();
        });
        this._skipBtn.once(Laya.Event.CLICK, this, this.WudianMethod1);
        /* else {
            Laya.timer.once(500, this, () => {
                CachedWXBannerAd_csjc.changeShow_csjc();
            })
        } */
    };
    return WudianView;
}(ViewBase_1.default));
exports.default = WudianView;
},{"../../CommomAPI/ExamineMgr":2,"../../PlatformApi/CachedWXBannerAd":17,"../../QpAPI/QpGameSwitch":30,"../ViewBase":90}],84:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
function isIViewStateListener_csjc(element) {
    if ((null != element.onViewShow && typeof (element.onViewShow) == "function")
        && (null != element.onViewHide && typeof (element.onViewHide) == "function")) {
        return true;
    }
    return false;
}
exports.isIViewStateListener_csjc = isIViewStateListener_csjc;
},{}],85:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var EventMgr_1 = require("../../Event/EventMgr");
var EventDef_1 = require("../../Event/EventDef");
var LoadingView_csjc = /** @class */ (function (_super) {
    __extends(LoadingView_csjc, _super);
    function LoadingView_csjc() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._processWidth_csjc = 0;
        return _this;
    }
    LoadingView_csjc.prototype.onAwake = function () {
        this._processBarBg_csjc = this.owner.getChildByName("ProcessBarBg");
        this._processBar_csjc = this._processBarBg_csjc.getChildByName("ProcessBar");
        this._processWidth_csjc = this._processBar_csjc.width;
        EventMgr_1.default.regOnceEvent_csjc(EventDef_1.EventDef_csjc.Game_GameSceneLoadCompelete_csjc, this, this.FinishLoading_csjc);
    };
    LoadingView_csjc.prototype.onUpdate = function () {
        if (this._processBar_csjc.width < this._currentProcess_csjc) {
            var speed = Math.floor((this._currentProcess_csjc - this._processBar_csjc.width) / 100);
            this._processBar_csjc.width += (5 + speed);
            if (this._processBar_csjc.width > this._currentProcess_csjc) {
                this._processBar_csjc.width = this._currentProcess_csjc;
            }
        }
    };
    LoadingView_csjc.prototype.onDestroy = function () {
        EventMgr_1.default.removeEvent_csjc(EventDef_1.EventDef_csjc.Game_GameSceneLoadCompelete_csjc, this, this.FinishLoading_csjc);
    };
    /**
     * 设置进度
     *
     * @param {number} process
     * @memberof LoadingView
     */
    LoadingView_csjc.prototype.setProcess_csjc = function (process) {
        if (process < 0)
            process = 0;
        if (process > 1)
            process = 1;
        this._currentProcess_csjc = this._processWidth_csjc * process;
    };
    /**
     * 此方法用来关闭loading界面,会先将进度条进度置为1然后停顿100毫秒再消失，给用户一个进度条加载良好的感觉
     * 如果不想用此方法,在其他代码中直接调用EventMgr.dispatch(EventDef.App_CloseFirstLoadingView)即可
     *
     * @memberof LoadingView
     */
    LoadingView_csjc.prototype.FinishLoading_csjc = function () {
        this._processBar_csjc.width = this._processWidth_csjc;
        Laya.timer.once(200, this, function () {
            EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.App_CloseFirstLoadingView_csjc);
        });
    };
    return LoadingView_csjc;
}(Laya.Script));
exports.default = LoadingView_csjc;
},{"../../Event/EventDef":5,"../../Event/EventMgr":6}],86:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var OPPOAPI_1 = require("../../PlatformApi/OPPOAPI");
var GameSwitch_1 = require("../../CommomAPI/GameSwitch/GameSwitch");
var ViewMgr_1 = require("../../Mgr/ViewMgr");
var OppoNativeAdView_csjc = /** @class */ (function (_super) {
    __extends(OppoNativeAdView_csjc, _super);
    function OppoNativeAdView_csjc() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._nativeAd_csjc = null;
        _this._curAdItem_csjc = null;
        _this._reTry_csjc = false;
        _this.onCloseEvent = function () {
            ViewMgr_1.default.instance_csjc.openView_csjc(ViewMgr_1.ViewDef_csjc.InGameView);
        };
        return _this;
    }
    OppoNativeAdView_csjc.prototype.onAwake = function () {
        this._centerZone_csjc = this.owner.getChildByName("CenterZone");
        this._display_csjc = this._centerZone_csjc.getChildByName("Display");
        this._okBtn_csjc = this._centerZone_csjc.getChildByName("OkBtn");
        this._closeBtn_csjc = this._centerZone_csjc.getChildByName("CloseBtn");
        this._title_Text_csjc = this._centerZone_csjc.getChildByName("Title_Text");
        this._desc_Text_csjc = this._centerZone_csjc.getChildByName("Desc_Text");
    };
    OppoNativeAdView_csjc.prototype.onStart = function () {
        this.loadAd_csjc();
    };
    OppoNativeAdView_csjc.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._okBtn_csjc.on(Laya.Event.CLICK, this, this.onOkBtn_csjc);
        this._closeBtn_csjc.on(Laya.Event.CLICK, this, this.onCloseBtn_csjc);
        this._display_csjc.on(Laya.Event.CLICK, this, this.onDisplayClick_csjc);
    };
    OppoNativeAdView_csjc.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._okBtn_csjc.off(Laya.Event.CLICK, this, this.onOkBtn_csjc);
        this._closeBtn_csjc.off(Laya.Event.CLICK, this, this.onCloseBtn_csjc);
        this._display_csjc.off(Laya.Event.CLICK, this, this.onDisplayClick_csjc);
    };
    OppoNativeAdView_csjc.prototype.loadAd_csjc = function () {
        var _this = this;
        var self = this;
        if (Laya.Browser.onQGMiniGame) {
            this._closeBtn_csjc.visible = false;
            if (this._nativeAd_csjc) {
                this._nativeAd_csjc.destroy();
                this._nativeAd_csjc = null;
            }
            this._curAdItem_csjc = null;
            this._nativeAd_csjc = qg.createNativeAd({
                posId: OPPOAPI_1.default.GetNativeAd_csjc
            });
            this._nativeAd_csjc.load();
            this._nativeAd_csjc.onLoad(function (res) {
                console.log("原生广告加载成功：", res);
                var adlist = res.adList;
                for (var i = 0; i < adlist.length; ++i) {
                    var ad = adlist[i];
                    console.log("原生广告数据：", i);
                    for (var key in ad) {
                        console.log(key, ad[key]);
                    }
                }
                _this._curAdItem_csjc = adlist[Math.floor(Math.random() * adlist.length)];
                if (null != _this._curAdItem_csjc) {
                    for (var i = 0; i < _this._curAdItem_csjc.imgUrlList.length; ++i) {
                        console.log("imgUrlList : ", i + " ", _this._curAdItem_csjc.imgUrlList[i]);
                    }
                    var imgulr = _this._curAdItem_csjc.imgUrlList[Math.floor(Math.random() * _this._curAdItem_csjc.imgUrlList.length)];
                    self._display_csjc.loadImage(imgulr, Laya.Handler.create(self, function () {
                        self._title_Text_csjc.text = _this._curAdItem_csjc.title;
                        self._desc_Text_csjc.text = _this._curAdItem_csjc.desc;
                        self._nativeAd_csjc.reportAdShow({
                            adId: self._curAdItem_csjc.adId
                        });
                    }));
                    console.log("加载图片", imgulr);
                }
                self.showCenterZone_csjc();
            });
            this._nativeAd_csjc.onError(function (res) {
                console.log("原生广告加载失败：", res);
                for (var key in res) {
                    console.log(key, res[key]);
                }
                if (!_this._reTry_csjc) {
                    _this._reTry_csjc = true;
                    _this._centerZone_csjc.visible = false;
                    Laya.timer.once(1000, self, function () {
                        console.log("原生广告重新加载");
                        self.loadAd_csjc();
                    });
                }
                else {
                    self.closeView();
                }
            });
        }
        else {
            self.closeView();
        }
    };
    OppoNativeAdView_csjc.prototype.onCloseBtn_csjc = function () {
        var rate = GameSwitch_1.default.CurrentConfig.oppoConf_csjc.yuanshengWudian_csjc;
        if (Math.random() <= rate) {
            if (null != this._nativeAd_csjc && null != this._curAdItem_csjc) {
                console.log("点击上报！！！");
                this._nativeAd_csjc.reportAdClick({
                    adId: this._curAdItem_csjc.adId
                });
            }
        }
        this.closeView();
    };
    OppoNativeAdView_csjc.prototype.onOkBtn_csjc = function () {
        if (null != this._nativeAd_csjc && null != this._curAdItem_csjc) {
            console.log("点击上报！！！");
            this._nativeAd_csjc.reportAdClick({
                adId: this._curAdItem_csjc.adId
            });
        }
    };
    OppoNativeAdView_csjc.prototype.onDisplayClick_csjc = function () {
        if (null != this._nativeAd_csjc && null != this._curAdItem_csjc) {
            console.log("点击上报！！！");
            this._nativeAd_csjc.reportAdClick({
                adId: this._curAdItem_csjc.adId
            });
        }
    };
    OppoNativeAdView_csjc.prototype.onDestroy = function () {
        _super.prototype.onDestroy.call(this);
        if (Laya.Browser.onQGMiniGame) {
            if (this._nativeAd_csjc) {
                this._nativeAd_csjc.destroy();
            }
            this._nativeAd_csjc = null;
            this._curAdItem_csjc = null;
        }
    };
    OppoNativeAdView_csjc.prototype.showCenterZone_csjc = function () {
        var _this = this;
        this._centerZone_csjc.visible = true;
        var time = GameSwitch_1.default.CurrentConfig.oppoConf_csjc.yuanshengBtnShowTime_csjc * 1000;
        if (time > 0) {
            this._closeBtn_csjc.visible = false;
            Laya.timer.once(time, this, function () {
                _this._closeBtn_csjc.visible = true;
            });
        }
        else {
            this._closeBtn_csjc.visible = true;
        }
    };
    return OppoNativeAdView_csjc;
}(ViewBase_1.default));
exports.default = OppoNativeAdView_csjc;
},{"../../CommomAPI/GameSwitch/GameSwitch":3,"../../Mgr/ViewMgr":12,"../../PlatformApi/OPPOAPI":18,"../../View/ViewBase":90}],87:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../ViewBase");
var TipsView_csjc = /** @class */ (function (_super) {
    __extends(TipsView_csjc, _super);
    function TipsView_csjc() {
        return _super.call(this) || this;
    }
    TipsView_csjc.prototype.onAwake = function () {
        this._bg = this.owner.getChildByName("Bg");
        this._tipsText = this._bg.getChildByName("Text");
    };
    TipsView_csjc.prototype.openView = function (data) {
        var _this = this;
        _super.prototype.openView.call(this, data);
        this.setTipsMsg(data);
        Laya.timer.clearAll(this);
        Laya.Tween.to(this._bg, { alpha: 0 }, 1500, Laya.Ease.quintIn, Laya.Handler.create(this, function () {
            _this.closeView();
        }));
    };
    TipsView_csjc.prototype.setTipsMsg = function (msg) {
        this._tipsText.text = msg;
    };
    return TipsView_csjc;
}(ViewBase_1.default));
exports.default = TipsView_csjc;
},{"../ViewBase":90}],88:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var TwinkleSprite_csjc = /** @class */ (function (_super) {
    __extends(TwinkleSprite_csjc, _super);
    function TwinkleSprite_csjc() {
        var _this = _super.call(this) || this;
        /** @prop {name:TwinkleSpeed, tips:"闪动速度", type:Number, default:1000}*/
        _this.TwinkleSpeed = 1000;
        /** @prop {name:TwinkleMinSize, tips:"最小缩放", type:Number, default:0.95}*/
        _this.TwinkleMinSize = 0.95;
        /** @prop {name:TwinkleMaxSize, tips:"最大缩放", type:Number, default:1.05}*/
        _this.TwinkleMaxSize = 1.05;
        _this._aniForward_csjc = false;
        _this._fontSize_csjc = 25;
        _this._originSize_csjc = 1;
        return _this;
    }
    TwinkleSprite_csjc.prototype.onAwake = function () {
        this._displaySp_csjc = this.owner;
        this._disText_csjc = this.owner.getChildByName("TitelText");
        this._originSize_csjc = this._displaySp_csjc.scaleX;
        if (this._disText_csjc != null) {
            this._disText_csjc.text = "";
            this._fontSize_csjc = this._disText_csjc.fontSize;
        }
    };
    TwinkleSprite_csjc.prototype.onEnable = function () {
        this._displaySp_csjc.scale(this._originSize_csjc, this._originSize_csjc);
    };
    TwinkleSprite_csjc.prototype.onDisable = function () {
    };
    TwinkleSprite_csjc.prototype.onUpdate = function () {
        this.displayAni_csjc();
    };
    TwinkleSprite_csjc.prototype.displayAni_csjc = function () {
        if (!this._aniForward_csjc) {
            var scale = this._displaySp_csjc.scaleX - Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.max(scale, this.TwinkleMinSize * this._originSize_csjc);
            this._displaySp_csjc.scale(scale, scale);
            if (this._displaySp_csjc.scaleX <= this.TwinkleMinSize * this._originSize_csjc) {
                this._aniForward_csjc = true;
            }
        }
        else {
            var scale = this._displaySp_csjc.scaleX + Laya.timer.delta / this.TwinkleSpeed;
            scale = Math.min(scale, this.TwinkleMaxSize * this._originSize_csjc);
            this._displaySp_csjc.scale(scale, scale);
            if (this._displaySp_csjc.scaleX >= this.TwinkleMaxSize * this._originSize_csjc) {
                this._aniForward_csjc = false;
            }
        }
    };
    return TwinkleSprite_csjc;
}(Laya.Script));
exports.default = TwinkleSprite_csjc;
},{}],89:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewBase_1 = require("../../View/ViewBase");
var GameSwitch_1 = require("../../CommomAPI/GameSwitch/GameSwitch");
var VIVOAPI_1 = require("../../PlatformApi/VIVOAPI");
var VivoNativeAdView_csjc = /** @class */ (function (_super) {
    __extends(VivoNativeAdView_csjc, _super);
    function VivoNativeAdView_csjc() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this._nativeAd_csjc = null;
        _this._curAdItem_csjc = null;
        _this._reTry_csjc = false;
        return _this;
    }
    VivoNativeAdView_csjc.prototype.onAwake = function () {
        this._centerZone_csjc = this.owner.getChildByName("CenterZone");
        this._display_csjc = this._centerZone_csjc.getChildByName("Display");
        this._okBtn_csjc = this._centerZone_csjc.getChildByName("OkBtn");
        this._closeBtn_csjc = this._centerZone_csjc.getChildByName("CloseBtn");
        this._title_Text_csjc = this._centerZone_csjc.getChildByName("Title_Text");
        this._desc_Text_csjc = this._centerZone_csjc.getChildByName("Desc_Text");
    };
    VivoNativeAdView_csjc.prototype.onStart = function () {
        this.loadAd_csjc();
    };
    VivoNativeAdView_csjc.prototype.addEvent = function () {
        _super.prototype.addEvent.call(this);
        this._okBtn_csjc.on(Laya.Event.CLICK, this, this.onOkBtn_csjc);
        this._closeBtn_csjc.on(Laya.Event.CLICK, this, this.onCloseBtn_csjc);
        this._display_csjc.on(Laya.Event.CLICK, this, this.onDisplayClick_csjc);
    };
    VivoNativeAdView_csjc.prototype.removeEvent = function () {
        _super.prototype.removeEvent.call(this);
        this._okBtn_csjc.off(Laya.Event.CLICK, this, this.onOkBtn_csjc);
        this._closeBtn_csjc.off(Laya.Event.CLICK, this, this.onCloseBtn_csjc);
        this._display_csjc.off(Laya.Event.CLICK, this, this.onDisplayClick_csjc);
    };
    VivoNativeAdView_csjc.prototype.loadAd_csjc = function () {
        var _this = this;
        var self = this;
        if (Laya.Browser.onVVMiniGame) {
            // if (this._nativeAd && this._nativeAd.title != null) {
            //     this._nativeAd.destroy();
            this._nativeAd_csjc = null;
            // }
            this._curAdItem_csjc = null;
            this._nativeAd_csjc = qg.createNativeAd({
                posId: VIVOAPI_1.default.nativeAdId_csjc
            });
            this._nativeAd_csjc.onLoad(function (res) {
                console.log("原生广告加载成功：", res);
                var adlist = res.adList;
                for (var i = 0; i < adlist.length; ++i) {
                    var ad = adlist[i];
                    console.log("原生广告数据：", i);
                    for (var key in ad) {
                        console.log(key, ad[key]);
                    }
                }
                self._curAdItem_csjc = adlist[Math.floor(Math.random() * adlist.length)];
                if (null != self._curAdItem_csjc) {
                    for (var i = 0; i < self._curAdItem_csjc.imgUrlList.length; ++i) {
                        console.log("imgUrlList : ", i + " ", self._curAdItem_csjc.imgUrlList[i]);
                    }
                    var imgulr = self._curAdItem_csjc.imgUrlList[Math.floor(Math.random() * self._curAdItem_csjc.imgUrlList.length)];
                    self._display_csjc.loadImage(imgulr, Laya.Handler.create(self, function () {
                        self.showCenterZone_csjc();
                        self._nativeAd_csjc.reportAdShow({
                            adId: self._curAdItem_csjc.adId
                        });
                        console.log("加载图片并上报", imgulr);
                    }));
                }
            });
            var adLoad = this._nativeAd_csjc.load();
            adLoad && adLoad.then(function () {
                console.log('原生广告加载完成');
            }).catch(function (err) {
                console.log('加载失败', JSON.stringify(err));
                _this._centerZone_csjc.visible = false;
                if (!_this._reTry_csjc) {
                    _this._reTry_csjc = true;
                    Laya.timer.once(1000, self, function () {
                        console.log("原生广告重新加载");
                        self.loadAd_csjc();
                    });
                }
                else {
                    self.closeView();
                }
            });
        }
        else {
            self.closeView();
        }
    };
    VivoNativeAdView_csjc.prototype.onCloseBtn_csjc = function () {
        var rate = GameSwitch_1.default.CurrentConfig.vivoAdConf_csjc.yuanshengWudian_csjc;
        if (Math.random() <= rate) {
            if (null != this._nativeAd_csjc && null != this._curAdItem_csjc) {
                console.log("点击上报！！！");
                this._nativeAd_csjc.reportAdClick({
                    adId: this._curAdItem_csjc.adId
                });
            }
        }
        this.closeView();
    };
    VivoNativeAdView_csjc.prototype.onOkBtn_csjc = function () {
        this._nativeAd_csjc.reportAdClick({
            adId: this._curAdItem_csjc.adId
        });
    };
    VivoNativeAdView_csjc.prototype.onDisplayClick_csjc = function () {
        if (null != this._nativeAd_csjc && null != this._curAdItem_csjc) {
            console.log("点击上报！！！");
            this._nativeAd_csjc.reportAdClick({
                adId: this._curAdItem_csjc.adId
            });
        }
    };
    VivoNativeAdView_csjc.prototype.onDestroy = function () {
        _super.prototype.onDestroy.call(this);
        if (Laya.Browser.onVVMiniGame) {
            if (this._nativeAd_csjc && this._nativeAd_csjc.title != null) {
                this._nativeAd_csjc.destroy();
            }
            this._nativeAd_csjc = null;
            this._curAdItem_csjc = null;
        }
    };
    VivoNativeAdView_csjc.prototype.showCenterZone_csjc = function () {
        var _this = this;
        this._centerZone_csjc.visible = true;
        var time = GameSwitch_1.default.CurrentConfig.vivoAdConf_csjc.yuanshengBtnShowTime_csjc * 1000;
        if (time > 0) {
            this._okBtn_csjc.visible = false;
            Laya.timer.once(time, this, function () {
                _this._okBtn_csjc.visible = true;
            });
        }
        else {
            this._okBtn_csjc.visible = true;
        }
    };
    return VivoNativeAdView_csjc;
}(ViewBase_1.default));
exports.default = VivoNativeAdView_csjc;
},{"../../CommomAPI/GameSwitch/GameSwitch":3,"../../PlatformApi/VIVOAPI":19,"../../View/ViewBase":90}],90:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ViewMgr_1 = require("../Mgr/ViewMgr");
var EventMgr_1 = require("../Event/EventMgr");
var EventDef_1 = require("../Event/EventDef");
var Utilit_1 = require("../Utilit");
var IViewStateListener_1 = require("./IViewStateListener");
//界面基类，所有功能模块界面继承于这个类。这种类型的界面不能嵌套。
var ViewBase_csjc = /** @class */ (function (_super) {
    __extends(ViewBase_csjc, _super);
    function ViewBase_csjc() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.onCloseEvent = null;
        _this.onOpenEvent = null;
        _this._viewBase = true;
        _this._viewDef = ViewMgr_1.ViewDef_csjc.None;
        _this._data = {};
        return _this;
    }
    ViewBase_csjc.prototype.onAwake = function () {
        //删除时自动释放
        this.owner.autoDestroyAtClosed = true;
        this.owner.height = Laya.stage.height;
    };
    ViewBase_csjc.prototype.onEnable = function () {
        this.addEvent();
    };
    ViewBase_csjc.prototype.onDisable = function () {
        this.removeEvent();
    };
    ViewBase_csjc.prototype.onDestroy = function () {
        this.removeEvent();
    };
    ViewBase_csjc.prototype.openView = function (data) {
        this._data = data;
        this.show();
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_OnViewOpen_csjc, { view: this._viewDef });
        if (this.onOpenEvent) {
            this.onOpenEvent();
        }
    };
    ViewBase_csjc.prototype.addEvent = function () {
    };
    ViewBase_csjc.prototype.removeEvent = function () {
        Laya.timer.clearAll(this);
    };
    ViewBase_csjc.prototype.closeView = function () {
        ViewMgr_1.default.instance_csjc.closeView_csjc(this._viewDef);
    };
    ViewBase_csjc.prototype.hide = function () {
        var _this = this;
        this.owner.visible = false;
        this.onHide();
        Utilit_1.default.forEachChild(this.owner, function (child) {
            var coms = child._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (IViewStateListener_1.isIViewStateListener_csjc(element)) {
                        element.onViewHide(_this);
                    }
                }
            }
        });
    };
    ViewBase_csjc.prototype.show = function () {
        var _this = this;
        this.owner.visible = true;
        this.onShow();
        Utilit_1.default.forEachChild(this.owner, function (child) {
            var coms = child._components;
            if (coms) {
                for (var index = 0; index < coms.length; index++) {
                    var element = coms[index];
                    if (IViewStateListener_1.isIViewStateListener_csjc(element)) {
                        element.onViewShow(_this);
                    }
                }
            }
        });
    };
    ViewBase_csjc.prototype.viewIsHide = function () {
        return this.owner.visible;
    };
    ViewBase_csjc.prototype.onHide = function () { };
    ViewBase_csjc.prototype.onShow = function () { };
    ViewBase_csjc.prototype.onClose = function () {
        Laya.timer.clearAll(this);
        Laya.Tween.clearAll(this);
        EventMgr_1.default.dispatch_csjc(EventDef_1.EventDef_csjc.Game_OnViewClose_csjc, { view: this._viewDef });
        if (this.onCloseEvent) {
            this.onCloseEvent();
        }
    };
    return ViewBase_csjc;
}(Laya.Script));
exports.default = ViewBase_csjc;
},{"../Event/EventDef":5,"../Event/EventMgr":6,"../Mgr/ViewMgr":12,"../Utilit":68,"./IViewStateListener":84}],91:[function(require,module,exports){
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var REG = Laya.ClassUtils.regClass;
var ui;
(function (ui) {
    var View;
    (function (View) {
        var LoadingUI = /** @class */ (function (_super) {
            __extends(LoadingUI, _super);
            function LoadingUI() {
                return _super.call(this) || this;
            }
            LoadingUI.prototype.createChildren = function () {
                _super.prototype.createChildren.call(this);
                this.createView(LoadingUI.uiView);
            };
            LoadingUI.uiView = { "type": "View", "props": { "zOrder": 10, "width": 1334, "top": 0, "right": 0, "mouseThrough": false, "left": 0, "height": 750, "bottom": 0 }, "compId": 2, "child": [{ "type": "Image", "props": { "skin": "LoadingView/zhuyebeijing.jpg", "right": 0, "name": "BG", "left": 0, "bottom": 0 }, "compId": 11 }, { "type": "Image", "props": { "width": 415, "top": 158, "skin": "LoadingView/logo.png", "pivotY": 70, "pivotX": 208, "name": "Logo", "height": 140, "centerX": 0 }, "compId": 12 }, { "type": "Image", "props": { "skin": "LoadingView/loading.png", "centerX": 0, "bottom": 99 }, "compId": 27 }, { "type": "Image", "props": { "zOrder": 0, "skin": "LoadingView/jiazaijindu1.png", "pivotY": 22, "name": "ProcessBarBg", "centerX": 0, "bottom": 57 }, "compId": 5, "child": [{ "type": "Image", "props": { "y": 2, "x": 3, "width": 456, "skin": "LoadingView/jiazaijindu2.png", "sizeGrid": "0,45,0,531", "name": "ProcessBar" }, "compId": 9 }] }, { "type": "Script", "props": { "y": 0, "x": 0, "runtime": "View/LoadingView/LoadingView.ts" }, "compId": 7 }], "loadList": ["LoadingView/zhuyebeijing.jpg", "LoadingView/logo.png", "LoadingView/loading.png", "LoadingView/jiazaijindu1.png", "LoadingView/jiazaijindu2.png"], "loadList3D": [] };
            return LoadingUI;
        }(Laya.View));
        View.LoadingUI = LoadingUI;
        REG("ui.View.LoadingUI", LoadingUI);
    })(View = ui.View || (ui.View = {}));
})(ui = exports.ui || (exports.ui = {}));
},{}]},{},[9])
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uL0xheWFBaXJJREVfMi4xLjEuMS9yZXNvdXJjZXMvYXBwL25vZGVfbW9kdWxlcy9icm93c2VyLXBhY2svX3ByZWx1ZGUuanMiLCJzcmMvQUxELnRzIiwic3JjL0NvbW1vbUFQSS9FeGFtaW5lTWdyLnRzIiwic3JjL0NvbW1vbUFQSS9HYW1lU3dpdGNoL0dhbWVTd2l0Y2gudHMiLCJzcmMvQ29tbW9tQVBJL0dhbWVTd2l0Y2gvR2FtZVN3aXRjaEZvcm0udHMiLCJzcmMvRXZlbnQvRXZlbnREZWYudHMiLCJzcmMvRXZlbnQvRXZlbnRNZ3IudHMiLCJzcmMvR2FtZUNvbmZpZy50cyIsInNyYy9HYW1lU2V0dGluZ3MudHMiLCJzcmMvTWFpbi50cyIsInNyYy9NZ3IvU291bmRNZ3IudHMiLCJzcmMvTWdyL1N0b3JhZ2VNZ3IudHMiLCJzcmMvTWdyL1ZpZXdNZ3IudHMiLCJzcmMvTmV0L0Flc1Rvb2xzLnRzIiwic3JjL05ldC9IdHRwVW5pdC50cyIsInNyYy9OZXQvTmV0Q29uZmlnLnRzIiwic3JjL05ldC9hZXMuanMiLCJzcmMvUGxhdGZvcm1BcGkvQ2FjaGVkV1hCYW5uZXJBZC50cyIsInNyYy9QbGF0Zm9ybUFwaS9PUFBPQVBJLnRzIiwic3JjL1BsYXRmb3JtQXBpL1ZJVk9BUEkudHMiLCJzcmMvUGxhdGZvcm1BcGkvV1hBUEkudHMiLCJzcmMvUXBBUEkvQWREYXRhTWdyLnRzIiwic3JjL1FwQVBJL0FkVmlldy9RcEJhbm5lclZJZXcudHMiLCJzcmMvUXBBUEkvQWRWaWV3L1FwTGlzdEFkQm94LnRzIiwic3JjL1FwQVBJL0FkVmlldy9RcExpc3RBZFZpZXcudHMiLCJzcmMvUXBBUEkvQWRWaWV3L1FwUmFuZG9tSnVtcC50cyIsInNyYy9RcEFQSS9BZFZpZXcvUXBSZExpc3RBZEJveC50cyIsInNyYy9RcEFQSS9BZFZpZXcvUXBTaGFrZUFkMlZpZXcudHMiLCJzcmMvUXBBUEkvQWRWaWV3L1FwU2hha2VBZDNWaWV3LnRzIiwic3JjL1FwQVBJL0h0dHBVbml0LnRzIiwic3JjL1FwQVBJL1FwR2FtZVN3aXRjaC50cyIsInNyYy9TY3JpcHRzL0dhbWVDb3JlL0NhbWVyYTJVSS50cyIsInNyYy9TY3JpcHRzL0dhbWVDb3JlL0NhbWVyYUN0ci50cyIsInNyYy9TY3JpcHRzL0dhbWVDb3JlL0NoYXJhY3Rlci9Cb3NzUm9ib3QudHMiLCJzcmMvU2NyaXB0cy9HYW1lQ29yZS9DaGFyYWN0ZXIvQ2hhcmFjdGVyQ3RyLnRzIiwic3JjL1NjcmlwdHMvR2FtZUNvcmUvQ2hhcmFjdGVyL0Rlc3RydWN0aWJsZU9iai50cyIsInNyYy9TY3JpcHRzL0dhbWVDb3JlL0NoYXJhY3Rlci9EZXN0cnVjdGlibGVPYmpCdWlsZHMudHMiLCJzcmMvU2NyaXB0cy9HYW1lQ29yZS9DaGFyYWN0ZXIvRW5lbXkudHMiLCJzcmMvU2NyaXB0cy9HYW1lQ29yZS9DaGFyYWN0ZXIvTXlBbmltYXRvckV2ZW50LnRzIiwic3JjL1NjcmlwdHMvR2FtZUNvcmUvQ2hhcmFjdGVyL1N0b25lTWdyLnRzIiwic3JjL1NjcmlwdHMvR2FtZUNvcmUvRW51bXMudHMiLCJzcmMvU2NyaXB0cy9HYW1lQ29yZS9Gc21TdGF0ZXMvQmFzZVN0YXRlLnRzIiwic3JjL1NjcmlwdHMvR2FtZUNvcmUvRnNtU3RhdGVzL0tpbmdraW5nU3RhdGUudHMiLCJzcmMvU2NyaXB0cy9HYW1lQ29yZS9Gc21TdGF0ZXMvVFJleFN0YXRlLnRzIiwic3JjL1NjcmlwdHMvR2FtZUNvcmUvRnNtL0ZTTVN5c3RlbS50cyIsInNyYy9TY3JpcHRzL0dhbWVDb3JlL0ZzbS9Gc21FbnVtLnRzIiwic3JjL1NjcmlwdHMvR2FtZUNvcmUvRnNtL0ZzbVN0YXRlLnRzIiwic3JjL1NjcmlwdHMvR2FtZUNvcmUvR2FtZVNldHRpbmcudHMiLCJzcmMvU2NyaXB0cy9HYW1lQ29yZS9HYW1lVG9vbHMvUG9vbE1hbmFnZXIudHMiLCJzcmMvU2NyaXB0cy9HYW1lQ29yZS9Sb2NrZXIudHMiLCJzcmMvU2NyaXB0cy9HYW1lQ29yZS9TY2VuZU1nci50cyIsInNyYy9TY3JpcHRzL0dhbWVNZ3IudHMiLCJzcmMvU2NyaXB0cy9NeUdhbWVWaWV3L0J0blBhbmVsLnRzIiwic3JjL1NjcmlwdHMvTXlHYW1lVmlldy9Db2luU3ViVmlldy50cyIsInNyYy9TY3JpcHRzL015R2FtZVZpZXcvQ29udHJvbGxlci50cyIsInNyYy9TY3JpcHRzL015R2FtZVZpZXcvRXhhbWluZUNoZWNrLnRzIiwic3JjL1NjcmlwdHMvTXlHYW1lVmlldy9HYW1lU3RlcC50cyIsInNyYy9TY3JpcHRzL015R2FtZVZpZXcvS2RCYW5uZXJWaWV3LnRzIiwic3JjL1NjcmlwdHMvTXlHYW1lVmlldy9UdXRvcmlhbFZpZXcudHMiLCJzcmMvVG1BUEkvQWRWaWV3L1RtQmFubmVyQWRWaWV3LnRzIiwic3JjL1RtQVBJL0FkVmlldy9UbUxpc3RBZEJveC50cyIsInNyYy9UbUFQSS9BZFZpZXcvVG1MaXN0QWRWaWV3LnRzIiwic3JjL1RtQVBJL0FkVmlldy9UbVNoYWtlQWRWaWV3LnRzIiwic3JjL1RtQVBJL0FkVmlldy9UbVNpZGVQb3BBZFZpZXcudHMiLCJzcmMvVG1BUEkvQWRWaWV3L1RtU2luZ2xlQWRWaWV3LnRzIiwic3JjL1RtQVBJL1RtQVBJLnRzIiwic3JjL1RtQVBJL1RtQXBwQ29uZmlnLnRzIiwic3JjL1VzZXIvVXNlci50cyIsInNyYy9VdGlsaXQudHMiLCJzcmMvVmlldy9BbHBoYUJyZWF0aGluZ0FuaS50cyIsInNyYy9WaWV3L0J1dHRvbkFuaW0udHMiLCJzcmMvVmlldy9Db21tb24vVW5pdmVyc2FsQm90dG9tWm9uZS50cyIsInNyYy9WaWV3L0dhbWVWaWV3L0V4cG9ydDFBZFZpZXcudHMiLCJzcmMvVmlldy9HYW1lVmlldy9FeHBvcnQyQWRWaWV3LnRzIiwic3JjL1ZpZXcvR2FtZVZpZXcvRXhwb3J0M0FkVmlldy50cyIsInNyYy9WaWV3L0dhbWVWaWV3L0ZpcnN0Vmlld0FkLnRzIiwic3JjL1ZpZXcvR2FtZVZpZXcvRnJpZW5kRXhwb3J0LnRzIiwic3JjL1ZpZXcvR2FtZVZpZXcvR2FtZU92ZXJGYWlsVmlldy50cyIsInNyYy9WaWV3L0dhbWVWaWV3L0dhbWVPdmVyV2luVklldy50cyIsInNyYy9WaWV3L0dhbWVWaWV3L0dhbWVPdmVyV2luVmlldy50cyIsInNyYy9WaWV3L0dhbWVWaWV3L0luR2FtZVZpZXcudHMiLCJzcmMvVmlldy9HYW1lVmlldy9NYWluR2FtZVZpZXcudHMiLCJzcmMvVmlldy9HYW1lVmlldy9TZWxlY3RIZXJvLnRzIiwic3JjL1ZpZXcvR2FtZVZpZXcvV3VkaWFuVmlldy50cyIsInNyYy9WaWV3L0lWaWV3U3RhdGVMaXN0ZW5lci50cyIsInNyYy9WaWV3L0xvYWRpbmdWaWV3L0xvYWRpbmdWaWV3LnRzIiwic3JjL1ZpZXcvT1BQTy9PcHBvTmF0aXZlQWRWaWV3LnRzIiwic3JjL1ZpZXcvVGlwc1ZpZXcvVGlwc1ZpZXcudHMiLCJzcmMvVmlldy9Ud2lua2xlU3ByaXRlLnRzIiwic3JjL1ZpZXcvVklWTy9WaXZvTmF0aXZlQWRWaWV3LnRzIiwic3JjL1ZpZXcvVmlld0Jhc2UudHMiLCJzcmMvdWkvbGF5YU1heFVJLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7OztBQ1ZBLElBQVksZ0JBS1g7QUFMRCxXQUFZLGdCQUFnQjtJQUN4Qiw2QkFBUyxDQUFBO0lBQ1QsaUZBQStCLENBQUE7SUFDL0IsOEVBQTRCLENBQUE7SUFDNUIsa0JBQWtCO0FBQ3RCLENBQUMsRUFMVyxnQkFBZ0IsR0FBaEIsd0JBQWdCLEtBQWhCLHdCQUFnQixRQUszQjtBQUVELFNBQVM7QUFDVDtJQUFBO0lBd0RBLENBQUM7SUF2RGlCLDJCQUFrQixHQUFoQyxVQUFpQyxNQUFjO1FBQzNDLElBQUksSUFBSSxDQUFDLE9BQU8sQ0FBQyxVQUFVLEVBQUc7WUFDMUIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1lBQ2hE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QUFPLENBQUMsUUFBUSxDQUFDLENBQUMsRUFBRSxDQUFDLEVBQUUsRUFBRSxDQUFDLENBQUM7UUFDaEMsSUFBSSxLQUFLLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDLEdBQUcsSUFBSSxDQUFDLEVBQUUsR0FBRyxHQUFHLENBQUM7UUFDL0MsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDO1FBQzNDLFFBQVEsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLEtBQUssQ0FBQyxDQUFDO1FBQzVCLE9BQU8sUUFBUSxDQUFDO0lBQ3BCLENBQUM7SUFFRDs7OztPQUlHO0lBQ1csZ0JBQU0sR0FBcEIsVUFBcUIsRUFBRSxFQUFFLEVBQUU7UUFDdkIsSUFBSSxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDdkQsSUFBSSxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsQ0FBQyxDQUFDO1FBQ2hFLElBQUksTUFBTSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLEdBQUcsRUFBRSxDQUFDLENBQUMsR0FBRyxFQUFFLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNoRSxJQUFJLElBQUksR0FBRyxFQUFFLEdBQUcsQ0FBQyxN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O1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSTtZQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUN2RCxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJO1lBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUk7WUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDbkQsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSTtZQUFFLElBQUksQ0FBQyxRQUFRLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUVuRCxJQUFJLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJO1lBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ2pFLElBQUksQ0FBQyxJQUFJLENBQUMsbUJBQW1CLENBQUMsSUFBSTtZQUFFLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO0lBQzdFLENBQUM7SUFFRCwyQkFBUSxHQUFSO1FBQ0ksSUFBSSxDQUFDLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSTtZQUFFLElBQUksQ0FBQyxVQUFVLENBQUMsSUFBSSxHQUFHLElBQUksQ0FBQztRQUN2RCxJQUFJLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJO1lBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDO1FBQ3ZELElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUk7WUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUM7UUFDbkQsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUk7WUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLElBQUksR0FBRyxLQUFLLENBQUM7UUFFbkQsSUFBSSxDQUFD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USxFQUFDLENBQUMsRUFBQyxPQUFPLEVBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxPQUFPLEVBQUMsT0FBTyxFQUFDLEVBQUMsTUFBTSxFQUFDLDhCQUE4QixFQUFDLE9BQU8sRUFBQyxDQUFDLEVBQUMsTUFBTSxFQUFDLElBQUksRUFBQyxNQUFNLEVBQUMsQ0FBQyxFQUFDLFFBQVEsRUFBQyxDQUFDLEVBQUMsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLEVBQUMsRUFBQyxNQUFNLEVBQUMsT0FBTyxFQUFDLE9BQU8sRUFBQyxFQUFDLE9BQU8sRUFBQyxHQUFHLEVBQUMsS0FBSyxFQUFDLEdBQUcsRUFBQyxNQUFNLEVBQUMsc0JBQXNCLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxRQUFRLEVBQUMsR0FBRyxFQUFDLE1BQU0sRUFBQyxNQUFNLEVBQUMsUUFBUSxFQUFDLEdBQUcsRUFBQyxTQUFTLEVBQUMsQ0FBQyxFQUFDLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxFQUFDLEVBQUMsTUFBTSxFQUFDLE9BQU8sRUFBQyxPQUFPLEVBQUMsRUFBQyxNQUFNLEVBQUMseUJBQXlCLEVBQUMsU0FBUyxFQUFDLENBQUMsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLEVBQUMsUUFBUSxFQUFDLEVBQUUsRUFBQyxFQUFDLEVBQUMsTUFBTSxFQUFDLE9BQU8sRUFBQyxPQUFPLEVBQUMsRUFBQyxRQUFRLEVBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyw4QkFBOEIsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLE1BQU0sRUFBQyxjQUFjLEVBQUMsU0FBUyxFQUFDLENBQUMsRUFBQyxRQUFRLEVBQUMsRUFBRSxFQUFDLEVBQUMsUUFBUSxFQUFDLENBQUMsRUFBQyxPQUFPLEVBQUMsQ0FBQyxFQUFDLE1BQU0sRUFBQyxPQUFPLEVBQUMsT0FBTyxFQUFDLEVBQUMsR0FBRyxFQUFDLENBQUMsRUFBQyxHQUFHLEVBQUMsQ0FBQyxFQUFDLE9BQU8sRUFBQyxHQUFHLEVBQUMsTUFBTSxFQUFDLDhCQUE4QixFQUFDLFVBQVUsRUFBQyxZQUFZLEVBQUMsTUFBTSxFQUFDLFlBQVksRUFBQyxFQUFDLFFBQVEsRUFBQyxDQUFDLEVBQUMsQ0FBQyxFQUFDLEVBQUMsRUFBQyxNQUFNLEVBQUMsUUFBUSxFQUFDLE9BQU8sRUFBQyxFQUFDLEdBQUcsRUFBQyxDQUFDLEVBQUMsR0FBRyxFQUFDLENBQUMsRUFBQyxTQUFTLEVBQUMsaUNBQWlDLEVBQUMsRUFBQyxRQUFRLEVBQUMsQ0FBQyxFQUFDLENBQUMsRUFBQyxVQUFVLEVBQUMsQ0FBQyw4QkFBOEIsRUFBQyxzQkFBc0IsRUFBQyx5QkFBeUIsRUFBQyw4QkFBOEIsRUFBQyw4QkFBOEIsQ0FBQyxFQUFDLFlBQVksRUFBQyxFQUFFLEVBQUMsQ0FBQztZQU10bEMsZ0JBQUM7U0FQRCxBQU9DLENBUDhCLElBQUksQ0FBQyxJQUFJLEdBT3ZDO1FBUFksY0FBUyxZQU9yQixDQUFBO1FBQ0QsR0FBRyxDQUFDLG1CQUFtQixFQUFDLFNBQVMsQ0FBQyxDQUFDO0lBQ3ZDLENBQUMsRUFWZ0IsSUFBSSxHQUFKLE9BQUksS0FBSixPQUFJLFFBVXBCO0FBQUQsQ0FBQyxFQVZhLEVBQUUsR0FBRixVQUFFLEtBQUYsVUFBRSxRQVVmIiwiZmlsZSI6ImdlbmVyYXRlZC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzQ29udGVudCI6WyJ2YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XHJcbiAgICB2YXIgZXh0ZW5kU3RhdGljcyA9IE9iamVjdC5zZXRQcm90b3R5cGVPZiB8fFxyXG4gICAgICAgICh7IF9fcHJvdG9fXzogW10gfSBpbnN0YW5jZW9mIEFycmF5ICYmIGZ1bmN0aW9uIChkLCBiKSB7IGQuX19wcm90b19fID0gYjsgfSkgfHxcclxuICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChiLmhhc093blByb3BlcnR5KHApKSBkW3BdID0gYltwXTsgfTtcclxuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xyXG4gICAgICAgIGV4dGVuZFN0YXRpY3MoZCwgYik7XHJcbiAgICAgICAgZnVuY3Rpb24gX18oKSB7IHRoaXMuY29uc3RydWN0b3IgPSBkOyB9XHJcbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xyXG4gICAgfTtcclxufSkoKTtcclxuKGZ1bmN0aW9uKCl7ZnVuY3Rpb24gcihlLG4sdCl7ZnVuY3Rpb24gbyhpLGYpe2lmKCFuW2ldKXtpZighZVtpXSl7dmFyIGM9XCJmdW5jdGlvblwiPT10eXBlb2YgcmVxdWlyZSYmcmVxdWlyZTtpZighZiYmYylyZXR1cm4gYyhpLCEwKTtpZih1KXJldHVybiB1KGksITApO3ZhciBhPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIraStcIidcIik7dGhyb3cgYS5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGF9dmFyIHA9bltpXT17ZXhwb3J0czp7fX07ZVtpXVswXS5jYWxsKHAuZXhwb3J0cyxmdW5jdGlvbihyKXt2YXIgbj1lW2ldWzFdW3JdO3JldHVybiBvKG58fHIpfSxwLHAuZXhwb3J0cyxyLGUsbix0KX1yZXR1cm4gbltpXS5leHBvcnRzfWZvcih2YXIgdT1cImZ1bmN0aW9uXCI9PXR5cGVvZiByZXF1aXJlJiZyZXF1aXJlLGk9MDtpPHQubGVuZ3RoO2krKylvKHRbaV0pO3JldHVybiBvfXJldHVybiByfSkoKSIsImV4cG9ydCBlbnVtIEFMREV2ZW50RGVmX2NzamMge1xyXG4gICAgTm9uZSA9IFwiXCIsXHJcbiAgICBSZXBvcnRBZENsaWNrU3VjY2VzcyA9IFwi5bm/5ZGK5a+85Ye65oiQ5YqfXCIsXHJcbiAgICBSZXBvcnRBZENsaWNrRmFpbCA9IFwi5bm/5ZGK5a+85Ye65aSx6LSlXCIsXHJcbiAgICAvL3RvZG865re75Yqg5L2g6Ieq5bex55qE6Zi/5ouJ5LiB5LqL5Lu2XHJcbn1cclxuXHJcbi8v6Zi/5ouJ5LiB55u45YWz5o6l5Y+jXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEFMRF9jc2pjIHtcclxuICAgIHB1YmxpYyBzdGF0aWMgYWxkU2VuZE9wZW5JZF9jc2pjKG9wZW5pZDogc3RyaW5nKSAge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkgIHtcclxuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLmFsZFNlbmRPcGVuaWQob3BlbmlkKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJBTEQg5LiK5oqlIG9wZW5pZCA6IFwiLCBvcGVuaWQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKSAge1xyXG4gICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wicXFcIl0uYWxkU2VuZE9wZW5pZChvcGVuaWQpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkFMRCDkuIrmiqUgb3BlbmlkIDogXCIsIG9wZW5pZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgYWxkU2VuZEV2ZW50X2NzamMoZXZlbnQ6IEFMREV2ZW50RGVmX2NzamMsIGRhdGE6IGFueSkgIHtcclxuICAgICAgICB2YXIgZXZlbnROYW1lOiBzdHJpbmcgPSBldmVudDtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpICB7XHJcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5hbGRTZW5kRXZlbnQoZXZlbnROYW1lLCBkYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSkgIHtcclxuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInFxXCJdLmFsZFNlbmRFdmVudChldmVudE5hbWUsIGRhdGEpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHB1YmxpYyBzdGF0aWMgYWxkU2VuZFJlcG9ydEFkQ2xpY2tTdWNjZXNzX2NzamMoZGF0YTogYW55KSAge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiQUxE5a+85Ye65oiQ5YqfOiBcIiwgZGF0YSk7XHJcbiAgICAgICAgQUxEX2NzamMuYWxkU2VuZEV2ZW50X2NzamMoQUxERXZlbnREZWZfY3NqYy5SZXBvcnRBZENsaWNrU3VjY2VzcyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgXCLlr7zlh7rmiJDlip9cIjogZGF0YVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgYWxkU2VuZFJlcG9ydEFkQ2xpY2tGYWlsX2NzamMoZGF0YTogYW55KSAge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiQWxE5a+85Ye65aSx6LSlOiBcIiwgZGF0YSk7XHJcbiAgICAgICAgQUxEX2NzamMuYWxkU2VuZEV2ZW50X2NzamMoQUxERXZlbnREZWZfY3NqYy5SZXBvcnRBZENsaWNrRmFpbCxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgXCLlr7zlh7rlpLHotKVcIjogZGF0YVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIC8vIHB1YmxpYyBzdGF0aWMgYWxkU2VuZFJlcG9ydEFkQ2xpY2tTdWNjZXNzKGRhdGEgOiBhbnkpXHJcbiAgICAvLyB7XHJcbiAgICAvLyAgICAgdmFyIHR5cGUgPSBBTERFdmVudERlZi5SZXBvcnRBZENsaWNrU3VjY2VzcyAgKyBcIiBcIiArICBkYXRhLnRpdGxlICsgXCI6XCIgKyBTdHJpbmcoZGF0YS5hcHBpZClcclxuICAgIC8vICAgICB2YXIgYWxkID0gQUxEIGFzIGFueTtcclxuICAgIC8vICAgICBhbGQuYWxkU2VuZEV2ZW50KHR5cGUsXHJcbiAgICAvLyAgICAgICAgIHtcclxuICAgIC8vICAgICAgICAgICAgIFwi5a+85Ye65oiQ5YqfXCIgOiBkYXRhLnRpdGxlICsgXCI6XCIgKyBTdHJpbmcoZGF0YS5hcHBpZClcclxuICAgIC8vICAgICAgICAgfSlcclxuICAgIC8vIH1cclxuXHJcbiAgICAvLyBwdWJsaWMgc3RhdGljIGFsZFNlbmRSZXBvcnRBZENsaWNrRmFpbChkYXRhIDogYW55KVxyXG4gICAgLy8ge1xyXG4gICAgLy8gICAgIHZhciB0eXBlID0gQUxERXZlbnREZWYuUmVwb3J0QWRDbGlja0ZhaWwgICsgXCIgXCIgKyAgZGF0YS50aXRsZSArIFwiOlwiICsgU3RyaW5nKGRhdGEuYXBwaWQpXHJcbiAgICAvLyAgICAgdmFyIGFsZCA9IEFMRCBhcyBhbnk7XHJcbiAgICAvLyAgICAgYWxkLmFsZFNlbmRFdmVudCh0eXBlLFxyXG4gICAgLy8gICAgICAgICB7XHJcbiAgICAvLyAgICAgICAgICAgICBcIuWvvOWHuuWksei0pVwiICA6ICBkYXRhLnRpdGxlICsgXCI6XCIgKyBTdHJpbmcoZGF0YS5hcHBpZClcclxuICAgIC8vICAgICAgICAgfSlcclxuICAgIC8vIH1cclxufSIsImltcG9ydCBHYW1lU3dpdGNoIGZyb20gXCIuL0dhbWVTd2l0Y2gvR2FtZVN3aXRjaFwiO1xyXG5pbXBvcnQgR2RJcE1hbmFnZXIgZnJvbSBcIi4vR2RJUE1hbmFnZXJcIjtcclxuaW1wb3J0IEdhbWVTZXR0aW5nc19jc2pjIGZyb20gXCIuLi9HYW1lU2V0dGluZ3NcIjtcclxuaW1wb3J0IEdhbWVTd2l0Y2hfY3NqYyBmcm9tIFwiLi9HYW1lU3dpdGNoL0dhbWVTd2l0Y2hcIjtcclxuaW1wb3J0IFVzZXJfY3NqYyBmcm9tIFwiLi4vVXNlci9Vc2VyXCI7XHJcbmltcG9ydCBRcEdhbWVTd2l0Y2ggZnJvbSBcIi4uL1FwQVBJL1FwR2FtZVN3aXRjaFwiO1xyXG5pbXBvcnQgV1hBUElfY3NqYyBmcm9tIFwiLi4vUGxhdGZvcm1BcGkvV1hBUElcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEV4YW1pbmVNZ3Ige1xyXG4gICAgLy8gcHVibGljIHN0YXRpYyBnZXQgQ2FuRG9TY3pfT3BwbygpOiBib29sZWFuIHtcclxuICAgIC8vICAgICBsZXQgdmVyc2lvbiA9IChHYW1lU2V0dGluZ3NfY3NqYy5WZXJzaW9uc19jc2pjID09IEdhbWVTd2l0Y2hfY3NqYy5DdXJyZW50Q29uZmlnLnZlcnNpb25fY3NqYyk7XHJcbiAgICAvLyAgICAgbGV0IGxldmVsID0gVXNlcl9jc2pjLmdldExldmVOdW1fY3NqYygpID49IDI7XHJcbiAgICAvLyAgICAgY29uc29sZS5sb2coYOajgOafpeabtOaWsCzlvZPliY3ljIXkvZPniYjmnKw6JHtHYW1lU2V0dGluZ3NfY3NqYy5WZXJzaW9uc19jc2pjfSznur/kuIrniYg6JHtHYW1lU3dpdGNoX2NzamMuQ3VycmVudENvbmZpZy52ZXJzaW9uX2NzamN9YCk7XHJcbiAgICAvLyAgICAgcmV0dXJuIHZlcnNpb24gJiYgbGV2ZWw7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXQgQ2FuRG9TY3pfV3goKTogYm9vbGVhbiB7XHJcbiAgICAgICAgbGV0IGlwID0gUXBHYW1lU3dpdGNoLklzSXBQYXNzO1xyXG4gICAgICAgIGxldCBzY2VuZUlkID0gV1hBUElfY3NqYy5nZXRMYXVuY2hPcHRpb25zU3luY19jc2pjKCkuc2NlbmU7XHJcbiAgICAgICAgbGV0IHNjZW5lR29vZCA9IHRydWU7XHJcbiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IFFwR2FtZVN3aXRjaC5HYW1lU3dpdGNoLnNjZW5lTGlzdC5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgY29uc3Qgc2MgPSBRcEdhbWVTd2l0Y2guR2FtZVN3aXRjaC5zY2VuZUxpc3RbaW5kZXhdO1xyXG4gICAgICAgICAgICBpZiAoc2MgPT0gc2NlbmVJZCkge1xyXG4gICAgICAgICAgICAgICAgc2NlbmVHb29kID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zb2xlLmxvZyhg5b2T5YmNSVDmo4Dmn6XlnLDlnYA6JHtRcEdhbWVTd2l0Y2guSXNJcFBhc3N9LOWcuuaZr++8miR7c2NlbmVJZH3pgJrov4cke3NjZW5lR29vZH1gKTtcclxuICAgICAgICByZXR1cm4gaXAgJiYgc2NlbmVHb29kO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IENhbkRvS2RfV3goKTogYm9vbGVhbiB7XHJcbiAgICAgICAgbGV0IGtkU3dpdGNoID0gUXBHYW1lU3dpdGNoLkdhbWVTd2l0Y2gud3VkaWFuU3dpdGNoID09IDE7XHJcbiAgICAgICAgbGV0IGlwID0gUXBHYW1lU3dpdGNoLklzSXBQYXNzO1xyXG4gICAgICAgIGxldCBzY2VuZUlkID0gV1hBUElfY3NqYy5nZXRMYXVuY2hPcHRpb25zU3luY19jc2pjKCkuc2NlbmU7XHJcbiAgICAgICAgbGV0IHNjZW5lR29vZCA9IHRydWU7XHJcbiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IFFwR2FtZVN3aXRjaC5HYW1lU3dpdGNoLnNjZW5lTGlzdC5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgY29uc3Qgc2MgPSBRcEdhbWVTd2l0Y2guR2FtZVN3aXRjaC5zY2VuZUxpc3RbaW5kZXhdO1xyXG4gICAgICAgICAgICBpZiAoc2MgPT0gc2NlbmVJZCkge1xyXG4gICAgICAgICAgICAgICAgc2NlbmVHb29kID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgY3VyVGltZSA9IG5ldyBEYXRlKCkuZ2V0SG91cnMoKTtcclxuICAgICAgICBsZXQgdGltZU9wZW4gPSBmYWxzZTtcclxuICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgUXBHYW1lU3dpdGNoLkdhbWVTd2l0Y2gua3VhbmdkaWFuVGltZS5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgY29uc3QgdGltZSA9IFFwR2FtZVN3aXRjaC5HYW1lU3dpdGNoLmt1YW5nZGlhblRpbWVbaW5kZXhdO1xyXG4gICAgICAgICAgICBpZiAodGltZSA9PSBjdXJUaW1lKSB7XHJcbiAgICAgICAgICAgICAgICB0aW1lT3BlbiA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zb2xlLmxvZyhga2TlvIDlhbMke2tkU3dpdGNofeW9k+WJjUlQ5qOA5p+l5Zyw5Z2AOiR7UXBHYW1lU3dpdGNoLklzSXBQYXNzfSzlnLrmma/vvJoke3NjZW5lSWR96YCa6L+HJHtzY2VuZUdvb2R9LOW9k+WJjeaXtumXtCR7Y3VyVGltZX3miZPlvIDnirbmgIEke3RpbWVPcGVufWApO1xyXG4gICAgICAgIHJldHVybiBrZFN3aXRjaCAmJiBpcCAmJiBzY2VuZUdvb2QgJiYgdGltZU9wZW47XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IENhblNob3dBZF9XeCgpOiBib29sZWFuIHtcclxuICAgICAgICBsZXQgc2NlbmVJZCA9IFdYQVBJX2NzamMuZ2V0TGF1bmNoT3B0aW9uc1N5bmNfY3NqYygpLnNjZW5lO1xyXG4gICAgICAgIGxldCBzY2VuZUdvb2QgPSB0cnVlO1xyXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBRcEdhbWVTd2l0Y2guR2FtZVN3aXRjaC5zY2VuZUxpc3QubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHNjID0gUXBHYW1lU3dpdGNoLkdhbWVTd2l0Y2guc2NlbmVMaXN0W2luZGV4XTtcclxuICAgICAgICAgICAgaWYgKHNjID09IHNjZW5lSWQpIHtcclxuICAgICAgICAgICAgICAgIHNjZW5lR29vZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc29sZS5sb2coYOaYvuekuuW5v+WRiuWcuuaZr++8miR7c2NlbmVJZH3pgJrov4cke3NjZW5lR29vZH1gKTtcclxuICAgICAgICByZXR1cm4gc2NlbmVHb29kO1xyXG4gICAgfVxyXG4gICAgLy8gcHVibGljIHN0YXRpYyBnZXQgU2NlbmVJc0dvb2QoKTogYm9vbGVhbiB7XHJcbiAgICAvLyAgICAgbGV0IHNjZW5lTGlzdCA9IEdhbWVTd2l0Y2guQ3VycmVudENvbmZpZy53eENvbmYuZXhhbWluZVNjZW5lTGlzdDtcclxuICAgIC8vICAgICBsZXQgc2NlbmUgPSBXWEFQSS5nZXRMYXVuY2hPcHRpb25zU3luYygpLnNjZW5lO1xyXG4gICAgLy8gICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBzY2VuZUxpc3QubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAvLyAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBzY2VuZUxpc3RbaW5kZXhdO1xyXG4gICAgLy8gICAgICAgICBpZiAoc2NlbmUgPT0gZWxlbWVudCkge1xyXG4gICAgLy8gICAgICAgICAgICAgY29uc29sZS5sb2coXCJleGFtaW5lU2NlbmVcIiwgc2NlbmUsIFwi5pyq6YCa6L+H6L+U5ZueRmFsc2VcIik7XHJcbiAgICAvLyAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICB9XHJcbiAgICAvLyAgICAgY29uc29sZS5sb2coXCJleGFtaW5lU2NlbmVcIiwgc2NlbmUsIFwi5bey6YCa6L+H6L+U5ZueVHJ1ZVwiKTtcclxuICAgIC8vICAgICByZXR1cm4gdHJ1ZTtcclxuICAgIC8vIH1cclxuICAgIC8vIC8qKlxyXG4gICAgLy8gICog5pWP5oSf5Yqf6IO95bGP6JS9XHJcbiAgICAvLyAgKiBcclxuICAgIC8vICAqIEByZWFkb25seVxyXG4gICAgLy8gICogQHN0YXRpY1xyXG4gICAgLy8gICogQHR5cGUge2Jvb2xlYW59XHJcbiAgICAvLyAgKiBAbWVtYmVyb2YgRXhhbWluZU1nclxyXG4gICAgLy8gICovXHJcbiAgICAvLyBwdWJsaWMgc3RhdGljIGdldCBXdWRpYW5TY2VuZUlwRmxhZygpOiBib29sZWFuIHtcclxuICAgIC8vICAgICBsZXQgd3VkaWFuID0gR2FtZVN3aXRjaC5DdXJyZW50Q29uZmlnLnd4Q29uZi53dWRpYW4gPT0gMSA/IHRydWUgOiBmYWxzZTtcclxuICAgIC8vICAgICBsZXQgaXBJc0dvb2QgPSBHZElwTWFuYWdlci5JcElzUGFzcztcclxuICAgIC8vICAgICBsZXQgc2NlbmVJc0dvb2QgPSB0aGlzLlNjZW5lSXNHb29kO1xyXG4gICAgLy8gICAgIGxldCByZXMgPSB3dWRpYW4gJiYgaXBJc0dvb2QgJiYgc2NlbmVJc0dvb2Q7XHJcbiAgICAvLyAgICAgY29uc29sZS5sb2coXCJXdWRpYW5GbGFn5oC75byA5YWz5Li6OlwiLCByZXMsIFwid3VkaWFuOlwiLCB3dWRpYW4sIFwiSXBJc0dvb2Q6XCIsIGlwSXNHb29kLCBcIlNjZW5lSXNHb29kXCIsIHNjZW5lSXNHb29kKTtcclxuICAgIC8vICAgICByZXR1cm4gcmVzO1xyXG4gICAgLy8gfVxyXG4gICAgLy8gLyoqXHJcbiAgICAvLyAgKiDmlY/mhJ/lip/og73lsY/olL1cclxuICAgIC8vICAqIFxyXG4gICAgLy8gICogQHJlYWRvbmx5XHJcbiAgICAvLyAgKiBAc3RhdGljXHJcbiAgICAvLyAgKiBAdHlwZSB7Ym9vbGVhbn1cclxuICAgIC8vICAqIEBtZW1iZXJvZiBFeGFtaW5lTWdyXHJcbiAgICAvLyAgKi9cclxuICAgIC8vIHB1YmxpYyBzdGF0aWMgZ2V0IFd1ZGlhbklwRmxhZygpOiBib29sZWFuIHtcclxuICAgIC8vICAgICBsZXQgd3VkaWFuID0gR2FtZVN3aXRjaC5DdXJyZW50Q29uZmlnLnd4Q29uZi53dWRpYW4gPT0gMSA/IHRydWUgOiBmYWxzZTtcclxuICAgIC8vICAgICBsZXQgaXBJc0dvb2QgPSBHZElwTWFuYWdlci5JcElzUGFzcztcclxuICAgIC8vICAgICBsZXQgcmVzID0gd3VkaWFuICYmIGlwSXNHb29kO1xyXG4gICAgLy8gICAgIGNvbnNvbGUubG9nKFwiV3VkaWFuSXBGbGFn5oC75byA5YWz5Li6OlwiLCByZXMsIFwid3VkaWFuOlwiLCB3dWRpYW4sIFwiSXBJc0dvb2Q6XCIsIGlwSXNHb29kKTtcclxuICAgIC8vICAgICByZXR1cm4gcmVzO1xyXG4gICAgLy8gfVxyXG59IiwiaW1wb3J0IEdhbWVTZXR0aW5nc19jc2pjIGZyb20gXCIuLi8uLi9HYW1lU2V0dGluZ3NcIjtcclxuaW1wb3J0IHsgR2FtZVN3aXRjaEZvcm1fY3NqYyB9IGZyb20gXCIuL0dhbWVTd2l0Y2hGb3JtXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lU3dpdGNoX2NzamMge1xyXG4gICAgLy/lvZPliY3nmoRhcHBDb25maWflr7nosaFcclxuICAgIHByaXZhdGUgc3RhdGljIF9jdXJyZW50Q29uZmlnOiBHYW1lU3dpdGNoRm9ybV9jc2pjID0gbmV3IEdhbWVTd2l0Y2hGb3JtX2NzamMoKTtcclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IEN1cnJlbnRDb25maWcoKTogR2FtZVN3aXRjaEZvcm1fY3NqYyB7XHJcbiAgICAgICAgcmV0dXJuIEdhbWVTd2l0Y2hfY3NqYy5fY3VycmVudENvbmZpZztcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOiwg+eUqOWcqOe6v+eJiOacrOeahGFwcENvbmZpZ1xyXG4gICAgICogXHJcbiAgICAgKiBAc3RhdGljXHJcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjb21wbGV0ZUZ1bmMgXHJcbiAgICAgKiBAbWVtYmVyb2YgR2FtZVN3aXRjaFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIFVwZGF0ZU9ubGluZUNvbmZpZ19jc2pjKGNvbXBsZXRlRnVuYzogRnVuY3Rpb24pIHtcclxuICAgICAgICBsZXQgc2VydmVyVXJsID0gR2FtZVNldHRpbmdzX2NzamMuUmVtb3RlU2VydmVyVXJsX2NzamMgKyBcIi9qc29uL2dhbWVzd2l0Y2guanNvblwiO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwi6LCD55So5Zyo57q/54mI5pys55qEYXBwQ29uZmlnXCIsIHNlcnZlclVybCk7XHJcbiAgICAgICAgTGF5YS5sb2FkZXIubG9hZChzZXJ2ZXJVcmwsIExheWEuSGFuZGxlci5jcmVhdGUoR2FtZVN3aXRjaF9jc2pjLCAocmVzKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChyZXMpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJlbnRDb25maWcuaW5pdE9wdGlvbnNfY3NqYyhyZXMpO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5fY3VycmVudENvbmZpZyk7XHJcbiAgICAgICAgICAgICAgICBpZiAoY29tcGxldGVGdW5jKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29tcGxldGVGdW5jKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KSlcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOiwg+eUqOacrOWcsOa1i+ivleeJiOacrOeahGFwcENvbmZpZ1xyXG4gICAgICogXHJcbiAgICAgKiBAc3RhdGljXHJcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjb21wbGV0ZUZ1bmMgXHJcbiAgICAgKiBAbWVtYmVyb2YgR2FtZVN3aXRjaFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIFVwZGF0ZUxvY2FsQ29uZmlnX2NzamMoY29tcGxldGVGdW5jOiBGdW5jdGlvbikge1xyXG4gICAgICAgIGxldCBzZXJ2ZXJVcmwgPSBHYW1lU2V0dGluZ3NfY3NqYy5Mb2NhbFNlcnZlclVybF9jc2pjICsgXCIvanNvbi9nYW1lc3dpdGNoLmpzb25cIjtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIuiwg+eUqOacrOWcsOeJiOacrOeahGFwcENvbmZpZ1wiLCBzZXJ2ZXJVcmwpO1xyXG4gICAgICAgIExheWEubG9hZGVyLmxvYWQoc2VydmVyVXJsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKEdhbWVTd2l0Y2hfY3NqYywgKHJlcykgPT4ge1xyXG4gICAgICAgICAgICBpZiAocmVzKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jdXJyZW50Q29uZmlnLmluaXRPcHRpb25zX2NzamMocmVzKTtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKHRoaXMuX2N1cnJlbnRDb25maWcpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNvbXBsZXRlRnVuYykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlRnVuYygpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSkpXHJcbiAgICB9XHJcbn0iLCIvKipcclxuICog5L+d5a2YYXBwQ29uZmln5pWw5YC855qE57G7XHJcbiAqIFxyXG4gKiBAZXhwb3J0XHJcbiAqIEBjbGFzcyBHYW1lU3dpdGNoRm9ybVxyXG4gKi9cclxuZXhwb3J0IGNsYXNzIEdhbWVTd2l0Y2hGb3JtX2NzamMge1xyXG4gICAgLyoqXHJcbiAgICAgKiDliJ3lp4vljJZhcHBDb25maWdPcHRpb27lrZfmrrXlgLxcclxuICAgICAqIOWmguaenOihqOS4reayoeacie+8jOWImeiuvue9ruS4uuWIneWni+eahOm7mOiupOWAvFxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0geyp9IHJlcyBcclxuICAgICAqIEBtZW1iZXJvZiBHYW1lU3dpdGNoRm9ybVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaW5pdE9wdGlvbnNfY3NqYyhyZXM6IGFueSkge1xyXG4gICAgICAgIC8v57G75Z6L5Yik5pat77yM5aaC5p6c5piv5q+U6L6D566A5Y2V55qEbnVtYmVy77yMbnVtYmVy77yMc3RyaW5nLGZ1bmN0aW9u5bCx55SoVHlwZW9mXHJcbiAgICAgICAgLy/lpoLmnpzmmK9BcnJheeWwseeUqCBpbnN0YW5jZW9mXHJcbiAgICAgICAgaWYgKHJlcyA9PSBudWxsKSByZXR1cm47XHJcbiAgICAgICAgaWYgKHR5cGVvZiByZXMuZ2FtZUtpbGxlciA9PSBcIm51bWJlclwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZ2FtZUtpbGxlcl9jc2pjID0gcmVzLmdhbWVLaWxsZXI7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmdhbWVLaWxsZXJfY3NqYyA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIua4uOaIj+adgOaJi+WQr+WKqFwiKTtcclxuICAgICAgICAgICAgICAgIGxldCByZCA9IE1hdGguZmxvb3IoNTAwMCArIE1hdGgucmFuZG9tKCkgKiA1MDAwKTtcclxuICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZShyZCwgdGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHdoaWxlICh0cnVlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6bG85q27572R56C0LOWNoeatu+a4uOaIj+i/m+eoi1wiKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0eXBlb2YgcmVzLnZlcnNpb249PSBcInN0cmluZ1wiKSB0aGlzLnZlcnNpb25fY3NqYyA9IHJlcy52ZXJzaW9uO1xyXG4gICAgICAgIGlmIChyZXMuYmxvY2tDaXR5cyBpbnN0YW5jZW9mIEFycmF5KSB0aGlzLmJsb2NrQ2l0eXNfY3NqYyA9IHJlcy5ibG9ja0NpdHlzO1xyXG4gICAgICAgIGlmICh0eXBlb2YgcmVzLmJ0blNob3dUaW1lciA9PSBcIm51bWJlclwiKSB0aGlzLmJ0blNob3dUaW1lcl9jc2pjID0gcmVzLmJ0blNob3dUaW1lcjtcclxuICAgICAgICBpZiAodHlwZW9mIHJlcy5idG5Nb3ZlVGltZXIgPT0gXCJudW1iZXJcIikgdGhpcy5idG5Nb3ZlVGltZXJfY3NqYyA9IHJlcy5idG5Nb3ZlVGltZXI7XHJcbiAgICAgICAgaWYgKHR5cGVvZiByZXMuYmFubmVyTW92ZVRpbWVyID09IFwibnVtYmVyXCIpIHRoaXMuYmFubmVyTW92ZVRpbWVyX2NzamMgPSByZXMuYmFubmVyTW92ZVRpbWVyO1xyXG4gICAgICAgIGlmIChyZXMud3hDb25mKSB7XHJcbiAgICAgICAgICAgIGxldCB3eENvbmYgPSByZXMud3hDb25mO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIHd4Q29uZi52ZXJzaW9ucyA9PSBcInN0cmluZ1wiKSB0aGlzLnd4Q29uZl9jc2pjLnZlcnNpb25zX2NzamMgPSB3eENvbmYudmVyc2lvbnM7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygd3hDb25mLmFkU3dpdGNoID09IFwibnVtYmVyXCIpIHRoaXMud3hDb25mX2NzamMuYWRTd2l0Y2hfY3NqYyA9IHd4Q29uZi5hZFN3aXRjaDtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiB3eENvbmYud3hCYW5uZXIgPT0gXCJudW1iZXJcIikgdGhpcy53eENvbmZfY3NqYy53eEJhbm5lcl9jc2pjID0gd3hDb25mLnd4QmFubmVyO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIHd4Q29uZi53dWRpYW4gPT0gXCJudW1iZXJcIikgdGhpcy53eENvbmZfY3NqYy53dWRpYW5fY3NqYyA9IHd4Q29uZi53dWRpYW47XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygd3hDb25mLmJhbm5lckNyZWF0ZUZhaWxOdW0gPT0gXCJudW1iZXJcIikgdGhpcy53eENvbmZfY3NqYy5iYW5uZXJDcmVhdGVGYWlsTnVtX2NzamMgPSB3eENvbmYuYmFubmVyQ3JlYXRlRmFpbE51bTtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiB3eENvbmYuYmFubmVyVG9kYXlCYW5uZXJNYXggPT0gXCJudW1iZXJcIikgdGhpcy53eENvbmZfY3NqYy5iYW5uZXJUb2RheUJhbm5lck1heF9jc2pjID0gd3hDb25mLmJhbm5lclRvZGF5QmFubmVyTWF4O1xyXG4gICAgICAgICAgICBpZiAod3hDb25mLmV4YW1pbmVTY2VuZUxpc3QgaW5zdGFuY2VvZiBBcnJheSkgdGhpcy53eENvbmZfY3NqYy5leGFtaW5lU2NlbmVMaXN0X2NzamMgPSB3eENvbmYuZXhhbWluZVNjZW5lTGlzdDtcclxuICAgICAgICAgICAgaWYgKHd4Q29uZi53eFd1RGlhbkJhbm5lcnMgaW5zdGFuY2VvZiBBcnJheSkgdGhpcy53eENvbmZfY3NqYy53eFd1RGlhbkJhbm5lcnNfY3NqYyA9IHd4Q29uZi53eFd1RGlhbkJhbm5lcnM7XHJcbiAgICAgICAgICAgIGlmICh3eENvbmYud3hHcmlkQWRzIGluc3RhbmNlb2YgQXJyYXkpIHRoaXMud3hDb25mX2NzamMud3hHcmlkQWRzX2NzamMgPSB3eENvbmYud3hHcmlkQWRzO1xyXG4gICAgICAgICAgICAvKiAgICAgICAgICAgICBpZiAodHlwZW9mIHd4Q29uZi5tYWlMaWFuZ0Jsb2NrID09IFwibnVtYmVyXCIpIHRoaXMud3hDb25mLm1haUxpYW5nQmxvY2sgPSB3eENvbmYubWFpTGlhbmdCbG9jaztcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHd4Q29uZi5tYWlMaWFuZ1NjZW5lTGlzdCBpbnN0YW5jZW9mIEFycmF5KSB0aGlzLnd4Q29uZi5tYWlMaWFuZ1NjZW5lTGlzdCA9IHd4Q29uZi5tYWlMaWFuZ1NjZW5lTGlzdDsgKi9cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHJlcy5xcWNmZykge1xyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHJlcy5vcHBvQ29uZikge1xyXG4gICAgICAgICAgICBsZXQgb3Bwb0NvbmYgPSByZXMub3Bwb0NvbmY7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygb3Bwb0NvbmYueXVhbnNoZW5nU3dpdGNoID09IFwibnVtYmVyXCIpIHRoaXMub3Bwb0NvbmZfY3NqYy55dWFuc2hlbmdTd2l0Y2hfY3NqYyA9IG9wcG9Db25mLnl1YW5zaGVuZ1N3aXRjaDtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBvcHBvQ29uZi55dWFuc2hlbmdXdWRpYW4gPT0gXCJudW1iZXJcIikgdGhpcy5vcHBvQ29uZl9jc2pjLnl1YW5zaGVuZ1d1ZGlhbl9jc2pjID0gb3Bwb0NvbmYueXVhbnNoZW5nV3VkaWFuO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wcG9Db25mLnl1YW5zaGVuZ0J0blNob3dUaW1lID09IFwibnVtYmVyXCIpIHRoaXMub3Bwb0NvbmZfY3NqYy55dWFuc2hlbmdCdG5TaG93VGltZV9jc2pjID0gb3Bwb0NvbmYueXVhbnNoZW5nQnRuU2hvd1RpbWU7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygb3Bwb0NvbmYueXVhbnNoZW5nUmVwbGFjZUJhbm5lcjEgPT0gXCJudW1iZXJcIikgdGhpcy5vcHBvQ29uZl9jc2pjLnl1YW5zaGVuZ1JlcGxhY2VCYW5uZXIxX2NzamMgPSBvcHBvQ29uZi55dWFuc2hlbmdSZXBsYWNlQmFubmVyMTtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBvcHBvQ29uZi55dWFuc2hlbmdSZXBsYWNlQmFubmVyMiA9PSBcIm51bWJlclwiKSB0aGlzLm9wcG9Db25mX2NzamMueXVhbnNoZW5nUmVwbGFjZUJhbm5lcjJfY3NqYyA9IG9wcG9Db25mLnl1YW5zaGVuZ1JlcGxhY2VCYW5uZXIyO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wcG9Db25mLnl1YW5zaGVuZ1JlcGxhY2VCYW5uZXJDbG9zZU9wZW5CYW5uZXIgPT0gXCJudW1iZXJcIikgdGhpcy5vcHBvQ29uZl9jc2pjLnl1YW5zaGVuZ1JlcGxhY2VCYW5uZXJDbG9zZU9wZW5CYW5uZXJfY3NqYyA9IG9wcG9Db25mLnl1YW5zaGVuZ1JlcGxhY2VCYW5uZXJDbG9zZU9wZW5CYW5uZXI7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygb3Bwb0NvbmYueXVhbnNoZW5nR2FtZU92ZXIgPT0gXCJudW1iZXJcIikgdGhpcy5vcHBvQ29uZl9jc2pjLnl1YW5zaGVuZ0dhbWVPdmVyX2NzamMgPSBvcHBvQ29uZi55dWFuc2hlbmdHYW1lT3ZlcjtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBvcHBvQ29uZi55dWFuc2hlbmdHYW1lT3ZlckxldmVsID09IFwibnVtYmVyXCIpIHRoaXMub3Bwb0NvbmZfY3NqYy55dWFuc2hlbmdHYW1lT3ZlckxldmVsX2NzamMgPSBvcHBvQ29uZi55dWFuc2hlbmdHYW1lT3ZlckxldmVsO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wcG9Db25mLmFkZFRvRGVza3RvcCA9PSBcIm51bWJlclwiKSB0aGlzLm9wcG9Db25mX2NzamMuYWRkVG9EZXNrdG9wX2NzamMgPSBvcHBvQ29uZi5hZGRUb0Rlc2t0b3A7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygb3Bwb0NvbmYuYmFubmVyV3VkaWFuMSA9PSBcIm51bWJlclwiKSB0aGlzLm9wcG9Db25mX2NzamMuYmFubmVyV3VkaWFuMV9jc2pjID0gb3Bwb0NvbmYuYmFubmVyV3VkaWFuMTtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBvcHBvQ29uZi5iYW5uZXJXdWRpYW4yID09IFwibnVtYmVyXCIpIHRoaXMub3Bwb0NvbmZfY3NqYy5iYW5uZXJXdWRpYW4yX2NzamMgPSBvcHBvQ29uZi5iYW5uZXJXdWRpYW4yO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIG9wcG9Db25mLmJhbm5lcld1ZGlhbjMgPT0gXCJudW1iZXJcIikgdGhpcy5vcHBvQ29uZl9jc2pjLmJhbm5lcld1ZGlhbjNfY3NqYyA9IG9wcG9Db25mLmJhbm5lcld1ZGlhbjM7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygb3Bwb0NvbmYuYmFubmVyV3VkaWFuNCA9PSBcIm51bWJlclwiKSB0aGlzLm9wcG9Db25mX2NzamMuYmFubmVyV3VkaWFuNF9jc2pjID0gb3Bwb0NvbmYuYmFubmVyV3VkaWFuNDtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiBvcHBvQ29uZi5iYW5uZXJXdWRpYW41ID09IFwibnVtYmVyXCIpIHRoaXMub3Bwb0NvbmZfY3NqYy5iYW5uZXJXdWRpYW41X2NzamMgPSBvcHBvQ29uZi5iYW5uZXJXdWRpYW41O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocmVzLnR0Q29uZikge1xyXG4gICAgICAgICAgICBsZXQgdHRDb25mID0gcmVzLnR0Q29uZjtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiB0dENvbmYuZXhwb3J0U3dpdGNoID09IFwibnVtYmVyXCIpIHRoaXMudHRDb25mX2NzamMuZXhwb3J0U3dpdGNoX2NzamMgPSB0dENvbmYuZXhwb3J0U3dpdGNoO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIHR0Q29uZi5BYlZlclN3aXRjaCA9PSBcIm51bWJlclwiKSB0aGlzLnR0Q29uZl9jc2pjLkFiVmVyU3dpdGNoX2NzamMgPSB0dENvbmYuQWJWZXJTd2l0Y2g7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChyZXMudml2b0FkQ29uZikge1xyXG4gICAgICAgICAgICBsZXQgdml2b0FkQ29uZiA9IHJlcy52aXZvQWRDb25mO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIHZpdm9BZENvbmYueXVhbnNoZW5nU3dpdGNoID09IFwibnVtYmVyXCIpIHRoaXMudml2b0FkQ29uZl9jc2pjLnl1YW5zaGVuZ1N3aXRjaF9jc2pjID0gdml2b0FkQ29uZi55dWFuc2hlbmdTd2l0Y2g7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygdml2b0FkQ29uZi55dWFuc2hlbmdXdWRpYW4gPT0gXCJudW1iZXJcIikgdGhpcy52aXZvQWRDb25mX2NzamMueXVhbnNoZW5nV3VkaWFuX2NzamMgPSB2aXZvQWRDb25mLnl1YW5zaGVuZ1d1ZGlhbjtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiB2aXZvQWRDb25mLnl1YW5zaGVuZ0J0blNob3dUaW1lID09IFwibnVtYmVyXCIpIHRoaXMudml2b0FkQ29uZl9jc2pjLnl1YW5zaGVuZ0J0blNob3dUaW1lX2NzamMgPSB2aXZvQWRDb25mLnl1YW5zaGVuZ0J0blNob3dUaW1lO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIHZpdm9BZENvbmYueXVhbnNoZW5nUmVwbGFjZUJhbm5lcjEgPT0gXCJudW1iZXJcIikgdGhpcy52aXZvQWRDb25mX2NzamMueXVhbnNoZW5nUmVwbGFjZUJhbm5lcjFfY3NqYyA9IHZpdm9BZENvbmYueXVhbnNoZW5nUmVwbGFjZUJhbm5lcjE7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygdml2b0FkQ29uZi55dWFuc2hlbmdSZXBsYWNlQmFubmVyMiA9PSBcIm51bWJlclwiKSB0aGlzLnZpdm9BZENvbmZfY3NqYy55dWFuc2hlbmdSZXBsYWNlQmFubmVyMl9jc2pjID0gdml2b0FkQ29uZi55dWFuc2hlbmdSZXBsYWNlQmFubmVyMjtcclxuICAgICAgICAgICAgaWYgKHR5cGVvZiB2aXZvQWRDb25mLnl1YW5zaGVuZ1JlcGxhY2VCYW5uZXJDbG9zZU9wZW5CYW5uZXIgPT0gXCJudW1iZXJcIikgdGhpcy52aXZvQWRDb25mX2NzamMueXVhbnNoZW5nUmVwbGFjZUJhbm5lckNsb3NlT3BlbkJhbm5lcl9jc2pjID0gdml2b0FkQ29uZi55dWFuc2hlbmdSZXBsYWNlQmFubmVyQ2xvc2VPcGVuQmFubmVyO1xyXG4gICAgICAgICAgICBpZiAodHlwZW9mIHZpdm9BZENvbmYueXVhbnNoZW5nR2FtZU92ZXIgPT0gXCJudW1iZXJcIikgdGhpcy52aXZvQWRDb25mX2NzamMueXVhbnNoZW5nR2FtZU92ZXJfY3NqYyA9IHZpdm9BZENvbmYueXVhbnNoZW5nR2FtZU92ZXI7XHJcbiAgICAgICAgICAgIGlmICh0eXBlb2Ygdml2b0FkQ29uZi5hZGRUb0Rlc2t0b3AgPT0gXCJudW1iZXJcIikgdGhpcy52aXZvQWRDb25mX2NzamMuYWRkVG9EZXNrdG9wX2NzamMgPSB2aXZvQWRDb25mLmFkZFRvRGVza3RvcDtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy/kuIvpnaLmmK/oh6rlrprkuYnnmoTlrZfmrrVcclxuICAgIH1cclxuICAgIC8qIOadgOatu+a4uOaIj+i/m+eoi+eahOW3peWFtyzpsbzmrbvnvZHnoLTml7bkvb/nlKgs5Y2D5LiH5rOo5oSPICovXHJcbiAgICBwdWJsaWMgZ2FtZUtpbGxlcl9jc2pjOiBudW1iZXIgPSAwO1xyXG4gICAgLy/pqprmk43kvZzmuLjmiI/niYjmnKxcclxuICAgIHB1YmxpYyB2ZXJzaW9uX2NzamM6IHN0cmluZyA9IFwiMC4wLjBcIjtcclxuICAgIC8v5Z+O5biC5bGP6JS95YiX6KGoXHJcbiAgICBwdWJsaWMgYmxvY2tDaXR5c19jc2pjOiBBcnJheTxzdHJpbmc+ID0gW1wi5YyX5Lqs5biCXCIsIFwi5oiQ6YO95biCXCIsIFwi5rex5Zyz5biCXCIsIFwi5LiK5rW35biCXCIsIFwi5rex5Zyz5biCXCJdO1xyXG4gICAgLy/miYDmnInkuIvkuIDmraXmjInpkq7lu7bov5/lh7rnjrDnmoTml7bpl7RcclxuICAgIHB1YmxpYyBidG5TaG93VGltZXJfY3NqYzogbnVtYmVyID0gMDtcclxuICAgIC8v5omA5pyJ6K+v54K55oyJ6ZKu5LiK56e755qE5pe26Ze0XHJcbiAgICBwdWJsaWMgYnRuTW92ZVRpbWVyX2NzamM6IG51bWJlciA9IDA7XHJcbiAgICAvL+aJgOacieivr+eCuUJhbm5lcuS4iuenu+eahOaXtumXtFxyXG4gICAgcHVibGljIGJhbm5lck1vdmVUaW1lcl9jc2pjOiBudW1iZXIgPSAwO1xyXG4gICAgLy/lvq7kv6Hnq6/lvIDlhbPlrZfmrrVcclxuICAgIHB1YmxpYyByZWFkb25seSB3eENvbmZfY3NqYyA9IG5ldyB3eENvbmZfY3NqYygpXHJcbiAgICAvL09wcG/nq6/lvIDlhbPlrZfmrrVcclxuICAgIHB1YmxpYyByZWFkb25seSBvcHBvQ29uZl9jc2pjID0gbmV3IG9wcG9Db25mX2NzamMoKTtcclxuICAgIC8vUVHnq6/lvIDlhbPlrZfmrrUgICAgXHJcbiAgICBwdWJsaWMgcmVhZG9ubHkgcXFDb25mX2NzamMgPSBuZXcgcXFDb25mX2NzamMoKTtcclxuICAgIC8vVFTnq6/lvIDlhbPlrZfmrrUgICAgICAgIFxyXG4gICAgcHVibGljIHJlYWRvbmx5IHR0Q29uZl9jc2pjID0gbmV3IHR0Q29uZl9jc2pjKCk7XHJcbiAgICAvL3Zpdm/lub/lkYrlrZfmrrVcclxuICAgIHB1YmxpYyByZWFkb25seSB2aXZvQWRDb25mX2NzamMgPSBuZXcgdml2b0NvbmZfY3NqYygpO1xyXG4gICAgLy/kuIvpnaLmmK/oh6rlrprkuYnnmoTlrZfmrrVcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIHd4Q29uZl9jc2pjIHtcclxuICAgIC8v5b2T5YmN5ri45oiP55qE54mI5pysXHJcbiAgICBwdWJsaWMgdmVyc2lvbnNfY3NqYzogc3RyaW5nID0gXCIwLjAuMFwiO1xyXG4gICAgLy/miYDmnInlr7zlh7rlub/lkYrnmoTlvIDlhbMsdHJ1ZeS4uuacieWvvOWHuuW5v+WRilxyXG4gICAgcHVibGljIGFkU3dpdGNoX2NzamM6IG51bWJlciA9IDA7XHJcbiAgICAvL+aYr+WQpuaJk+W8gOW+ruS/oWJhbm5lcix0cnVl5Li65pyJ5b6u5L+hYmFubmVyXHJcbiAgICBwdWJsaWMgd3hCYW5uZXJfY3NqYzogbnVtYmVyID0gMDtcclxuICAgIC8v6K+v54K554uC54K55Yqf6IO95oC75byA5YWzXHJcbiAgICBwdWJsaWMgd3VkaWFuX2NzamM6IG51bWJlciA9IDA7XHJcbiAgICAvL0Jhbm5lcuWksei0peWIm+W7uueahOS4quaVsFxyXG4gICAgcHVibGljIGJhbm5lckNyZWF0ZUZhaWxOdW1fY3NqYzogbnVtYmVyID0gMztcclxuICAgIC8vQmFubmVy5q+P5aSp5pyA5aSn5Yib5bu65qyh5pWwXHJcbiAgICBwdWJsaWMgYmFubmVyVG9kYXlCYW5uZXJNYXhfY3NqYzogbnVtYmVyID0gMTA7XHJcbiAgICAvL+W+ruS/oUdyaWRBZOWIl+ihqFxyXG4gICAgcHVibGljIHd4R3JpZEFkc19jc2pjOiBBcnJheTxzdHJpbmc+ID0gW107XHJcbiAgICAvL+WuoeaguOWxj+iUveeahOWcuuaZr+WAvO+8jOmAmui/h+i/meS6m+WcuuaZr+WAvOi/m+adpeeahOWuoeaguOS6uuWRmOeci+S4jeWIsOafkOS6m+aVj+aEn+eahOWKn+iDvVxyXG4gICAgcHVibGljIGV4YW1pbmVTY2VuZUxpc3RfY3NqYzogQXJyYXk8bnVtYmVyPiA9IFtcclxuICAgICAgICAxMDA1LCAxMDA2LCAxMDExLCAxMDEyLCAxMDEzLCAxMDE0LCAxMDE3LCAxMDE5LFxyXG4gICAgICAgIDEwMjAsIDEwMjMsIDEwMjQsIDEwMjUsIDEwMzAsIDEwMzEsIDEwMzIsIDEwMzYsXHJcbiAgICAgICAgMTA0MiwgMTA0NywgMTA0OCwgMTA0OSwgMTA1MywgMTEwMiwgMTEyOV07XHJcbiAgICAvL+W+ruS/oWJhbm5lcuWIl+ihqFxyXG4gICAgcHVibGljIHd4V3VEaWFuQmFubmVyc19jc2pjOiBBcnJheTxzdHJpbmc+ID0gW107XHJcbiAgICAvKiAgICAgLy/kubDph4/lip/og73nmoTmgLvlvIDlhbPvvIzkuLrkuoborqnpgJrov4fkubDph4/ov5vmnaXnmoTlrqHmoLjkurrlkZjnnIvkuI3op4Hlub/lkYpcclxuICAgICAgICBwdWJsaWMgbWFpTGlhbmdCbG9jazogbnVtYmVyID0gMTtcclxuICAgICAgICAvL+S5sOmHj+WKn+iDveeahOeahOWcuuaZr+WAvO+8jOS4uuS6huiuqemAmui/h+S5sOmHj+i/m+adpeeahOWuoeaguOS6uuWRmOeci+S4jeingeW5v+WRilxyXG4gICAgICAgIHB1YmxpYyBtYWlMaWFuZ1NjZW5lTGlzdDogQXJyYXk8bnVtYmVyPiA9IFtcclxuICAgICAgICAgICAgMTAxMSwgMTAxMiwgMTAxMywgMTAxNywgMTAyNSwgMTAzMSwgMTAzMiwgMTA0NyxcclxuICAgICAgICAgICAgMTA0OCwgMTA0OSwgMTA3MlxyXG4gICAgICAgIF0gKi9cclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIHFxQ29uZl9jc2pjIHtcclxuXHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyB2aXZvQ29uZl9jc2pjIHtcclxuICAgIHB1YmxpYyB5dWFuc2hlbmdTd2l0Y2hfY3NqYzogbnVtYmVyID0gMDtcclxuICAgIHB1YmxpYyB5dWFuc2hlbmdXdWRpYW5fY3NqYzogbnVtYmVyID0gMDtcclxuICAgIHB1YmxpYyB5dWFuc2hlbmdCdG5TaG93VGltZV9jc2pjOiBudW1iZXIgPSAwO1xyXG4gICAgcHVibGljIHl1YW5zaGVuZ1JlcGxhY2VCYW5uZXIxX2NzamM6IG51bWJlciA9IDA7XHJcbiAgICBwdWJsaWMgeXVhbnNoZW5nUmVwbGFjZUJhbm5lcjJfY3NqYzogbnVtYmVyID0gMDtcclxuICAgIHB1YmxpYyB5dWFuc2hlbmdSZXBsYWNlQmFubmVyQ2xvc2VPcGVuQmFubmVyX2NzamM6IG51bWJlciA9IDA7XHJcbiAgICBwdWJsaWMgeXVhbnNoZW5nR2FtZU92ZXJfY3NqYzogbnVtYmVyID0gMDtcclxuICAgIHB1YmxpYyBhZGRUb0Rlc2t0b3BfY3NqYzogbnVtYmVyID0gMDtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIG9wcG9Db25mX2NzamMge1xyXG4gICAgcHVibGljIHl1YW5zaGVuZ1N3aXRjaF9jc2pjOiBudW1iZXIgPSAwOy8v5Y2V54us5Y6f55Sf55WM6Z2i5piv5ZCm5Lya5Ye6546wXHJcbiAgICBwdWJsaWMgeXVhbnNoZW5nV3VkaWFuX2NzamM6IG51bWJlciA9IDA7Ly/ljp/nlJ/lub/lkYrlhbPpl63mjInpkq7or6/ngrnmpoLnjodcclxuICAgIHB1YmxpYyB5dWFuc2hlbmdCdG5TaG93VGltZV9jc2pjOiBudW1iZXIgPSAwOy8v5Y2V54us5Y6f55Sf55WM6Z2i5YWz6Zet5oyJ6ZKu5Ye6546w5pe26Ze0XHJcbiAgICBwdWJsaWMgeXVhbnNoZW5nUmVwbGFjZUJhbm5lcjFfY3NqYzogbnVtYmVyID0gMDsvL+W6n+mZpOaXoOeUqFxyXG4gICAgcHVibGljIHl1YW5zaGVuZ1JlcGxhY2VCYW5uZXIyX2NzamM6IG51bWJlciA9IDA7Ly/lup/pmaTml6DnlKhcclxuICAgIHB1YmxpYyB5dWFuc2hlbmdSZXBsYWNlQmFubmVyQ2xvc2VPcGVuQmFubmVyX2NzamM6IG51bWJlciA9IDA7Ly/lup/pmaTml6DnlKhcclxuICAgIHB1YmxpYyB5dWFuc2hlbmdHYW1lT3Zlcl9jc2pjOiBudW1iZXIgPSAwOy8v5ri45oiP57uT5p2f5pe25piv5ZCm5by65Yi26Lez6L2s5Y6f55SfXHJcbiAgICBwdWJsaWMgeXVhbnNoZW5nR2FtZU92ZXJMZXZlbF9jc2pjOiBudW1iZXIgPSAwOy8v5ri45oiP57uT5p2f5pe25piv5ZCm5by65Yi26Lez6L2s5Y6f55SfXHJcbiAgICBwdWJsaWMgYWRkVG9EZXNrdG9wX2NzamM6IG51bWJlciA9IDA7Ly/mmK/lkKboh6rliqjmt7vliqDliLDmoYzpnaJcclxuICAgIHB1YmxpYyBiYW5uZXJXdWRpYW4xX2NzamM6IG51bWJlciA9IDA7Ly/lvLrlipvlvIDlsYDor6/ngrlcclxuICAgIHB1YmxpYyBiYW5uZXJXdWRpYW4yX2NzamM6IG51bWJlciA9IDA7Ly/muLjmiI/kuK3nu5PlsYDni4LngrlcclxuICAgIHB1YmxpYyBiYW5uZXJXdWRpYW4zX2NzamM6IG51bWJlciA9IDA7Ly/nu5PnrpfpobXor6/ngrlcclxuICAgIHB1YmxpYyBiYW5uZXJXdWRpYW40X2NzamM6IG51bWJlciA9IDA7Ly/ph43nlJ/pobXor6/ngrlcclxuICAgIHB1YmxpYyBiYW5uZXJXdWRpYW41X2NzamM6IG51bWJlciA9IDA7Ly/nmq7ogqTpobXor6/ngrlcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIHR0Q29uZl9jc2pjIHtcclxuICAgIHB1YmxpYyBBYlZlclN3aXRjaF9jc2pjID0gMTtcclxuICAgIHB1YmxpYyBleHBvcnRTd2l0Y2hfY3NqYzogbnVtYmVyID0gMDtcclxufSIsImV4cG9ydCBlbnVtIEV2ZW50RGVmX2NzamMgXHJcbntcclxuICAgIE5vbmVfY3NqYyA9IDAsXHJcbiAgICBBcHBfQ2xvc2VGaXJzdExvYWRpbmdWaWV3X2NzamMgPSA1MDAsXHJcbiAgICBBRF9PblNoYXJlQWRGYWlsX2NzamMgPSA1MDEsXHJcblxyXG4gICAgLy/lvZPnlYzpnaLmiZPlvIBcclxuICAgIEdhbWVfT25WaWV3T3Blbl9jc2pjID0gNjAwLC8ve3ZpZXcgOiBWaWV3RGVmfVxyXG4gICAgLy/lvZPnlYzpnaLlhbPpl61cclxuICAgIEdhbWVfT25WaWV3Q2xvc2VfY3NqYyA9IDYwMSwvL3t2aWV3IDogVmlld0RlZn1cclxuICAgIC8v5b2T546p5a626YeR5biB5Y+Y5YqoXHJcbiAgICBHYW1lX09uVXNlck1vbmV5Q2hhbmdlX2NzamMgPSA3MDEsLy97Y3VycjpudW1iZXIsbGFzdDpudW1iZXJ9XHJcbiAgICAvL+W9k+eOqeWutumSu+efs+WPmOWKqFxyXG4gICAgR2FtZV9PblVzZXJDcnlzdGFsQ2hhbmdlX2NzamMgPSA3MDIsLy97Y3VycjpudW1iZXIsbGFzdDpudW1iZXJ9XHJcbiAgICAvL+W9k+WFs+WNoeW8gOWni1xyXG4gICAgR2FtZV9PbkxldmVsU3RhcnRfY3NqYyA9IDEwMDAsXHJcbiAgICAvL+W9k+WFs+WNoee7k+adn1xyXG4gICAgR2FtZV9PbkxldmVsQ29tcGxhdGVfY3NqYyA9IDEwMDEsXHJcbiAgICAvL+W9k+a4uOaIj+WFs+WNoeWKoOi9veWujOavlVxyXG4gICAgR2FtZV9HYW1lU2NlbmVMb2FkQ29tcGVsZXRlX2NzamMgPSAxMDAyLFxyXG4gICAgLy/or6/ngrnpooTliqDovb3lrozmr5VcclxuICAgIEFEX1d1ZGlhbkJhbm5lcl9Mb2FkQ29tcGxldGVfY3NqYyA9IDIyMTcsXHJcbiAgICAvL+aYvuekuuivr+eCuUJhbm5lclxyXG4gICAgQURfV3VkaWFuQmFubmVyX1Nob3dfY3NqYyA9IDIyMTgsXHJcbiAgICAvL+W9seiXj+ivr+eCuUJhbm5lclxyXG4gICAgQURfV3VkaWFuQmFubmVyX0hpZGVfY3NqYyA9IDIyMTksXHJcbiAgICAvL+mihOWKoOi9vUJhbm5lclxyXG4gICAgQURfV3VkaWFuQmFubmVyX1ByZUxvYWRfY3NqYyA9MjIyMCwgICAgXHJcbiAgICAvL1RpcHM65Zyo6L+Z5p2h5re75Yqg5a6a5LmJ5L2g6Ieq5bex6ZyA6KaB55qE5LqL5Lu277yM5LuOMTAwMDDlj7flvIDlp4vjgILorrDlvpfliIbmrrXliIbnsbvnrqHnkIbkuI3lkIznsbvlnovkuovku7bjgILlpoLmnpzkuovku7bmnInkvKDpgJLlj4LmlbAgXCLlv4XpobtcIiDlnKjkuovku7blkI7pnaLnlKjms6jph4rlhpnmmI7kuovku7blj4LmlbDnu5PmnoTjgIJcclxuICAgIEFEX1NpZGVQb3BWaWV3U3dpdGNoX2NzamMgPSBcIkFEX1NpZGVQb3BWaWV3U3dpdGNoX2NzamNcIixcclxuICAgIEFEX1Nob3dOYXRpdmVBZCA9IFwiQURfU2hvd05hdGl2ZUFkXCIsXHJcbiAgICBHYW1lX0lucHV0X2NzamMgPSBcIkdhbWVfSW5wdXRcIixcclxuICAgIC8qKlxyXG4gICAgICogbmFtZSDmlLvlh7vogIXlkI3lrZdcclxuICAgICAqIHYzIOaUu+WHu+iAheWdkOagh1xyXG4gICAgICovXHJcbiAgICBBdHRhY2tJbnB1dCA9IFwiQXR0YWNrSW5wdXRcIixcclxuXHJcbiAgICBDYW1lcmFfRXZlbnRfY3NqYyA9IFwiQ2FtZXJhX0V2ZW50XCIsXHJcbiAgICBHYW1lX1Nob3dTY29yZV9jc2pjID0gXCJHYW1lX1Nob3dTY29yZVwiLFxyXG4gICAgQ2hhbmdlU2tpbiA9IFwiQ2hhbmdlU2tpblwiLFxyXG4gICAgU2tpblZpZXcgPSBcIlNraW5WaWV3XCIsXHJcbiAgICBUcmFuc2Zvcm1FdmVudCA9XCJUcmFuc2Zvcm1FdmVudFwiLFxyXG4gICAgLyoqXHJcbiAgICAgKiDoi7Hpm4TpgInmi6nlrozmr5VcclxuICAgICAqL1xyXG4gICAgU2VsZWN0SGVybyA9XCJTZWxlY3RIZXJvXCIsXHJcbiAgICAvKipib3Nz5Ye6546wICovXHJcbiAgICBCb3NzVmlzaWJsZSA9IFwiQm9zc1Zpc2libGVcIixcclxuICAgIEVuZW15RGVhZCA9IFwiRW5lbXlEZWFkXCIsXHJcbiAgICBFbmVteUxvY2sgPSBcIkVuZW15TG9ja1wiLFxyXG4gICAgQ2hhcmFjdGVyRmFsbGluZyAgPSBcIkNoYXJhY3RlckZhbGxpbmdcIixcclxuICAgIENoYXJhY3RlckNsaW1iaW5nICA9IFwiQ2hhcmFjdGVyQ2xpbWJpbmdcIixcclxuICAgIENoYXJhY3Rlck5vcm1hbCAgPSBcIkNoYXJhY3Rlck5vcm1hbFwiLFxyXG4gICAgR2FtZU92ZXIgID0gXCJHYW1lT3ZlclwiLFxyXG4gICAgQURfT25TaGFyZUFkU3VjY2Vzc19jc2pjID0gXCJBRF9PblNoYXJlQWRTdWNjZXNzX2NzamNcIiwgICAgXHJcbn0iLCJpbXBvcnQgRXZlbnREaXNwYXRjaGVyID0gbGF5YS5ldmVudHMuRXZlbnREaXNwYXRjaGVyO1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFdmVudE1ncl9jc2pjIGV4dGVuZHMgRXZlbnREaXNwYXRjaGVyIHtcclxuICAgIHByaXZhdGUgc3RhdGljIGV2ZW50RGlzcGF0Y2hlcl9jc2pjOiBFdmVudERpc3BhdGNoZXIgPSBuZXcgRXZlbnREaXNwYXRjaGVyKCk7XHJcbiAgICBwcml2YXRlIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy/lub/mkq3kuovku7ZcclxuICAgIHB1YmxpYyBzdGF0aWMgZGlzcGF0Y2hfY3NqYyhJbk5hbWUsIGFndj86IGFueSkge1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMuZXZlbnREaXNwYXRjaGVyX2NzamMuZXZlbnQoSW5OYW1lLCBhZ3YpO1xyXG4gICAgfVxyXG4gICAgLy/ms6jlhozkuovku7ZcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVnRXZlbnRfY3NqYyhJbk5hbWUsIGNhbGxlciwgbGlzdGVuZXI6IEZ1bmN0aW9uLCBhcmc/OiBhbnlbXSk6IHZvaWQge1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMuZXZlbnREaXNwYXRjaGVyX2NzamMub24oSW5OYW1lLCBjYWxsZXIsIGxpc3RlbmVyLCAoYXJnID09IG51bGwpID8gbnVsbCA6IChbYXJnXSkpO1xyXG4gICAgfVxyXG4gICAgLy/ms6jlhozljZXmrKHkuovku7ZcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVnT25jZUV2ZW50X2NzamMoSW5OYW1lLCBjYWxsZXIsIGxpc3RlbmVyOiBGdW5jdGlvbiwgYXJnPzogYW55W10pOiB2b2lkIHtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLmV2ZW50RGlzcGF0Y2hlcl9jc2pjLm9uY2UoSW5OYW1lLCBjYWxsZXIsIGxpc3RlbmVyLCAoYXJnID09IG51bGwpID8gbnVsbCA6IChbYXJnXSkpO1xyXG4gICAgfVxyXG4gICAgLy/np7vpmaTkuovku7bms6jlhoxcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVtb3ZlRXZlbnRfY3NqYyhJbk5hbWUsIGNhbGxlciwgbGlzdGVuZXI6IEZ1bmN0aW9uLCBhcmc/OiBhbnlbXSk6IHZvaWQge1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMuZXZlbnREaXNwYXRjaGVyX2NzamMub2ZmKEluTmFtZSwgY2FsbGVyLCBsaXN0ZW5lcik7XHJcbiAgICB9XHJcbn0iLCIvKipUaGlzIGNsYXNzIGlzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGJ5IExheWFBaXJJREUsIHBsZWFzZSBkbyBub3QgbWFrZSBhbnkgbW9kaWZpY2F0aW9ucy4gKi9cclxuaW1wb3J0IEdhbWVNZ3IgZnJvbSBcIi4vU2NyaXB0cy9HYW1lTWdyXCJcbmltcG9ydCBRcExpc3RBZEJveCBmcm9tIFwiLi9RcEFQSS9BZFZpZXcvUXBMaXN0QWRCb3hcIlxuaW1wb3J0IFFwTGlzdEFkVmlldyBmcm9tIFwiLi9RcEFQSS9BZFZpZXcvUXBMaXN0QWRWaWV3XCJcbmltcG9ydCBCdXR0b25BbmltIGZyb20gXCIuL1ZpZXcvQnV0dG9uQW5pbVwiXG5pbXBvcnQgRXhwb3J0MUFkVmlldyBmcm9tIFwiLi9WaWV3L0dhbWVWaWV3L0V4cG9ydDFBZFZpZXdcIlxuaW1wb3J0IEV4cG9ydDJBZFZpZXcgZnJvbSBcIi4vVmlldy9HYW1lVmlldy9FeHBvcnQyQWRWaWV3XCJcbmltcG9ydCBFeHBvcnQzQWRWaWV3IGZyb20gXCIuL1ZpZXcvR2FtZVZpZXcvRXhwb3J0M0FkVmlld1wiXG5pbXBvcnQgUXBSYW5kb21KdW1wIGZyb20gXCIuL1FwQVBJL0FkVmlldy9RcFJhbmRvbUp1bXBcIlxuaW1wb3J0IFFwUmRMaXN0QWRCb3ggZnJvbSBcIi4vUXBBUEkvQWRWaWV3L1FwUmRMaXN0QWRCb3hcIlxuaW1wb3J0IFFwU2hha2VBZDNWaWV3IGZyb20gXCIuL1FwQVBJL0FkVmlldy9RcFNoYWtlQWQzVmlld1wiXG5pbXBvcnQgRnJpZW5kRXhwb3J0IGZyb20gXCIuL1ZpZXcvR2FtZVZpZXcvRnJpZW5kRXhwb3J0XCJcbmltcG9ydCBRcFNoYWtlQWQyVmlldyBmcm9tIFwiLi9RcEFQSS9BZFZpZXcvUXBTaGFrZUFkMlZpZXdcIlxuaW1wb3J0IFFwQmFubmVyVklldyBmcm9tIFwiLi9RcEFQSS9BZFZpZXcvUXBCYW5uZXJWSWV3XCJcbmltcG9ydCBHYW1lT3ZlckZhaWxWaWV3IGZyb20gXCIuL1ZpZXcvR2FtZVZpZXcvR2FtZU92ZXJGYWlsVmlld1wiXG5pbXBvcnQgQ29pblN1YlZpZXcgZnJvbSBcIi4vU2NyaXB0cy9NeUdhbWVWaWV3L0NvaW5TdWJWaWV3XCJcbmltcG9ydCBFeGFtaW5lQ2hlY2sgZnJvbSBcIi4vU2NyaXB0cy9NeUdhbWVWaWV3L0V4YW1pbmVDaGVja1wiXG5pbXBvcnQgR2FtZU92ZXJXaW5WaWV3IGZyb20gXCIuL1ZpZXcvR2FtZVZpZXcvR2FtZU92ZXJXaW5WaWV3XCJcbmltcG9ydCBDb250cm9sbGVyIGZyb20gXCIuL1NjcmlwdHMvTXlHYW1lVmlldy9Db250cm9sbGVyXCJcbmltcG9ydCBSb2NrZXIgZnJvbSBcIi4vU2NyaXB0cy9HYW1lQ29yZS9Sb2NrZXJcIlxuaW1wb3J0IEJ0blBhbmVsIGZyb20gXCIuL1NjcmlwdHMvTXlHYW1lVmlldy9CdG5QYW5lbFwiXG5pbXBvcnQgR2FtZVN0ZXAgZnJvbSBcIi4vU2NyaXB0cy9NeUdhbWVWaWV3L0dhbWVTdGVwXCJcbmltcG9ydCBUd2lua2xlU3ByaXRlIGZyb20gXCIuL1ZpZXcvVHdpbmtsZVNwcml0ZVwiXG5pbXBvcnQgQWxwaGFCcmVhdGhpbmdBbmkgZnJvbSBcIi4vVmlldy9BbHBoYUJyZWF0aGluZ0FuaVwiXG5pbXBvcnQgSW5HYW1lVmlldyBmcm9tIFwiLi9WaWV3L0dhbWVWaWV3L0luR2FtZVZpZXdcIlxuaW1wb3J0IEtkQmFubmVyVmlldyBmcm9tIFwiLi9TY3JpcHRzL015R2FtZVZpZXcvS2RCYW5uZXJWaWV3XCJcbmltcG9ydCBGaXJzdFZpZXdBZCBmcm9tIFwiLi9WaWV3L0dhbWVWaWV3L0ZpcnN0Vmlld0FkXCJcbmltcG9ydCBNYWluR2FtZVZpZXcgZnJvbSBcIi4vVmlldy9HYW1lVmlldy9NYWluR2FtZVZpZXdcIlxuaW1wb3J0IFNlbGVjdEhlcm8gZnJvbSBcIi4vVmlldy9HYW1lVmlldy9TZWxlY3RIZXJvXCJcbmltcG9ydCBUdXRvcmlhbFZpZXcgZnJvbSBcIi4vU2NyaXB0cy9NeUdhbWVWaWV3L1R1dG9yaWFsVmlld1wiXG5pbXBvcnQgTG9hZGluZ1ZpZXcgZnJvbSBcIi4vVmlldy9Mb2FkaW5nVmlldy9Mb2FkaW5nVmlld1wiXG5pbXBvcnQgT3Bwb05hdGl2ZUFkVmlldyBmcm9tIFwiLi9WaWV3L09QUE8vT3Bwb05hdGl2ZUFkVmlld1wiXG5pbXBvcnQgVG1CYW5uZXJBZFZpZXcgZnJvbSBcIi4vVG1BUEkvQWRWaWV3L1RtQmFubmVyQWRWaWV3XCJcbmltcG9ydCBUbUxpc3RBZEJveCBmcm9tIFwiLi9UbUFQSS9BZFZpZXcvVG1MaXN0QWRCb3hcIlxuaW1wb3J0IFRtTGlzdEFkVmlldyBmcm9tIFwiLi9UbUFQSS9BZFZpZXcvVG1MaXN0QWRWaWV3XCJcbmltcG9ydCBUbVNpbmdsZUFkVmlldyBmcm9tIFwiLi9UbUFQSS9BZFZpZXcvVG1TaW5nbGVBZFZpZXdcIlxuaW1wb3J0IFRtU2hha2VBZFZpZXcgZnJvbSBcIi4vVG1BUEkvQWRWaWV3L1RtU2hha2VBZFZpZXdcIlxuaW1wb3J0IFRtU2lkZVBvcEFkVmlldyBmcm9tIFwiLi9UbUFQSS9BZFZpZXcvVG1TaWRlUG9wQWRWaWV3XCJcbmltcG9ydCBUaXBzVmlldyBmcm9tIFwiLi9WaWV3L1RpcHNWaWV3L1RpcHNWaWV3XCJcbmltcG9ydCBVbml2ZXJzYWxCb3R0b21ab25lIGZyb20gXCIuL1ZpZXcvQ29tbW9uL1VuaXZlcnNhbEJvdHRvbVpvbmVcIlxuaW1wb3J0IFZpdm9OYXRpdmVBZFZpZXcgZnJvbSBcIi4vVmlldy9WSVZPL1Zpdm9OYXRpdmVBZFZpZXdcIlxyXG4vKlxyXG4qIOa4uOaIj+WIneWni+WMlumFjee9rjtcclxuKi9cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZUNvbmZpZ3tcclxuICAgIHN0YXRpYyB3aWR0aDpudW1iZXI9MTMzNDtcclxuICAgIHN0YXRpYyBoZWlnaHQ6bnVtYmVyPTc1MDtcclxuICAgIHN0YXRpYyBzY2FsZU1vZGU6c3RyaW5nPVwiZml4ZWRoZWlnaHRcIjtcclxuICAgIHN0YXRpYyBzY3JlZW5Nb2RlOnN0cmluZz1cImhvcml6b250YWxcIjtcclxuICAgIHN0YXRpYyBhbGlnblY6c3RyaW5nPVwibWlkZGxlXCI7XHJcbiAgICBzdGF0aWMgYWxpZ25IOnN0cmluZz1cImNlbnRlclwiO1xyXG4gICAgc3RhdGljIHN0YXJ0U2NlbmU6YW55PVwiTWFpbi5zY2VuZVwiO1xyXG4gICAgc3RhdGljIHNjZW5lUm9vdDpzdHJpbmc9XCJcIjtcclxuICAgIHN0YXRpYyBkZWJ1Zzpib29sZWFuPWZhbHNlO1xyXG4gICAgc3RhdGljIHN0YXQ6Ym9vbGVhbj1mYWxzZTtcclxuICAgIHN0YXRpYyBwaHlzaWNzRGVidWc6Ym9vbGVhbj1mYWxzZTtcclxuICAgIHN0YXRpYyBleHBvcnRTY2VuZVRvSnNvbjpib29sZWFuPXRydWU7XHJcbiAgICBjb25zdHJ1Y3Rvcigpe31cclxuICAgIHN0YXRpYyBpbml0KCl7XHJcbiAgICAgICAgdmFyIHJlZzogRnVuY3Rpb24gPSBMYXlhLkNsYXNzVXRpbHMucmVnQ2xhc3M7XHJcbiAgICAgICAgcmVnKFwiU2NyaXB0cy9HYW1lTWdyLnRzXCIsR2FtZU1ncik7XG4gICAgICAgIHJlZyhcIlFwQVBJL0FkVmlldy9RcExpc3RBZEJveC50c1wiLFFwTGlzdEFkQm94KTtcbiAgICAgICAgcmVnKFwiUXBBUEkvQWRWaWV3L1FwTGlzdEFkVmlldy50c1wiLFFwTGlzdEFkVmlldyk7XG4gICAgICAgIHJlZyhcIlZpZXcvQnV0dG9uQW5pbS50c1wiLEJ1dHRvbkFuaW0pO1xuICAgICAgICByZWcoXCJWaWV3L0dhbWVWaWV3L0V4cG9ydDFBZFZpZXcudHNcIixFeHBvcnQxQWRWaWV3KTtcbiAgICAgICAgcmVnKFwiVmlldy9HYW1lVmlldy9FeHBvcnQyQWRWaWV3LnRzXCIsRXhwb3J0MkFkVmlldyk7XG4gICAgICAgIHJlZyhcIlZpZXcvR2FtZVZpZXcvRXhwb3J0M0FkVmlldy50c1wiLEV4cG9ydDNBZFZpZXcpO1xuICAgICAgICByZWcoXCJRcEFQSS9BZFZpZXcvUXBSYW5kb21KdW1wLnRzXCIsUXBSYW5kb21KdW1wKTtcbiAgICAgICAgcmVnKFwiUXBBUEkvQWRWaWV3L1FwUmRMaXN0QWRCb3gudHNcIixRcFJkTGlzdEFkQm94KTtcbiAgICAgICAgcmVnKFwiUXBBUEkvQWRWaWV3L1FwU2hha2VBZDNWaWV3LnRzXCIsUXBTaGFrZUFkM1ZpZXcpO1xuICAgICAgICByZWcoXCJWaWV3L0dhbWVWaWV3L0ZyaWVuZEV4cG9ydC50c1wiLEZyaWVuZEV4cG9ydCk7XG4gICAgICAgIHJlZyhcIlFwQVBJL0FkVmlldy9RcFNoYWtlQWQyVmlldy50c1wiLFFwU2hha2VBZDJWaWV3KTtcbiAgICAgICAgcmVnKFwiUXBBUEkvQWRWaWV3L1FwQmFubmVyVklldy50c1wiLFFwQmFubmVyVklldyk7XG4gICAgICAgIHJlZyhcIlZpZXcvR2FtZVZpZXcvR2FtZU92ZXJGYWlsVmlldy50c1wiLEdhbWVPdmVyRmFpbFZpZXcpO1xuICAgICAgICByZWcoXCJTY3JpcHRzL015R2FtZVZpZXcvQ29pblN1YlZpZXcudHNcIixDb2luU3ViVmlldyk7XG4gICAgICAgIHJlZyhcIlNjcmlwdHMvTXlHYW1lVmlldy9FeGFtaW5lQ2hlY2sudHNcIixFeGFtaW5lQ2hlY2spO1xuICAgICAgICByZWcoXCJWaWV3L0dhbWVWaWV3L0dhbWVPdmVyV2luVmlldy50c1wiLEdhbWVPdmVyV2luVmlldyk7XG4gICAgICAgIHJlZyhcIlNjcmlwdHMvTXlHYW1lVmlldy9Db250cm9sbGVyLnRzXCIsQ29udHJvbGxlcik7XG4gICAgICAgIHJlZyhcIlNjcmlwdHMvR2FtZUNvcmUvUm9ja2VyLnRzXCIsUm9ja2VyKTtcbiAgICAgICAgcmVnKFwiU2NyaXB0cy9NeUdhbWVWaWV3L0J0blBhbmVsLnRzXCIsQnRuUGFuZWwpO1xuICAgICAgICByZWcoXCJTY3JpcHRzL015R2FtZVZpZXcvR2FtZVN0ZXAudHNcIixHYW1lU3RlcCk7XG4gICAgICAgIHJlZyhcIlZpZXcvVHdpbmtsZVNwcml0ZS50c1wiLFR3aW5rbGVTcHJpdGUpO1xuICAgICAgICByZWcoXCJWaWV3L0FscGhhQnJlYXRoaW5nQW5pLnRzXCIsQWxwaGFCcmVhdGhpbmdBbmkpO1xuICAgICAgICByZWcoXCJWaWV3L0dhbWVWaWV3L0luR2FtZVZpZXcudHNcIixJbkdhbWVWaWV3KTtcbiAgICAgICAgcmVnKFwiU2NyaXB0cy9NeUdhbWVWaWV3L0tkQmFubmVyVmlldy50c1wiLEtkQmFubmVyVmlldyk7XG4gICAgICAgIHJlZyhcIlZpZXcvR2FtZVZpZXcvRmlyc3RWaWV3QWQudHNcIixGaXJzdFZpZXdBZCk7XG4gICAgICAgIHJlZyhcIlZpZXcvR2FtZVZpZXcvTWFpbkdhbWVWaWV3LnRzXCIsTWFpbkdhbWVWaWV3KTtcbiAgICAgICAgcmVnKFwiVmlldy9HYW1lVmlldy9TZWxlY3RIZXJvLnRzXCIsU2VsZWN0SGVybyk7XG4gICAgICAgIHJlZyhcIlNjcmlwdHMvTXlHYW1lVmlldy9UdXRvcmlhbFZpZXcudHNcIixUdXRvcmlhbFZpZXcpO1xuICAgICAgICByZWcoXCJWaWV3L0xvYWRpbmdWaWV3L0xvYWRpbmdWaWV3LnRzXCIsTG9hZGluZ1ZpZXcpO1xuICAgICAgICByZWcoXCJWaWV3L09QUE8vT3Bwb05hdGl2ZUFkVmlldy50c1wiLE9wcG9OYXRpdmVBZFZpZXcpO1xuICAgICAgICByZWcoXCJUbUFQSS9BZFZpZXcvVG1CYW5uZXJBZFZpZXcudHNcIixUbUJhbm5lckFkVmlldyk7XG4gICAgICAgIHJlZyhcIlRtQVBJL0FkVmlldy9UbUxpc3RBZEJveC50c1wiLFRtTGlzdEFkQm94KTtcbiAgICAgICAgcmVnKFwiVG1BUEkvQWRWaWV3L1RtTGlzdEFkVmlldy50c1wiLFRtTGlzdEFkVmlldyk7XG4gICAgICAgIHJlZyhcIlRtQVBJL0FkVmlldy9UbVNpbmdsZUFkVmlldy50c1wiLFRtU2luZ2xlQWRWaWV3KTtcbiAgICAgICAgcmVnKFwiVG1BUEkvQWRWaWV3L1RtU2hha2VBZFZpZXcudHNcIixUbVNoYWtlQWRWaWV3KTtcbiAgICAgICAgcmVnKFwiVG1BUEkvQWRWaWV3L1RtU2lkZVBvcEFkVmlldy50c1wiLFRtU2lkZVBvcEFkVmlldyk7XG4gICAgICAgIHJlZyhcIlZpZXcvVGlwc1ZpZXcvVGlwc1ZpZXcudHNcIixUaXBzVmlldyk7XG4gICAgICAgIHJlZyhcIlZpZXcvQ29tbW9uL1VuaXZlcnNhbEJvdHRvbVpvbmUudHNcIixVbml2ZXJzYWxCb3R0b21ab25lKTtcbiAgICAgICAgcmVnKFwiVmlldy9WSVZPL1Zpdm9OYXRpdmVBZFZpZXcudHNcIixWaXZvTmF0aXZlQWRWaWV3KTtcclxuICAgIH1cclxufVxyXG5HYW1lQ29uZmlnLmluaXQoKTsiLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lU2V0dGluZ3NfY3NqYyB7XHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEFwcElEX2NzamM6IHN0cmluZyA9IFwid3gwZjQxYWM0M2JjM2Q1MTQ4XCI7XHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IFJlbW90ZVNlcnZlclVybF9jc2pjOiBzdHJpbmcgPSBcIlwiOy8v6LWE5rqQ5pyN5Yqh5Zmo5Zyw5Z2AXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IExvY2FsU2VydmVyVXJsX2NzamM6IHN0cmluZyA9IFwicmVzXCI7Ly/mnKzlnLDmtYvor5XotYTmupDmnI3liqHlmajlnLDlnYBcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgVmVyc2lvbnNfY3NqYzogc3RyaW5nID0gXCIxLjAuMFwiOy8v5b2T5YmN5ri45oiP54mI5pysXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEdhbWVQbGF0Zm9ybV9jc2pjID0gXCJUVFwiOy8v5b2T5YmN5ri45oiP5bmz5Y+w77yM55uu5YmN5pyJ5b6u5L+hPVwiV1hcIizlpLTmnaE9XCJUVFwiLE9QUE89XCJPUFwiLFZJVk89XCJWT1wiLOeZvuW6pj1cIkJEXCJcclxufSIsImltcG9ydCBHYW1lQ29uZmlnIGZyb20gXCIuL0dhbWVDb25maWdcIjtcclxuaW1wb3J0IFVzZXJfY3NqYyBmcm9tIFwiLi9Vc2VyL1VzZXJcIjtcclxuaW1wb3J0IHsgdWkgfSBmcm9tIFwiLi91aS9sYXlhTWF4VUlcIjtcclxuaW1wb3J0IExvYWRpbmdWaWV3X2NzamMgZnJvbSBcIi4vVmlldy9Mb2FkaW5nVmlldy9Mb2FkaW5nVmlld1wiO1xyXG5pbXBvcnQgV1hBUElfY3NqYyBmcm9tIFwiLi9QbGF0Zm9ybUFwaS8vV1hBUElcIjtcclxuaW1wb3J0IEV2ZW50TWdyX2NzamMgZnJvbSBcIi4vRXZlbnQvRXZlbnRNZ3JcIjtcclxuaW1wb3J0IHsgRXZlbnREZWZfY3NqYyB9IGZyb20gXCIuL0V2ZW50L0V2ZW50RGVmXCI7XHJcbmltcG9ydCBPUFBPQVBJX2NzamMgZnJvbSBcIi4vUGxhdGZvcm1BcGkvL09QUE9BUElcIjtcclxuaW1wb3J0IFFRTWluaUdhbWVBUElfY3NqYyBmcm9tIFwiLi9QbGF0Zm9ybUFwaS8vUVFNaW5pR2FtZUFQSVwiO1xyXG5pbXBvcnQgVFRBUEkgZnJvbSBcIi4vUGxhdGZvcm1BcGkvVFRBUElcIjtcclxuaW1wb3J0IEFMRF9jc2pjIGZyb20gXCIuL0FMRFwiO1xyXG5pbXBvcnQgVG1BUEkgZnJvbSBcIi4vVG1BUEkvVG1BUElcIjtcclxuLy8gaW1wb3J0IFRtQXBwQ29uZmlnIGZyb20gXCIuL1RtQVBJL1RtQXBwQ29uZmlnXCI7XHJcbi8vIGltcG9ydCBUbUlwQmxvY2tDb25maWcgZnJvbSBcIi4vVG1BUEkvVG1JcEJsb2NrQ29uZmlnXCI7XHJcbmltcG9ydCBDYWNoZWRXWEJhbm5lckFkX2NzamMgZnJvbSBcIi4vUGxhdGZvcm1BcGkvL0NhY2hlZFdYQmFubmVyQWRcIjtcclxuaW1wb3J0IFZJVk9BUElfY3NqYyBmcm9tIFwiLi9QbGF0Zm9ybUFwaS9WSVZPQVBJXCI7XHJcbmltcG9ydCBHZElwTWFuYWdlcl9jc2pjIGZyb20gXCIuL0NvbW1vbUFQSS9HZElQTWFuYWdlclwiO1xyXG5pbXBvcnQgR2FtZVN3aXRjaF9jc2pjIGZyb20gXCIuL0NvbW1vbUFQSS9HYW1lU3dpdGNoL0dhbWVTd2l0Y2hcIjtcclxuaW1wb3J0IHsgQWREYXRhTWdyIH0gZnJvbSBcIi4vUXBBUEkvQWREYXRhTWdyXCI7XHJcbmltcG9ydCBRcEdhbWVTd2l0Y2ggZnJvbSBcIi4vUXBBUEkvUXBHYW1lU3dpdGNoXCI7XHJcbmltcG9ydCBUbUFiVGVzdE1ncl9jc2pjIGZyb20gXCIuL1RtQVBJL1RtQUJUZXN0TWdyXCI7XHJcblxyXG5jbGFzcyBNYWluIHtcclxuXHJcblx0cHJvdGVjdGVkIF9sb2FkaW5nVUk6IHVpLlZpZXcuTG9hZGluZ1VJID0gbnVsbDtcclxuXHRwcm90ZWN0ZWQgX2xvYWRpbmdWaWV3OiBMb2FkaW5nVmlld19jc2pjID0gbnVsbDtcclxuXHQvL+mihOWKoOi9veWIl+ihqFxyXG5cdHByaXZhdGUgcmVhZG9ubHkgX3ByZUxvYWRSZXM6IEFycmF5PGFueT4gPSBuZXcgQXJyYXk8YW55PigpO1xyXG5cclxuXHRjb25zdHJ1Y3RvcigpIHtcclxuXHRcdC8v5qC55o2uSURF6K6+572u5Yid5aeL5YyW5byV5pOOXHRcdFxyXG5cdFx0aWYgKHdpbmRvd1tcIkxheWEzRFwiXSkgTGF5YTNELmluaXQoR2FtZUNvbmZpZy53aWR0aCwgR2FtZUNvbmZpZy5oZWlnaHQpO1xyXG5cdFx0ZWxzZSBMYXlhLmluaXQoR2FtZUNvbmZpZy53aWR0aCwgR2FtZUNvbmZpZy5oZWlnaHQsIExheWFbXCJXZWJHTFwiXSk7XHJcblx0XHRMYXlhW1wiUGh5c2ljc1wiXSAmJiBMYXlhW1wiUGh5c2ljc1wiXS5lbmFibGUoKTtcclxuXHRcdExheWFbXCJEZWJ1Z1BhbmVsXCJdICYmIExheWFbXCJEZWJ1Z1BhbmVsXCJdLmVuYWJsZSgpO1xyXG5cdFx0TGF5YS5zdGFnZS5zY2FsZU1vZGUgPSBHYW1lQ29uZmlnLnNjYWxlTW9kZTtcclxuXHRcdExheWEuc3RhZ2Uuc2NyZWVuTW9kZSA9IEdhbWVDb25maWcuc2NyZWVuTW9kZTtcclxuXHRcdC8v5YW85a655b6u5L+h5LiN5pSv5oyB5Yqg6L29c2NlbmXlkI7nvIDlnLrmma9cclxuXHRcdExheWEuVVJMLmV4cG9ydFNjZW5lVG9Kc29uID0gR2FtZUNvbmZpZy5leHBvcnRTY2VuZVRvSnNvbjtcclxuXHJcblx0XHQvL+aJk+W8gOiwg+ivlemdouadv++8iOmAmui/h0lEReiuvue9ruiwg+ivleaooeW8j++8jOaIluiAhXVybOWcsOWdgOWinuWKoGRlYnVnPXRydWXlj4LmlbDvvIzlnYflj6/miZPlvIDosIPor5XpnaLmnb/vvIlcclxuXHRcdGlmIChHYW1lQ29uZmlnLmRlYnVnIHx8IExheWEuVXRpbHMuZ2V0UXVlcnlTdHJpbmcoXCJkZWJ1Z1wiKSA9PSBcInRydWVcIikgTGF5YS5lbmFibGVEZWJ1Z1BhbmVsKCk7XHJcblx0XHRpZiAoR2FtZUNvbmZpZy5waHlzaWNzRGVidWcgJiYgTGF5YVtcIlBoeXNpY3NEZWJ1Z0RyYXdcIl0pIExheWFbXCJQaHlzaWNzRGVidWdEcmF3XCJdLmVuYWJsZSgpO1xyXG5cdFx0aWYgKEdhbWVDb25maWcuc3RhdCkgTGF5YS5TdGF0LnNob3coKTtcclxuXHRcdExheWEuYWxlcnRHbG9iYWxFcnJvciA9IHRydWU7XHJcblxyXG5cdFx0Ly8gaWYgKHRydWUgPT0gQXBwQ29uZmlnLm9uVFRNaW5pR2FtZSkge1xyXG5cdFx0Ly8gXHRMYXlhLkJyb3dzZXIub25NaW5pR2FtZSA9IGZhbHNlO1xyXG5cdFx0Ly8gfVxyXG5cclxuXHRcdC8vIGlmICghTGF5YS5Ccm93c2VyLm9uTWluaUdhbWVcclxuXHRcdC8vIFx0JiYgIUxheWEuQnJvd3Nlci5vblFHTWluaUdhbWVcclxuXHRcdC8vIFx0JiYgIUxheWEuQnJvd3Nlci5vblFRTWluaUdhbWVcclxuXHRcdC8vIFx0JiYgIUFwcENvbmZpZy5vblRUTWluaUdhbWUpLy/lpoLmnpzkuI3mmK/lsI/muLjmiI/vvIzotYTmupDmnI3liqHlmajorr7nva7kuLrmnKzlnLDmtYvor5XlnLDlnYBcclxuXHRcdC8vIHtcclxuXHRcdC8vIFx0QXBwQ29uZmlnLlJlc1NlcnZlciA9IEFwcENvbmZpZy5Mb2NhbFRlc3RSZVNlcnZlcjtcclxuXHRcdC8vIH1cclxuXHJcblx0XHRpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcclxuXHRcdFx0Q2FjaGVkV1hCYW5uZXJBZF9jc2pjLnByZWxvYWRCYW5uZXJfY3NqYygpO1xyXG5cdFx0fVxyXG5cdFx0Ly/mv4DmtLvotYTmupDniYjmnKzmjqfliLbvvIx2ZXJzaW9uLmpzb27nlLFJREXlj5HluIPlip/og73oh6rliqjnlJ/miJDvvIzlpoLmnpzmsqHmnInkuZ/kuI3lvbHlk43lkI7nu63mtYHnqItcclxuXHRcdExheWEuUmVzb3VyY2VWZXJzaW9uLmVuYWJsZShcInZlcnNpb24uanNvblwiLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMub25WZXJzaW9uTG9hZGVkKSwgTGF5YS5SZXNvdXJjZVZlcnNpb24uRklMRU5BTUVfVkVSU0lPTik7XHJcblx0fVxyXG5cclxuXHRvblZlcnNpb25Mb2FkZWQoKTogdm9pZCB7XHJcblx0XHQvL+a/gOa0u+Wkp+Wwj+WbvuaYoOWwhO+8jOWKoOi9veWwj+WbvueahOaXtuWAme+8jOWmguaenOWPkeeOsOWwj+WbvuWcqOWkp+WbvuWQiOmbhumHjOmdou+8jOWImeS8mOWFiOWKoOi9veWkp+WbvuWQiOmbhu+8jOiAjOS4jeaYr+Wwj+WbvlxyXG5cdFx0TGF5YS5BdGxhc0luZm9NYW5hZ2VyLmVuYWJsZShcImZpbGVjb25maWcuanNvblwiLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMub25Db25maWdMb2FkZWQpKTtcclxuXHR9XHJcblxyXG5cdG9uQ29uZmlnTG9hZGVkKCk6IHZvaWQge1xyXG5cdFx0TGF5YS5sb2FkZXIubWF4TG9hZGVyID0gNTA7XHJcblx0XHR0aGlzLmluaXRMb2FkaW5nVmlldygpXHJcblx0XHQvL+WKoOi9vemHjeimgemFjee9ru+8jOi/meS6m+mFjee9ruW/hemhu+WcqOa4uOaIj+WQr+WKqOWJjeWKoOi9veWujOaIkFxyXG5cdFx0Ly8gdmFyIGZpcnN0Q29uZmlncyA9XHJcblx0XHQvLyBcdFtcclxuXHRcdC8vIFx0XHR7IHVybDogQXBwQ29uZmlnLlJlc1NlcnZlciArIFwiL2pzb24vYXBwc3dpdGNoLmpzb25cIiwgdHlwZTogTGF5YS5Mb2FkZXIuSlNPTiB9XHJcblx0XHQvLyBcdF1cclxuXHRcdC8vIHZhciBzZWxmID0gdGhpcztcclxuXHRcdC8vIExheWEubG9hZGVyLmxvYWQoZmlyc3RDb25maWdzLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcclxuXHRcdC8vIFx0c2VsZi5sb2FkUmVzKCk7Ly/liqDovb3otYTmupBcclxuXHRcdC8vIH0pKVxyXG5cdFx0Ly/kuIvpnaLnmoTku6PnoIHnlKjkuo7mjqfliLblvZPliY3nmoRhcHBjb25maWfmmK/mnaXoh6rmnKzlnLDmtYvor5XniYgs6L+Y5piv5Zyo57q/5pyN5Yqh5Zmo54mIXHJcblx0XHRsZXQgdGVzdENvbmZpZyA9IGZhbHNlO1x0XHQvL+WmguaenOaDs+iuqWFwcENvbmZpZ+S4uuacrOWcsOeJiOacrCzmg7Plip7ms5Xorql0ZXN0Q29uZmlnID0gdHJ1ZeWwseihjOS6hlxyXG5cdFx0aWYgKCFMYXlhLkJyb3dzZXIub25NaW5pR2FtZVxyXG5cdFx0XHQmJiAhTGF5YS5Ccm93c2VyLm9uUUdNaW5pR2FtZVxyXG5cdFx0XHQmJiAhTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSkvL+m7mOiupOWcqOaooeaLn+WZqOeOr+Wig+S4i++8jGFwcENvbmZpZ+iuvue9ruS4uuacrOWcsOa1i+ivleeJiFxyXG5cdFx0e1xyXG5cdFx0XHQvLyB0ZXN0Q29uZmlnID0gdHJ1ZTtcclxuXHRcdH1cclxuXHJcblx0XHRpZiAodGVzdENvbmZpZykge1xyXG5cdFx0XHQvLyBUbUFwcENvbmZpZy5VcGRhdGVMb2NhbENvbmZpZyhudWxsKTtcclxuXHRcdFx0R2FtZVN3aXRjaF9jc2pjLlVwZGF0ZUxvY2FsQ29uZmlnX2NzamMobnVsbCk7XHJcblx0XHR9XHJcblx0XHRlbHNlIHtcclxuXHRcdFx0Ly8gVG1BcHBDb25maWcuVXBkYXRlQ29uZmlnKG51bGwpO1xyXG5cdFx0XHRHYW1lU3dpdGNoX2NzamMuVXBkYXRlT25saW5lQ29uZmlnX2NzamMobnVsbCk7XHJcblx0XHR9XHJcblxyXG5cdFx0dGhpcy5sb2FkUmVzKCk7Ly/liqDovb3otYTmupBcdFx0XHJcblx0XHQvLyBHZElwTWFuYWdlcl9jc2pjLlVwZGF0ZUlwU3RhdGVfY3NqYygpO1xyXG5cdFx0RXZlbnRNZ3JfY3NqYy5yZWdPbmNlRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLkFwcF9DbG9zZUZpcnN0TG9hZGluZ1ZpZXdfY3NqYywgdGhpcywgdGhpcy5jbG9zZWxvYWRpbmdVSSk7XHJcblx0fVxyXG5cclxuXHRwcml2YXRlIGluaXRMb2FkaW5nVmlldygpIHtcclxuXHRcdHRoaXMuX2xvYWRpbmdVSSA9IG5ldyB1aS5WaWV3LkxvYWRpbmdVSSgpO1xyXG5cdFx0TGF5YS5zdGFnZS5hZGRDaGlsZCh0aGlzLl9sb2FkaW5nVUkpO1xyXG5cdFx0dGhpcy5fbG9hZGluZ1VJLndpZHRoID0gTGF5YS5zdGFnZS53aWR0aDtcclxuXHRcdHRoaXMuX2xvYWRpbmdVSS5oZWlnaHQgPSBMYXlhLnN0YWdlLmhlaWdodDtcclxuXHRcdHRoaXMuX2xvYWRpbmdWaWV3ID0gdGhpcy5fbG9hZGluZ1VJLmdldENvbXBvbmVudChMb2FkaW5nVmlld19jc2pjKVxyXG5cdFx0dGhpcy5fbG9hZGluZ1ZpZXcuc2V0UHJvY2Vzc19jc2pjKDApO1xyXG5cdH1cclxuXHJcblxyXG5cdC8vIHByaXZhdGUgcG9zdFJlc1RvT3BlbkRhdGFDb250ZXh0KG9uQ29tcGxhdGU6IEZ1bmN0aW9uKSB7XHJcblx0Ly8gXHRpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcclxuXHQvLyBcdFx0Y29uc29sZS5sb2coXCLlvIDlp4vpgI/kvKDotYTmupDmlbDmja7liLDlvIDmlL7ln59cIik7XHJcblx0Ly8gXHRcdExheWEubG9hZGVyLmxvYWQoXHJcblx0Ly8gXHRcdFx0W1xyXG5cdC8vIFx0XHRcdFx0XCJvcGVuUmVzL1JhbmsuYXRsYXNcIixcclxuXHQvLyBcdFx0XHRdXHJcblx0Ly8gXHRcdFx0LCBMYXlhLkhhbmRsZXIuY3JlYXRlKG51bGwsIGZ1bmN0aW9uICgpIHtcclxuXHQvLyBcdFx0XHRcdExheWEuTWluaUFkcHRlci5zZW5kQXRsYXNUb09wZW5EYXRhQ29udGV4dChcIm9wZW5SZXMvUmFuay5hdGxhc1wiKTtcclxuXHQvLyBcdFx0XHRcdGNvbnNvbGUubG9nKFwi6YCP5Lyg6LWE5rqQ5pWw5o2u5Yiw5byA5pS+5Z+fICDlrozmr5XvvIHvvIHvvIFcIik7XHJcblx0Ly8gXHRcdFx0XHRpZiAob25Db21wbGF0ZSkge1xyXG5cdC8vIFx0XHRcdFx0XHRvbkNvbXBsYXRlKCk7XHJcblx0Ly8gXHRcdFx0XHR9XHJcblx0Ly8gXHRcdFx0fSkpO1xyXG5cdC8vIFx0fVxyXG5cdC8vIFx0ZWxzZSB7XHJcblx0Ly8gXHRcdGlmIChvbkNvbXBsYXRlKSB7XHJcblx0Ly8gXHRcdFx0b25Db21wbGF0ZSgpO1xyXG5cdC8vIFx0XHR9XHJcblx0Ly8gXHR9XHJcblx0Ly8gfVxyXG5cclxuXHRwcml2YXRlIHByZUxvYWQoKSB7XHJcblx0XHQvL+i/memHjOa3u+WKoOS9oOmcgOimgemihOWKoOi9veeahOi1hOa6kFxyXG5cdFx0Ly90aGlzLl9wcmVMb2FkUmVzLnB1c2goeyB1cmw6IEFwcENvbmZpZy5SZXNTZXJ2ZXIgKyBcIi9qc29uL2V4YW1wbGUuanNvblwiLCB0eXBlOiBMYXlhLkxvYWRlci5KU09OIH0pO1xyXG5cdH1cclxuXHJcblx0bG9hZFJlcygpOiB2b2lkIHtcclxuXHRcdHRoaXMucHJlTG9hZCgpO1xyXG5cdFx0dmFyIHJlc291cmNlOiBBcnJheTxhbnk+ID0gdGhpcy5fcHJlTG9hZFJlcztcclxuXHRcdHZhciBzZWxmID0gdGhpcztcclxuXHRcdGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xyXG5cdFx0XHQvL+W8gOWni+WKoOi9veWIhuWMhVxyXG5cdFx0XHR2YXIgbG9hZFN1YlJlc1Rhc2s6IGFueSA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5sb2FkU3VicGFja2FnZSh7XHJcblx0XHRcdFx0bmFtZTogJ3N1YlJlcycsXHJcblx0XHRcdFx0c3VjY2VzczogKHJlcykgPT4ge1xyXG5cclxuXHRcdFx0XHRcdC8vIOWIhuWMheWKoOi9veaIkOWKnyzlvIDlp4vpooTliqDovb3otYTmupBcclxuXHRcdFx0XHRcdGlmIChyZXNvdXJjZS5sZW5ndGggPiAwKSB7XHJcblx0XHRcdFx0XHRcdExheWEubG9hZGVyLmxvYWQocmVzb3VyY2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdHNlbGYub25Mb2FkUmVzQ29tcGxhdGUoKTsvL+mihOWKoOi9veWujOaIkFxyXG5cdFx0XHRcdFx0XHR9KSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAocmVzKSA9PiB7XHJcblx0XHRcdFx0XHRcdFx0Ly90b2RvOui3n+aWsOi/m+W6puadoVxyXG5cdFx0XHRcdFx0XHRcdHNlbGYuX2xvYWRpbmdWaWV3LnNldFByb2Nlc3NfY3NqYyhyZXMgLyAyICsgMC41KTtcclxuXHRcdFx0XHRcdFx0fSkpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0XHRcdHNlbGYub25Mb2FkUmVzQ29tcGxhdGUoKTsvL+mihOWKoOi9veWujOaIkFxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0ZmFpbDogKHJlcykgPT4ge1xyXG5cdFx0XHRcdFx0dGhpcy5sb2FkUmVzKCk7Ly/liqDovb3lpLHotKXvvIzph43mlrDliqDovb1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRsb2FkU3ViUmVzVGFzay5vblByb2dyZXNzVXBkYXRlKHJlcyA9PiB7XHJcblx0XHRcdFx0c2VsZi5fbG9hZGluZ1ZpZXcuc2V0UHJvY2Vzc19jc2pjKHJlcyAvIDIpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdGVsc2UgaWYgKExheWEuQnJvd3Nlci5vblFHTWluaUdhbWUpIC8vb3Bwb+Wwj+a4uOaIj1xyXG5cdFx0e1xyXG5cdFx0XHQvL+W8gOWni+WKoOi9veWIhuWMhVxyXG5cdFx0XHR2YXIgbG9hZFN1YlJlc1Rhc2s6IGFueSA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJxZ1wiXS5sb2FkU3VicGFja2FnZSh7XHJcblx0XHRcdFx0bmFtZTogJ3N1YlJlcycsXHJcblx0XHRcdFx0c3VjY2VzczogKHJlcykgPT4ge1xyXG5cclxuXHRcdFx0XHRcdC8vIOWIhuWMheWKoOi9veaIkOWKnyzlvIDlp4vpooTliqDovb3otYTmupBcclxuXHRcdFx0XHRcdGlmIChyZXNvdXJjZS5sZW5ndGggPiAwKSB7XHJcblx0XHRcdFx0XHRcdExheWEubG9hZGVyLmxvYWQocmVzb3VyY2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdHNlbGYub25Mb2FkUmVzQ29tcGxhdGUoKTsvL+mihOWKoOi9veWujOaIkFxyXG5cdFx0XHRcdFx0XHR9KSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAocmVzKSA9PiB7XHJcblx0XHRcdFx0XHRcdFx0Ly90b2RvOui3n+aWsOi/m+W6puadoVxyXG5cdFx0XHRcdFx0XHRcdHNlbGYuX2xvYWRpbmdWaWV3LnNldFByb2Nlc3NfY3NqYyhyZXMgLyAyICsgMC41KTtcclxuXHRcdFx0XHRcdFx0fSkpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0XHRcdHNlbGYub25Mb2FkUmVzQ29tcGxhdGUoKTsvL+mihOWKoOi9veWujOaIkFxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH0sXHJcblx0XHRcdFx0ZmFpbDogKHJlcykgPT4ge1xyXG5cdFx0XHRcdFx0dGhpcy5sb2FkUmVzKCk7Ly/liqDovb3lpLHotKXvvIzph43mlrDliqDovb1cclxuXHRcdFx0XHR9XHJcblx0XHRcdH0pO1xyXG5cdFx0XHRsb2FkU3ViUmVzVGFzay5vblByb2dyZXNzVXBkYXRlKHJlcyA9PiB7XHJcblx0XHRcdFx0Ly8g5Yqg6L296L+b5bqm55m+5YiG5q+UXHJcblx0XHRcdFx0dmFyIHByb2dyZXNzID0gcmVzW1wicHJvZ3Jlc3NcIl07XHJcblx0XHRcdFx0Ly8g5LiL6L295pWw5o2uXHJcblx0XHRcdFx0dmFyIHRvdGFsQnl0ZXNXcml0dGVuID0gcmVzW1widG90YWxCeXRlc1dyaXR0ZW5cIl07XHJcblx0XHRcdFx0Ly8g5oC76ZW/5bqmXHJcblx0XHRcdFx0dmFyIHRvdGFsQnl0ZXNFeHBlY3RlZFRvV3JpdGUgPSByZXNbXCJ0b3RhbEJ5dGVzRXhwZWN0ZWRUb1dyaXRlXCJdO1xyXG5cdFx0XHRcdHNlbGYuX2xvYWRpbmdWaWV3LnNldFByb2Nlc3NfY3NqYyhwcm9ncmVzcyAvIDIpO1xyXG5cdFx0XHR9KTtcclxuXHRcdH1cclxuXHRcdGVsc2UgaWYgKExheWEuQnJvd3Nlci5vblFRTWluaUdhbWUpIHtcclxuXHRcdFx0Ly/lvIDlp4vliqDovb3liIbljIVcclxuXHRcdFx0dmFyIGxvYWRTdWJSZXNUYXNrOiBhbnkgPSBMYXlhLkJyb3dzZXIud2luZG93W1wicXFcIl0ubG9hZFN1YnBhY2thZ2Uoe1xyXG5cdFx0XHRcdG5hbWU6ICdzdWJSZXMnLFxyXG5cdFx0XHRcdHN1Y2Nlc3M6IChyZXMpID0+IHtcclxuXHJcblx0XHRcdFx0XHQvLyDliIbljIXliqDovb3miJDlip8s5byA5aeL6aKE5Yqg6L296LWE5rqQXHJcblx0XHRcdFx0XHRpZiAocmVzb3VyY2UubGVuZ3RoID4gMCkge1xyXG5cdFx0XHRcdFx0XHRMYXlhLmxvYWRlci5sb2FkKHJlc291cmNlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcclxuXHRcdFx0XHRcdFx0XHRzZWxmLm9uTG9hZFJlc0NvbXBsYXRlKCk7Ly/pooTliqDovb3lrozmiJBcclxuXHRcdFx0XHRcdFx0fSksIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKHJlcykgPT4ge1xyXG5cdFx0XHRcdFx0XHRcdC8vdG9kbzrot5/mlrDov5vluqbmnaFcclxuXHRcdFx0XHRcdFx0XHRzZWxmLl9sb2FkaW5nVmlldy5zZXRQcm9jZXNzX2NzamMocmVzIC8gMiArIDAuNSk7XHJcblx0XHRcdFx0XHRcdH0pKTtcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRzZWxmLm9uTG9hZFJlc0NvbXBsYXRlKCk7Ly/pooTliqDovb3lrozmiJBcclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHR9LFxyXG5cdFx0XHRcdGZhaWw6IChyZXMpID0+IHtcclxuXHRcdFx0XHRcdHRoaXMubG9hZFJlcygpOy8v5Yqg6L295aSx6LSl77yM6YeN5paw5Yqg6L29XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KTtcclxuXHRcdFx0bG9hZFN1YlJlc1Rhc2sub25Qcm9ncmVzc1VwZGF0ZShyZXMgPT4ge1xyXG5cdFx0XHRcdHNlbGYuX2xvYWRpbmdWaWV3LnNldFByb2Nlc3NfY3NqYyhyZXMgLyAyKTtcclxuXHRcdFx0fSk7XHJcblx0XHR9XHJcblx0XHRlbHNlIHsvL+Wtl+iKgui3s+WKqOayoeacieWIhuWMhVxyXG5cdFx0XHRpZiAocmVzb3VyY2UubGVuZ3RoID4gMCkge1xyXG5cdFx0XHRcdExheWEubG9hZGVyLmxvYWQocmVzb3VyY2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xyXG5cdFx0XHRcdFx0c2VsZi5vbkxvYWRSZXNDb21wbGF0ZSgpO1xyXG5cdFx0XHRcdH0pLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIChyZXMpID0+IHtcclxuXHRcdFx0XHRcdHNlbGYuX2xvYWRpbmdWaWV3LnNldFByb2Nlc3NfY3NqYyhyZXMpO1xyXG5cdFx0XHRcdH0pKTtcclxuXHRcdFx0fVxyXG5cdFx0XHRlbHNlIHtcclxuXHRcdFx0XHRzZWxmLm9uTG9hZFJlc0NvbXBsYXRlKCk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9XHJcblxyXG5cdG9uTG9hZFJlc0NvbXBsYXRlKCkge1xyXG5cdFx0dmFyIHNlbGYgPSB0aGlzO1xyXG5cdFx0dGhpcy5fbG9hZGluZ1ZpZXcuc2V0UHJvY2Vzc19jc2pjKDEpO1xyXG5cdFx0aWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XHJcblx0XHRcdC8vIFRtQVBJLkluaXQoKTtcclxuXHRcdFx0Ly8gVG1BUEkuTG9naW4oKHJlcykgPT4ge1xyXG5cdFx0XHQvLyBcdGlmIChyZXMubG9naW5fY2l0eSAhPSBcIlwiKSB7XHJcblx0XHRcdC8vIFx0XHRVc2VyX2NzamMuY2l0eV9jc2pjID0gcmVzLmxvZ2luX2NpdHk7XHJcblx0XHRcdC8vIFx0fVxyXG5cdFx0XHQvLyBcdFVzZXJfY3NqYy5jb2RlX2NzamMgPSByZXMud3hfY29kZTtcclxuXHRcdFx0Ly8gXHRVc2VyX2NzamMudG9rZW5fY3NqYyA9IHJlcy5waWQ7XHJcblx0XHRcdC8vIFx0VXNlcl9jc2pjLm9wZW5JZF9jc2pjID0gcmVzLm9wZW5faWQ7XHJcblx0XHRcdC8vIFx0QUxEX2NzamMuYWxkU2VuZE9wZW5JZF9jc2pjKFVzZXJfY3NqYy5vcGVuSWRfY3NqYyk7XHJcblx0XHRcdC8vIFx0VG1JcEJsb2NrQ29uZmlnLlVwZGF0ZUNvbmZpZygpO1xyXG5cdFx0XHQvLyBcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcblxyXG5cdFx0XHQvLyBcdH0pKTtcclxuXHRcdFx0Ly8gfSk7XHJcblx0XHRcdFdYQVBJX2NzamMud3hMb2dpbl9jc2pjKGZ1bmN0aW9uIChjb2RlKSB7XHJcblx0XHRcdFx0VXNlcl9jc2pjLmNvZGVfY3NqYyA9IGNvZGU7XHJcblx0XHRcdFx0QWREYXRhTWdyLkluc3RhbmNlLkluaXRNYXRpeCgoKSA9PiB7XHJcblx0XHRcdFx0XHRUbUFQSS5Ob0xvZ2luSW5pdChVc2VyX2NzamMub3BlbklkX2NzamMpO1xyXG5cdFx0XHRcdFx0Ly8gVG1BYlRlc3RNZ3JfY3NqYy5JbnN0YW5jZV9jc2pjLkluaXRBYlRlc3RfY3NqYygpO1xyXG5cdFx0XHRcdH0pO1xyXG5cdFx0XHRcdFFwR2FtZVN3aXRjaC5nZXRDdXN0b21LZXkoKTtcclxuXHRcdFx0XHRRcEdhbWVTd2l0Y2guVXBkYXRlSXBDaXR5KCk7XHJcblx0XHRcdFx0VXNlcl9jc2pjLmluaXRpVXNlcl9jc2pjKG51bGwpO1xyXG5cdFx0XHRcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7IH0pKTtcclxuXHRcdFx0XHQvLyBIdHRwVW5pdC5sb2dpbihcclxuXHRcdFx0XHQvLyAocmVzKT0+IFxyXG5cdFx0XHRcdC8vIHtcclxuXHRcdFx0XHQvLyBcdGlmKHJlcy5jb2RlID09IDEpXHJcblx0XHRcdFx0Ly8gXHR7XHJcblx0XHRcdFx0Ly8gXHRcdGNvbnNvbGUubG9nKFwi55m76ZmG5oiQ5Yqf77yB77yB77yBXCIpO1xyXG5cdFx0XHRcdC8vIFx0XHRVc2VyLnRva2VuID0gcmVzLmRhdGEudG9rZW47XHJcblx0XHRcdFx0Ly8gXHRcdFVzZXIub3BlbklkID0gcmVzLmRhdGEub3BlbmlkO1xyXG5cdFx0XHRcdC8vIFx0XHRBTEQuYWxkU2VuZE9wZW5JZChVc2VyLm9wZW5JZCk7XHJcblx0XHRcdFx0Ly8gXHRcdEh0dHBVbml0LmdldEdhbWVEYXRhKChyZXMpPT57XHJcblx0XHRcdFx0Ly8gXHRcdFx0Y29uc29sZS5sb2coXCLojrflj5bnlKjmiLfmlbDmja7miJDlip/vvIHvvIHvvIFcIik7XHJcblx0XHRcdFx0Ly8gXHRcdFx0aWYoMSA9PSByZXMuY29kZSlcclxuXHRcdFx0XHQvLyBcdFx0XHR7XHJcblx0XHRcdFx0Ly8gXHRcdFx0XHRVc2VyLmluaXRpVXNlcihyZXMuZGF0YSk7XHJcblx0XHRcdFx0Ly8gXHRcdFx0fVxyXG5cdFx0XHRcdC8vIFx0XHRcdGVsc2VcclxuXHRcdFx0XHQvLyBcdFx0XHR7XHJcblx0XHRcdFx0Ly8gXHRcdFx0XHRVc2VyLmluaXRpVXNlcihudWxsKTtcclxuXHRcdFx0XHQvLyBcdFx0XHR9XHJcblx0XHRcdFx0Ly8gXHRcdFx0R2FtZUNvbmZpZy5zdGFydFNjZW5lICYmIExheWEuU2NlbmUub3BlbihHYW1lQ29uZmlnLnN0YXJ0U2NlbmUsIGZhbHNlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuXHJcblx0XHRcdFx0Ly8gXHRcdFx0fSkpO1xyXG5cdFx0XHRcdC8vIFx0XHR9LChyZXMpPT57XHJcblx0XHRcdFx0Ly8gXHRcdFx0Y29uc29sZS5sb2coXCLojrflj5bnlKjmiLfmlbDmja7lpLHotKXvvIHvvIHvvIFcIik7XHJcblx0XHRcdFx0Ly8gXHRcdFx0VXNlci50b2tlbiA9IFwiXCI7XHJcblx0XHRcdFx0Ly8gXHRcdFx0VXNlci5vcGVuSWQgPSBcIlwiO1xyXG5cdFx0XHRcdC8vIFx0XHRcdFVzZXIuaW5pdGlVc2VyKG51bGwpO1xyXG5cdFx0XHRcdC8vIFx0XHRcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcblxyXG5cdFx0XHRcdC8vIFx0XHRcdH0pKTtcclxuXHRcdFx0XHQvLyBcdFx0fSlcclxuXHRcdFx0XHQvLyBcdH1cclxuXHRcdFx0XHQvLyBcdGVsc2VcclxuXHRcdFx0XHQvLyBcdHtcclxuXHRcdFx0XHQvLyBcdFx0Y29uc29sZS5sb2coXCLnmbvpmYblpLHotKXvvIHvvIHvvIFcIiArIHJlcyk7XHJcblx0XHRcdFx0Ly8gXHRcdFVzZXIuaW5pdGlVc2VyKG51bGwpO1xyXG5cdFx0XHRcdC8vIFx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSwgZmFsc2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG5cclxuXHRcdFx0XHQvLyBcdFx0fSkpO1xyXG5cdFx0XHRcdC8vIFx0fVxyXG5cdFx0XHRcdC8vIH0sXHJcblx0XHRcdFx0Ly8gKHJlcykgPT4gXHJcblx0XHRcdFx0Ly8ge1xyXG5cdFx0XHRcdC8vIFx0Y29uc29sZS5sb2coXCLnmbvpmYblpLHotKXvvIHvvIHvvIFcIiArIHJlcyk7XHJcblx0XHRcdFx0Ly8gXHRVc2VyX2NzamMuaW5pdGlVc2VyX2NzamMobnVsbCk7XHJcblx0XHRcdFx0Ly8gXHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSwgZmFsc2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG5cclxuXHRcdFx0XHQvLyBcdH0pKTtcclxuXHRcdFx0XHQvLyB9KVxyXG5cdFx0XHR9LCBudWxsKVxyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZiAoTGF5YS5Ccm93c2VyLm9uUUdNaW5pR2FtZSkgLy9vcHBv5bCP5ri45oiPXHJcblx0XHR7XHJcblx0XHRcdE9QUE9BUElfY3NqYy5pbml0QWRTZXJ2aWNlX2NzamMoKCkgPT4ge1xyXG5cclxuXHRcdFx0fSwgKCkgPT4ge1xyXG5cclxuXHRcdFx0fSwgKCkgPT4ge1xyXG5cclxuXHRcdFx0fSk7XHJcblxyXG5cdFx0XHRPUFBPQVBJX2NzamMuTG9naW5fY3NqYyhmdW5jdGlvbiAodG9rZW4pIHtcclxuXHRcdFx0XHRVc2VyX2NzamMuY29kZV9jc2pjID0gdG9rZW47XHJcblx0XHRcdFx0VXNlcl9jc2pjLmluaXRpVXNlcl9jc2pjKG51bGwpO1xyXG5cdFx0XHRcdC8vI3JlZ2lvbiAg5pqC5pe25rKh5pyJ55m75b2V5pyN5Yqh5ZmoLOebtOaOpei/h1xyXG5cdFx0XHRcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcblxyXG5cdFx0XHRcdH0pKTtcclxuXHRcdFx0XHQvLyNlbmRyZWdpb25cclxuXHRcdFx0XHQvLyBIdHRwVW5pdC5sb2dpbihcclxuXHRcdFx0XHQvLyBcdChyZXMpID0+IHtcclxuXHRcdFx0XHQvLyBcdFx0aWYgKHJlcy5jb2RlID09IDEpIHtcclxuXHRcdFx0XHQvLyBcdFx0XHRjb25zb2xlLmxvZyhcIueZu+mZhuaIkOWKn++8ge+8ge+8gVwiKTtcclxuXHRcdFx0XHQvLyBcdFx0XHRVc2VyLnRva2VuID0gcmVzLmRhdGEudG9rZW47XHJcblx0XHRcdFx0Ly8gXHRcdFx0VXNlci5vcGVuSWQgPSByZXMuZGF0YS5vcGVuaWQ7XHJcblx0XHRcdFx0Ly8gXHRcdFx0SHR0cFVuaXQuZ2V0R2FtZURhdGEoKHJlcykgPT4ge1xyXG5cdFx0XHRcdC8vIFx0XHRcdFx0Y29uc29sZS5sb2coXCLojrflj5bnlKjmiLfmlbDmja7miJDlip/vvIHvvIHvvIFcIik7XHJcblx0XHRcdFx0Ly8gXHRcdFx0XHRpZiAoMSA9PSByZXMuY29kZSkge1xyXG5cdFx0XHRcdC8vIFx0XHRcdFx0XHRVc2VyLmluaXRpVXNlcihyZXMuZGF0YSk7XHJcblx0XHRcdFx0Ly8gXHRcdFx0XHRcdGNvbnNvbGUubG9nKFwi6I635Y+W55So5oi35pWw5o2uLS0tLS0tLS0tLS0tLS0tLS0tLS1TdGFydFwiKTtcclxuXHRcdFx0XHQvLyBcdFx0XHRcdFx0Zm9yICh2YXIga2V5IGluIHJlcy5kYXRhKSB7XHJcblx0XHRcdFx0Ly8gXHRcdFx0XHRcdFx0Y29uc29sZS5sb2coa2V5LCByZXMuZGF0YVtrZXldKTtcclxuXHRcdFx0XHQvLyBcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdC8vIFx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIuiOt+WPlueUqOaIt+aVsOaNri0tLS0tLS0tLS0tLS0tLS0tLS0tRW5kXCIpO1xyXG5cdFx0XHRcdC8vIFx0XHRcdFx0fVxyXG5cdFx0XHRcdC8vIFx0XHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0Ly8gXHRcdFx0XHRcdFVzZXIuaW5pdGlVc2VyKG51bGwpO1xyXG5cdFx0XHRcdC8vIFx0XHRcdFx0fVxyXG5cdFx0XHRcdC8vIFx0XHRcdFx0R2FtZUNvbmZpZy5zdGFydFNjZW5lICYmIExheWEuU2NlbmUub3BlbihHYW1lQ29uZmlnLnN0YXJ0U2NlbmUsIGZhbHNlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuXHJcblx0XHRcdFx0Ly8gXHRcdFx0XHR9KSk7XHJcblx0XHRcdFx0Ly8gXHRcdFx0fSwgKHJlcykgPT4ge1xyXG5cdFx0XHRcdC8vIFx0XHRcdFx0Y29uc29sZS5sb2coXCLojrflj5bnlKjmiLfmlbDmja7lpLHotKXvvIHvvIHvvIFcIik7XHJcblx0XHRcdFx0Ly8gXHRcdFx0XHRVc2VyLnRva2VuID0gXCJcIjtcclxuXHRcdFx0XHQvLyBcdFx0XHRcdFVzZXIub3BlbklkID0gXCJcIjtcclxuXHRcdFx0XHQvLyBcdFx0XHRcdFVzZXIuaW5pdGlVc2VyKG51bGwpO1xyXG5cdFx0XHRcdC8vIFx0XHRcdFx0R2FtZUNvbmZpZy5zdGFydFNjZW5lICYmIExheWEuU2NlbmUub3BlbihHYW1lQ29uZmlnLnN0YXJ0U2NlbmUsIGZhbHNlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuXHJcblx0XHRcdFx0Ly8gXHRcdFx0XHR9KSk7XHJcblx0XHRcdFx0Ly8gXHRcdFx0fSlcclxuXHRcdFx0XHQvLyBcdFx0fVxyXG5cdFx0XHRcdC8vIFx0XHRlbHNlIHtcclxuXHRcdFx0XHQvLyBcdFx0XHRjb25zb2xlLmxvZyhcIueZu+mZhuWksei0pe+8ge+8ge+8gVwiLCByZXMpO1xyXG5cdFx0XHRcdC8vIFx0XHRcdFVzZXIuaW5pdGlVc2VyKG51bGwpO1xyXG5cdFx0XHRcdC8vIFx0XHRcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcblxyXG5cdFx0XHRcdC8vIFx0XHRcdH0pKTtcclxuXHRcdFx0XHQvLyBcdFx0fVxyXG5cdFx0XHRcdC8vIFx0fSxcclxuXHRcdFx0XHQvLyBcdChyZXMpID0+IHtcclxuXHRcdFx0XHQvLyBcdFx0Y29uc29sZS5sb2coXCLnmbvpmYblpLHotKXvvIHvvIHvvIFcIiwgcmVzKTtcclxuXHRcdFx0XHQvLyBcdFx0VXNlci5pbml0aVVzZXIobnVsbCk7XHJcblx0XHRcdFx0Ly8gXHRcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcblxyXG5cdFx0XHRcdC8vIFx0XHR9KSk7XHJcblx0XHRcdFx0Ly8gXHR9KVxyXG5cdFx0XHR9LCAocmVzKSA9PiB7XHJcblx0XHRcdFx0R2FtZUNvbmZpZy5zdGFydFNjZW5lICYmIExheWEuU2NlbmUub3BlbihHYW1lQ29uZmlnLnN0YXJ0U2NlbmUsIGZhbHNlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuXHJcblx0XHRcdFx0fSkpO1xyXG5cdFx0XHR9KVxyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZiAoTGF5YS5Ccm93c2VyLm9uVlZNaW5pR2FtZSkgLy9vcHBv5bCP5ri45oiPXHJcblx0XHR7XHJcblx0XHRcdFZJVk9BUElfY3NqYy5WSVZPTG9naW5fY3NqYygpO1xyXG5cdFx0fVxyXG5cdFx0ZWxzZSBpZiAoTGF5YS5Ccm93c2VyLm9uUVFNaW5pR2FtZSkgIC8vcXHlsI/muLjmiI9cclxuXHRcdHtcclxuXHRcdFx0Ly8gUVFNaW5pR2FtZUFQSS5Mb2dpbihmdW5jdGlvbiAoY29kZSkge1xyXG5cdFx0XHQvLyBVc2VyLmNvZGUgPSBjb2RlXHJcblx0XHRcdC8vIFx0SHR0cFVuaXQubG9naW4oXHJcblx0XHRcdC8vIFx0XHQocmVzKSA9PiB7XHJcblx0XHRcdC8vIFx0XHRcdGlmIChyZXMuY29kZSA9PSAxKSB7XHJcblx0XHRcdC8vIFx0XHRcdFx0Y29uc29sZS5sb2coXCLnmbvpmYbmiJDlip/vvIHvvIHvvIFcIik7XHJcblx0XHRcdC8vIFx0XHRcdFx0VXNlci50b2tlbiA9IHJlcy5kYXRhLnRva2VuO1xyXG5cdFx0XHQvLyBcdFx0XHRcdFVzZXIub3BlbklkID0gcmVzLmRhdGEub3BlbmlkO1xyXG5cdFx0XHQvLyBcdFx0XHRcdEFMRC5hbGRTZW5kT3BlbklkKFVzZXIub3BlbklkKTtcclxuXHRcdFx0Ly8gXHRcdFx0XHRIdHRwVW5pdC5nZXRHYW1lRGF0YSgocmVzKSA9PiB7XHJcblx0XHRcdC8vIFx0XHRcdFx0XHRjb25zb2xlLmxvZyhcIuiOt+WPlueUqOaIt+aVsOaNruaIkOWKn++8ge+8ge+8gVwiKTtcclxuXHRcdFx0Ly8gXHRcdFx0XHRcdGlmICgxID09IHJlcy5jb2RlKSB7XHJcblx0XHRcdC8vIFx0XHRcdFx0XHRcdFVzZXIuaW5pdGlVc2VyKHJlcy5kYXRhKTtcclxuXHRcdFx0Ly8gXHRcdFx0XHRcdH1cclxuXHRcdFx0Ly8gXHRcdFx0XHRcdGVsc2Uge1xyXG5cdFx0XHQvLyBcdFx0XHRcdFx0XHRVc2VyLmluaXRpVXNlcihudWxsKTtcclxuXHRcdFx0Ly8gXHRcdFx0XHRcdH1cclxuXHRcdFx0Ly8gXHRcdFx0XHRcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcblxyXG5cdFx0XHQvLyBcdFx0XHRcdFx0fSkpO1xyXG5cdFx0XHQvLyBcdFx0XHRcdH0sIChyZXMpID0+IHtcclxuXHRcdFx0Ly8gXHRcdFx0XHRcdGNvbnNvbGUubG9nKFwi6I635Y+W55So5oi35pWw5o2u5aSx6LSl77yB77yB77yBXCIpO1xyXG5cdFx0XHQvLyBcdFx0XHRcdFx0VXNlci50b2tlbiA9IFwiXCI7XHJcblx0XHRcdC8vIFx0XHRcdFx0XHRVc2VyLm9wZW5JZCA9IFwiXCI7XHJcblx0XHRcdC8vIFx0XHRcdFx0XHRVc2VyLmluaXRpVXNlcihudWxsKTtcclxuXHRcdFx0Ly8gXHRcdFx0XHRcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcblxyXG5cdFx0XHQvLyBcdFx0XHRcdFx0fSkpO1xyXG5cdFx0XHQvLyBcdFx0XHRcdH0pXHJcblx0XHRcdC8vIFx0XHRcdH1cclxuXHRcdFx0Ly8gXHRcdFx0ZWxzZSB7XHJcblx0XHRcdC8vIFx0XHRcdFx0Y29uc29sZS5sb2coXCLnmbvpmYblpLHotKXvvIHvvIHvvIFcIiArIHJlcyk7XHJcblx0XHRcdC8vIFx0XHRcdFx0VXNlci5pbml0aVVzZXIobnVsbCk7XHJcblx0XHRcdC8vIFx0XHRcdFx0R2FtZUNvbmZpZy5zdGFydFNjZW5lICYmIExheWEuU2NlbmUub3BlbihHYW1lQ29uZmlnLnN0YXJ0U2NlbmUsIGZhbHNlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuXHJcblx0XHRcdC8vIFx0XHRcdFx0fSkpO1xyXG5cdFx0XHQvLyBcdFx0XHR9XHJcblx0XHRcdC8vIFx0XHR9LFxyXG5cdFx0XHQvLyBcdFx0KHJlcykgPT4ge1xyXG5cdFx0XHQvLyBcdFx0XHRjb25zb2xlLmxvZyhcIueZu+mZhuWksei0pe+8ge+8ge+8gVwiICsgcmVzKTtcclxuXHRcdFx0Ly8gXHRcdFx0VXNlci5pbml0aVVzZXIobnVsbCk7XHJcblx0XHRcdC8vIFx0XHRcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcblxyXG5cdFx0XHQvLyBcdFx0XHR9KSk7XHJcblx0XHRcdC8vIFx0XHR9KVxyXG5cdFx0XHQvLyB9LCBudWxsKTtcclxuXHRcdH1cclxuXHRcdC8vIGVsc2UgaWYgKEFwcENvbmZpZy5vblRUTWluaUdhbWUpLy/lpLTmnaHvvIzlrZfoioLot7PliqhcclxuXHRcdC8vIHtcclxuXHRcdC8vIFRUQVBJLnR0TG9naW4oZnVuY3Rpb24gKGNvZGUpIHtcclxuXHRcdC8vIFx0VXNlci5jb2RlID0gY29kZVxyXG5cdFx0Ly8gXHRIdHRwVW5pdC5sb2dpbihcclxuXHRcdC8vIFx0XHQocmVzKSA9PiB7XHJcblx0XHQvLyBcdFx0XHRpZiAocmVzLmNvZGUgPT0gMSkge1xyXG5cdFx0Ly8gXHRcdFx0XHRjb25zb2xlLmxvZyhcIueZu+mZhuaIkOWKn++8ge+8ge+8gVwiKTtcclxuXHRcdC8vIFx0XHRcdFx0VXNlci50b2tlbiA9IHJlcy5kYXRhLnRva2VuO1xyXG5cdFx0Ly8gXHRcdFx0XHRVc2VyLm9wZW5JZCA9IHJlcy5kYXRhLm9wZW5pZDtcclxuXHRcdC8vIFx0XHRcdFx0SHR0cFVuaXQuZ2V0R2FtZURhdGEoKHJlcykgPT4ge1xyXG5cdFx0Ly8gXHRcdFx0XHRcdGNvbnNvbGUubG9nKFwi6I635Y+W55So5oi35pWw5o2u5oiQ5Yqf77yB77yB77yBXCIpO1xyXG5cdFx0Ly8gXHRcdFx0XHRcdGlmICgxID09IHJlcy5jb2RlKSB7XHJcblx0XHQvLyBcdFx0XHRcdFx0XHRVc2VyLmluaXRpVXNlcihyZXMuZGF0YSk7XHJcblx0XHQvLyBcdFx0XHRcdFx0fVxyXG5cdFx0Ly8gXHRcdFx0XHRcdGVsc2Uge1xyXG5cdFx0Ly8gXHRcdFx0XHRcdFx0VXNlci5pbml0aVVzZXIobnVsbCk7XHJcblx0XHQvLyBcdFx0XHRcdFx0fVxyXG5cdFx0Ly8gXHRcdFx0XHRcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcblxyXG5cdFx0Ly8gXHRcdFx0XHRcdH0pKTtcclxuXHRcdC8vIFx0XHRcdFx0fSwgKHJlcykgPT4ge1xyXG5cdFx0Ly8gXHRcdFx0XHRcdGNvbnNvbGUubG9nKFwi6I635Y+W55So5oi35pWw5o2u5aSx6LSl77yB77yB77yBXCIpO1xyXG5cdFx0Ly8gXHRcdFx0XHRcdFVzZXIudG9rZW4gPSBcIlwiO1xyXG5cdFx0Ly8gXHRcdFx0XHRcdFVzZXIub3BlbklkID0gXCJcIjtcclxuXHRcdC8vIFx0XHRcdFx0XHRVc2VyLmluaXRpVXNlcihudWxsKTtcclxuXHRcdC8vIFx0XHRcdFx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSwgZmFsc2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG5cclxuXHRcdC8vIFx0XHRcdFx0XHR9KSk7XHJcblx0XHQvLyBcdFx0XHRcdH0pXHJcblx0XHQvLyBcdFx0XHR9XHJcblx0XHQvLyBcdFx0XHRlbHNlIHtcclxuXHRcdC8vIFx0XHRcdFx0Y29uc29sZS5sb2coXCLnmbvpmYblpLHotKXvvIHvvIHvvIFcIiArIHJlcyk7XHJcblx0XHQvLyBcdFx0XHRcdFVzZXIuaW5pdGlVc2VyKG51bGwpO1xyXG5cdFx0Ly8gXHRcdFx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSwgZmFsc2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG5cclxuXHRcdC8vIFx0XHRcdFx0fSkpO1xyXG5cdFx0Ly8gXHRcdFx0fVxyXG5cdFx0Ly8gXHRcdH0sXHJcblx0XHQvLyBcdFx0KHJlcykgPT4ge1xyXG5cdFx0Ly8gXHRcdFx0Y29uc29sZS5sb2coXCLnmbvpmYblpLHotKXvvIHvvIHvvIFcIiArIHJlcyk7XHJcblx0XHQvLyBcdFx0XHRVc2VyLmluaXRpVXNlcihudWxsKTtcclxuXHRcdC8vIFx0XHRcdEdhbWVDb25maWcuc3RhcnRTY2VuZSAmJiBMYXlhLlNjZW5lLm9wZW4oR2FtZUNvbmZpZy5zdGFydFNjZW5lLCBmYWxzZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCBmdW5jdGlvbiAoKSB7XHJcblxyXG5cdFx0Ly8gXHRcdFx0fSkpO1xyXG5cdFx0Ly8gXHRcdH0pXHJcblx0XHQvLyB9LCBudWxsKTtcclxuXHRcdC8vIH1cclxuXHRcdGVsc2Uge1xyXG5cdFx0XHQvLyBUbUFQSS5Jbml0KCk7XHJcblx0XHRcdC8vIFRtQVBJLkxvZ2luKChyZXMpID0+IHtcclxuXHRcdFx0Ly8gXHRjb25zb2xlLmxvZyhcIueZu+mZhuaIkOWKn++8ge+8ge+8gVwiKTtcclxuXHRcdFx0Ly8gXHRVc2VyLmNvZGUgPSByZXMud3hfY29kZTtcclxuXHRcdFx0Ly8gXHRVc2VyLnRva2VuID0gcmVzLnBpZDtcclxuXHRcdFx0Ly8gXHRVc2VyLm9wZW5JZCA9IHJlcy5vcGVuX2lkO1xyXG5cdFx0XHQvLyBcdC8vIEFMRC5hbGRTZW5kT3BlbklkKFVzZXIub3BlbklkKTtcclxuXHRcdFx0Ly8gXHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSwgZmFsc2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG5cclxuXHRcdFx0Ly8gXHR9KSk7XHJcblx0XHRcdC8vIH0pO1xyXG5cdFx0XHRVc2VyX2NzamMuaW5pdGlVc2VyX2NzamMobnVsbCk7XHJcblx0XHRcdC8vIFRtSXBCbG9ja0NvbmZpZy5VcGRhdGVMb2NhbENvbmZpZygpO1xyXG5cdFx0XHRHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSwgZmFsc2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG5cclxuXHRcdFx0fSkpO1xyXG5cdFx0fVxyXG5cdH1cclxuXHJcblx0cHJvdGVjdGVkIGNsb3NlbG9hZGluZ1VJKCkge1xyXG5cdFx0aWYgKHRoaXMuX2xvYWRpbmdVSSAmJiAhdGhpcy5fbG9hZGluZ1VJLmRlc3Ryb3llZCkge1xyXG5cdFx0XHR0aGlzLl9sb2FkaW5nVUkuZGVzdHJveSgpO1xyXG5cdFx0fVxyXG5cdH1cclxufVxyXG4vL+a/gOa0u+WQr+WKqOexu1xyXG5uZXcgTWFpbigpO1xyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBTb3VuZE1ncl9jc2pjIHtcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgc291bmRSZXNQYXRoX2NzamMgPSBcInN1YlJlcy9zb3VuZC9cIlxyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBpbnN0YW5jZV9jc2pjOiBTb3VuZE1ncl9jc2pjID0gbmV3IFNvdW5kTWdyX2NzamMoKTtcclxuXHJcbiAgICBwcml2YXRlIGJnbV9jc2pjOiBhbnk7XHJcbiAgICBwcml2YXRlIF9iZ21uYW1lX2NzamM6IHN0cmluZztcclxuICAgIHByaXZhdGUgY29uc3RydWN0b3IoKSB7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHB1YmxpYyBnZXRTb3VuZFVybF9jc2pjKG5hbWU6IHN0cmluZyk6IHN0cmluZyB7XHJcbiAgICAgICAgbGV0IHVybCA9IFNvdW5kTWdyX2NzamMuc291bmRSZXNQYXRoX2NzamMgKyBuYW1lICsgXCIubXAzXCI7XHJcbiAgICAgICAgcmV0dXJuIHVybDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgcGxheVNvdW5kX2NzamMobmFtZTogc3RyaW5nLCB2b2x1bWU/KTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHZvbHVtZSA9PSBudWxsKSB2b2x1bWUgPSAxO1xyXG4gICAgICAgIHZhciB1cmwgPSB0aGlzLmdldFNvdW5kVXJsX2NzamMobmFtZSk7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIHZhciBzb3VuZCA9IGxheWEudXRpbHMuUG9vbC5nZXRJdGVtKG5hbWUpO1xyXG4gICAgICAgICAgICBpZiAoc291bmQgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgc291bmQgPSB3eC5jcmVhdGVJbm5lckF1ZGlvQ29udGV4dCgpO1xyXG4gICAgICAgICAgICAgICAgc291bmQudm9sdW1lID0gdm9sdW1lO1xyXG4gICAgICAgICAgICAgICAgc291bmQuc3JjID0gU291bmRNZ3JfY3NqYy5zb3VuZFJlc1BhdGhfY3NqYyArIG5hbWUgKyBcIi5tcDNcIjtcclxuICAgICAgICAgICAgICAgIHNvdW5kLm9uRW5kZWQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGxheWEudXRpbHMuUG9vbC5yZWNvdmVyKG5hbWUsIHNvdW5kKTtcclxuICAgICAgICAgICAgICAgICAgICBzb3VuZC5vZmZFbmRlZCgpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBzb3VuZC5wbGF5KCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgbGV0IHJlcyA9IExheWEuU291bmRNYW5hZ2VyLnBsYXlTb3VuZCh1cmwsIDEpO1xyXG4gICAgICAgICAgICBpZiAocmVzICE9IG51bGwpIHJlcy52b2x1bWUgPSAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgcGxheUJHTV9jc2pjKG5hbWUpIHtcclxuICAgICAgICBsZXQgdXJsID0gdGhpcy5nZXRTb3VuZFVybF9jc2pjKG5hbWUpO1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xyXG4gICAgICAgICAgICBpZiAoIXRoaXMuYmdtX2NzamMpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYmdtX2NzamMgPSB3eC5jcmVhdGVJbm5lckF1ZGlvQ29udGV4dCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuYmdtX2NzamMucGF1c2UoKTtcclxuICAgICAgICAgICAgdGhpcy5iZ21fY3NqYy5zcmMgPSB1cmw7XHJcbiAgICAgICAgICAgIHRoaXMuYmdtX2NzamMubG9vcCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuYmdtX2NzamMucGxheSgpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIExheWEuU291bmRNYW5hZ2VyLnBsYXlNdXNpYyh1cmwsIDApO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RvcEJHTV9jc2pjKCkge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5iZ21fY3NqYykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5iZ21fY3NqYy5zdG9wKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJnbV9jc2pjLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuYmdtX2NzamMgPSBudWxsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgTGF5YS5Tb3VuZE1hbmFnZXIuc3RvcE11c2ljKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcHVibGljIHNldEJHTVZvbHVtZV9jc2pjKHZvbHVtZTogbnVtYmVyKSB7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmJnbV9jc2pjKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmJnbV9jc2pjLnZvbHVtZSA9IHZvbHVtZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIExheWEuU291bmRNYW5hZ2VyLnNldE11c2ljVm9sdW1lKHZvbHVtZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiZXhwb3J0IGNsYXNzIFN0b3JhZ2VSZXFfY3NqY1xyXG57XHJcbiAgICBwdWJsaWMga2V5IDogc3RyaW5nID0gbnVsbDtcclxuICAgIHB1YmxpYyBkYXRhIDogYW55ID0ge307XHJcbiAgICBwdWJsaWMgc3VjY2VzcyA6ICgpPT4gdm9pZCA9IG51bGw7XHJcbiAgICBwdWJsaWMgZmFpbCA6ICAoKT0+IHZvaWQgPSBudWxsO1xyXG4gICAgcHVibGljIGNvbXBsZXRlIDogKCk9PiB2b2lkID0gbnVsbDtcclxufVxyXG5cclxuLy/mlbDmja7mnKzlnLDmjIHkuYXljJbkv53lrZhcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3RvcmFnZU1ncl9jc2pjIHtcclxuICAgIFxyXG4gICAgcHVibGljIHN0YXRpYyBzZXRTdG9yYWdlX2NzamMocmVxIDogU3RvcmFnZVJlcV9jc2pjKSB7XHJcbiAgICAgICAgbGV0IGRhdGFTdHI6c3RyaW5nID0gSlNPTi5zdHJpbmdpZnkocmVxLmRhdGEpO1xyXG4gICAgICAgIGlmICghTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0ocmVxLmtleSxkYXRhU3RyKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH0gXHJcbiAgICAgICAgd3guc2V0U3RvcmFnZSh7XHJcbiAgICAgICAgICAgIGtleSA6IHJlcS5rZXksXHJcbiAgICAgICAgICAgIGRhdGEgOiBkYXRhU3RyLFxyXG4gICAgICAgICAgICBzdWNjZXNzIDogcmVxLnN1Y2Nlc3MsXHJcbiAgICAgICAgICAgIGZhaWw6IHJlcS5mYWlsLFxyXG4gICAgICAgICAgICBjb21wbGV0ZTogcmVxLmNvbXBsZXRlXHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXRTdG9yYWdlX2NzamMoa2V5KTogYW55IHtcclxuICAgICAgICB2YXIgdmFsdWUgPSBudWxsO1xyXG4gICAgICAgIHRyeSB7XHJcbiAgICAgICAgICAgIGlmICghTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgICAgIHZhbHVlID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICB2YWx1ZSA9IHd4LmdldFN0b3JhZ2VTeW5jKGtleSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9IGNhdGNoIChlKSB7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB2YWx1ZTtcclxuICAgIH1cclxufSIsIlxyXG5pbXBvcnQgVmlld0Jhc2VfY3NqYyBmcm9tIFwiLi4vVmlldy9WaWV3QmFzZVwiO1xyXG5cclxuZXhwb3J0IGVudW0gVmlld0RlZl9jc2pjIHtcclxuICAgIE5vbmUgPSBcIlwiLFxyXG4gICAgVGlwc1ZpZXcgPSBcIlZpZXcvVGlwc1ZpZXcuanNvblwiLFxyXG4gICAgTWFpbkdhbWVWaWV3ID0gXCJWaWV3L0dhbWUvTWFpbkdhbWVWaWV3Lmpzb25cIixcclxuICAgIEluR2FtZVZpZXcgPSBcIlZpZXcvR2FtZS9JbkdhbWVWaWV3Lmpzb25cIixcclxuICAgIFNlbGVjdEhlcm8gPSBcIlZpZXcvR2FtZS9TZWxlY3RIZXJvLmpzb25cIixcclxuXHJcbiAgICBHYW1lT3ZlclZpZXcgPSBcIlZpZXcvR2FtZS9HYW1lT3ZlclZpZXcuanNvblwiLFxyXG4gICAgRXhwb3J0MUFkVmlldyA9IFwiVmlldy9HYW1lL0V4cG9ydDFBZFZpZXcuanNvblwiLFxyXG4gICAgRXhwb3J0MkFkVmlldyA9IFwiVmlldy9HYW1lL0V4cG9ydDJBZFZpZXcuanNvblwiLFxyXG4gICAgRXhwb3J0M0FkVmlldyA9IFwiVmlldy9HYW1lL0V4cG9ydDNBZFZpZXcuanNvblwiLFxyXG4gICAgR2FtZU92ZXJXaW5WaWV3ID0gXCJWaWV3L0dhbWUvR2FtZU92ZXJXaW5WaWV3Lmpzb25cIixcclxuICAgIEdhbWVPdmVyRmFpbFZpZXcgPSBcIlZpZXcvR2FtZS9HYW1lT3ZlckZhaWxWaWV3Lmpzb25cIixcclxuICAgIFRlc3RBZHZpc2VtZW50VmlldyA9IFwiVmlldy9UZXN0QWR2aXNlbWVudFZpZXcuanNvblwiLFxyXG4gICAgLy90b2RvOua3u+WKoOS9oOeahOeVjOmdolxyXG4gICAgU2lnbkluVmlldyA9IFwiVmlldy9HYW1lL1NpZ25JblZpZXcuanNvblwiLFxyXG4gICAgUmV2aXZlVmlldyA9IFwiVmlldy9HYW1lL1Jldml2ZVZpZXcuanNvblwiLFxyXG4gICAgR2V0U2tpblZpZXcgPSBcIlZpZXcvR2FtZS9HZXRTa2luVmlldy5qc29uXCIsXHJcbiAgICBTdXBlclN0YXJ0VmlldyA9IFwiVmlldy9HYW1lL1N1cGVyU3RhcnRWaWV3Lmpzb25cIixcclxuICAgIE9wcG9OYXRpdmVBZCA9IFwiVmlldy9PUFBPL09wcG9OYXRpdmVBZFZpZXcuanNvblwiLFxyXG4gICAgSEV4cG9ydDFBZFZpZXcgPSBcIlZpZXcvR2FtZS9IRXhwb3J0MUFkVmlldy5qc29uXCIsXHJcbiAgICBIRXhwb3J0MkFkVmlldyA9IFwiVmlldy9HYW1lL0hFeHBvcnQyQWRWaWV3Lmpzb25cIixcclxuICAgIEZyaWVuZEV4cG9ydFZpZXcgPSBcIlZpZXcvR2FtZS9GcmllbmRFeHBvcnRWaWV3Lmpzb25cIixcclxuICAgIFR1dG9yaWFsVmlldyA9IFwiVmlldy9HYW1lL1R1dG9yaWFsVmlldy5qc29uXCIsXHJcbiAgICBLZEJhbm5lclZpZXcgPSBcIlZpZXcvR2FtZS9LZEJhbm5lclZpZXcuanNvblwiLFxyXG59XHJcblxyXG4vL+eVjOmdoueuoeeQhuWZqFxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWaWV3TWdyX2NzamMge1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBpbnN0YW5jZV9jc2pjOiBWaWV3TWdyX2NzamMgPSBuZXcgVmlld01ncl9jc2pjKCk7XHJcbiAgICBwcm90ZWN0ZWQgcmVhZG9ubHkgX3ZpZXdzX2NzamM6IGFueSA9IHt9O1xyXG5cclxuICAgIHB1YmxpYyBvcGVuVmlld19jc2pjKHZpZXdUeXBlOiBWaWV3RGVmX2NzamMsIGRhdGE/OiBhbnksIG9uY29tcGxhdGU/OiBGdW5jdGlvbik6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLl92aWV3c19jc2pjW3ZpZXdUeXBlXSkge1xyXG4gICAgICAgICAgICB2YXIgdmlldyA9IHRoaXMuX3ZpZXdzX2NzamNbdmlld1R5cGVdO1xyXG4gICAgICAgICAgICBsZXQgY29tcyA9IHZpZXcuX2NvbXBvbmVudHM7XHJcbiAgICAgICAgICAgIGxldCB2aWV3QmFzZTogVmlld0Jhc2VfY3NqYyA9IG51bGw7XHJcbiAgICAgICAgICAgIGlmIChjb21zKSB7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgY29tcy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gY29tc1tpbmRleF07XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGVsZW1lbnQuX3ZpZXdCYXNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdCYXNlID0gZWxlbWVudCBhcyBWaWV3QmFzZV9jc2pjXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHZpZXdCYXNlLm9wZW5WaWV3KGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKG9uY29tcGxhdGUpIHtcclxuICAgICAgICAgICAgICAgIG9uY29tcGxhdGUodmlld0Jhc2UpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgdmFyIHZpZXdVcmwgPSBTdHJpbmcodmlld1R5cGUpXHJcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIExheWEuU2NlbmUubG9hZCh2aWV3VXJsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uIChvd25lcjogYW55KSB7XHJcbiAgICAgICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQob3duZXIpO1xyXG4gICAgICAgICAgICB2YXIgdmlldyA9IG93bmVyIGFzIExheWEuVmlldztcclxuICAgICAgICAgICAgc2VsZi5fdmlld3NfY3NqY1t2aWV3VHlwZV0gPSB2aWV3O1xyXG4gICAgICAgICAgICBsZXQgY29tcyA9IG93bmVyLl9jb21wb25lbnRzO1xyXG4gICAgICAgICAgICBsZXQgdmlld0Jhc2U6IFZpZXdCYXNlX2NzamMgPSBudWxsO1xyXG4gICAgICAgICAgICBpZiAoY29tcykge1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNvbXMubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IGNvbXNbaW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50Ll92aWV3QmFzZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2aWV3QmFzZSA9IGVsZW1lbnQgYXMgVmlld0Jhc2VfY3NqYztcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5fdmlld0RlZiA9IHZpZXdUeXBlO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB2aWV3QmFzZS5vcGVuVmlldyhkYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChvbmNvbXBsYXRlKSB7XHJcbiAgICAgICAgICAgICAgICBvbmNvbXBsYXRlKHZpZXdCYXNlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY2xvc2VWaWV3X2NzamModmlld1R5cGU6IFZpZXdEZWZfY3NqYykge1xyXG4gICAgICAgIHZhciB2aWV3OiBMYXlhLlZpZXcgPSB0aGlzLl92aWV3c19jc2pjW3ZpZXdUeXBlXTtcclxuICAgICAgICBpZiAodmlldykge1xyXG4gICAgICAgICAgICB2YXIgb3duZXIgPSB2aWV3IGFzIGFueTtcclxuICAgICAgICAgICAgbGV0IGNvbXMgPSBvd25lci5fY29tcG9uZW50cztcclxuICAgICAgICAgICAgaWYgKGNvbXMpIHtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBjb21zLmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBjb21zW2luZGV4XTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5fdmlld0Jhc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5vbkNsb3NlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB2aWV3LnJlbW92ZVNlbGYoKTtcclxuICAgICAgICAgICAgdmlldy5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgIHRoaXMuX3ZpZXdzX2NzamNbdmlld1R5cGVdID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNob3dWaWV3X2NzamModmlld1R5cGU6IFZpZXdEZWZfY3NqYykge1xyXG4gICAgICAgIHZhciB2aWV3ID0gdGhpcy5fdmlld3NfY3NqY1t2aWV3VHlwZV07XHJcbiAgICAgICAgaWYgKHZpZXcpIHtcclxuICAgICAgICAgICAgbGV0IGNvbXMgPSB2aWV3Ll9jb21wb25lbnRzO1xyXG4gICAgICAgICAgICBpZiAoY29tcykge1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGNvbXMubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgZWxlbWVudCA9IGNvbXNbaW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChlbGVtZW50Ll92aWV3QmFzZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBlbGVtZW50LnNob3coKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBoaWRlVmlld19jc2pjKHZpZXdUeXBlOiBWaWV3RGVmX2NzamMpIHtcclxuICAgICAgICB2YXIgdmlldyA9IHRoaXMuX3ZpZXdzX2NzamNbdmlld1R5cGVdO1xyXG4gICAgICAgIGlmICh2aWV3KSB7XHJcbiAgICAgICAgICAgIGxldCBjb21zID0gdmlldy5fY29tcG9uZW50cztcclxuICAgICAgICAgICAgaWYgKGNvbXMpIHtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBjb21zLmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBjb21zW2luZGV4XTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZWxlbWVudC5fdmlld0Jhc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZWxlbWVudC5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0Vmlld19jc2pjKHZpZXdUeXBlOiBWaWV3RGVmX2NzamMpOiBMYXlhLlZpZXcge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl92aWV3c19jc2pjW3ZpZXdUeXBlXTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc2hvd1RpcHNfY3NqYyhtc2c6IHN0cmluZykge1xyXG4gICAgICAgIHRoaXMub3BlblZpZXdfY3NqYyhWaWV3RGVmX2NzamMuVGlwc1ZpZXcsIG1zZyk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgKiBhcyBDcnlwdG9KUyBmcm9tIFwiLi9hZXMuanNcIlxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQWVzVG9vbHNfY3NqY1xyXG57XHJcbiAgICBwcml2YXRlIHN0YXRpYyByZWFkb25seSBLRVkgPSAnYiM2M2ZGSjZBdmtLM1lUKic7XHJcbiAgICBwcml2YXRlIHN0YXRpYyByZWFkb25seSBJViA9ICdKJGY0RFUlc05MNzNNJkdvJztcclxuXHJcbiAgICAvL+WKoOWvhlxyXG4gICAgcHVibGljIHN0YXRpYyBlbmNyeXB0X2NzamMoc3RyOiBzdHJpbmcpIHtcclxuICAgICAgICB2YXIga2V5ID0gQ3J5cHRvSlMuZW5jLlV0ZjgucGFyc2UoQWVzVG9vbHNfY3NqYy5LRVkpOy8vIOenmOmSpVxyXG4gICAgICAgIHZhciBpdiA9IENyeXB0b0pTLmVuYy5VdGY4LnBhcnNlKEFlc1Rvb2xzX2NzamMuSVYpOy8v5ZCR6YePaXZcclxuICAgICAgICB2YXIgZW5jcnlwdGVkID0gQ3J5cHRvSlMuQUVTLmVuY3J5cHQoc3RyLCBrZXksIHsgaXY6IGl2LCBtb2RlOiBDcnlwdG9KUy5tb2RlLkNCQywgcGFkZGluZzogQ3J5cHRvSlMucGFkLlBrY3M3IH0pO1xyXG4gICAgICAgIHJldHVybiBlbmNyeXB0ZWQudG9TdHJpbmcoKTtcclxuICAgIH1cclxuXHJcbiAgICAvL+ino+WvhlxyXG4gICAgcHVibGljIHN0YXRpYyBkZWNyeXB0X2NzamMoc3RyOiBzdHJpbmcpIHtcclxuICAgICAgICB2YXIga2V5ID0gQ3J5cHRvSlMuZW5jLlV0ZjgucGFyc2UoQWVzVG9vbHNfY3NqYy5LRVkpOy8vIOenmOmSpVxyXG4gICAgICAgIHZhciBpdiA9IENyeXB0b0pTLmVuYy5VdGY4LnBhcnNlKEFlc1Rvb2xzX2NzamMuSVYpOy8v5ZCR6YePaXZcclxuICAgICAgICB2YXIgZGVjcnlwdGVkID0gQ3J5cHRvSlMuQUVTLmRlY3J5cHQoc3RyLCBrZXksIHsgaXY6IGl2LCBwYWRkaW5nOiBDcnlwdG9KUy5wYWQuUGtjczcgfSk7XHJcbiAgICAgICAgcmV0dXJuIGRlY3J5cHRlZC50b1N0cmluZyhDcnlwdG9KUy5lbmMuVXRmOCk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIFxyXG59IiwiaW1wb3J0IE5ldENvbmZpZ19jc2pjIGZyb20gXCIuL05ldENvbmZpZ1wiO1xyXG5pbXBvcnQgVXNlcl9jc2pjIGZyb20gXCIuLi9Vc2VyL1VzZXJcIjtcclxuaW1wb3J0IEFlc1Rvb2xzX2NzamMgZnJvbSBcIi4vQWVzVG9vbHNcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyByZXF1ZXN0RGF0YV9jc2pjXHJcbntcclxuICAgIHB1YmxpYyBtZXRoIDogc3RyaW5nID0gXCJwb3N0XCI7XHJcbiAgICBwdWJsaWMgaGVhZGVyIDogYW55ID0gbnVsbDtcclxuICAgIHB1YmxpYyBkYXRhIDogYW55O1xyXG4gICAgcHVibGljIHVybCA6IHN0cmluZyA9IFwiXCI7XHJcbiAgICBwdWJsaWMgb25TdWNjZXNzIDogRnVuY3Rpb24gPSBudWxsO1xyXG4gICAgcHVibGljIG9uRmFpbCA6IEZ1bmN0aW9uID0gbnVsbDtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpXHJcbiAgICB7XHJcbiAgICAgICAgdGhpcy5kYXRhID0ge307XHJcbiAgICB9XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEh0dHBVbml0X2NzamMgXHJcbntcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVxdWVzdChyZXEgOiByZXF1ZXN0RGF0YV9jc2pjKSB7XHJcbiAgICAgICAgaWYgKHJlcS51cmwuaW5kZXhPZihcImh0dHBzOi8vXCIpID4gLTEgfHxcclxuICAgICAgICAgICAgcmVxLnVybC5pbmRleE9mKFwiaHR0cDovL1wiKSA+IC0xKSB7XHJcbiAgICAgICAgICAgIHJlcS51cmwgPSByZXEudXJsO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHJlcS51cmwgPSBOZXRDb25maWdfY3NqYy5zZXJ2ZXJVcmxfY3NqYyArIHJlcS51cmw7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgY29tcGxldGVGdW5jID0gKHJlcykgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMsXCJodHRwIFN1Y2Nlc3NcIilcclxuICAgICAgICAgICAgaWYgKHJlcS5vblN1Y2Nlc3MpIHtcclxuICAgICAgICAgICAgICAgIHJlcS5vblN1Y2Nlc3MocmVzKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXEub25TdWNjZXNzID0gbnVsbDtcclxuICAgICAgICAgICAgcmVxID0gbnVsbDtcclxuICAgICAgICB9O1xyXG5cclxuICAgICAgICB2YXIgZXJyb3JGdW5jID0gKHJlcykgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMsXCJodHRwIGZhaWxcIilcclxuICAgICAgICAgICAgaWYgKHJlcS5vbkZhaWwpICB7XHJcbiAgICAgICAgICAgICAgICByZXEub25GYWlsKHJlcyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgcmVxLm9uRmFpbCA9IG51bGw7XHJcbiAgICAgICAgICAgIHJlcSA9IG51bGw7XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgdmFyIHhocjogTGF5YS5IdHRwUmVxdWVzdCA9IG5ldyBMYXlhLkh0dHBSZXF1ZXN0KCk7XHJcbiAgICAgICAgeGhyLm9uY2UoTGF5YS5FdmVudC5DT01QTEVURSwgSHR0cFVuaXRfY3NqYywgY29tcGxldGVGdW5jKTtcclxuICAgICAgICB4aHIub25jZShMYXlhLkV2ZW50LkVSUk9SLCBIdHRwVW5pdF9jc2pjLCBlcnJvckZ1bmMpO1xyXG4gICAgICAgIC8vIGxldCBkYXRhU3RyOnN0cmluZyA9IEpTT04uc3RyaW5naWZ5KHJlcS5kYXRhKTtcclxuXHJcbiAgICAgICAgaWYoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUgLyogfHwgQXBwQ29uZmlnLm9uVFRNaW5pR2FtZSAqLylcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHJlcS5kYXRhLmNvZGUgPSBVc2VyX2NzamMuY29kZV9jc2pjO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKExheWEuQnJvd3Nlci5vblFHTWluaUdhbWUpIC8vT1BQT+Wwj+a4uOaIj1xyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcmVxLmRhdGEub3Bwb3Rva2VuID0gVXNlcl9jc2pjLmNvZGVfY3NqYztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKSAvL3Fx5bCP5ri45oiPXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICByZXEuZGF0YS5jb2RlID0gVXNlcl9jc2pjLmNvZGVfY3NqYztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgLy8gcmVxLmRhdGEuY29kZSA9IFVzZXJfY3NqYy5jb2RlX2NzamM7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB2YXIgdGltZSA9IFwidGltZT1cIiArIFN0cmluZyhEYXRlLm5vdygpKTtcclxuICAgICAgICBpZihyZXEuaGVhZGVyID09IG51bGwpe1xyXG4gICAgICAgICAgICByZXEuaGVhZGVyID0gXHJcbiAgICAgICAgICAgIFtcclxuICAgICAgICAgICAgICAgIFwiQ29udGVudC1UeXBlXCIsIFwiYXBwbGljYXRpb24vanNvblwiLFxyXG4gICAgICAgICAgICAgICAgXCJzdGF0ZVwiICwgTmV0Q29uZmlnX2NzamMuc3RhdGVfY3NqYyxcclxuICAgICAgICAgICAgICAgIFwiZ2FtZWlkXCIgLE5ldENvbmZpZ19jc2pjLmdhbWVpZF9jc2pjLFxyXG4gICAgICAgICAgICAgICAgXCJzaWduXCIgLEFlc1Rvb2xzX2NzamMuZW5jcnlwdF9jc2pjKHRpbWUpLFxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfVxyXG4gICAgICAgIFxyXG4gICAgICAgIGlmKFVzZXJfY3NqYy50b2tlbl9jc2pjKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcmVxLmhlYWRlci5wdXNoKFwidG9rZW5cIik7XHJcbiAgICAgICAgICAgIHJlcS5oZWFkZXIucHVzaChVc2VyX2NzamMudG9rZW5fY3NqYyk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB4aHIuc2VuZChyZXEudXJsLCAvKiBKU09OLnN0cmluZ2lmeSggKi9yZXEuZGF0YS8qICkgKi8sIHJlcS5tZXRoLCBcImpzb25cIixyZXEuaGVhZGVyKTtcclxuICAgIH1cclxuXHJcbiAgICAvL3RvZG866L+Z6YeM5re75Yqg5L2g5Lus5ZKM5pyN5Yqh5Zmo55u45LqS55qE5o6l5Y+jXHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBsb2dpbl9jc2pjKG9uU3VjY2VzcyA6IEZ1bmN0aW9uLG9uRmFpbCA6IEZ1bmN0aW9uKVxyXG4gICAge1xyXG4gICAgICAgIHZhciByZXEgPSBuZXcgcmVxdWVzdERhdGFfY3NqYygpO1xyXG4gICAgICAgIHJlcS51cmwgPSBOZXRDb25maWdfY3NqYy5sb2dpbl9jc2pjO1xyXG4gICAgICAgIHJlcS5vblN1Y2Nlc3MgPSBvblN1Y2Nlc3M7XHJcbiAgICAgICAgcmVxLm9uRmFpbCA9IG9uRmFpbDtcclxuICAgICAgICBIdHRwVW5pdF9jc2pjLnJlcXVlc3QocmVxKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgcHVibGljIHN0YXRpYyBzYXZlR2FtZURhdGFfY3NqYyhnYW1lRGF0YSA6IGFueSxvblN1Y2Nlc3MgOiBGdW5jdGlvbixvbkZhaWwgOiBGdW5jdGlvbilcclxuICAgIHtcclxuICAgICAgICB2YXIgcmVxID0gbmV3IHJlcXVlc3REYXRhX2NzamMoKTtcclxuICAgICAgICByZXEudXJsID0gTmV0Q29uZmlnX2NzamMuc2F2ZUdhbWVEYXRhX2NzamM7XHJcbiAgICAgICAgcmVxLmRhdGEuZ2FtZURhdGEgPSBnYW1lRGF0YTtcclxuICAgICAgICByZXEub25TdWNjZXNzID0gb25TdWNjZXNzO1xyXG4gICAgICAgIHJlcS5vbkZhaWwgPSBvbkZhaWw7XHJcbiAgICAgICAgSHR0cFVuaXRfY3NqYy5yZXF1ZXN0KHJlcSk7XHJcbiAgICB9XHJcbiAgICBcclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0R2FtZURhdGFfY3NqYyhvblN1Y2Nlc3MgOiBGdW5jdGlvbixvbkZhaWwgOiBGdW5jdGlvbilcclxuICAgIHtcclxuICAgICAgICB2YXIgcmVxID0gbmV3IHJlcXVlc3REYXRhX2NzamMoKTtcclxuICAgICAgICByZXEudXJsID0gTmV0Q29uZmlnX2NzamMuZ2V0VXNlcl9jc2pjO1xyXG4gICAgICAgIHJlcS5vblN1Y2Nlc3MgPSBvblN1Y2Nlc3M7XHJcbiAgICAgICAgcmVxLm9uRmFpbCA9IG9uRmFpbDtcclxuICAgICAgICBIdHRwVW5pdF9jc2pjLnJlcXVlc3QocmVxKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLyoqXHJcbiAgICAgKiBJUOWxj+iUveaWueazle+8jOmcgOimgeWcqE5ldENvbmZpZ+exu+S4reiuvue9rklwQmxvY2vnmoTmjqXlj6PlnLDlnYBcclxuICAgICAqIG9uU3VjY2Vzc+aWueazlei/lOWbnuWPguaVsOeahOiMg+S+i+S4uiBPYmplY3Qge2NvZGU6IDAsIG1zZzogXCLlh4bkuIDnur9cIiwgdGltZTogXCIxNTcxMDM0NDQ3XCIsIGRhdGE6IG51bGx9XHJcbiAgICAgKiBAc3RhdGljXHJcbiAgICAgKiBAbWVtYmVyb2YgSHR0cFVuaXRcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBHZXRJcEJsb2NrX2NzamMob25TdWNjZXNzIDogRnVuY3Rpb24sb25GYWlsIDogRnVuY3Rpb24pe1xyXG4gICAgICAgIGlmKC0xICE9IE5ldENvbmZpZ19jc2pjLmdhbWVpZF9jc2pjKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFyIHJlcSA9IG5ldyByZXF1ZXN0RGF0YV9jc2pjKCk7XHJcbiAgICAgICAgICAgIHJlcS51cmwgPSBOZXRDb25maWdfY3NqYy5pcEJsb2NrO1xyXG4gICAgICAgICAgICByZXEub25TdWNjZXNzID0gb25TdWNjZXNzO1xyXG4gICAgICAgICAgICByZXEub25GYWlsID0gb25GYWlsO1xyXG4gICAgICAgICAgICBIdHRwVW5pdF9jc2pjLnJlcXVlc3QocmVxKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyByZXBvcnRFeHBvcnRfY3NqYyhhcHBpZCA6IHN0cmluZyxnYW1lX25hbWUgOiBzdHJpbmcsb25TdWNjZXNzIDogRnVuY3Rpb24sb25GYWlsIDogRnVuY3Rpb24pXHJcbiAgICB7XHJcbiAgICAgICAgdmFyIHJlcSA9IG5ldyByZXF1ZXN0RGF0YV9jc2pjKCk7XHJcbiAgICAgICAgcmVxLnVybCA9IE5ldENvbmZpZ19jc2pjLnJlcG9ydEV4cG9ydDtcclxuICAgICAgICByZXEuZGF0YS53YmFwcGlkID0gYXBwaWQ7XHJcbiAgICAgICAgcmVxLmRhdGEuZ2FtZV9uYW1lID0gZ2FtZV9uYW1lO1xyXG4gICAgICAgIHJlcS5vblN1Y2Nlc3MgPSBvblN1Y2Nlc3M7XHJcbiAgICAgICAgcmVxLm9uRmFpbCA9IG9uRmFpbDtcclxuICAgICAgICBIdHRwVW5pdF9jc2pjLnJlcXVlc3QocmVxKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlcG9ydEltcG9ydF9jc2pjKGFwcGlkIDogc3RyaW5nLGNoYW5uZWwgOiBzdHJpbmcsb25TdWNjZXNzIDogRnVuY3Rpb24sb25GYWlsIDogRnVuY3Rpb24pXHJcbiAgICB7XHJcbiAgICAgICAgdmFyIHJlcSA9IG5ldyByZXF1ZXN0RGF0YV9jc2pjKCk7XHJcbiAgICAgICAgcmVxLnVybCA9IE5ldENvbmZpZ19jc2pjLnJlcG9ydEltcG9ydDtcclxuICAgICAgICByZXEuZGF0YS53YmFwcGlkID0gYXBwaWQ7XHJcbiAgICAgICAgcmVxLmRhdGEuY2hhbm5lbCA9IGNoYW5uZWw7XHJcbiAgICAgICAgcmVxLm9uU3VjY2VzcyA9IG9uU3VjY2VzcztcclxuICAgICAgICByZXEub25GYWlsID0gb25GYWlsO1xyXG4gICAgICAgIEh0dHBVbml0X2NzamMucmVxdWVzdChyZXEpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0dXNlcmlwX2NzamMob25TdWNjZXNzIDogRnVuY3Rpb24sb25GYWlsIDogRnVuY3Rpb24pXHJcbiAgICB7XHJcbiAgICAgICAgdmFyIHJlcSA9IG5ldyByZXF1ZXN0RGF0YV9jc2pjKCk7XHJcbiAgICAgICAgcmVxLnVybCA9IE5ldENvbmZpZ19jc2pjLmdldHVzZXJpcDtcclxuICAgICAgICByZXEub25TdWNjZXNzID0gb25TdWNjZXNzO1xyXG4gICAgICAgIHJlcS5vbkZhaWwgPSBvbkZhaWw7XHJcbiAgICAgICAgSHR0cFVuaXRfY3NqYy5yZXF1ZXN0KHJlcSk7XHJcbiAgICB9XHJcbn1cclxuIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgTmV0Q29uZmlnX2NzamNcclxue1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBzdGF0ZV9jc2pjID0gMDtcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgZ2FtZWlkX2NzamMgOiBudW1iZXIgPSAtMTtcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgc2VydmVyVXJsX2NzamMgOiBzdHJpbmcgPSBcIlwiO1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBsb2dpbl9jc2pjIDogc3RyaW5nID0gXCJcIjtcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgc2F2ZUdhbWVEYXRhX2NzamMgOiBzdHJpbmcgPSBcIlwiO1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBnZXRVc2VyX2NzamMgPSBcIlwiO1xyXG4gICAgLyog55So5p2l5a+5SVDlnLDlnYDov5vooYzlsY/olL3nmoTmjqXlj6PlnLDlnYDvvIzlj6/ku6Xkvb/nlKjmjqXlj6PnmoTov5Tlm57lgLzorqnmn5Dkupvlub/lkYrpgLvovpHlnKjlvq7kv6HnmoTlrqHmoLjlnLDljLoo5bm/5beeKeWPkeeUn+WPmOWMliAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBpcEJsb2NrID0gXCJcIjtcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgcmVwb3J0RXhwb3J0ID0gXCIvYXBpL3NoYXJlL2dldHdhaWJ1YWRcIjtcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgcmVwb3J0SW1wb3J0ID0gXCIvYXBpL3NoYXJlL2dldHpqYWRtbFwiO1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBnZXR1c2VyaXAgPSBcIi9hcGkvc2hhcmUvZ2V0dXNlcmlwXCI7XHJcbn0iLCJ2YXIgQ3J5cHRvSlMgPSBDcnlwdG9KUyB8fCBmdW5jdGlvbiAodSwgcCkge1xyXG4gIHZhciBkID0ge30sIGwgPSBkLmxpYiA9IHt9LCBzID0gZnVuY3Rpb24gKCkgeyB9LCB0ID0gbC5CYXNlID0geyBleHRlbmQ6IGZ1bmN0aW9uIChhKSB7IHMucHJvdG90eXBlID0gdGhpczsgdmFyIGMgPSBuZXcgczsgYSAmJiBjLm1peEluKGEpOyBjLmhhc093blByb3BlcnR5KFwiaW5pdFwiKSB8fCAoYy5pbml0ID0gZnVuY3Rpb24gKCkgeyBjLiRzdXBlci5pbml0LmFwcGx5KHRoaXMsIGFyZ3VtZW50cykgfSk7IGMuaW5pdC5wcm90b3R5cGUgPSBjOyBjLiRzdXBlciA9IHRoaXM7IHJldHVybiBjIH0sIGNyZWF0ZTogZnVuY3Rpb24gKCkgeyB2YXIgYSA9IHRoaXMuZXh0ZW5kKCk7IGEuaW5pdC5hcHBseShhLCBhcmd1bWVudHMpOyByZXR1cm4gYSB9LCBpbml0OiBmdW5jdGlvbiAoKSB7IH0sIG1peEluOiBmdW5jdGlvbiAoYSkgeyBmb3IgKHZhciBjIGluIGEpIGEuaGFzT3duUHJvcGVydHkoYykgJiYgKHRoaXNbY10gPSBhW2NdKTsgYS5oYXNPd25Qcm9wZXJ0eShcInRvU3RyaW5nXCIpICYmICh0aGlzLnRvU3RyaW5nID0gYS50b1N0cmluZykgfSwgY2xvbmU6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuaW5pdC5wcm90b3R5cGUuZXh0ZW5kKHRoaXMpIH0gfSxcclxuICByID0gbC5Xb3JkQXJyYXkgPSB0LmV4dGVuZCh7XHJcbiAgICBpbml0OiBmdW5jdGlvbiAoYSwgYykgeyBhID0gdGhpcy53b3JkcyA9IGEgfHwgW107IHRoaXMuc2lnQnl0ZXMgPSBjICE9IHAgPyBjIDogNCAqIGEubGVuZ3RoIH0sIHRvU3RyaW5nOiBmdW5jdGlvbiAoYSkgeyByZXR1cm4gKGEgfHwgdikuc3RyaW5naWZ5KHRoaXMpIH0sIGNvbmNhdDogZnVuY3Rpb24gKGEpIHsgdmFyIGMgPSB0aGlzLndvcmRzLCBlID0gYS53b3JkcywgaiA9IHRoaXMuc2lnQnl0ZXM7IGEgPSBhLnNpZ0J5dGVzOyB0aGlzLmNsYW1wKCk7IGlmIChqICUgNCkgZm9yICh2YXIgayA9IDA7IGsgPCBhOyBrKyspY1tqICsgayA+Pj4gMl0gfD0gKGVbayA+Pj4gMl0gPj4+IDI0IC0gOCAqIChrICUgNCkgJiAyNTUpIDw8IDI0IC0gOCAqICgoaiArIGspICUgNCk7IGVsc2UgaWYgKDY1NTM1IDwgZS5sZW5ndGgpIGZvciAoayA9IDA7IGsgPCBhOyBrICs9IDQpY1tqICsgayA+Pj4gMl0gPSBlW2sgPj4+IDJdOyBlbHNlIGMucHVzaC5hcHBseShjLCBlKTsgdGhpcy5zaWdCeXRlcyArPSBhOyByZXR1cm4gdGhpcyB9LCBjbGFtcDogZnVuY3Rpb24gKCkge1xyXG4gICAgICB2YXIgYSA9IHRoaXMud29yZHMsIGMgPSB0aGlzLnNpZ0J5dGVzOyBhW2MgPj4+IDJdICY9IDQyOTQ5NjcyOTUgPDxcclxuICAgICAgICAzMiAtIDggKiAoYyAlIDQpOyBhLmxlbmd0aCA9IHUuY2VpbChjIC8gNClcclxuICAgIH0sIGNsb25lOiBmdW5jdGlvbiAoKSB7IHZhciBhID0gdC5jbG9uZS5jYWxsKHRoaXMpOyBhLndvcmRzID0gdGhpcy53b3Jkcy5zbGljZSgwKTsgcmV0dXJuIGEgfSwgcmFuZG9tOiBmdW5jdGlvbiAoYSkgeyBmb3IgKHZhciBjID0gW10sIGUgPSAwOyBlIDwgYTsgZSArPSA0KWMucHVzaCg0Mjk0OTY3Mjk2ICogdS5yYW5kb20oKSB8IDApOyByZXR1cm4gbmV3IHIuaW5pdChjLCBhKSB9XHJcbiAgfSksIHcgPSBkLmVuYyA9IHt9LCB2ID0gdy5IZXggPSB7XHJcbiAgICBzdHJpbmdpZnk6IGZ1bmN0aW9uIChhKSB7IHZhciBjID0gYS53b3JkczsgYSA9IGEuc2lnQnl0ZXM7IGZvciAodmFyIGUgPSBbXSwgaiA9IDA7IGogPCBhOyBqKyspIHsgdmFyIGsgPSBjW2ogPj4+IDJdID4+PiAyNCAtIDggKiAoaiAlIDQpICYgMjU1OyBlLnB1c2goKGsgPj4+IDQpLnRvU3RyaW5nKDE2KSk7IGUucHVzaCgoayAmIDE1KS50b1N0cmluZygxNikpIH0gcmV0dXJuIGUuam9pbihcIlwiKSB9LCBwYXJzZTogZnVuY3Rpb24gKGEpIHtcclxuICAgICAgZm9yICh2YXIgYyA9IGEubGVuZ3RoLCBlID0gW10sIGogPSAwOyBqIDwgYzsgaiArPSAyKWVbaiA+Pj4gM10gfD0gcGFyc2VJbnQoYS5zdWJzdHIoaixcclxuICAgICAgICAyKSwgMTYpIDw8IDI0IC0gNCAqIChqICUgOCk7IHJldHVybiBuZXcgci5pbml0KGUsIGMgLyAyKVxyXG4gICAgfVxyXG4gIH0sIGIgPSB3LkxhdGluMSA9IHsgc3RyaW5naWZ5OiBmdW5jdGlvbiAoYSkgeyB2YXIgYyA9IGEud29yZHM7IGEgPSBhLnNpZ0J5dGVzOyBmb3IgKHZhciBlID0gW10sIGogPSAwOyBqIDwgYTsgaisrKWUucHVzaChTdHJpbmcuZnJvbUNoYXJDb2RlKGNbaiA+Pj4gMl0gPj4+IDI0IC0gOCAqIChqICUgNCkgJiAyNTUpKTsgcmV0dXJuIGUuam9pbihcIlwiKSB9LCBwYXJzZTogZnVuY3Rpb24gKGEpIHsgZm9yICh2YXIgYyA9IGEubGVuZ3RoLCBlID0gW10sIGogPSAwOyBqIDwgYzsgaisrKWVbaiA+Pj4gMl0gfD0gKGEuY2hhckNvZGVBdChqKSAmIDI1NSkgPDwgMjQgLSA4ICogKGogJSA0KTsgcmV0dXJuIG5ldyByLmluaXQoZSwgYykgfSB9LCB4ID0gdy5VdGY4ID0geyBzdHJpbmdpZnk6IGZ1bmN0aW9uIChhKSB7IHRyeSB7IHJldHVybiBkZWNvZGVVUklDb21wb25lbnQoZXNjYXBlKGIuc3RyaW5naWZ5KGEpKSkgfSBjYXRjaCAoYykgeyB0aHJvdyBFcnJvcihcIk1hbGZvcm1lZCBVVEYtOCBkYXRhXCIpOyB9IH0sIHBhcnNlOiBmdW5jdGlvbiAoYSkgeyByZXR1cm4gYi5wYXJzZSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoYSkpKSB9IH0sXHJcbiAgcSA9IGwuQnVmZmVyZWRCbG9ja0FsZ29yaXRobSA9IHQuZXh0ZW5kKHtcclxuICAgIHJlc2V0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX2RhdGEgPSBuZXcgci5pbml0OyB0aGlzLl9uRGF0YUJ5dGVzID0gMCB9LCBfYXBwZW5kOiBmdW5jdGlvbiAoYSkgeyBcInN0cmluZ1wiID09IHR5cGVvZiBhICYmIChhID0geC5wYXJzZShhKSk7IHRoaXMuX2RhdGEuY29uY2F0KGEpOyB0aGlzLl9uRGF0YUJ5dGVzICs9IGEuc2lnQnl0ZXMgfSwgX3Byb2Nlc3M6IGZ1bmN0aW9uIChhKSB7IHZhciBjID0gdGhpcy5fZGF0YSwgZSA9IGMud29yZHMsIGogPSBjLnNpZ0J5dGVzLCBrID0gdGhpcy5ibG9ja1NpemUsIGIgPSBqIC8gKDQgKiBrKSwgYiA9IGEgPyB1LmNlaWwoYikgOiB1Lm1heCgoYiB8IDApIC0gdGhpcy5fbWluQnVmZmVyU2l6ZSwgMCk7IGEgPSBiICogazsgaiA9IHUubWluKDQgKiBhLCBqKTsgaWYgKGEpIHsgZm9yICh2YXIgcSA9IDA7IHEgPCBhOyBxICs9IGspdGhpcy5fZG9Qcm9jZXNzQmxvY2soZSwgcSk7IHEgPSBlLnNwbGljZSgwLCBhKTsgYy5zaWdCeXRlcyAtPSBqIH0gcmV0dXJuIG5ldyByLmluaXQocSwgaikgfSwgY2xvbmU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgdmFyIGEgPSB0LmNsb25lLmNhbGwodGhpcyk7XHJcbiAgICAgIGEuX2RhdGEgPSB0aGlzLl9kYXRhLmNsb25lKCk7IHJldHVybiBhXHJcbiAgICB9LCBfbWluQnVmZmVyU2l6ZTogMFxyXG4gIH0pOyBsLkhhc2hlciA9IHEuZXh0ZW5kKHtcclxuICAgIGNmZzogdC5leHRlbmQoKSwgaW5pdDogZnVuY3Rpb24gKGEpIHsgdGhpcy5jZmcgPSB0aGlzLmNmZy5leHRlbmQoYSk7IHRoaXMucmVzZXQoKSB9LCByZXNldDogZnVuY3Rpb24gKCkgeyBxLnJlc2V0LmNhbGwodGhpcyk7IHRoaXMuX2RvUmVzZXQoKSB9LCB1cGRhdGU6IGZ1bmN0aW9uIChhKSB7IHRoaXMuX2FwcGVuZChhKTsgdGhpcy5fcHJvY2VzcygpOyByZXR1cm4gdGhpcyB9LCBmaW5hbGl6ZTogZnVuY3Rpb24gKGEpIHsgYSAmJiB0aGlzLl9hcHBlbmQoYSk7IHJldHVybiB0aGlzLl9kb0ZpbmFsaXplKCkgfSwgYmxvY2tTaXplOiAxNiwgX2NyZWF0ZUhlbHBlcjogZnVuY3Rpb24gKGEpIHsgcmV0dXJuIGZ1bmN0aW9uIChiLCBlKSB7IHJldHVybiAobmV3IGEuaW5pdChlKSkuZmluYWxpemUoYikgfSB9LCBfY3JlYXRlSG1hY0hlbHBlcjogZnVuY3Rpb24gKGEpIHtcclxuICAgICAgcmV0dXJuIGZ1bmN0aW9uIChiLCBlKSB7XHJcbiAgICAgICAgcmV0dXJuIChuZXcgbi5ITUFDLmluaXQoYSxcclxuICAgICAgICAgIGUpKS5maW5hbGl6ZShiKVxyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSk7IHZhciBuID0gZC5hbGdvID0ge307IHJldHVybiBkXHJcbn0oTWF0aCk7XHJcbihmdW5jdGlvbiAoKSB7XHJcbiAgdmFyIHUgPSBDcnlwdG9KUywgcCA9IHUubGliLldvcmRBcnJheTsgdS5lbmMuQmFzZTY0ID0ge1xyXG4gICAgc3RyaW5naWZ5OiBmdW5jdGlvbiAoZCkgeyB2YXIgbCA9IGQud29yZHMsIHAgPSBkLnNpZ0J5dGVzLCB0ID0gdGhpcy5fbWFwOyBkLmNsYW1wKCk7IGQgPSBbXTsgZm9yICh2YXIgciA9IDA7IHIgPCBwOyByICs9IDMpZm9yICh2YXIgdyA9IChsW3IgPj4+IDJdID4+PiAyNCAtIDggKiAociAlIDQpICYgMjU1KSA8PCAxNiB8IChsW3IgKyAxID4+PiAyXSA+Pj4gMjQgLSA4ICogKChyICsgMSkgJSA0KSAmIDI1NSkgPDwgOCB8IGxbciArIDIgPj4+IDJdID4+PiAyNCAtIDggKiAoKHIgKyAyKSAlIDQpICYgMjU1LCB2ID0gMDsgNCA+IHYgJiYgciArIDAuNzUgKiB2IDwgcDsgdisrKWQucHVzaCh0LmNoYXJBdCh3ID4+PiA2ICogKDMgLSB2KSAmIDYzKSk7IGlmIChsID0gdC5jaGFyQXQoNjQpKSBmb3IgKDsgZC5sZW5ndGggJSA0OylkLnB1c2gobCk7IHJldHVybiBkLmpvaW4oXCJcIikgfSwgcGFyc2U6IGZ1bmN0aW9uIChkKSB7XHJcbiAgICAgIHZhciBsID0gZC5sZW5ndGgsIHMgPSB0aGlzLl9tYXAsIHQgPSBzLmNoYXJBdCg2NCk7IHQgJiYgKHQgPSBkLmluZGV4T2YodCksIC0xICE9IHQgJiYgKGwgPSB0KSk7IGZvciAodmFyIHQgPSBbXSwgciA9IDAsIHcgPSAwOyB3IDxcclxuICAgICAgICBsOyB3KyspaWYgKHcgJSA0KSB7IHZhciB2ID0gcy5pbmRleE9mKGQuY2hhckF0KHcgLSAxKSkgPDwgMiAqICh3ICUgNCksIGIgPSBzLmluZGV4T2YoZC5jaGFyQXQodykpID4+PiA2IC0gMiAqICh3ICUgNCk7IHRbciA+Pj4gMl0gfD0gKHYgfCBiKSA8PCAyNCAtIDggKiAociAlIDQpOyByKysgfSByZXR1cm4gcC5jcmVhdGUodCwgcilcclxuICAgIH0sIF9tYXA6IFwiQUJDREVGR0hJSktMTU5PUFFSU1RVVldYWVphYmNkZWZnaGlqa2xtbm9wcXJzdHV2d3h5ejAxMjM0NTY3ODkrLz1cIlxyXG4gIH1cclxufSkoKTtcclxuKGZ1bmN0aW9uICh1KSB7XHJcbiAgZnVuY3Rpb24gcChiLCBuLCBhLCBjLCBlLCBqLCBrKSB7IGIgPSBiICsgKG4gJiBhIHwgfm4gJiBjKSArIGUgKyBrOyByZXR1cm4gKGIgPDwgaiB8IGIgPj4+IDMyIC0gaikgKyBuIH0gZnVuY3Rpb24gZChiLCBuLCBhLCBjLCBlLCBqLCBrKSB7IGIgPSBiICsgKG4gJiBjIHwgYSAmIH5jKSArIGUgKyBrOyByZXR1cm4gKGIgPDwgaiB8IGIgPj4+IDMyIC0gaikgKyBuIH0gZnVuY3Rpb24gbChiLCBuLCBhLCBjLCBlLCBqLCBrKSB7IGIgPSBiICsgKG4gXiBhIF4gYykgKyBlICsgazsgcmV0dXJuIChiIDw8IGogfCBiID4+PiAzMiAtIGopICsgbiB9IGZ1bmN0aW9uIHMoYiwgbiwgYSwgYywgZSwgaiwgaykgeyBiID0gYiArIChhIF4gKG4gfCB+YykpICsgZSArIGs7IHJldHVybiAoYiA8PCBqIHwgYiA+Pj4gMzIgLSBqKSArIG4gfSBmb3IgKHZhciB0ID0gQ3J5cHRvSlMsIHIgPSB0LmxpYiwgdyA9IHIuV29yZEFycmF5LCB2ID0gci5IYXNoZXIsIHIgPSB0LmFsZ28sIGIgPSBbXSwgeCA9IDA7IDY0ID4geDsgeCsrKWJbeF0gPSA0Mjk0OTY3Mjk2ICogdS5hYnModS5zaW4oeCArIDEpKSB8IDA7IHIgPSByLk1ENSA9IHYuZXh0ZW5kKHtcclxuICAgIF9kb1Jlc2V0OiBmdW5jdGlvbiAoKSB7IHRoaXMuX2hhc2ggPSBuZXcgdy5pbml0KFsxNzMyNTg0MTkzLCA0MDIzMjMzNDE3LCAyNTYyMzgzMTAyLCAyNzE3MzM4NzhdKSB9LFxyXG4gICAgX2RvUHJvY2Vzc0Jsb2NrOiBmdW5jdGlvbiAocSwgbikge1xyXG4gICAgICBmb3IgKHZhciBhID0gMDsgMTYgPiBhOyBhKyspIHsgdmFyIGMgPSBuICsgYSwgZSA9IHFbY107IHFbY10gPSAoZSA8PCA4IHwgZSA+Pj4gMjQpICYgMTY3MTE5MzUgfCAoZSA8PCAyNCB8IGUgPj4+IDgpICYgNDI3ODI1NTM2MCB9IHZhciBhID0gdGhpcy5faGFzaC53b3JkcywgYyA9IHFbbiArIDBdLCBlID0gcVtuICsgMV0sIGogPSBxW24gKyAyXSwgayA9IHFbbiArIDNdLCB6ID0gcVtuICsgNF0sIHIgPSBxW24gKyA1XSwgdCA9IHFbbiArIDZdLCB3ID0gcVtuICsgN10sIHYgPSBxW24gKyA4XSwgQSA9IHFbbiArIDldLCBCID0gcVtuICsgMTBdLCBDID0gcVtuICsgMTFdLCB1ID0gcVtuICsgMTJdLCBEID0gcVtuICsgMTNdLCBFID0gcVtuICsgMTRdLCB4ID0gcVtuICsgMTVdLCBmID0gYVswXSwgbSA9IGFbMV0sIGcgPSBhWzJdLCBoID0gYVszXSwgZiA9IHAoZiwgbSwgZywgaCwgYywgNywgYlswXSksIGggPSBwKGgsIGYsIG0sIGcsIGUsIDEyLCBiWzFdKSwgZyA9IHAoZywgaCwgZiwgbSwgaiwgMTcsIGJbMl0pLCBtID0gcChtLCBnLCBoLCBmLCBrLCAyMiwgYlszXSksIGYgPSBwKGYsIG0sIGcsIGgsIHosIDcsIGJbNF0pLCBoID0gcChoLCBmLCBtLCBnLCByLCAxMiwgYls1XSksIGcgPSBwKGcsIGgsIGYsIG0sIHQsIDE3LCBiWzZdKSwgbSA9IHAobSwgZywgaCwgZiwgdywgMjIsIGJbN10pLFxyXG4gICAgICAgIGYgPSBwKGYsIG0sIGcsIGgsIHYsIDcsIGJbOF0pLCBoID0gcChoLCBmLCBtLCBnLCBBLCAxMiwgYls5XSksIGcgPSBwKGcsIGgsIGYsIG0sIEIsIDE3LCBiWzEwXSksIG0gPSBwKG0sIGcsIGgsIGYsIEMsIDIyLCBiWzExXSksIGYgPSBwKGYsIG0sIGcsIGgsIHUsIDcsIGJbMTJdKSwgaCA9IHAoaCwgZiwgbSwgZywgRCwgMTIsIGJbMTNdKSwgZyA9IHAoZywgaCwgZiwgbSwgRSwgMTcsIGJbMTRdKSwgbSA9IHAobSwgZywgaCwgZiwgeCwgMjIsIGJbMTVdKSwgZiA9IGQoZiwgbSwgZywgaCwgZSwgNSwgYlsxNl0pLCBoID0gZChoLCBmLCBtLCBnLCB0LCA5LCBiWzE3XSksIGcgPSBkKGcsIGgsIGYsIG0sIEMsIDE0LCBiWzE4XSksIG0gPSBkKG0sIGcsIGgsIGYsIGMsIDIwLCBiWzE5XSksIGYgPSBkKGYsIG0sIGcsIGgsIHIsIDUsIGJbMjBdKSwgaCA9IGQoaCwgZiwgbSwgZywgQiwgOSwgYlsyMV0pLCBnID0gZChnLCBoLCBmLCBtLCB4LCAxNCwgYlsyMl0pLCBtID0gZChtLCBnLCBoLCBmLCB6LCAyMCwgYlsyM10pLCBmID0gZChmLCBtLCBnLCBoLCBBLCA1LCBiWzI0XSksIGggPSBkKGgsIGYsIG0sIGcsIEUsIDksIGJbMjVdKSwgZyA9IGQoZywgaCwgZiwgbSwgaywgMTQsIGJbMjZdKSwgbSA9IGQobSwgZywgaCwgZiwgdiwgMjAsIGJbMjddKSwgZiA9IGQoZiwgbSwgZywgaCwgRCwgNSwgYlsyOF0pLCBoID0gZChoLCBmLFxyXG4gICAgICAgICAgbSwgZywgaiwgOSwgYlsyOV0pLCBnID0gZChnLCBoLCBmLCBtLCB3LCAxNCwgYlszMF0pLCBtID0gZChtLCBnLCBoLCBmLCB1LCAyMCwgYlszMV0pLCBmID0gbChmLCBtLCBnLCBoLCByLCA0LCBiWzMyXSksIGggPSBsKGgsIGYsIG0sIGcsIHYsIDExLCBiWzMzXSksIGcgPSBsKGcsIGgsIGYsIG0sIEMsIDE2LCBiWzM0XSksIG0gPSBsKG0sIGcsIGgsIGYsIEUsIDIzLCBiWzM1XSksIGYgPSBsKGYsIG0sIGcsIGgsIGUsIDQsIGJbMzZdKSwgaCA9IGwoaCwgZiwgbSwgZywgeiwgMTEsIGJbMzddKSwgZyA9IGwoZywgaCwgZiwgbSwgdywgMTYsIGJbMzhdKSwgbSA9IGwobSwgZywgaCwgZiwgQiwgMjMsIGJbMzldKSwgZiA9IGwoZiwgbSwgZywgaCwgRCwgNCwgYls0MF0pLCBoID0gbChoLCBmLCBtLCBnLCBjLCAxMSwgYls0MV0pLCBnID0gbChnLCBoLCBmLCBtLCBrLCAxNiwgYls0Ml0pLCBtID0gbChtLCBnLCBoLCBmLCB0LCAyMywgYls0M10pLCBmID0gbChmLCBtLCBnLCBoLCBBLCA0LCBiWzQ0XSksIGggPSBsKGgsIGYsIG0sIGcsIHUsIDExLCBiWzQ1XSksIGcgPSBsKGcsIGgsIGYsIG0sIHgsIDE2LCBiWzQ2XSksIG0gPSBsKG0sIGcsIGgsIGYsIGosIDIzLCBiWzQ3XSksIGYgPSBzKGYsIG0sIGcsIGgsIGMsIDYsIGJbNDhdKSwgaCA9IHMoaCwgZiwgbSwgZywgdywgMTAsIGJbNDldKSwgZyA9IHMoZywgaCwgZiwgbSxcclxuICAgICAgICAgICAgRSwgMTUsIGJbNTBdKSwgbSA9IHMobSwgZywgaCwgZiwgciwgMjEsIGJbNTFdKSwgZiA9IHMoZiwgbSwgZywgaCwgdSwgNiwgYls1Ml0pLCBoID0gcyhoLCBmLCBtLCBnLCBrLCAxMCwgYls1M10pLCBnID0gcyhnLCBoLCBmLCBtLCBCLCAxNSwgYls1NF0pLCBtID0gcyhtLCBnLCBoLCBmLCBlLCAyMSwgYls1NV0pLCBmID0gcyhmLCBtLCBnLCBoLCB2LCA2LCBiWzU2XSksIGggPSBzKGgsIGYsIG0sIGcsIHgsIDEwLCBiWzU3XSksIGcgPSBzKGcsIGgsIGYsIG0sIHQsIDE1LCBiWzU4XSksIG0gPSBzKG0sIGcsIGgsIGYsIEQsIDIxLCBiWzU5XSksIGYgPSBzKGYsIG0sIGcsIGgsIHosIDYsIGJbNjBdKSwgaCA9IHMoaCwgZiwgbSwgZywgQywgMTAsIGJbNjFdKSwgZyA9IHMoZywgaCwgZiwgbSwgaiwgMTUsIGJbNjJdKSwgbSA9IHMobSwgZywgaCwgZiwgQSwgMjEsIGJbNjNdKTsgYVswXSA9IGFbMF0gKyBmIHwgMDsgYVsxXSA9IGFbMV0gKyBtIHwgMDsgYVsyXSA9IGFbMl0gKyBnIHwgMDsgYVszXSA9IGFbM10gKyBoIHwgMFxyXG4gICAgfSwgX2RvRmluYWxpemU6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgdmFyIGIgPSB0aGlzLl9kYXRhLCBuID0gYi53b3JkcywgYSA9IDggKiB0aGlzLl9uRGF0YUJ5dGVzLCBjID0gOCAqIGIuc2lnQnl0ZXM7IG5bYyA+Pj4gNV0gfD0gMTI4IDw8IDI0IC0gYyAlIDMyOyB2YXIgZSA9IHUuZmxvb3IoYSAvXHJcbiAgICAgICAgNDI5NDk2NzI5Nik7IG5bKGMgKyA2NCA+Pj4gOSA8PCA0KSArIDE1XSA9IChlIDw8IDggfCBlID4+PiAyNCkgJiAxNjcxMTkzNSB8IChlIDw8IDI0IHwgZSA+Pj4gOCkgJiA0Mjc4MjU1MzYwOyBuWyhjICsgNjQgPj4+IDkgPDwgNCkgKyAxNF0gPSAoYSA8PCA4IHwgYSA+Pj4gMjQpICYgMTY3MTE5MzUgfCAoYSA8PCAyNCB8IGEgPj4+IDgpICYgNDI3ODI1NTM2MDsgYi5zaWdCeXRlcyA9IDQgKiAobi5sZW5ndGggKyAxKTsgdGhpcy5fcHJvY2VzcygpOyBiID0gdGhpcy5faGFzaDsgbiA9IGIud29yZHM7IGZvciAoYSA9IDA7IDQgPiBhOyBhKyspYyA9IG5bYV0sIG5bYV0gPSAoYyA8PCA4IHwgYyA+Pj4gMjQpICYgMTY3MTE5MzUgfCAoYyA8PCAyNCB8IGMgPj4+IDgpICYgNDI3ODI1NTM2MDsgcmV0dXJuIGJcclxuICAgIH0sIGNsb25lOiBmdW5jdGlvbiAoKSB7IHZhciBiID0gdi5jbG9uZS5jYWxsKHRoaXMpOyBiLl9oYXNoID0gdGhpcy5faGFzaC5jbG9uZSgpOyByZXR1cm4gYiB9XHJcbiAgfSk7IHQuTUQ1ID0gdi5fY3JlYXRlSGVscGVyKHIpOyB0LkhtYWNNRDUgPSB2Ll9jcmVhdGVIbWFjSGVscGVyKHIpXHJcbn0pKE1hdGgpO1xyXG4oZnVuY3Rpb24gKCkge1xyXG4gIHZhciB1ID0gQ3J5cHRvSlMsIHAgPSB1LmxpYiwgZCA9IHAuQmFzZSwgbCA9IHAuV29yZEFycmF5LCBwID0gdS5hbGdvLCBzID0gcC5FdnBLREYgPSBkLmV4dGVuZCh7IGNmZzogZC5leHRlbmQoeyBrZXlTaXplOiA0LCBoYXNoZXI6IHAuTUQ1LCBpdGVyYXRpb25zOiAxIH0pLCBpbml0OiBmdW5jdGlvbiAoZCkgeyB0aGlzLmNmZyA9IHRoaXMuY2ZnLmV4dGVuZChkKSB9LCBjb21wdXRlOiBmdW5jdGlvbiAoZCwgcikgeyBmb3IgKHZhciBwID0gdGhpcy5jZmcsIHMgPSBwLmhhc2hlci5jcmVhdGUoKSwgYiA9IGwuY3JlYXRlKCksIHUgPSBiLndvcmRzLCBxID0gcC5rZXlTaXplLCBwID0gcC5pdGVyYXRpb25zOyB1Lmxlbmd0aCA8IHE7KSB7IG4gJiYgcy51cGRhdGUobik7IHZhciBuID0gcy51cGRhdGUoZCkuZmluYWxpemUocik7IHMucmVzZXQoKTsgZm9yICh2YXIgYSA9IDE7IGEgPCBwOyBhKyspbiA9IHMuZmluYWxpemUobiksIHMucmVzZXQoKTsgYi5jb25jYXQobikgfSBiLnNpZ0J5dGVzID0gNCAqIHE7IHJldHVybiBiIH0gfSk7IHUuRXZwS0RGID0gZnVuY3Rpb24gKGQsIGwsIHApIHtcclxuICAgIHJldHVybiBzLmNyZWF0ZShwKS5jb21wdXRlKGQsXHJcbiAgICAgIGwpXHJcbiAgfVxyXG59KSgpO1xyXG5DcnlwdG9KUy5saWIuQ2lwaGVyIHx8IGZ1bmN0aW9uICh1KSB7XHJcbiAgdmFyIHAgPSBDcnlwdG9KUywgZCA9IHAubGliLCBsID0gZC5CYXNlLCBzID0gZC5Xb3JkQXJyYXksIHQgPSBkLkJ1ZmZlcmVkQmxvY2tBbGdvcml0aG0sIHIgPSBwLmVuYy5CYXNlNjQsIHcgPSBwLmFsZ28uRXZwS0RGLCB2ID0gZC5DaXBoZXIgPSB0LmV4dGVuZCh7XHJcbiAgICBjZmc6IGwuZXh0ZW5kKCksIGNyZWF0ZUVuY3J5cHRvcjogZnVuY3Rpb24gKGUsIGEpIHsgcmV0dXJuIHRoaXMuY3JlYXRlKHRoaXMuX0VOQ19YRk9STV9NT0RFLCBlLCBhKSB9LCBjcmVhdGVEZWNyeXB0b3I6IGZ1bmN0aW9uIChlLCBhKSB7IHJldHVybiB0aGlzLmNyZWF0ZSh0aGlzLl9ERUNfWEZPUk1fTU9ERSwgZSwgYSkgfSwgaW5pdDogZnVuY3Rpb24gKGUsIGEsIGIpIHsgdGhpcy5jZmcgPSB0aGlzLmNmZy5leHRlbmQoYik7IHRoaXMuX3hmb3JtTW9kZSA9IGU7IHRoaXMuX2tleSA9IGE7IHRoaXMucmVzZXQoKSB9LCByZXNldDogZnVuY3Rpb24gKCkgeyB0LnJlc2V0LmNhbGwodGhpcyk7IHRoaXMuX2RvUmVzZXQoKSB9LCBwcm9jZXNzOiBmdW5jdGlvbiAoZSkgeyB0aGlzLl9hcHBlbmQoZSk7IHJldHVybiB0aGlzLl9wcm9jZXNzKCkgfSxcclxuICAgIGZpbmFsaXplOiBmdW5jdGlvbiAoZSkgeyBlICYmIHRoaXMuX2FwcGVuZChlKTsgcmV0dXJuIHRoaXMuX2RvRmluYWxpemUoKSB9LCBrZXlTaXplOiA0LCBpdlNpemU6IDQsIF9FTkNfWEZPUk1fTU9ERTogMSwgX0RFQ19YRk9STV9NT0RFOiAyLCBfY3JlYXRlSGVscGVyOiBmdW5jdGlvbiAoZSkgeyByZXR1cm4geyBlbmNyeXB0OiBmdW5jdGlvbiAoYiwgaywgZCkgeyByZXR1cm4gKFwic3RyaW5nXCIgPT0gdHlwZW9mIGsgPyBjIDogYSkuZW5jcnlwdChlLCBiLCBrLCBkKSB9LCBkZWNyeXB0OiBmdW5jdGlvbiAoYiwgaywgZCkgeyByZXR1cm4gKFwic3RyaW5nXCIgPT0gdHlwZW9mIGsgPyBjIDogYSkuZGVjcnlwdChlLCBiLCBrLCBkKSB9IH0gfVxyXG4gIH0pOyBkLlN0cmVhbUNpcGhlciA9IHYuZXh0ZW5kKHsgX2RvRmluYWxpemU6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXMuX3Byb2Nlc3MoITApIH0sIGJsb2NrU2l6ZTogMSB9KTsgdmFyIGIgPSBwLm1vZGUgPSB7fSwgeCA9IGZ1bmN0aW9uIChlLCBhLCBiKSB7XHJcbiAgICB2YXIgYyA9IHRoaXMuX2l2OyBjID8gdGhpcy5faXYgPSB1IDogYyA9IHRoaXMuX3ByZXZCbG9jazsgZm9yICh2YXIgZCA9IDA7IGQgPCBiOyBkKyspZVthICsgZF0gXj1cclxuICAgICAgY1tkXVxyXG4gIH0sIHEgPSAoZC5CbG9ja0NpcGhlck1vZGUgPSBsLmV4dGVuZCh7IGNyZWF0ZUVuY3J5cHRvcjogZnVuY3Rpb24gKGUsIGEpIHsgcmV0dXJuIHRoaXMuRW5jcnlwdG9yLmNyZWF0ZShlLCBhKSB9LCBjcmVhdGVEZWNyeXB0b3I6IGZ1bmN0aW9uIChlLCBhKSB7IHJldHVybiB0aGlzLkRlY3J5cHRvci5jcmVhdGUoZSwgYSkgfSwgaW5pdDogZnVuY3Rpb24gKGUsIGEpIHsgdGhpcy5fY2lwaGVyID0gZTsgdGhpcy5faXYgPSBhIH0gfSkpLmV4dGVuZCgpOyBxLkVuY3J5cHRvciA9IHEuZXh0ZW5kKHsgcHJvY2Vzc0Jsb2NrOiBmdW5jdGlvbiAoZSwgYSkgeyB2YXIgYiA9IHRoaXMuX2NpcGhlciwgYyA9IGIuYmxvY2tTaXplOyB4LmNhbGwodGhpcywgZSwgYSwgYyk7IGIuZW5jcnlwdEJsb2NrKGUsIGEpOyB0aGlzLl9wcmV2QmxvY2sgPSBlLnNsaWNlKGEsIGEgKyBjKSB9IH0pOyBxLkRlY3J5cHRvciA9IHEuZXh0ZW5kKHtcclxuICAgIHByb2Nlc3NCbG9jazogZnVuY3Rpb24gKGUsIGEpIHtcclxuICAgICAgdmFyIGIgPSB0aGlzLl9jaXBoZXIsIGMgPSBiLmJsb2NrU2l6ZSwgZCA9IGUuc2xpY2UoYSwgYSArIGMpOyBiLmRlY3J5cHRCbG9jayhlLCBhKTsgeC5jYWxsKHRoaXMsXHJcbiAgICAgICAgZSwgYSwgYyk7IHRoaXMuX3ByZXZCbG9jayA9IGRcclxuICAgIH1cclxuICB9KTsgYiA9IGIuQ0JDID0gcTsgcSA9IChwLnBhZCA9IHt9KS5Qa2NzNyA9IHsgcGFkOiBmdW5jdGlvbiAoYSwgYikgeyBmb3IgKHZhciBjID0gNCAqIGIsIGMgPSBjIC0gYS5zaWdCeXRlcyAlIGMsIGQgPSBjIDw8IDI0IHwgYyA8PCAxNiB8IGMgPDwgOCB8IGMsIGwgPSBbXSwgbiA9IDA7IG4gPCBjOyBuICs9IDQpbC5wdXNoKGQpOyBjID0gcy5jcmVhdGUobCwgYyk7IGEuY29uY2F0KGMpIH0sIHVucGFkOiBmdW5jdGlvbiAoYSkgeyBhLnNpZ0J5dGVzIC09IGEud29yZHNbYS5zaWdCeXRlcyAtIDEgPj4+IDJdICYgMjU1IH0gfTsgZC5CbG9ja0NpcGhlciA9IHYuZXh0ZW5kKHtcclxuICAgIGNmZzogdi5jZmcuZXh0ZW5kKHsgbW9kZTogYiwgcGFkZGluZzogcSB9KSwgcmVzZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgdi5yZXNldC5jYWxsKHRoaXMpOyB2YXIgYSA9IHRoaXMuY2ZnLCBiID0gYS5pdiwgYSA9IGEubW9kZTsgaWYgKHRoaXMuX3hmb3JtTW9kZSA9PSB0aGlzLl9FTkNfWEZPUk1fTU9ERSkgdmFyIGMgPSBhLmNyZWF0ZUVuY3J5cHRvcjsgZWxzZSBjID0gYS5jcmVhdGVEZWNyeXB0b3IsIHRoaXMuX21pbkJ1ZmZlclNpemUgPSAxOyB0aGlzLl9tb2RlID0gYy5jYWxsKGEsXHJcbiAgICAgICAgdGhpcywgYiAmJiBiLndvcmRzKVxyXG4gICAgfSwgX2RvUHJvY2Vzc0Jsb2NrOiBmdW5jdGlvbiAoYSwgYikgeyB0aGlzLl9tb2RlLnByb2Nlc3NCbG9jayhhLCBiKSB9LCBfZG9GaW5hbGl6ZTogZnVuY3Rpb24gKCkgeyB2YXIgYSA9IHRoaXMuY2ZnLnBhZGRpbmc7IGlmICh0aGlzLl94Zm9ybU1vZGUgPT0gdGhpcy5fRU5DX1hGT1JNX01PREUpIHsgYS5wYWQodGhpcy5fZGF0YSwgdGhpcy5ibG9ja1NpemUpOyB2YXIgYiA9IHRoaXMuX3Byb2Nlc3MoITApIH0gZWxzZSBiID0gdGhpcy5fcHJvY2VzcyghMCksIGEudW5wYWQoYik7IHJldHVybiBiIH0sIGJsb2NrU2l6ZTogNFxyXG4gIH0pOyB2YXIgbiA9IGQuQ2lwaGVyUGFyYW1zID0gbC5leHRlbmQoeyBpbml0OiBmdW5jdGlvbiAoYSkgeyB0aGlzLm1peEluKGEpIH0sIHRvU3RyaW5nOiBmdW5jdGlvbiAoYSkgeyByZXR1cm4gKGEgfHwgdGhpcy5mb3JtYXR0ZXIpLnN0cmluZ2lmeSh0aGlzKSB9IH0pLCBiID0gKHAuZm9ybWF0ID0ge30pLk9wZW5TU0wgPSB7XHJcbiAgICBzdHJpbmdpZnk6IGZ1bmN0aW9uIChhKSB7XHJcbiAgICAgIHZhciBiID0gYS5jaXBoZXJ0ZXh0OyBhID0gYS5zYWx0OyByZXR1cm4gKGEgPyBzLmNyZWF0ZShbMTM5ODg5MzY4NCxcclxuICAgICAgICAxNzAxMDc2ODMxXSkuY29uY2F0KGEpLmNvbmNhdChiKSA6IGIpLnRvU3RyaW5nKHIpXHJcbiAgICB9LCBwYXJzZTogZnVuY3Rpb24gKGEpIHsgYSA9IHIucGFyc2UoYSk7IHZhciBiID0gYS53b3JkczsgaWYgKDEzOTg4OTM2ODQgPT0gYlswXSAmJiAxNzAxMDc2ODMxID09IGJbMV0pIHsgdmFyIGMgPSBzLmNyZWF0ZShiLnNsaWNlKDIsIDQpKTsgYi5zcGxpY2UoMCwgNCk7IGEuc2lnQnl0ZXMgLT0gMTYgfSByZXR1cm4gbi5jcmVhdGUoeyBjaXBoZXJ0ZXh0OiBhLCBzYWx0OiBjIH0pIH1cclxuICB9LCBhID0gZC5TZXJpYWxpemFibGVDaXBoZXIgPSBsLmV4dGVuZCh7XHJcbiAgICBjZmc6IGwuZXh0ZW5kKHsgZm9ybWF0OiBiIH0pLCBlbmNyeXB0OiBmdW5jdGlvbiAoYSwgYiwgYywgZCkgeyBkID0gdGhpcy5jZmcuZXh0ZW5kKGQpOyB2YXIgbCA9IGEuY3JlYXRlRW5jcnlwdG9yKGMsIGQpOyBiID0gbC5maW5hbGl6ZShiKTsgbCA9IGwuY2ZnOyByZXR1cm4gbi5jcmVhdGUoeyBjaXBoZXJ0ZXh0OiBiLCBrZXk6IGMsIGl2OiBsLml2LCBhbGdvcml0aG06IGEsIG1vZGU6IGwubW9kZSwgcGFkZGluZzogbC5wYWRkaW5nLCBibG9ja1NpemU6IGEuYmxvY2tTaXplLCBmb3JtYXR0ZXI6IGQuZm9ybWF0IH0pIH0sXHJcbiAgICBkZWNyeXB0OiBmdW5jdGlvbiAoYSwgYiwgYywgZCkgeyBkID0gdGhpcy5jZmcuZXh0ZW5kKGQpOyBiID0gdGhpcy5fcGFyc2UoYiwgZC5mb3JtYXQpOyByZXR1cm4gYS5jcmVhdGVEZWNyeXB0b3IoYywgZCkuZmluYWxpemUoYi5jaXBoZXJ0ZXh0KSB9LCBfcGFyc2U6IGZ1bmN0aW9uIChhLCBiKSB7IHJldHVybiBcInN0cmluZ1wiID09IHR5cGVvZiBhID8gYi5wYXJzZShhLCB0aGlzKSA6IGEgfVxyXG4gIH0pLCBwID0gKHAua2RmID0ge30pLk9wZW5TU0wgPSB7IGV4ZWN1dGU6IGZ1bmN0aW9uIChhLCBiLCBjLCBkKSB7IGQgfHwgKGQgPSBzLnJhbmRvbSg4KSk7IGEgPSB3LmNyZWF0ZSh7IGtleVNpemU6IGIgKyBjIH0pLmNvbXB1dGUoYSwgZCk7IGMgPSBzLmNyZWF0ZShhLndvcmRzLnNsaWNlKGIpLCA0ICogYyk7IGEuc2lnQnl0ZXMgPSA0ICogYjsgcmV0dXJuIG4uY3JlYXRlKHsga2V5OiBhLCBpdjogYywgc2FsdDogZCB9KSB9IH0sIGMgPSBkLlBhc3N3b3JkQmFzZWRDaXBoZXIgPSBhLmV4dGVuZCh7XHJcbiAgICBjZmc6IGEuY2ZnLmV4dGVuZCh7IGtkZjogcCB9KSwgZW5jcnlwdDogZnVuY3Rpb24gKGIsIGMsIGQsIGwpIHtcclxuICAgICAgbCA9IHRoaXMuY2ZnLmV4dGVuZChsKTsgZCA9IGwua2RmLmV4ZWN1dGUoZCxcclxuICAgICAgICBiLmtleVNpemUsIGIuaXZTaXplKTsgbC5pdiA9IGQuaXY7IGIgPSBhLmVuY3J5cHQuY2FsbCh0aGlzLCBiLCBjLCBkLmtleSwgbCk7IGIubWl4SW4oZCk7IHJldHVybiBiXHJcbiAgICB9LCBkZWNyeXB0OiBmdW5jdGlvbiAoYiwgYywgZCwgbCkgeyBsID0gdGhpcy5jZmcuZXh0ZW5kKGwpOyBjID0gdGhpcy5fcGFyc2UoYywgbC5mb3JtYXQpOyBkID0gbC5rZGYuZXhlY3V0ZShkLCBiLmtleVNpemUsIGIuaXZTaXplLCBjLnNhbHQpOyBsLml2ID0gZC5pdjsgcmV0dXJuIGEuZGVjcnlwdC5jYWxsKHRoaXMsIGIsIGMsIGQua2V5LCBsKSB9XHJcbiAgfSlcclxufSgpO1xyXG4oZnVuY3Rpb24gKCkge1xyXG4gIGZvciAodmFyIHUgPSBDcnlwdG9KUywgcCA9IHUubGliLkJsb2NrQ2lwaGVyLCBkID0gdS5hbGdvLCBsID0gW10sIHMgPSBbXSwgdCA9IFtdLCByID0gW10sIHcgPSBbXSwgdiA9IFtdLCBiID0gW10sIHggPSBbXSwgcSA9IFtdLCBuID0gW10sIGEgPSBbXSwgYyA9IDA7IDI1NiA+IGM7IGMrKylhW2NdID0gMTI4ID4gYyA/IGMgPDwgMSA6IGMgPDwgMSBeIDI4MzsgZm9yICh2YXIgZSA9IDAsIGogPSAwLCBjID0gMDsgMjU2ID4gYzsgYysrKSB7IHZhciBrID0gaiBeIGogPDwgMSBeIGogPDwgMiBeIGogPDwgMyBeIGogPDwgNCwgayA9IGsgPj4+IDggXiBrICYgMjU1IF4gOTk7IGxbZV0gPSBrOyBzW2tdID0gZTsgdmFyIHogPSBhW2VdLCBGID0gYVt6XSwgRyA9IGFbRl0sIHkgPSAyNTcgKiBhW2tdIF4gMTY4NDMwMDggKiBrOyB0W2VdID0geSA8PCAyNCB8IHkgPj4+IDg7IHJbZV0gPSB5IDw8IDE2IHwgeSA+Pj4gMTY7IHdbZV0gPSB5IDw8IDggfCB5ID4+PiAyNDsgdltlXSA9IHk7IHkgPSAxNjg0MzAwOSAqIEcgXiA2NTUzNyAqIEYgXiAyNTcgKiB6IF4gMTY4NDMwMDggKiBlOyBiW2tdID0geSA8PCAyNCB8IHkgPj4+IDg7IHhba10gPSB5IDw8IDE2IHwgeSA+Pj4gMTY7IHFba10gPSB5IDw8IDggfCB5ID4+PiAyNDsgbltrXSA9IHk7IGUgPyAoZSA9IHogXiBhW2FbYVtHIF4gel1dXSwgaiBePSBhW2Fbal1dKSA6IGUgPSBqID0gMSB9IHZhciBIID0gWzAsIDEsIDIsIDQsIDgsXHJcbiAgICAxNiwgMzIsIDY0LCAxMjgsIDI3LCA1NF0sIGQgPSBkLkFFUyA9IHAuZXh0ZW5kKHtcclxuICAgICAgX2RvUmVzZXQ6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICBmb3IgKHZhciBhID0gdGhpcy5fa2V5LCBjID0gYS53b3JkcywgZCA9IGEuc2lnQnl0ZXMgLyA0LCBhID0gNCAqICgodGhpcy5fblJvdW5kcyA9IGQgKyA2KSArIDEpLCBlID0gdGhpcy5fa2V5U2NoZWR1bGUgPSBbXSwgaiA9IDA7IGogPCBhOyBqKyspaWYgKGogPCBkKSBlW2pdID0gY1tqXTsgZWxzZSB7IHZhciBrID0gZVtqIC0gMV07IGogJSBkID8gNiA8IGQgJiYgNCA9PSBqICUgZCAmJiAoayA9IGxbayA+Pj4gMjRdIDw8IDI0IHwgbFtrID4+PiAxNiAmIDI1NV0gPDwgMTYgfCBsW2sgPj4+IDggJiAyNTVdIDw8IDggfCBsW2sgJiAyNTVdKSA6IChrID0gayA8PCA4IHwgayA+Pj4gMjQsIGsgPSBsW2sgPj4+IDI0XSA8PCAyNCB8IGxbayA+Pj4gMTYgJiAyNTVdIDw8IDE2IHwgbFtrID4+PiA4ICYgMjU1XSA8PCA4IHwgbFtrICYgMjU1XSwgayBePSBIW2ogLyBkIHwgMF0gPDwgMjQpOyBlW2pdID0gZVtqIC0gZF0gXiBrIH0gYyA9IHRoaXMuX2ludktleVNjaGVkdWxlID0gW107IGZvciAoZCA9IDA7IGQgPCBhOyBkKyspaiA9IGEgLSBkLCBrID0gZCAlIDQgPyBlW2pdIDogZVtqIC0gNF0sIGNbZF0gPSA0ID4gZCB8fCA0ID49IGogPyBrIDogYltsW2sgPj4+IDI0XV0gXiB4W2xbayA+Pj4gMTYgJiAyNTVdXSBeIHFbbFtrID4+PlxyXG4gICAgICAgICAgOCAmIDI1NV1dIF4gbltsW2sgJiAyNTVdXVxyXG4gICAgICB9LCBlbmNyeXB0QmxvY2s6IGZ1bmN0aW9uIChhLCBiKSB7IHRoaXMuX2RvQ3J5cHRCbG9jayhhLCBiLCB0aGlzLl9rZXlTY2hlZHVsZSwgdCwgciwgdywgdiwgbCkgfSwgZGVjcnlwdEJsb2NrOiBmdW5jdGlvbiAoYSwgYykgeyB2YXIgZCA9IGFbYyArIDFdOyBhW2MgKyAxXSA9IGFbYyArIDNdOyBhW2MgKyAzXSA9IGQ7IHRoaXMuX2RvQ3J5cHRCbG9jayhhLCBjLCB0aGlzLl9pbnZLZXlTY2hlZHVsZSwgYiwgeCwgcSwgbiwgcyk7IGQgPSBhW2MgKyAxXTsgYVtjICsgMV0gPSBhW2MgKyAzXTsgYVtjICsgM10gPSBkIH0sIF9kb0NyeXB0QmxvY2s6IGZ1bmN0aW9uIChhLCBiLCBjLCBkLCBlLCBqLCBsLCBmKSB7XHJcbiAgICAgICAgZm9yICh2YXIgbSA9IHRoaXMuX25Sb3VuZHMsIGcgPSBhW2JdIF4gY1swXSwgaCA9IGFbYiArIDFdIF4gY1sxXSwgayA9IGFbYiArIDJdIF4gY1syXSwgbiA9IGFbYiArIDNdIF4gY1szXSwgcCA9IDQsIHIgPSAxOyByIDwgbTsgcisrKXZhciBxID0gZFtnID4+PiAyNF0gXiBlW2ggPj4+IDE2ICYgMjU1XSBeIGpbayA+Pj4gOCAmIDI1NV0gXiBsW24gJiAyNTVdIF4gY1twKytdLCBzID0gZFtoID4+PiAyNF0gXiBlW2sgPj4+IDE2ICYgMjU1XSBeIGpbbiA+Pj4gOCAmIDI1NV0gXiBsW2cgJiAyNTVdIF4gY1twKytdLCB0ID1cclxuICAgICAgICAgIGRbayA+Pj4gMjRdIF4gZVtuID4+PiAxNiAmIDI1NV0gXiBqW2cgPj4+IDggJiAyNTVdIF4gbFtoICYgMjU1XSBeIGNbcCsrXSwgbiA9IGRbbiA+Pj4gMjRdIF4gZVtnID4+PiAxNiAmIDI1NV0gXiBqW2ggPj4+IDggJiAyNTVdIF4gbFtrICYgMjU1XSBeIGNbcCsrXSwgZyA9IHEsIGggPSBzLCBrID0gdDsgcSA9IChmW2cgPj4+IDI0XSA8PCAyNCB8IGZbaCA+Pj4gMTYgJiAyNTVdIDw8IDE2IHwgZltrID4+PiA4ICYgMjU1XSA8PCA4IHwgZltuICYgMjU1XSkgXiBjW3ArK107IHMgPSAoZltoID4+PiAyNF0gPDwgMjQgfCBmW2sgPj4+IDE2ICYgMjU1XSA8PCAxNiB8IGZbbiA+Pj4gOCAmIDI1NV0gPDwgOCB8IGZbZyAmIDI1NV0pIF4gY1twKytdOyB0ID0gKGZbayA+Pj4gMjRdIDw8IDI0IHwgZltuID4+PiAxNiAmIDI1NV0gPDwgMTYgfCBmW2cgPj4+IDggJiAyNTVdIDw8IDggfCBmW2ggJiAyNTVdKSBeIGNbcCsrXTsgbiA9IChmW24gPj4+IDI0XSA8PCAyNCB8IGZbZyA+Pj4gMTYgJiAyNTVdIDw8IDE2IHwgZltoID4+PiA4ICYgMjU1XSA8PCA4IHwgZltrICYgMjU1XSkgXiBjW3ArK107IGFbYl0gPSBxOyBhW2IgKyAxXSA9IHM7IGFbYiArIDJdID0gdDsgYVtiICsgM10gPSBuXHJcbiAgICAgIH0sIGtleVNpemU6IDhcclxuICAgIH0pOyB1LkFFUyA9IHAuX2NyZWF0ZUhlbHBlcihkKVxyXG59KSgpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBDcnlwdG9KUzsiLCJpbXBvcnQgV1hBUElfY3NqYyBmcm9tIFwiLi9XWEFQSVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjIHtcclxuICAgIHByb3RlY3RlZCBzdGF0aWMgX2Jhbm5lckNhY2hlX2NzamM6IGFueSA9IHt9O1xyXG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfY3VyQmFubmVyX2NzamM6IGFueSA9IG51bGw7XHJcblxyXG4gICAgcHJvdGVjdGVkIHN0YXRpYyByZWFkb25seSBfcHJlTG9vcE9ial9jc2pjID0ge31cclxuXHJcbiAgICBwcm90ZWN0ZWQgc3RhdGljIHJlYWRvbmx5IF93eEJhbm5lcklkc19jc2pjOiBBcnJheTxzdHJpbmc+ID0gW1xyXG4gICAgICAgIFwiYWR1bml0LWI1NmYyMTA1MTUxYzhhZjRcIixcclxuICAgICAgICBcImFkdW5pdC1kYTc3OGUxOTI4NTllZWIyXCIsXHJcbiAgICAgICAgXCJhZHVuaXQtMDJmNGE1N2I3YzFhMzM0YVwiXHJcbiAgICAgICAgLy8gLFxyXG4gICAgICAgIC8vIFwiYWR1bml0LTJmODQ0MDcwMTY2NGM1MGFcIixcclxuICAgICAgICAvLyBcImFkdW5pdC0xODQ0NTVmM2Y4ZTc0Mjc3XCIsXHJcbiAgICBdXHJcblxyXG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfY3VyQmFubmVySWRfY3NqYzogc3RyaW5nID0gXCJcIjtcclxuICAgIHByb3RlY3RlZCBzdGF0aWMgX2Jhbm5lckluZGV4X2NzamM6IG51bWJlciA9IDA7XHJcblxyXG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfYmFubmVyRGVzdG9yeVRpbWU6IG51bWJlciA9IDA7XHJcblxyXG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfc3lzSW5mbzogYW55O1xyXG5cclxuICAgIHByb3RlY3RlZCBzdGF0aWMgZ2V0IEdldEJhbm5lcklkX2NzamMoKTogc3RyaW5nIHtcclxuICAgICAgICBpZiAodGhpcy5fd3hCYW5uZXJJZHNfY3NqYy5sZW5ndGggPT0gMCkgcmV0dXJuIFwiXCI7XHJcbiAgICAgICAgbGV0IGluZGV4ID0gdGhpcy5fYmFubmVySW5kZXhfY3NqYztcclxuICAgICAgICBpZiAodGhpcy5fYmFubmVySW5kZXhfY3NqYyA+IHRoaXMuX3d4QmFubmVySWRzX2NzamMubGVuZ3RoIC0gMSkge1xyXG4gICAgICAgICAgICB0aGlzLl9iYW5uZXJJbmRleF9jc2pjID0gMDtcclxuICAgICAgICAgICAgaW5kZXggPSB0aGlzLl9iYW5uZXJJbmRleF9jc2pjO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl9iYW5uZXJJbmRleF9jc2pjKys7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3d4QmFubmVySWRzX2NzamNbaW5kZXhdO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIHByZWxvYWRCYW5uZXJfY3NqYygpIHtcclxuICAgICAgICB2YXIgYmFubmVyVG9kYXlCYW5uZXJNYXggPSAxMDtcclxuICAgICAgICB2YXIgcHJlTG9hZEJhbm5lcnM6IEFycmF5PHN0cmluZz4gPSBuZXcgQXJyYXk8c3RyaW5nPigpO1xyXG4gICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fd3hCYW5uZXJJZHNfY3NqYy5sZW5ndGg7ICsraSkge1xyXG4gICAgICAgICAgICBwcmVMb2FkQmFubmVycy5wdXNoKHRoaXMuX3d4QmFubmVySWRzX2NzamNbaV0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAocHJlTG9hZEJhbm5lcnMubGVuZ3RoID4gYmFubmVyVG9kYXlCYW5uZXJNYXgpIHtcclxuICAgICAgICAgICAgdmFyIGRlbE51bSA9IHByZUxvYWRCYW5uZXJzLmxlbmd0aCAtIGJhbm5lclRvZGF5QmFubmVyTWF4O1xyXG4gICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGRlbE51bTsgKytpKSB7XHJcbiAgICAgICAgICAgICAgICBwcmVMb2FkQmFubmVycy5zcGxpY2UoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcHJlTG9hZEJhbm5lcnMubGVuZ3RoKSwgMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc29sZS5sb2coXCLlvIDlp4vpooTliJvlu7rlvq7kv6FCYW5uYWVyXCIsIHByZUxvYWRCYW5uZXJzKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIkJhbm5hZXIg5pyA5aSn5pWw6ZmQ5Yi2IO+8mlwiLCBiYW5uZXJUb2RheUJhbm5lck1heCk7XHJcbiAgICAgICAgdmFyIGNvdW50ZXIgPSAwO1xyXG4gICAgICAgIExheWEudGltZXIubG9vcCgyMDAwLCBDYWNoZWRXWEJhbm5lckFkX2NzamMuX3ByZUxvb3BPYmpfY3NqYywgKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoY291bnRlciA+PSBwcmVMb2FkQmFubmVycy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgIExheWEudGltZXIuY2xlYXJBbGwoQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLl9wcmVMb29wT2JqX2NzamMpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHZhciBiYW5uZXJpZCA9IHByZUxvYWRCYW5uZXJzW2NvdW50ZXJdO1xyXG4gICAgICAgICAgICB2YXIgYmFubmVyID0gQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLl9iYW5uZXJDYWNoZV9jc2pjW2Jhbm5lcmlkXTtcclxuICAgICAgICAgICAgaWYgKG51bGwgPT0gYmFubmVyKSB7XHJcbiAgICAgICAgICAgICAgICBiYW5uZXIgPSBDYWNoZWRXWEJhbm5lckFkX2NzamMuY3JlYXRlX2NzamMoYmFubmVyaWQpO1xyXG4gICAgICAgICAgICAgICAgaWYgKG51bGwgIT0gYmFubmVyKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLl9iYW5uZXJDYWNoZV9jc2pjW2Jhbm5lcmlkXSA9IGJhbm5lcjtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIumihOWIm+W7uuW+ruS/oUJhbm5hZXJcIiwgYmFubmVyaWQsIFwi5a6M5oiQXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICsrY291bnRlcjtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgc3RhdGljIGdldEJhbm5lcl9jc2pjKGJhbm5lcmlkOiBzdHJpbmcpOiBhbnkge1xyXG4gICAgICAgIGlmIChudWxsID09IGJhbm5lcmlkIHx8IFwiXCIgPT0gYmFubmVyaWQpXHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIHZhciBiYW5uZXIgPSBDYWNoZWRXWEJhbm5lckFkX2NzamMuX2Jhbm5lckNhY2hlX2NzamNbYmFubmVyaWRdO1xyXG4gICAgICAgIGlmIChudWxsID09IGJhbm5lcikge1xyXG4gICAgICAgICAgICBiYW5uZXIgPSBDYWNoZWRXWEJhbm5lckFkX2NzamMuY3JlYXRlX2NzamMoYmFubmVyaWQpO1xyXG4gICAgICAgICAgICBpZiAobnVsbCAhPSBiYW5uZXIpIHtcclxuICAgICAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5fYmFubmVyQ2FjaGVfY3NqY1tiYW5uZXJpZF0gPSBiYW5uZXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGJhbm5lclxyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBzdGF0aWMgY3JlYXRlX2NzamMoYmFubmVyaWQ6IHN0cmluZykge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fc3lzSW5mbyA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9zeXNJbmZvID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLmdldFN5c3RlbUluZm9TeW5jKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIHN3ID0gdGhpcy5fc3lzSW5mby5zY3JlZW5XaWR0aDtcclxuICAgICAgICAgICAgdmFyIHNoID0gdGhpcy5fc3lzSW5mby5zY3JlZW5IZWlnaHQ7XHJcbiAgICAgICAgICAgIHZhciBkcHIgPSBMYXlhLnN0YWdlLmhlaWdodCAvIHNoO1xyXG4gICAgICAgICAgICB2YXIgYmFubmVyID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLmNyZWF0ZUJhbm5lckFkKFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGFkVW5pdElkOiBiYW5uZXJpZCxcclxuICAgICAgICAgICAgICAgICAgICBhZEludGVydmFsczogMzAsXHJcbiAgICAgICAgICAgICAgICAgICAgc3R5bGU6XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IChzdyAtIDMwMCkgLyAyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdG9wOiBzaCAtIDExNSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAzMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIGlmIChiYW5uZXIpIHtcclxuICAgICAgICAgICAgICAgIGJhbm5lci5vbkxvYWQoKHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQ2FjaGVkV1hCYW5uZXIg5bm/5ZGKIOWKoOi9veWujOaIkFwiLCBiYW5uZXJpZCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgYmFubmVyLm9uRXJyb3IoKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQ2FjaGVkV1hCYW5uZXIg5bm/5ZGKIOWKoOi9veWksei0pVwiLCBiYW5uZXJpZCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgYmFubmVyLm9uUmVzaXplKHJlcyA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coYmFubmVyLnN0eWxlLnJlYWxXaWR0aCwgYmFubmVyLnN0eWxlLnJlYWxIZWlnaHQpXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBiYW5uZXI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBzaG93X2NzamMoc3R5bGU6IG51bWJlcikge1xyXG4gICAgICAgIGlmIChDYWNoZWRXWEJhbm5lckFkX2NzamMuX2N1ckJhbm5lcl9jc2pjICE9IG51bGwpIHtcclxuICAgICAgICAgICAgaWYgKHN0eWxlID09IC0xKSB7XHJcbiAgICAgICAgICAgICAgICBDYWNoZWRXWEJhbm5lckFkX2NzamMuX2N1ckJhbm5lcl9jc2pjLnN0eWxlLmxlZnQgPSAzNTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChzdHlsZSA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICBDYWNoZWRXWEJhbm5lckFkX2NzamMuX2N1ckJhbm5lcl9jc2pjLnN0eWxlLmxlZnQgPSB0aGlzLl9zeXNJbmZvLnNjcmVlbldpZHRoIC0gMzAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLl9jdXJCYW5uZXJfY3NqYy5zdHlsZS5sZWZ0ID0gKHRoaXMuX3N5c0luZm8uc2NyZWVuV2lkdGggLSAzMDApIC8gMjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBDYWNoZWRXWEJhbm5lckFkX2NzamMuX2N1ckJhbm5lcl9jc2pjLnNob3coKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJDYWNoZWRXWEJhbm5lciDlub/lkYrmmL7npLogYmFubmVyaWQg77yaIFwiLCB0aGlzLl9jdXJCYW5uZXJJZF9jc2pjKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2N1ckJhbm5lcklkX2NzamMgPSB0aGlzLkdldEJhbm5lcklkX2NzamM7XHJcbiAgICAgICAgICAgIHZhciBiYW5uZXIgPSBDYWNoZWRXWEJhbm5lckFkX2NzamMuZ2V0QmFubmVyX2NzamModGhpcy5fY3VyQmFubmVySWRfY3NqYyk7XHJcbiAgICAgICAgICAgIGlmIChiYW5uZXIpIHtcclxuICAgICAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5fY3VyQmFubmVyX2NzamMgPSBiYW5uZXI7XHJcbiAgICAgICAgICAgICAgICAvLyB2YXIgc3lzSW5mbyA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5nZXRTeXN0ZW1JbmZvU3luYygpO1xyXG4gICAgICAgICAgICAgICAgLy8gdmFyIHN3ID0gc3lzSW5mby5zY3JlZW5XaWR0aDtcclxuICAgICAgICAgICAgICAgIC8vIHZhciBzaCA9IHN5c0luZm8uc2NyZWVuSGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgLy8gQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLl9jdXJCYW5uZXJfY3NqYy5zdHlsZS50b3AgPSAoTGF5YS5zdGFnZS5oZWlnaHQgLSAyNDApIC8gTGF5YS5zdGFnZS5oZWlnaHQgKiBzaDtcclxuICAgICAgICAgICAgICAgIGlmIChzdHlsZSA9PSAtMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5fY3VyQmFubmVyX2NzamMuc3R5bGUubGVmdCA9IDM1O1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoc3R5bGUgPT0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5fY3VyQmFubmVyX2NzamMuc3R5bGUubGVmdCA9IHRoaXMuX3N5c0luZm8uc2NyZWVuV2lkdGggLSAzMDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBDYWNoZWRXWEJhbm5lckFkX2NzamMuX2N1ckJhbm5lcl9jc2pjLnN0eWxlLmxlZnQgPSAodGhpcy5fc3lzSW5mby5zY3JlZW5XaWR0aCAtIDMwMCkgLyAyO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLl9jdXJCYW5uZXJfY3NqYy5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkNhY2hlZFdYQmFubmVyIOW5v+WRiuaYvuekuiBiYW5uZXJpZCDvvJogXCIsIHRoaXMuX2N1ckJhbm5lcklkX2NzamMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJDYWNoZWRXWEJhbm5lciDkuI3lrZjlnKggYmFubmVyaWQg77yaIFwiLCB0aGlzLl9jdXJCYW5uZXJJZF9jc2pjKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBoaWRlX2NzamMoZGVzdHJveTogYm9vbGVhbiA9IHRydWUpIHtcclxuICAgICAgICBMYXlhLnRpbWVyLmNsZWFyQWxsKENhY2hlZFdYQmFubmVyQWRfY3NqYyk7XHJcbiAgICAgICAgaWYgKG51bGwgIT0gQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLl9jdXJCYW5uZXJfY3NqYykge1xyXG4gICAgICAgICAgICBsZXQgcmQgPSBNYXRoLnJhbmRvbSgpID4gTWF0aC5tYXgoMC41LCAodGhpcy5fYmFubmVyRGVzdG9yeVRpbWUgLyAxNSkpO1xyXG4gICAgICAgICAgICBpZiAocmQgJiYgZGVzdHJveSkge1xyXG4gICAgICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLl9jdXJCYW5uZXJfY3NqYy5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgICAgICBsZXQgYmFubmVyID0gdGhpcy5jcmVhdGVfY3NqYyh0aGlzLl9jdXJCYW5uZXJJZF9jc2pjKTtcclxuICAgICAgICAgICAgICAgIGlmIChudWxsICE9IGJhbm5lcikge1xyXG4gICAgICAgICAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5fYmFubmVyQ2FjaGVfY3NqY1t0aGlzLl9jdXJCYW5uZXJJZF9jc2pjXSA9IGJhbm5lcjtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuW8gOWni+makOiXj+mUgOavgemHjeaWsOWIm+W7uuW+ruS/oUJhbm5hZXJcIiwgdGhpcy5fY3VyQmFubmVySWRfY3NqYyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9iYW5uZXJEZXN0b3J5VGltZSsrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLl9jdXJCYW5uZXJfY3NqYy5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIkNhY2hlZFdYQmFubmVyIOW5v+WRiuWNlee6r+makOiXjyBiYW5uZXJpZCDvvJogXCIsIHRoaXMuX2N1ckJhbm5lcklkX2NzamMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5fY3VyQmFubmVyX2NzamMgPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGNoYW5nZVNob3dfY3NqYyhzdHlsZSwgZGVzdHJveTogYm9vbGVhbiA9IHRydWUpIHtcclxuICAgICAgICBpZiAobnVsbCAhPSBDYWNoZWRXWEJhbm5lckFkX2NzamMuX2N1ckJhbm5lcl9jc2pjKSB7XHJcbiAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5fY3VyQmFubmVyX2NzamMuaGlkZShkZXN0cm95KTtcclxuICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLl9jdXJCYW5uZXJfY3NqYyA9IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5zaG93X2NzamMoc3R5bGUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIHB1YmxpYyBzdGF0aWMgY2hhbmdlU2hvd19jc2pjKHN0eWxlOiBudW1iZXIsIGRlc3Ryb3k6IGJvb2xlYW4gPSB0cnVlKSB7XHJcbiAgICAvLyAgICAgY29uc29sZS5sb2coXCJDYWNoZWRXWEJhbm5lciDlub/lkYrliIfmjaJcIik7XHJcbiAgICAvLyAgICAgdGhpcy5oaWRlX2NzamMoZGVzdHJveSk7XHJcbiAgICAvLyAgICAgdGhpcy5fY3VyQmFubmVySWRfY3NqYyA9IHRoaXMuR2V0QmFubmVySWRfY3NqYztcclxuICAgIC8vICAgICBjb25zb2xlLmxvZygxMTExMTExMTExMTExMTExMTExMTExKTtcclxuICAgIC8vICAgICBjb25zb2xlLmxvZyh0aGlzLl9jdXJCYW5uZXJJZF9jc2pjKTtcclxuICAgIC8vICAgICBjb25zb2xlLmxvZyh0aGlzLmdldEJhbm5lcl9jc2pjKHRoaXMuX2N1ckJhbm5lcl9jc2pjKSk7XHJcbiAgICAvLyAgICAgdmFyIGJhbm5lciA9IENhY2hlZFdYQmFubmVyQWRfY3NqYy5nZXRCYW5uZXJfY3NqYyh0aGlzLl9jdXJCYW5uZXJJZF9jc2pjKTtcclxuICAgIC8vICAgICBDYWNoZWRXWEJhbm5lckFkX2NzamMuX2N1ckJhbm5lcl9jc2pjID0gYmFubmVyO1xyXG4gICAgLy8gICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5zaG93X2NzamMoc3R5bGUpO1xyXG4gICAgLy8gICAgIHRoaXMucHJlbG9hZE5leHQoKTtcclxuICAgIC8vICAgICBjb25zb2xlLmxvZygyMjIyMjIyMjIyMjIyKTtcclxuICAgIC8vICAgICBjb25zb2xlLmxvZyh0aGlzLl9jdXJCYW5uZXJJZF9jc2pjKTtcclxuICAgIC8vICAgICBjb25zb2xlLmxvZyh0aGlzLmdldEJhbm5lcl9jc2pjKHRoaXMuX2N1ckJhbm5lcl9jc2pjKSk7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBjbGVhcl9jc2pjKCkge1xyXG4gICAgICAgIExheWEudGltZXIuY2xlYXJBbGwoQ2FjaGVkV1hCYW5uZXJBZF9jc2pjKTtcclxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLl9iYW5uZXJDYWNoZV9jc2pjKSB7XHJcbiAgICAgICAgICAgIHZhciBiYW5uZXIgPSBDYWNoZWRXWEJhbm5lckFkX2NzamMuX2Jhbm5lckNhY2hlX2NzamNba2V5XTtcclxuICAgICAgICAgICAgaWYgKG51bGwgIT0gYmFubmVyKSB7XHJcbiAgICAgICAgICAgICAgICBiYW5uZXIuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5fYmFubmVyQ2FjaGVfY3NqY1trZXldID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgSHR0cFVuaXRfY3NqYyBmcm9tIFwiLi4vTmV0L0h0dHBVbml0XCI7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgT1BQT0FQSV9jc2pjIHtcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgYXBwSWRfY3NqYyA9IFwiMzAyNjM0NDZcIjtcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgYWRVbml0SWRfY3NqYyA9IFwiMjU4MzEyXCI7XHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IGJhbm5lckFkVW5pdElkX2NzamMgPSBcIjI1ODMwNlwiO1xyXG4gICAgLy8gcHVibGljIHN0YXRpYyByZWFkb25seSBpbnNBZFVuaXRJZF9jc2pjID0gXCJcIjtcclxuICAgIC8vIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgb3BlblNjcmVlbkFkVW5pdElkX2NzamMgPSBcIjE3Njk0NFwiO1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBuYXRpdmVBZElkX2NzamMgPSBcIjI1ODMwOFwiXHJcblxyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBuYXRpdmVBZExpc3RfY3NqYyA9IFtcclxuICAgICAgICBcIjI1ODMwOFwiLFxyXG4gICAgICAgIFwiMjU4MzA5XCIsXHJcbiAgICAgICAgXCIyNTgzMTBcIixcclxuICAgIF1cclxuXHJcbiAgICBwcml2YXRlIHN0YXRpYyBuYXRpdmVJbmRleCA9IDA7XHJcbiAgICBwdWJsaWMgc3RhdGljIGdldCBHZXROYXRpdmVBZF9jc2pjKCk6IHN0cmluZyB7XHJcbiAgICAgICAgT1BQT0FQSV9jc2pjLm5hdGl2ZUluZGV4Kys7XHJcbiAgICAgICAgaWYgKE9QUE9BUElfY3NqYy5uYXRpdmVJbmRleCA+IE9QUE9BUElfY3NqYy5uYXRpdmVBZExpc3RfY3NqYy5sZW5ndGggLSAxKSB7XHJcbiAgICAgICAgICAgIE9QUE9BUElfY3NqYy5uYXRpdmVJbmRleCA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnNvbGUubG9nKFwi5ou/5Y+W5Y6f55Sf6L+U5ZueSWTvvJogXCIsIE9QUE9BUElfY3NqYy5uYXRpdmVBZExpc3RfY3NqY1tPUFBPQVBJX2NzamMubmF0aXZlSW5kZXhdKTtcclxuICAgICAgICByZXR1cm4gT1BQT0FQSV9jc2pjLm5hdGl2ZUFkTGlzdF9jc2pjW09QUE9BUElfY3NqYy5uYXRpdmVJbmRleF07XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgc3RhdGljIGdldCBCYW5uZXJJbnN0YW5jZV9jc2pjKCkge1xyXG4gICAgICAgIHJldHVybiBPUFBPQVBJX2NzamMuX2Jhbm5lcl9jc2pjO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBzdGF0aWMgX2Jhbm5lcl9jc2pjOiBhbnkgPSBudWxsO1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgTG9naW5fY3NqYyhvblN1Y2Nlc3M6IEZ1bmN0aW9uLCBvbkZhaWw6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vblFHTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInFnXCJdLmxvZ2luKFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IChyZXMpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgbGV0IHRva2VuID0gcmVzLmRhdGEudG9rZW47XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uU3VjY2Vzcyh0b2tlbik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiT1BQTyDnmbvpmYbmiJDlip8s6I635Y+W5YiwIHRva2VuIDogXCIgKyB0b2tlbik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiByZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGtleSwgcmVzW2tleV0pO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBmYWlsOiAocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiT1BQTyDnmbvpmYblpLHotKVcIiwgcmVzKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIHJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coa2V5LCByZXNba2V5XSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGluaXRBZFNlcnZpY2VfY3NqYyhvblN1Y2Nlc3M6IEZ1bmN0aW9uLCBvbkZhaWw6IEZ1bmN0aW9uLCBvbkNvbXBsZXRlOiBGdW5jdGlvbikge1xyXG4gICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJxZ1wiXS5pbml0QWRTZXJ2aWNlKFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBhcHBJZDogT1BQT0FQSV9jc2pjLmFwcElkX2NzamMsXHJcbiAgICAgICAgICAgICAgICBpc0RlYnVnOiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIm9wcG8gaW5pdEFkU2VydmljZSBzdWNjZXNzXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChvblN1Y2Nlc3MpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb25TdWNjZXNzKHJlcylcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgZmFpbDogZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwib3BwbyBpbml0QWRTZXJ2aWNlIGZhaWw6IFwiLCByZXMuY29kZSwgcmVzLm1zZyk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9uRmFpbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBvbkZhaWwocmVzKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKHJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwib3BwbyBpbml0QWRTZXJ2aWNlIGNvbXBsZXRlXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChvbkNvbXBsZXRlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uQ29tcGxldGUocmVzKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIHNob3dSZXdhcmRlZFZpZGVvQWRfY3NqYyhvbkFkQ2xvc2U6IEZ1bmN0aW9uLCBvbkZhaWxlZDogRnVuY3Rpb24pIHtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uUUdNaW5pR2FtZSkge1xyXG4gICAgICAgICAgICB2YXIgdmlkZW9BZCA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJxZ1wiXS5jcmVhdGVSZXdhcmRlZFZpZGVvQWQoe1xyXG4gICAgICAgICAgICAgICAgcG9zSWQ6IE9QUE9BUElfY3NqYy5hZFVuaXRJZF9jc2pjLFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB2aWRlb0FkLm9uTG9hZCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIm9wcG8g6KeG6aKR5bm/5ZGK5Yqg6L295a6M5oiQXCIpO1xyXG4gICAgICAgICAgICAgICAgdmlkZW9BZC5zaG93KCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIHZpZGVvQWQub25WaWRlb1N0YXJ0KCgpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwib3BwbyDop4bpopHlub/lkYrlvIDlp4vmkq3mlL5cIik7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIHZpZGVvQWQub25DbG9zZSgocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAocmVzLmlzRW5kZWQpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIm9wcG8g6KeG6aKR5bm/5ZGK6KeC55yLIOWujOaIkFwiKTtcclxuICAgICAgICAgICAgICAgICAgICBvbkFkQ2xvc2UodHJ1ZSk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwib3BwbyDop4bpopHlub/lkYrop4LnnIsg5pyq5a6M5oiQXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIG9uQWRDbG9zZShmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB2aWRlb0FkLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgdmlkZW9BZC5vbkVycm9yKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwib3BwbyDop4bpopHlub/lkYrojrflj5blpLHotKVcIiwgZXJyKTtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhrZXksIGVycltrZXldKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHZpZGVvQWQuZGVzdHJveSgpO1xyXG4gICAgICAgICAgICAgICAgb25GYWlsZWQoKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgdmlkZW9BZC5sb2FkKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBvbkFkQ2xvc2UodHJ1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgbmF2aWdhdGVUb01pbmlQcm9ncmFtX2NzamMocGtnTmFtZTogc3RyaW5nLCBnYW1lTmFtZTogc3RyaW5nLCBwYXRoOiBzdHJpbmcsIG9uU3VjY2VzczogRnVuY3Rpb24sIG9uRmFpbDogRnVuY3Rpb24sIG9uQ29tcGxhdGU6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vblFHTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJPUFBPIOi3s+i9rOa4uOaIj++8miBcIiArIHBrZ05hbWUpO1xyXG4gICAgICAgICAgICBIdHRwVW5pdF9jc2pjLnJlcG9ydEV4cG9ydF9jc2pjKHBrZ05hbWUsIGdhbWVOYW1lLCAocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoMSA9PSByZXN1bHQuY29kZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiT1BQTyDlr7zlh7rkuIrmiqXmiJDlip9cIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIk9QUE8g5a+85Ye65LiK5oql5aSx6LSlXCIsIHJlc3VsdC5tc2cpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LCAocmVzdWx0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIk9QUE8g5a+85Ye65LiK5oql5aSx6LSlXCIpO1xyXG4gICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIHJlc3VsdCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGtleSwgcmVzdWx0W2tleV0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgbGV0IHRpbWUgPSBEYXRlLm5vdygpO1xyXG4gICAgICAgICAgICB3aGlsZSAoRGF0ZS5ub3coKSAtIHRpbWUgPD0gNTAwKSB7XHJcblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJxZ1wiXS5uYXZpZ2F0ZVRvTWluaUdhbWUoXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgcGtnTmFtZTogcGtnTmFtZSxcclxuICAgICAgICAgICAgICAgICAgICBwYXRoOiBwYXRoLFxyXG4gICAgICAgICAgICAgICAgICAgIGV4dHJhRGF0YToge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBmcm9tOiBPUFBPQVBJX2NzamMuYXBwSWRfY3NqY1xyXG4gICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgZW52VmVyc2lvbjogJ3JlbGVhc2UnLFxyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3MocmVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvblN1Y2Nlc3MpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uU3VjY2VzcyhyZXMpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGZhaWwocmVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvbkZhaWwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRmFpbChyZXMpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbXBsZXRlKHJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBpZiAob25Db21wbGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICAgICAgb25Db21wbGF0ZShyZXMpXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvLyBwdWJsaWMgc3RhdGljIHNob3dJbnRlcnN0aXRpYWxBZF9jc2pjKG9uQWRDbG9zZTogRnVuY3Rpb24sIG9uRmFpbGVkOiBGdW5jdGlvbikge1xyXG4gICAgLy8gICAgIGlmIChMYXlhLkJyb3dzZXIub25RR01pbmlHYW1lKSB7XHJcbiAgICAvLyAgICAgICAgIHZhciBpbnNlcnRBZCA9IHFnLmNyZWF0ZUluc2VydEFkKHtcclxuICAgIC8vICAgICAgICAgICAgIHBvc0lkOiBPUFBPQVBJX2NzamMuaW5zQWRVbml0SWRfY3NqY1xyXG4gICAgLy8gICAgICAgICB9KVxyXG4gICAgLy8gICAgICAgICBpbnNlcnRBZC5sb2FkKCk7XHJcbiAgICAvLyAgICAgICAgIGluc2VydEFkLm9uTG9hZCgoKSA9PiB7XHJcbiAgICAvLyAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuaPkuWxj+W5v+WRiuWKoOi9veWujOaIkFwiKTtcclxuICAgIC8vICAgICAgICAgICAgIGluc2VydEFkLnNob3coKTtcclxuICAgIC8vICAgICAgICAgfSlcclxuICAgIC8vICAgICAgICAgaW5zZXJ0QWQub25TaG93KCgpID0+IHtcclxuICAgIC8vICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5o+S5bGP5bm/5ZGK5pi+56S65oiQ5YqfXCIpO1xyXG4gICAgLy8gICAgICAgICB9KVxyXG4gICAgLy8gICAgICAgICBpbnNlcnRBZC5vbkVycm9yKChlcnIpID0+IHtcclxuICAgIC8vICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5o+S5bGP5bm/5ZGK5ouJ5Y+W5aSx6LSlXCIsIGVycik7XHJcbiAgICAvLyAgICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gZXJyKSB7XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coa2V5LCBlcnJba2V5XSk7XHJcbiAgICAvLyAgICAgICAgICAgICB9XHJcbiAgICAvLyAgICAgICAgICAgICBpbnNlcnRBZC5kZXN0cm95KCk7XHJcbiAgICAvLyAgICAgICAgICAgICBpZiAob25GYWlsZWQpIHtcclxuICAgIC8vICAgICAgICAgICAgICAgICBvbkZhaWxlZCgpO1xyXG4gICAgLy8gICAgICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgICB9KVxyXG4gICAgLy8gICAgIH1cclxuICAgIC8vICAgICBlbHNlIHtcclxuICAgIC8vICAgICAgICAgb25BZENsb3NlKCk7XHJcbiAgICAvLyAgICAgfVxyXG4gICAgLy8gfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgc2hvd0Jhbm5hZXJBZF9jc2pjKCk6IGFueSB7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vblFHTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJPUFBP5pi+56S6QmFubmVyXCIpO1xyXG4gICAgICAgICAgICBpZiAoT1BQT0FQSV9jc2pjLl9iYW5uZXJfY3NqYykge1xyXG4gICAgICAgICAgICAgICAgT1BQT0FQSV9jc2pjLl9iYW5uZXJfY3NqYy5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdmFyIGJhbm5lckFkID0gcWcuY3JlYXRlQmFubmVyQWQoe1xyXG4gICAgICAgICAgICAgICAgcG9zSWQ6IE9QUE9BUElfY3NqYy5iYW5uZXJBZFVuaXRJZF9jc2pjXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIGJhbm5lckFkLm9uRXJyb3IoKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJCYW5uZXLlub/lkYrmi4nlj5blpLHotKVcIiwgZXJyKTtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhrZXksIGVycltrZXldKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgYmFubmVyQWQuc2hvdygpO1xyXG4gICAgICAgICAgICBPUFBPQVBJX2NzamMuX2Jhbm5lcl9jc2pjID0gYmFubmVyQWQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgaGlkZUJhbm5lckFkX2NzamMoKSB7XHJcbiAgICAgICAgaWYgKE9QUE9BUElfY3NqYy5fYmFubmVyX2NzamMpIHtcclxuICAgICAgICAgICAgT1BQT0FQSV9jc2pjLl9iYW5uZXJfY3NqYy5oaWRlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0TGF1bmNoT3B0aW9uc1N5bmNfY3NqYygpIHtcclxuICAgICAgICBsZXQgb2JqOiBhbnkgPSB7IHF1ZXJ5OiBcIlwiLCByZWZlcnJlckluZm86IHsgcGFja2FnZTogXCJcIiwgZXh0cmFEYXRhOiB7IGFwcGlkOiBcIlwiIH0gfSB9XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vblFHTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgdmFyIG9wdGlvbnMgPSBMYXlhLkJyb3dzZXIud2luZG93W1wicWdcIl0uZ2V0TGF1bmNoT3B0aW9uc1N5bmMoKTtcclxuICAgICAgICAgICAgaWYgKG51bGwgIT0gb3B0aW9ucyAmJiBvcHRpb25zICE9IFwiXCIpIHtcclxuICAgICAgICAgICAgICAgIG9iaiA9IG9wdGlvbnM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuayoeacieWQr+WKqOiuvue9ru+8ge+8ge+8gVwiKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybiBvYmo7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBzaGFyZV9jc2pjKGNvbXBsYXRlOiBGdW5jdGlvbiwgdGl0ZWw6IHN0cmluZywgaW1hZ2VVcmw6IHN0cmluZykge1xyXG4gICAgICAgIGNvbXBsYXRlKGZhbHNlKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGNyZWF0ZURlc2t0b3BJY29uX2NzamMob25TdWNjZXNzOiBGdW5jdGlvbiwgb25GYWlsOiBGdW5jdGlvbikge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25RR01pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJxZ1wiXS5oYXNTaG9ydGN1dEluc3RhbGxlZCh7XHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlcyA9PSBmYWxzZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wicWdcIl0uaW5zdGFsbFNob3J0Y3V0KFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uU3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TdWNjZXNzKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uRmFpbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25GYWlsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLliJvlu7rmoYzpnaLlm77moIflpLHotKXvvIHvvIHvvIHvvIFcIiwgZXJyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIGVycikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coa2V5LCBlcnIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLmoYzpnaLlm77moIflt7LlrZjlnKjvvIHvvIHvvIHvvIFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvbkZhaWwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRmFpbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAob25GYWlsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uRmFpbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWIpOaWreahjOmdouWbvuagh+aYr+WQpuWtmOWcqOWksei0pe+8ge+8ge+8gVwiLCBlcnIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coa2V5LCBlcnIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmIChvbkZhaWwpIHtcclxuICAgICAgICAgICAgICAgIG9uRmFpbCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgaGFzRGVza3RvcEljb25fY3NqYyhvblN1Y2Nlc3M6IEZ1bmN0aW9uLCBvbkZhaWw6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vblFHTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInFnXCJdLmhhc1Nob3J0Y3V0SW5zdGFsbGVkKHtcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzID09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5qGM6Z2i5Zu+5qCH5LiN5a2Y5Zyo77yB77yB77yB77yBXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob25TdWNjZXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblN1Y2Nlc3MoZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuahjOmdouWbvuagh+W3suWtmOWcqO+8ge+8ge+8ge+8gVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uU3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TdWNjZXNzKHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAob25GYWlsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uRmFpbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWIpOaWreahjOmdouWbvuagh+aYr+WQpuWtmOWcqOWksei0pe+8ge+8ge+8gVwiLCBlcnIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coa2V5LCBlcnIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmIChvbkZhaWwpIHtcclxuICAgICAgICAgICAgICAgIG9uRmFpbCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IFVzZXJfY3NqYyBmcm9tIFwiLi4vVXNlci9Vc2VyXCI7XHJcbmltcG9ydCBIdHRwVW5pdF9jc2pjIGZyb20gXCIuLi9OZXQvSHR0cFVuaXRcIjtcclxuaW1wb3J0IEdhbWVDb25maWcgZnJvbSBcIi4uL0dhbWVDb25maWdcIjtcclxuaW1wb3J0IFNvdW5kTWdyX2NzamMgZnJvbSBcIi4uL01nci9Tb3VuZE1nclwiO1xyXG5pbXBvcnQgR2FtZVN3aXRjaF9jc2pjIGZyb20gXCIuLi9Db21tb21BUEkvR2FtZVN3aXRjaC9HYW1lU3dpdGNoXCI7XHJcbmltcG9ydCBHYW1lU2V0dGluZ3NfY3NqYyBmcm9tIFwiLi4vR2FtZVNldHRpbmdzXCI7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVklWT0FQSV9jc2pjIHtcclxuICAgIHB1YmxpYyBzdGF0aWMgYWRVbml0SWRfY3NqYyA9IFwiYThhNDRmZDM5YmNkNGU4MGE1MmUzOWJlOTkwNzRhYzFcIjsgICAgICAgICAgICAgICAgICAgICAgLy/op4bpopHlub/lkYpcclxuICAgIHB1YmxpYyBzdGF0aWMgYmFubmVyQWRVbml0SWRfY3NqYyA9IFwiYmMyZjc0MzVhYmRlNDJhZWIzMDE4NjQ2MGZmM2M1N2JcIjsgICAgICAgICAgICAgICAgLy9iYW5uZXLlub/lkYpcclxuICAgIHB1YmxpYyBzdGF0aWMgbmF0aXZlQWRJZF9jc2pjID0gXCJjYWE4NDA0Y2E2ZTc0MTM3OTVjNDNlZDE3MTg5ZmFmZlwiOyAgICAgICAgICAgICAgICAgICAgLy/ljp/nlJ/lub/lkYpcclxuICAgIHB1YmxpYyBzdGF0aWMgaW5zQWRVbml0SWRfY3NqYyA9IFwiNmFiODU2NGYxMzRlNDU1MDhkYzZhMmJlOWIyZDU0NGZcIjsgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvL+aPkuWxj+W5v+WRilxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgcmV3YXJkZWRBZF9jc2pjID0gbnVsbDtcclxuICAgIHB1YmxpYyBzdGF0aWMgcmV3YXJkZWRBZE51bV9jc2pjID0gMDtcclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IEJhbm5lckluc3RhbmNlX2NzamMoKSB7XHJcbiAgICAgICAgcmV0dXJuIFZJVk9BUElfY3NqYy5fYmFubmVyX2NzamM7XHJcbiAgICB9XHJcbiAgICBwcm90ZWN0ZWQgc3RhdGljIF9iYW5uZXJfY3NqYzogYW55ID0gbnVsbDtcclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IG5hdGl2ZUFkTGlzdF9jc2pjID0gW1xyXG5cclxuICAgIF1cclxuICAgIHByaXZhdGUgc3RhdGljIG5hdGl2ZUluZGV4X2NzamMgPSAwO1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgTG9naW5fY3NqYyhvblN1Y2Nlc3M6IEZ1bmN0aW9uLCBvbkZhaWw6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCJ2aXZvIOW8gOWni+eZu+mZhlwiKTtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLndpbmRvd1tcInFnXCJdLmdldFN5c3RlbUluZm9TeW5jKCkucGxhdGZvcm1WZXJzaW9uQ29kZSA+PSAxMDUzKSB7XHJcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJxZ1wiXS5sb2dpbigpLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLlvIDlp4vnmbvpmYbmiJDlip8gPj0gMTA1M1wiKTtcclxuICAgICAgICAgICAgICAgIGlmIChyZXMuZGF0YS50b2tlbikge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIOS9v+eUqHRva2Vu6L+b6KGM5pyN5Yqh56uv5a+55o6lXHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHRva2VuID0gcmVzLmRhdGEudG9rZW47XHJcbiAgICAgICAgICAgICAgICAgICAgb25TdWNjZXNzKHRva2VuLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcInZpdm8g55m76ZmG5oiQ5YqfLOiOt+WPluWIsCB0b2tlbiA6IFwiICsgdG9rZW4pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9LCAoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn55m75b2V5aSx6LSlJyArIEpTT04uc3RyaW5naWZ5KGVycikpO1xyXG4gICAgICAgICAgICAgICAgVklWT0FQSV9jc2pjLnNob3dEaWFsb2dfY3NqYygpO1xyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wicWdcIl0uYXV0aG9yaXplKHtcclxuICAgICAgICAgICAgICAgIHR5cGU6IFwidG9rZW5cIixcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8g5L2/55SodG9rZW7ov5vooYzmnI3liqHnq6/lr7nmjqVcclxuICAgICAgICAgICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wicWdcIl0uZ2V0UHJvZmlsZSh7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRva2VuOiBkYXRhLmFjY2Vzc1Rva2VuLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAoZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ29wZW5pZOiOt+WPluaIkOWKnycsIGRhdGEub3BlbmlkKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TdWNjZXNzKGRhdGEub3BlbmlkLCBmYWxzZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChkYXRhLCBjb2RlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBWSVZPQVBJX2NzamMuc2hvd0RpYWxvZ19jc2pjKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuiOt+WPlm9wZW5pZOWksei0pSA6IFwiICsgY29kZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChkYXRhLCBjb2RlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+eZu+W9leWksei0pScgKyBjb2RlKTtcclxuICAgICAgICAgICAgICAgICAgICBWSVZPQVBJX2NzamMuc2hvd0RpYWxvZ19jc2pjKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8v5o+Q56S65by556qXXHJcbiAgICBwdWJsaWMgc3RhdGljIHNob3dEaWFsb2dfY3NqYygpIHtcclxuICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wicWdcIl0uc2hvd0RpYWxvZyh7XHJcbiAgICAgICAgICAgIHRpdGxlOiAn5o+Q56S6JyxcclxuICAgICAgICAgICAgbWVzc2FnZTogJ+eZu+W9leWksei0pe+8jOeCueWHu+ehruWumuaMiemSrumHjeivlScsXHJcbiAgICAgICAgICAgIGJ1dHRvbnM6IFtcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB0ZXh0OiAn56Gu5a6aJyxcclxuICAgICAgICAgICAgICAgICAgICBjb2xvcjogJyMzM2RkNDQnXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIF0sXHJcbiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygnaGFuZGxpbmcgY2FsbGJhY2snKVxyXG4gICAgICAgICAgICAgICAgVklWT0FQSV9jc2pjLlZJVk9Mb2dpbl9jc2pjKCk7XHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGNhbmNlbDogZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ2hhbmRsaW5nIGNhbmNlbCcpXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChkYXRhLCBjb2RlKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhgaGFuZGxpbmcgZmFpbCwgY29kZSA9ICR7Y29kZX1gKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICAvL3Zpdm/nmbvlvZVcclxuICAgIHB1YmxpYyBzdGF0aWMgVklWT0xvZ2luX2NzamMoKSB7XHJcbiAgICAgICAgVklWT0FQSV9jc2pjLkxvZ2luX2NzamMoZnVuY3Rpb24gKGNvZGUsIHR5cGUpIHtcclxuICAgICAgICAgICAgaWYgKHR5cGUpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi55m76ZmGdG9rZW4xMTExOlwiLCBjb2RlKTtcclxuICAgICAgICAgICAgICAgIFVzZXJfY3NqYy5jb2RlX2NzamMgPSBjb2RlO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgVXNlcl9jc2pjLm9wZW5JZF9jc2pjID0gY29kZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBHYW1lQ29uZmlnLnN0YXJ0U2NlbmUgJiYgTGF5YS5TY2VuZS5vcGVuKEdhbWVDb25maWcuc3RhcnRTY2VuZSwgZmFsc2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgIH0sICgpID0+IHtcclxuICAgICAgICAgICAgR2FtZUNvbmZpZy5zdGFydFNjZW5lICYmIExheWEuU2NlbmUub3BlbihHYW1lQ29uZmlnLnN0YXJ0U2NlbmUsIGZhbHNlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIGZ1bmN0aW9uICgpIHtcclxuXHJcbiAgICAgICAgICAgIH0pKTtcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvL+WIm+W7uuinhumikeW5v+WRilxyXG4gICAgcHVibGljIHN0YXRpYyBjcmVhdGVSZXdhcmRlZFZpZGVvQWRfY3NqYygpIHtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uVlZNaW5pR2FtZSkge1xyXG4gICAgICAgICAgICBWSVZPQVBJX2NzamMucmV3YXJkZWRBZF9jc2pjID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInFnXCJdLmNyZWF0ZVJld2FyZGVkVmlkZW9BZCh7XHJcbiAgICAgICAgICAgICAgICBwb3NJZDogVklWT0FQSV9jc2pjLmFkVW5pdElkX2NzamMsXHJcbiAgICAgICAgICAgICAgICBzdHlsZToge31cclxuICAgICAgICAgICAgfSk7XHJcblxyXG4gICAgICAgICAgICBWSVZPQVBJX2NzamMucmV3YXJkZWRBZF9jc2pjLm9uRXJyb3IoZXJyID0+IHtcclxuICAgICAgICAgICAgICAgIHN3aXRjaCAoZXJyLmVyckNvZGUpIHtcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIC0zOlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIua/gOWKseW5v+WRiuWKoOi9veWksei0pS0tLeiwg+eUqOWkqumikee5gVwiLCBKU09OLnN0cmluZ2lmeShlcnIpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAtNDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLmv4DlirHlub/lkYrliqDovb3lpLHotKUtLS0g5LiA5YiG6ZKf5YaF5LiN6IO96YeN5aSN5Yqg6L29XCIsIEpTT04uc3RyaW5naWZ5KGVycikpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIDMwMDA4OlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDlvZPliY3lkK/liqjmnaXmupDkuI3mlK/mjIHmv4DlirHop4bpopHlub/lkYrvvIzor7fpgInmi6nlhbbku5bmv4DlirHnrZbnlaVcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgZGVmYXVsdDpcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8g5Y+C6ICDIGh0dHBzOi8vbWluaWdhbWUudml2by5jb20uY24vZG9jdW1lbnRzLyMvbGVzc29uL29wZW4tYWJpbGl0eS9hZD9pZD3lub/lkYrplJnor6/noIHkv6Hmga8g5a+56ZSZ6K+v56CB5YGa5YiG57G75aSE55CGXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5r+A5Yqx5bm/5ZGK5bGV56S65aSx6LSlXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKEpTT04uc3RyaW5naWZ5KGVycikpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvL+aYvuekuuinhumikeW5v+WRilxyXG4gICAgcHVibGljIHN0YXRpYyBzaG93UmV3YXJkZWRWaWRlb0FkX2NzamMob25BZENsb3NlOiBGdW5jdGlvbiwgb25GYWlsZWQ6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vblZWTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgU291bmRNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLnN0b3BCR01fY3NqYygpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0gVklWT0FQSS5yZXdhcmRlZEFkOlwiLCBWSVZPQVBJX2NzamMucmV3YXJkZWRBZF9jc2pjICsgXCIsVklWT0FQSS5yZXdhcmRlZEFkTnVtOlwiLCBWSVZPQVBJX2NzamMucmV3YXJkZWRBZE51bV9jc2pjKVxyXG4gICAgICAgICAgICAvLyBpZiAoVklWT0FQSS5yZXdhcmRlZEFkID09IG51bGwpIHtcclxuICAgICAgICAgICAgLy8gICAgIG9uRmFpbGVkKCk7XHJcbiAgICAgICAgICAgIC8vICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIC8vIH1cclxuXHJcbiAgICAgICAgICAgIGlmIChWSVZPQVBJX2NzamMucmV3YXJkZWRBZE51bV9jc2pjID09IDApIHtcclxuICAgICAgICAgICAgICAgIFZJVk9BUElfY3NqYy5jcmVhdGVSZXdhcmRlZFZpZGVvQWRfY3NqYygpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy8g56ys5LiA5qyhY3JlYXTlkI7lub/lkYrlj6/ku6XlnKhvbmxvYWTph4zpnaLnm7TmjqVzaG93XHJcbiAgICAgICAgICAgICAgICAvLyDlkI7nu63nmoTliqDovb3lv4XpobvopoFsb2Fk5omN6IO96Kem5Y+Rb25sb2Fk5o6l552A5omN6IO9c2hvd+WHuuW5v+WRilxyXG4gICAgICAgICAgICAgICAgbGV0IGFkTG9hZCA9IFZJVk9BUElfY3NqYy5yZXdhcmRlZEFkX2NzamMubG9hZCgpOy8v56ys5LiA5qyh6LCD55SoIOWPr+iDveS8muaKpS0zICDlub/lkYrog73mraPluLjlsZXnpLrlsLHlj6/ku6Xlv73nlaVcclxuICAgICAgICAgICAgICAgIC8vIOaNleaNiWxvYWTlpLHotKXnmoTplJnor69cclxuICAgICAgICAgICAgICAgIGFkTG9hZCAmJiBhZExvYWQuY2F0Y2goZXJyID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIua/gOWKseW5v+WRimxvYWTlpLHotKVcIiArIEpTT04uc3RyaW5naWZ5KGVycikpXHJcbiAgICAgICAgICAgICAgICAgICAgb25GYWlsZWQoKTtcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIFZJVk9BUElfY3NqYy5yZXdhcmRlZEFkTnVtX2NzamMgPSAxO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIui/keadpXNob3dSZXdhcmRlZFZpZGVvQWRcIik7XHJcblxyXG4gICAgICAgICAgICBWSVZPQVBJX2NzamMucmV3YXJkZWRBZF9jc2pjLm9uTG9hZCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBsZXQgYWRzaG93ID0gVklWT0FQSV9jc2pjLnJld2FyZGVkQWRfY3NqYy5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICAvLyDmjZXmjYlzaG935aSx6LSl55qE6ZSZ6K+vXHJcbiAgICAgICAgICAgICAgICBhZHNob3cgJiYgYWRzaG93LnRoZW4oKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5r+A5Yqx5bm/5ZGK5bGV56S65oiQ5YqfXCIpO1xyXG4gICAgICAgICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIua/gOWKseW5v+WRiuWxleekuuWksei0pVwiICsgSlNPTi5zdHJpbmdpZnkoZXJyKSlcclxuICAgICAgICAgICAgICAgICAgICBvbkZhaWxlZCgpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIFZJVk9BUElfY3NqYy5yZXdhcmRlZEFkX2NzamMub25DbG9zZShyZXMgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlcyAmJiByZXMuaXNFbmRlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5q2j5bi45pKt5pS+57uT5p2f77yM5Y+v5Lul5LiL5Y+R5ri45oiP5aWW5YqxXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIG9uQWRDbG9zZSh0cnVlKTtcclxuICAgICAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLmkq3mlL7kuK3pgJTpgIDlh7rvvIzkuI3kuIvlj5HmuLjmiI/lpZblirFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgb25BZENsb3NlKGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBvbkFkQ2xvc2UodHJ1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgbUJhbm5lckFkX2NzamMgPSBudWxsO1xyXG4gICAgcHVibGljIHN0YXRpYyBzaG93QmFubmVyQWRfY3NqYygpIHtcclxuICAgICAgICB2YXIgc2VsZiA9IFZJVk9BUElfY3NqYztcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uVlZNaW5pR2FtZSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnPT09PT09PT09PT1iYW5uZXJBZCBzaG93QmFuZXJBZCcpO1xyXG4gICAgICAgICAgICB2YXIgc3lzdGVtSW5mbyA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJxZ1wiXS5nZXRTeXN0ZW1JbmZvU3luYygpO1xyXG4gICAgICAgICAgICB2YXIgc3cgPSBzeXN0ZW1JbmZvLnNjcmVlbldpZHRoO1xyXG4gICAgICAgICAgICB2YXIgc2ggPSBzeXN0ZW1JbmZvLnNjcmVlbkhlaWdodDtcclxuICAgICAgICAgICAgVklWT0FQSV9jc2pjLm1CYW5uZXJBZF9jc2pjID0gcWcuY3JlYXRlQmFubmVyQWQoe1xyXG4gICAgICAgICAgICAgICAgcG9zSWQ6IFZJVk9BUElfY3NqYy5iYW5uZXJBZFVuaXRJZF9jc2pjLFxyXG4gICAgICAgICAgICAgICAgc3R5bGU6IHt9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBsZXQgYWRzaG93ID0gVklWT0FQSV9jc2pjLm1CYW5uZXJBZF9jc2pjLnNob3coKTtcclxuICAgICAgICAgICAgLy8g6LCD55SodGhlbuWSjGNhdGNo5LmL5YmN6ZyA6KaB5a+5c2hvd+eahOe7k+aenOWBmuS4i+WIpOepuuWkhOeQhu+8jOmYsuatouWHuumUme+8iOWmguaenOayoeacieWIpOepuu+8jOWcqOW5s+WPsOeJiOacrOS4ujEwNTLku6Xlj4rku6XkuIvnmoTmiYvmnLrkuIrlsIbkvJrlh7rnjrDplJnor6/vvIlcclxuICAgICAgICAgICAgYWRzaG93ICYmIGFkc2hvdy50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiYmFubmVy5bm/5ZGK5bGV56S65oiQ5YqfXCIpO1xyXG4gICAgICAgICAgICB9KS5jYXRjaCgoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBzd2l0Y2ggKGVyci5jb2RlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAzMDAwMzpcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLmlrDnlKjmiLc35aSp5YaF5LiN6IO95pud5YWJQmFubmVy77yM6K+35bCG5omL5py65pe26Ze06LCD5pW05Li6N+WkqeWQju+8jOmAgOWHuua4uOaIj+mHjeaWsOi/m+WFpVwiKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBjYXNlIDMwMDA5OlxyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIjEw56eS5YaF6LCD55So5bm/5ZGK5qyh5pWw6LaF6L+HMeasoe+8jDEw56eS5ZCO5YaN6LCD55SoXCIpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyAgICAgc2hvdygpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vIH0sIDEwMDAwKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICAgICAgY2FzZSAzMDAwMjpcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLliqDovb3lub/lkYrlpLHotKXvvIzph43mlrDliqDovb3lub/lkYpcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgLy8gc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC8vICAgICByZXRyeVNob3coKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyB9LCAxMDAwMCk7ICAgICAgICAgICAgIFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OlxyXG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDlj4LogIMgaHR0cHM6Ly9taW5pZ2FtZS52aXZvLmNvbS5jbi9kb2N1bWVudHMvIy9sZXNzb24vb3Blbi1hYmlsaXR5L2FkP2lkPeW5v+WRiumUmeivr+eggeS/oeaBryDlr7nplJnor6/noIHlgZrliIbnsbvlpITnkIZcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJiYW5uZXLlub/lkYrlsZXnpLrlpLHotKVcIilcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coSlNPTi5zdHJpbmdpZnkoZXJyKSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgVklWT0FQSV9jc2pjLm1CYW5uZXJBZF9jc2pjLm9uRXJyb3IoZnVuY3Rpb24gKGVycikge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ0Jhbm5lcuW5v+WRiuWKoOi9veWksei0pTExMTonICsgSlNPTi5zdHJpbmdpZnkoZXJyKSk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgaGlkZUJhbm5lckFkX2NzamMoKSB7XHJcbiAgICAgICAgaWYgKFZJVk9BUElfY3NqYy5tQmFubmVyQWRfY3NqYykge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnPT09PT09PT09PT1iYW5uZXJBZCDpmpDol48nKTtcclxuICAgICAgICAgICAgVklWT0FQSV9jc2pjLm1CYW5uZXJBZF9jc2pjLmhpZGUoKTtcclxuICAgICAgICAgICAgVklWT0FQSV9jc2pjLm1CYW5uZXJBZF9jc2pjLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgLy8gdGhpcy5tQmFubmVyQWQgPSBudWxsO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCc9PT09PT09PT09PWJhbm5lckFkIOS4uuepuicpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIG5hdmlnYXRlVG9NaW5pUHJvZ3JhbV9jc2pjKHBrZ05hbWU6IHN0cmluZywgcGF0aDogc3RyaW5nLCBvblN1Y2Nlc3M6IEZ1bmN0aW9uLCBvbkZhaWw6IEZ1bmN0aW9uLCBvbkNvbXBsYXRlOiBGdW5jdGlvbikge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25WVk1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwidml2byDot7PovazmuLjmiI/vvJogXCIgKyBwa2dOYW1lKTtcclxuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInFnXCJdLm5hdmlnYXRlVG9NaW5pR2FtZShcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICBwa2dOYW1lOiBwa2dOYW1lLFxyXG4gICAgICAgICAgICAgICAgICAgIHBhdGg6IHBhdGgsXHJcbiAgICAgICAgICAgICAgICAgICAgZXh0cmFEYXRhOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZyb206IEdhbWVTZXR0aW5nc19jc2pjLkFwcElEX2NzamNcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGVudlZlcnNpb246ICdyZWxlYXNlJyxcclxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzKHJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob25TdWNjZXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblN1Y2Nlc3MocmVzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBmYWlsKHJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob25GYWlsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkZhaWwocmVzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBjb21wbGV0ZShyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uQ29tcGxhdGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ29tcGxhdGUocmVzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc3RhdGljIF9pbnNlcnRBZDogYW55ID0gbnVsbDtcclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIHByZUxvYWRJbnRlcnN0aXRpYWxBZF9jc2pjKCkge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25WVk1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIFZJVk9BUElfY3NqYy5faW5zZXJ0QWQgPSBMYXlhLkJyb3dzZXIud2luZG93W1wicWdcIl0uY3JlYXRlSW50ZXJzdGl0aWFsQWQoe1xyXG4gICAgICAgICAgICAgICAgcG9zSWQ6IFZJVk9BUElfY3NqYy5pbnNBZFVuaXRJZF9jc2pjXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgcHVibGljIHN0YXRpYyBzaG93SW50ZXJzdGl0aWFsQWRfY3NqYyhvbkFkQ2xvc2U6IEZ1bmN0aW9uLCBvbkZhaWxlZDogRnVuY3Rpb24pIHtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uVlZNaW5pR2FtZSkge1xyXG4gICAgICAgICAgICBpZiAoVklWT0FQSV9jc2pjLl9pbnNlcnRBZCA9PSBudWxsKSByZXR1cm47XHJcbiAgICAgICAgICAgIFZJVk9BUElfY3NqYy5faW5zZXJ0QWQub25Mb2FkKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5o+S5bGP5bm/5ZGK5Yqg6L295a6M5oiQXCIpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICBWSVZPQVBJX2NzamMuX2luc2VydEFkLm9uQ2xvc2UoKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5faW5zZXJ0QWQgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgaWYgKG9uQWRDbG9zZSkgb25BZENsb3NlKCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIFZJVk9BUElfY3NqYy5faW5zZXJ0QWQub25FcnJvcigoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuaPkuWxj+W5v+WRiuaLieWPluWksei0pVwiLCBKU09OLnN0cmluZ2lmeShlcnIpKTtcclxuICAgICAgICAgICAgICAgIGlmIChvbkZhaWxlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIG9uRmFpbGVkKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBWSVZPQVBJX2NzamMuX2luc2VydEFkLnNob3coKS50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfmj5LlsY/lub/lkYrlsZXnpLrlrozmiJAnKTtcclxuICAgICAgICAgICAgfSkuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+aPkuWxj+W5v+WRiuWxleekuuWksei0pScsIEpTT04uc3RyaW5naWZ5KGVycikpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKG9uQWRDbG9zZSkgb25BZENsb3NlKCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldExhdW5jaE9wdGlvbnNTeW5jX2NzamMoKSB7XHJcbiAgICAgICAgcmV0dXJuIHt9O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgc2hhcmVfY3NqYyhjb21wbGF0ZTogRnVuY3Rpb24pIHtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uVlZNaW5pR2FtZSkge1xyXG4gICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wicWdcIl0uc2hhcmUoe1xyXG4gICAgICAgICAgICAgICAgc3VjY2VzcygpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY29tcGxhdGUgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wbGF0ZSh0cnVlKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJxZ1wiXS5zaG93VG9hc3Qoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIuWIhuS6q+aIkOWKn1wiXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgICAgICAgICAgZmFpbChlcnJvbXNnLCBlcnJvY29kZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIExheWEuQnJvd3Nlci53aW5kb3dbXCJxZ1wiXS5zaG93VG9hc3Qoe1xyXG4gICAgICAgICAgICAgICAgICAgIC8vICAgICBtZXNzYWdlOiBcIuWIhuS6q+Wksei0pe+8mlwiICsgZXJyb2NvZGUgKyAnOiAnICsgZXJyb21zZ1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIH0pXHJcblxyXG4gICAgICAgICAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJxZ1wiXS5zaG93VG9hc3Qoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIuWIhuS6q+Wksei0pVwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgICAgICAgICAgY2FuY2VsKCkge1xyXG4gICAgICAgICAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJxZ1wiXS5zaG93VG9hc3Qoe1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZXNzYWdlOiBcIuWIhuS6q+Wksei0pVwiXHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH0sXHJcblxyXG4gICAgICAgICAgICAgICAgY29tcGxldGUoKSB7XHJcblxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGNyZWF0ZURlc2t0b3BJY29uX2NzamMob25TdWNjZXNzOiBGdW5jdGlvbiwgb25GYWlsOiBGdW5jdGlvbikge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25WVk1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJxZ1wiXS5oYXNTaG9ydGN1dEluc3RhbGxlZCh7XHJcbiAgICAgICAgICAgICAgICBzdWNjZXNzOiBmdW5jdGlvbiAocmVzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlcyA9PSBmYWxzZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wicWdcIl0uaW5zdGFsbFNob3J0Y3V0KFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uICgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uU3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TdWNjZXNzKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uRmFpbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25GYWlsKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLliJvlu7rmoYzpnaLlm77moIflpLHotKXvvIHvvIHvvIHvvIFcIiwgZXJyKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgZm9yICh2YXIga2V5IGluIGVycikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coa2V5LCBlcnIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLmoYzpnaLlm77moIflt7LlrZjlnKjvvIHvvIHvvIHvvIFcIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChvbkZhaWwpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uRmFpbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAob25GYWlsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uRmFpbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWIpOaWreahjOmdouWbvuagh+aYr+WQpuWtmOWcqOWksei0pe+8ge+8ge+8gVwiLCBlcnIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coa2V5LCBlcnIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmIChvbkZhaWwpIHtcclxuICAgICAgICAgICAgICAgIG9uRmFpbCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgaGFzRGVza3RvcEljb25fY3NqYyhvblN1Y2Nlc3M6IEZ1bmN0aW9uLCBvbkZhaWw6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vblZWTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInFnXCJdLmhhc1Nob3J0Y3V0SW5zdGFsbGVkKHtcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzID09IGZhbHNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5qGM6Z2i5Zu+5qCH5LiN5a2Y5Zyo77yB77yB77yB77yBXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob25TdWNjZXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblN1Y2Nlc3MoZmFsc2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuahjOmdouWbvuagh+W3suWtmOWcqO+8ge+8ge+8ge+8gVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uU3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgb25TdWNjZXNzKHRydWUpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgIGZhaWw6IGZ1bmN0aW9uIChlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAob25GYWlsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uRmFpbCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWIpOaWreahjOmdouWbvuagh+aYr+WQpuWtmOWcqOWksei0pe+8ge+8ge+8gVwiLCBlcnIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiBlcnIpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coa2V5LCBlcnIpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICBjb21wbGV0ZTogZnVuY3Rpb24gKCkge1xyXG5cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmIChvbkZhaWwpIHtcclxuICAgICAgICAgICAgICAgIG9uRmFpbCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgV1hBUElfY3NqYyB7XHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IGFkVW5pdElkX2NzamMgPSBcImFkdW5pdC1kMDM2MDhiOWM5MTdlMzgxXCJcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgYmFubmVyQWRVbml0SWRfY3NqYyA9IFwiYWR1bml0LTE4NDQ1NWYzZjhlNzQyNzdcIlxyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBpbnNBZFVuaXRJZF9jc2pjID0gXCJcIlxyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBuYXRpdmVhZElkX2NzamMgPSBcImFkdW5pdC1lZWNlYWU0MWFlZmQxMTg1XCJcclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIHd4TG9naW5fY3NqYyhvblN1Y2Nlc3M6IEZ1bmN0aW9uLCBvbkZhaWw6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3cud3gubG9naW4oXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogKHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjb2RlID0gcmVzLmNvZGU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblN1Y2Nlc3MoY29kZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIueZu+mZhuaIkOWKnyzojrflj5bliLBjb2RlIDogXCIgKyBjb2RlKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLea/gOWKseinhumikS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxyXG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfaXNSZWdSZXdhcmRlZFZpZGVvQWRFdmVudF9jc2pjID0gZmFsc2U7XHJcbiAgICBwcm90ZWN0ZWQgc3RhdGljIF9vblJld2FyZGVkVmlkZW9BZEZhaWxlZF9jc2pjOiBGdW5jdGlvbiA9IG51bGw7XHJcbiAgICBwcm90ZWN0ZWQgc3RhdGljIF9vblJld2FyZGVkVmlkZW9BZENsb3NlX2NzamM6IEZ1bmN0aW9uID0gbnVsbDtcclxuICAgIHByb3RlY3RlZCBzdGF0aWMgb25SZXdhcmRlZFZpZGVvQWRMb2FkX2NzamMoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ+a/gOWKseinhumikSDlub/lkYrliqDovb3lrozmiJAnKVxyXG4gICAgfVxyXG4gICAgcHJvdGVjdGVkIHN0YXRpYyBvblJld2FyZGVkVmlkZW9BZEVycm9yX2NzamMoZXJyKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coJ+a/gOWKseinhumikSDlub/lkYrliqDovb3lpLHotKUnICsgZXJyKVxyXG4gICAgICAgIGlmIChXWEFQSV9jc2pjLl9vblJld2FyZGVkVmlkZW9BZEZhaWxlZF9jc2pjKSB7XHJcbiAgICAgICAgICAgIFdYQVBJX2NzamMuX29uUmV3YXJkZWRWaWRlb0FkRmFpbGVkX2NzamMoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBwcm90ZWN0ZWQgc3RhdGljIG9uUmV3YXJkZWRWaWRlb0FkQ2xvc2VfY3NqYyhyZXMpIHtcclxuICAgICAgICBpZiAoKHJlcyAmJiByZXMuaXNFbmRlZCkgfHwgcmVzID09IG51bGwpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ+a/gOWKseinhumikSDlt7LlrozmlbTop4LnnIsnKVxyXG4gICAgICAgICAgICBpZiAoV1hBUElfY3NqYy5fb25SZXdhcmRlZFZpZGVvQWRDbG9zZV9jc2pjKSB7XHJcbiAgICAgICAgICAgICAgICBXWEFQSV9jc2pjLl9vblJld2FyZGVkVmlkZW9BZENsb3NlX2NzamModHJ1ZSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coJ+a/gOWKseinhumikSDmnKrlrozmlbTop4LnnIsnKVxyXG4gICAgICAgICAgICBpZiAoV1hBUElfY3NqYy5fb25SZXdhcmRlZFZpZGVvQWRDbG9zZV9jc2pjKSB7XHJcbiAgICAgICAgICAgICAgICBXWEFQSV9jc2pjLl9vblJld2FyZGVkVmlkZW9BZENsb3NlX2NzamMoZmFsc2UpXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBwcm90ZWN0ZWQgc3RhdGljIHJlZ1Jld2FyZGVkVmlkZW9BZEV2ZW50X2NzamMocmV3YXJkZWRWaWRlb0FkKSB7XHJcblxyXG4gICAgICAgIHJld2FyZGVkVmlkZW9BZC5vbkxvYWQoV1hBUElfY3NqYy5vblJld2FyZGVkVmlkZW9BZExvYWRfY3NqYylcclxuICAgICAgICByZXdhcmRlZFZpZGVvQWQub25FcnJvcihXWEFQSV9jc2pjLm9uUmV3YXJkZWRWaWRlb0FkRXJyb3JfY3NqYylcclxuICAgICAgICByZXdhcmRlZFZpZGVvQWQub25DbG9zZShXWEFQSV9jc2pjLm9uUmV3YXJkZWRWaWRlb0FkQ2xvc2VfY3NqYylcclxuXHJcbiAgICAgICAgV1hBUElfY3NqYy5faXNSZWdSZXdhcmRlZFZpZGVvQWRFdmVudF9jc2pjID0gdHJ1ZTtcclxuICAgIH1cclxuICAgIHB1YmxpYyBzdGF0aWMgc2hvd1Jld2FyZGVkVmlkZW9BZF9jc2pjKG9uQWRDbG9zZTogRnVuY3Rpb24sIG9uRmFpbGVkOiBGdW5jdGlvbikge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xyXG4gICAgICAgICAgICBXWEFQSV9jc2pjLl9vblJld2FyZGVkVmlkZW9BZENsb3NlX2NzamMgPSBvbkFkQ2xvc2U7XHJcbiAgICAgICAgICAgIFdYQVBJX2NzamMuX29uUmV3YXJkZWRWaWRlb0FkRmFpbGVkX2NzamMgPSBvbkZhaWxlZDtcclxuXHJcbiAgICAgICAgICAgIHZhciByZXdhcmRlZFZpZGVvQWQgPSBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0uY3JlYXRlUmV3YXJkZWRWaWRlb0FkKFxyXG4gICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgIGFkVW5pdElkOiBXWEFQSV9jc2pjLmFkVW5pdElkX2NzamMsXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICk7XHJcblxyXG4gICAgICAgICAgICBpZiAoIVdYQVBJX2NzamMuX2lzUmVnUmV3YXJkZWRWaWRlb0FkRXZlbnRfY3NqYykge1xyXG4gICAgICAgICAgICAgICAgV1hBUElfY3NqYy5yZWdSZXdhcmRlZFZpZGVvQWRFdmVudF9jc2pjKHJld2FyZGVkVmlkZW9BZCk7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJld2FyZGVkVmlkZW9BZC5sb2FkKCkudGhlbigoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB2YXIgcHJvbWlzZSA9IHJld2FyZGVkVmlkZW9BZC5zaG93KCk7XHJcbiAgICAgICAgICAgICAgICBwcm9taXNlLnRoZW4oKCkgPT4gY29uc29sZS5sb2coJ+a/gOWKseinhumikSDlub/lkYrmmL7npLrmiJDlip8nKSk7XHJcbiAgICAgICAgICAgICAgICBwcm9taXNlLmNhdGNoKChlcnIpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICByZXdhcmRlZFZpZGVvQWQubG9hZCgpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IHJld2FyZGVkVmlkZW9BZC5zaG93KCkpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaChlcnIgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+a/gOWKseinhumikSDlub/lkYrmmL7npLrlpLHotKUnKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uRmFpbGVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgb25GYWlsZWQoKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9KS5jYXRjaChlcnIgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+a/gOWKseinhumikSDlub/lkYrliqDovb3lpLHotKUnKVxyXG4gICAgICAgICAgICAgICAgaWYgKG9uRmFpbGVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgb25GYWlsZWQoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIG9uQWRDbG9zZSh0cnVlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuXHJcblxyXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t5bCP5ri45oiP6Lez6L2sLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICBwdWJsaWMgc3RhdGljIG5hdmlnYXRlVG9NaW5pUHJvZ3JhbV9jc2pjKGFwcElkOiBzdHJpbmcsIHBhdGg6IHN0cmluZywgb25TdWNjZXNzOiBGdW5jdGlvbiwgb25GYWlsOiBGdW5jdGlvbiwgb25Db21wbGF0ZTogRnVuY3Rpb24pIHtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazmuLjmiI/vvJogXCIgKyBhcHBJZCk7XHJcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5uYXZpZ2F0ZVRvTWluaVByb2dyYW0oXHJcbiAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwSWQ6IGFwcElkLFxyXG4gICAgICAgICAgICAgICAgICAgIHBhdGg6IHBhdGgsXHJcbiAgICAgICAgICAgICAgICAgICAgZXh0cmFEYXRhOiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZvbzogJ2JhcidcclxuICAgICAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgICAgIGVudlZlcnNpb246ICdyZWxlYXNlJyxcclxuICAgICAgICAgICAgICAgICAgICBzdWNjZXNzKHJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob25TdWNjZXNzKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvblN1Y2Nlc3MocmVzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBmYWlsKHJlcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAob25GYWlsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBvbkZhaWwocmVzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICAgICBjb21wbGV0ZShyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKG9uQ29tcGxhdGUpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIG9uQ29tcGxhdGUocmVzKVxyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS3liIbkuqstLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcbiAgICBwcm90ZWN0ZWQgc3RhdGljIF9vblNob3dfY3NqYzogRnVuY3Rpb24gPSBudWxsO1xyXG4gICAgcHJvdGVjdGVkIHN0YXRpYyBfbGFzdFNoYXJlVGltZV9jc2pjOiBudW1iZXIgPSAwO1xyXG4gICAgcHVibGljIHN0YXRpYyBzaGFyZV9jc2pjKGNvbXBsYXRlOiBGdW5jdGlvbiwgdGl0ZWw6IHN0cmluZywgaW1hZ2VVcmw6IHN0cmluZykge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xyXG4gICAgICAgICAgICBXWEFQSV9jc2pjLl9vblNob3dfY3NqYyA9ICgpID0+IHtcclxuICAgICAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5vZmZTaG93KFdYQVBJX2NzamMuX29uU2hvd19jc2pjKVxyXG4gICAgICAgICAgICAgICAgV1hBUElfY3NqYy5fb25TaG93X2NzamMgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgdmFyIGMgPSBEYXRlLm5vdygpIC0gdGhpcy5fbGFzdFNoYXJlVGltZV9jc2pjO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNvbXBsYXRlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKERhdGUubm93KCkgLSB0aGlzLl9sYXN0U2hhcmVUaW1lX2NzamMgPiAyMDAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBsYXRlKHRydWUpXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wbGF0ZShmYWxzZSlcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLm9uU2hvdyhXWEFQSV9jc2pjLl9vblNob3dfY3NqYylcclxuICAgICAgICAgICAgV1hBUElfY3NqYy5fbGFzdFNoYXJlVGltZV9jc2pjID0gRGF0ZS5ub3coKTtcclxuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLnNoYXJlQXBwTWVzc2FnZShcclxuICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogdGl0ZWwsXHJcbiAgICAgICAgICAgICAgICAgICAgaW1hZ2VVcmw6IGltYWdlVXJsXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tXHJcblxyXG5cclxuICAgIC8vLS0tLS0tLS0tLS0tLS0tLS0tLS3mj5LlsY/luZXlub/lkYotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIHB1YmxpYyBzdGF0aWMgc2hvd0ludGVyc3RpdGlhbEFkX2NzamMob25BZENsb3NlOiBGdW5jdGlvbiwgb25GYWlsZWQ6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIHZhciBpbnRlcnN0aXRpYWxBZCA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5jcmVhdGVJbnRlcnN0aXRpYWxBZCh7XHJcbiAgICAgICAgICAgICAgICBhZFVuaXRJZDogV1hBUElfY3NqYy5pbnNBZFVuaXRJZF9jc2pjLFxyXG4gICAgICAgICAgICB9KVxyXG5cclxuICAgICAgICAgICAgaW50ZXJzdGl0aWFsQWQub25Mb2FkKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfmj5LlsY/lub/lkYog5Yqg6L295a6M5oiQJyk7XHJcbiAgICAgICAgICAgICAgICBpbnRlcnN0aXRpYWxBZC5zaG93KCkuY2F0Y2goKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfmj5LlsY/lub/lkYog5pi+56S65aSx6LSlIO+8micgKyBlcnIpXHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9uRmFpbGVkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIG9uRmFpbGVkKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIGludGVyc3RpdGlhbEFkLm9uRXJyb3IoKGVycikgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+aPkuWxj+W5v+WRiiDliqDovb3lpLHotKUnICsgZXJyKTtcclxuICAgICAgICAgICAgICAgIGlmIChvbkZhaWxlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIG9uRmFpbGVkKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICBpbnRlcnN0aXRpYWxBZC5vbkNsb3NlKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfmj5LlsY/lub/lkYog5YWz6ZetJyk7XHJcbiAgICAgICAgICAgICAgICBpZiAob25BZENsb3NlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgb25BZENsb3NlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBvbkFkQ2xvc2UoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOW+l+WIsOWwj+eoi+W6j+WQr+WKqOWPguaVsOeahOWQjOatpeaWueazle+8jOWPr+W+l+WIsOS4gOS4qk9iamVjdOi/lOWbnuWAvO+8jOi/lOWbnuWAvOWFt+S9k+eahOaVsOaNrue7k+aehOWcqOS4i+mdoueahOWIl+ihqOS4rVxyXG4gICAgICogc2NlbmVcdG51bWJlclx05ZCv5Yqo5bCP5ri45oiP55qE5Zy65pmv5YC8XHJcbiAgICAgKiBxdWVyeVx0T2JqZWN0XHTlkK/liqjlsI/muLjmiI/nmoQgcXVlcnkg5Y+C5pWwXHJcbiAgICAgKiBzaGFyZVRpY2tldFx0c3RyaW5nXHRzaGFyZVRpY2tldO+8jOivpuingeiOt+WPluabtOWkmui9rOWPkeS/oeaBr1xyXG4gICAgICogcmVmZXJyZXJJbmZvXHRvYmplY3RcdOadpea6kOS/oeaBr+OAguS7juWPpuS4gOS4quWwj+eoi+W6j+OAgeWFrOS8l+WPt+aIliBBcHAg6L+b5YWl5bCP56iL5bqP5pe26L+U5Zue44CC5ZCm5YiZ6L+U5ZueIHt9XHJcbiAgICAgKiBodHRwczovL2RldmVsb3BlcnMud2VpeGluLnFxLmNvbS9taW5pZ2FtZS9kZXYvYXBpL2Jhc2UvYXBwL2xpZmUtY3ljbGUvd3guZ2V0TGF1bmNoT3B0aW9uc1N5bmMuaHRtbFxyXG4gICAgICogQHN0YXRpY1xyXG4gICAgICogQHJldHVybnMge0xhdW5jaE9wdGlvbnN9IFxyXG4gICAgICogQG1lbWJlcm9mIFdYQVBJXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0TGF1bmNoT3B0aW9uc1N5bmNfY3NqYygpIHtcclxuICAgICAgICAvLyBsZXQgcmVzdWx0ID0geyBzY2VuZTogMCwgcXVlcnk6IG51bGwsIHNoYXJlVGlja2V0OiBcIlwiLCByZWZlcnJlckluZm86IG51bGwgfTtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgbGV0IG9iaiA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5nZXRMYXVuY2hPcHRpb25zU3luYygpXHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5Zy65pmv5YC8IFwiICsgb2JqLnNjZW5lKTtcclxuICAgICAgICAgICAgbGV0IHN0ciA9IEpTT04uc3RyaW5naWZ5KG9iai5xdWVyeSk7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiUXVlcnnlj4LmlbAgXCIgKyBzdHIpO1xyXG4gICAgICAgICAgICBsZXQga2V5ID0gb2JqLnF1ZXJ5W1wia2V5XCJdO1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIlF1ZXJ55Y+C5pWw77yaa2V5IFwiICsga2V5KTtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCJTaGFyZVRpY2tldCBcIiArIG9iai5zaGFyZVRpY2tldCk7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiUmVmZXJyZXJJbmZvLmFwcElkIFwiICsgb2JqLnJlZmVycmVySW5mby5hcHBJZCk7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiUmVmZXJyZXJJbmZvLmV4dHJhRGF0YSBcIiArIG9iai5yZWZlcnJlckluZm8uZXh0cmFEYXRhKTtcclxuICAgICAgICAgICAgcmV0dXJuIG9iajtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IG9iaiA9IHsgc2NlbmU6IDEwMDEsIHF1ZXJ5OiBcIlwiLCBzaGFyZVRpY2tldDogXCJcIiwgYXBwSWQ6IFwiXCIsIGV4dHJhRGF0YTogXCJcIiB9XHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICAvLy0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1cclxuICAgIC8qKlxyXG4gICAgICog5omT5byA5b6u5L+h5bem5LiK6KeS5YiG5Lqr6L2s5Y+R54K55Ye75LqL5Lu2LOWcqOa4uOaIj+mAu+i+keS4reiwg+eUqOS4gOasoeWNs+WPr1xyXG4gICAgICog5rOo5oSP5q2k5pa55rOV5Y+q5Lya5Zyo55yf5py65LiK5omn6KGM77yM5Zyo5b6u5L+h5qih5ouf5Zmo546v5aKD5LiL54K55Ye76L2s5Y+R5oyJ6ZKu5LuA5LmI6YO95LiN5Lya5Y+R55SfXHJcbiAgICAgKiBcclxuICAgICAqIEBzdGF0aWNcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSB0aXRlbCDliIbkuqvmoIfpophcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBpbWFnZVVybCDliIbkuqvlm77niYflnLDlnYBcclxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IFtzdWNjZXNzXSDmiJDlip/lm57osIPlh73mlbAo5Y+v5LiN5aGrKVxyXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gW2ZhaWxdIOWksei0peWbnuiwg+WHveaVsCjlj6/kuI3loaspXHJcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBbY29tcGxhdGVdIOWujOaIkOWbnuiwg+WHveaVsO+8jOaIkOWKn+Wksei0pemDveS8muaJp+ihjCjlj6/kuI3loaspXHJcbiAgICAgKiBAbWVtYmVyb2YgV1hBUElcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBTZXRTaGFyZU1lbnVfY3NqYyh0aXRlbDogc3RyaW5nLCBpbWFnZVVybDogc3RyaW5nLCBzdWNjZXNzPzogRnVuY3Rpb24sIGZhaWw/OiBGdW5jdGlvbiwgY29tcGxhdGU/OiBGdW5jdGlvbikge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWwj+a4uOaIj+iuvue9rui9rOWPkeaMiemSrlwiKTtcclxuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLnNob3dTaGFyZU1lbnUoe1xyXG4gICAgICAgICAgICAgICAgd2l0aFNoYXJlVGlja2V0OiBmYWxzZSxcclxuICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IHN1Y2Nlc3MsXHJcbiAgICAgICAgICAgICAgICBmYWlsOiBmYWlsLFxyXG4gICAgICAgICAgICAgICAgY29tcGxldGU6IGNvbXBsYXRlXHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0ub25TaGFyZUFwcE1lc3NhZ2UoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgICAgICAgICB0aXRsZTogdGl0ZWwsXHJcbiAgICAgICAgICAgICAgICAgICAgaW1hZ2VVcmw6IGltYWdlVXJsXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvL+ajgOa1i+abtOaWsFxyXG4gICAgcHVibGljIHN0YXRpYyBjaGVja1VwZGF0ZV9jc2pjKCkgIHtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgdmFyIHVwZGF0ZU1hbmFnZXIgPSBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0uZ2V0VXBkYXRlTWFuYWdlcigpXHJcbiAgICAgICAgICAgIHVwZGF0ZU1hbmFnZXIub25DaGVja0ZvclVwZGF0ZShmdW5jdGlvbiAocmVzKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuaYr+WQpumcgOimgeabtOaWsCA6IFwiLCByZXMuaGFzVXBkYXRlKVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB1cGRhdGVNYW5hZ2VyLm9uVXBkYXRlUmVhZHkoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLnNob3dNb2RhbCh7XHJcbiAgICAgICAgICAgICAgICAgICAgdGl0bGU6ICfmm7TmlrDmj5DnpLonLFxyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6ICfmlrDniYjmnKzlt7Lnu4/lh4blpIflpb3vvIzmmK/lkKbph43lkK/lsI/muLjmiI/vvJ8nLFxyXG4gICAgICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcy5jb25maXJtKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1cGRhdGVNYW5hZ2VyLmFwcGx5VXBkYXRlKClcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIHVwZGF0ZU1hbmFnZXIub25VcGRhdGVGYWlsZWQoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLmlrDniYjmnKzkuIvovb3lpLHotKUhISFcIilcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBIdHRwVG9vbHMgfSBmcm9tIFwiLi9IdHRwVW5pdFwiO1xyXG5pbXBvcnQgR2FtZVNldHRpbmdzX2NzamMgZnJvbSBcIi4uL0dhbWVTZXR0aW5nc1wiO1xyXG5pbXBvcnQgVXNlcl9jc2pjIGZyb20gXCIuLi9Vc2VyL1VzZXJcIjtcclxuaW1wb3J0IFdYQVBJX2NzamMgZnJvbSBcIi4uL1BsYXRmb3JtQXBpL1dYQVBJXCI7XHJcbmltcG9ydCBUbUFQSSBmcm9tIFwiLi4vVG1BUEkvVG1BUElcIjtcclxuaW1wb3J0IEV2ZW50TWdyX2NzamMgZnJvbSBcIi4uL0V2ZW50L0V2ZW50TWdyXCI7XHJcbmltcG9ydCB7IEV2ZW50RGVmX2NzamMgfSBmcm9tIFwiLi4vRXZlbnQvRXZlbnREZWZcIjtcclxuaW1wb3J0IEV2ZW50TWdyIGZyb20gXCIuLi9FdmVudC9FdmVudE1nclwiO1xyXG5cclxuLyoqIOe7hOS7tuagt+W8jyAqL1xyXG5leHBvcnQgZW51bSBDb21wb25lbnRTdHlsZSB7XHJcbiAgICBjZV9sYV9sYW4gPSAxLCAvL+S+p+aLieagj1xyXG4gICAgaF9zbGlkZXIgPSAyLCAvL+W3puWPs+aoquWQkea7keWKqFxyXG4gICAgYmFubmVyID0gMywgLy9iYW5uZXJcclxuICAgIGJpZ19leHBvcnRfdWkgPSA0LCAvL+Wkp+WvvOWHuumhtVxyXG4gICAgb3Zlcl91aSA9IDUsIC8v57uT5p2f6aG1XHJcbiAgICB3ZWlfdHVpX2NodSA9IDYsIC8v5Lyq6YCA5Ye6c1xyXG59XHJcblxyXG4vKiogQVBQ5pON5L2c6K6w5b2VICovXHJcbmV4cG9ydCBjbGFzcyBBUFBJdGVtUmVjb3JkIHtcclxuICAgIC8qKiDlub/lkYrmuLjmiI9hcHBJZCAqL1xyXG4gICAgcHVibGljIGV4cG9ydFByb2R1Y3RJZDogc3RyaW5nO1xyXG4gICAgLyoqIOWHuueOsOeahOS9jee9rue8luWPt+iusOW9lSAqL1xyXG4gICAgcHVibGljIGxvY2F0aW9uQ29kZTogc3RyaW5nO1xyXG4gICAgLyoqIOWxleekuuasoeaVsCAqL1xyXG4gICAgcHVibGljIGRpc3BsYXlDb3VudDogbnVtYmVyID0gMDtcclxuICAgIC8qKiDngrnlh7vmrKHmlbAgKi9cclxuICAgIHB1YmxpYyBjbGlja0NvdW50OiBudW1iZXIgPSAwO1xyXG4gICAgLyoqIOWvvOWHuuasoeaVsCAqL1xyXG4gICAgcHVibGljIGV4cG9ydENvdW50OiBudW1iZXIgPSAwO1xyXG4gICAgLyoqIOaYr+WQpuaIkOWKn+WvvOWHuiAx5bey5a+85Ye6ICovXHJcbiAgICBwdWJsaWMgaXNFeHBvcnQ6IG51bWJlciA9IDA7XHJcbn1cclxuXHJcbi8qKiBBUFDkv6Hmga8gKi9cclxuZXhwb3J0IGNsYXNzIEFQUEl0ZW0ge1xyXG4gICAgLyoq5Yqo5Zu+5bqP5YiX5binICovXHJcbiAgICBwdWJsaWMgZ2lmTGlzdDogQXJyYXk8c3RyaW5nPiA9IFtdO1xyXG4gICAgLyoqIOaPkuWxj+WbvueJh+WIl+ihqCAqL1xyXG4gICAgcHVibGljIHNjcmVlbkxpc3Q6IEFycmF5PHN0cmluZz4gPSBbXTtcclxuICAgIC8qKiDmuLjmiI/lkI3np7AgKi9cclxuICAgIHB1YmxpYyBnYW1lTmFtZTogc3RyaW5nO1xyXG4gICAgLyoqIGJhbm5lcuWbvueJh+WIl+ihqCAqL1xyXG4gICAgcHVibGljIGJhbm5lckxpc3Q6IEFycmF5PHN0cmluZz4gPSBbXTtcclxuICAgIC8qKiDlub/lkYrmuLjmiI9hcHBJZCAqL1xyXG4gICAgcHVibGljIGFwcElkOiBzdHJpbmc7XHJcbiAgICAvKiog6Lev5b6E5Zyw5Z2AICovXHJcbiAgICBwdWJsaWMgYWR2ZXJ0UGF0aDogc3RyaW5nO1xyXG4gICAgLyoqIOadg+mHjSAqL1xyXG4gICAgcHVibGljIHdlaWdodDogbnVtYmVyID0gMTtcclxuICAgIC8vIC8qKiBpY29u5Zu+54mH5YiX6KGoICovXHJcbiAgICBwdWJsaWMgaWNvbkZpbGxldExpc3Q6IEFycmF5PHN0cmluZz4gPSBbXTtcclxuICAgIC8qKiDlub/lkYppZCAqL1xyXG4gICAgcHVibGljIGFkdmVydElkOiBudW1iZXI7XHJcbiAgICAvKiog5bGV56S65qyh5pWwICovXHJcbiAgICBwdWJsaWMgZGlzcGxheUNvdW50OiBudW1iZXIgPSAwO1xyXG4gICAgLyoq5L2/55So55qE5Zu+54mH6LWE5rqQ77yMbGVuZ3Ro5Li6MeihqOekuumdmeWbvu+8jD4x6KGo56S65L2/55SoZ2lmdCAqL1xyXG4gICAgcHVibGljIHVzZUltZ0xpc3Q6IEFycmF5PHN0cmluZz4gPSBbXTtcclxufVxyXG5cclxuXHJcbmV4cG9ydCBjbGFzcyBBZERhdGFNZ3Ige1xyXG5cclxuICAgIHByaXZhdGUgc3RhdGljIF9pbnN0YW5jZTogQWREYXRhTWdyO1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0IEluc3RhbmNlKCk6IEFkRGF0YU1nciB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2luc3RhbmNlID09IG51bGwpIHtcclxuICAgICAgICAgICAgdGhpcy5faW5zdGFuY2UgPSBuZXcgQWREYXRhTWdyKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiB0aGlzLl9pbnN0YW5jZTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIG1BcHBJZDogc3RyaW5nID0gJyc7IC8v5Lqn5ZOB55qEYXBwaWRcclxuICAgIHByaXZhdGUgbU9wZW5JZDogc3RyaW5nID0gJyc7IC8v55So5oi355qEb3BlbmlkXHJcbiAgICBwcml2YXRlIG1Qcm9kdWN0SWQ6IG51bWJlciA9IDA7IC8v5Lqn5ZOBaWRcclxuICAgIHByaXZhdGUgbVNlcnZlclJvb3RVcmw6IHN0cmluZyA9ICdcImh0dHBzOi8vcXAucWluZ3B1a2ouY29tOjgwNTUvJzsgLy/muLjmiI/mnI3liqHlmajmjqXlj6N1cmzmoLnot6/lvoRcclxuXHJcbiAgICBwcm90ZWN0ZWQgX2NhblVzZWRTdHlsZTogQXJyYXk8Q29tcG9uZW50U3R5bGU+ID0gW107IC8vIOWPr+W8gOWQr+eahOWvvOWHuue7hOS7tuexu+WeiyAoQ29tcG9uZW50U3R5bGUpXHJcbiAgICBwcm90ZWN0ZWQgX3Byb2R1Y3RzOiBBcnJheTxBUFBJdGVtPiA9IFtdOyAvLyDlhajkuqflk4Hkv6Hmga8gXHJcbiAgICBwcm90ZWN0ZWQgX2lzQ2hlY2s6IGJvb2xlYW4gPSBmYWxzZTsgLy8g5piv5ZCm5bey6L+H5a6hXHJcblxyXG4gICAgcHJvdGVjdGVkIF9sb2FkZWQ6IGJvb2xlYW4gPSBmYWxzZTsgLy/mlbDmja7liqDovb3miJDlip9cclxuXHJcbiAgICBwcm90ZWN0ZWQgc2hhcmVDb3VudCA9IDA7XHJcbiAgICAvKiogc3R5bGXlr7zlh7rmrKHmlbAgKi9cclxuICAgIHByaXZhdGUgX21hdGVyaWFMaXN0OiBBUFBJdGVtUmVjb3JkW10gPSBbXTtcclxuICAgIC8qKiDlr7zlh7rkuqflk4HorrDlvZUgKi9cclxuICAgIHByaXZhdGUgX2V4cG9ydFByb2R1Y3RMaXN0OiB7IHByb2R1Y3RJZDogc3RyaW5nLCBjbGlja0NvdW50OiBudW1iZXIgfVtdID0gW107XHJcblxyXG4gICAgLyoqIOS4iuaKpeaVsOaNriAqL1xyXG4gICAgcHJvdGVjdGVkIF91cmxfbWF0cml4UmVwb3J0ID0gXCJyZXBvcnRHYW1lL21hdHJpeFJlcG9ydFwiO1xyXG5cclxuICAgIC8qKiDorrDlvZUgKi9cclxuICAgIHByb3RlY3RlZCBfcmVjb3JkaW5nID0gZmFsc2U7XHJcblxyXG4gICAgcHVibGljIEluaXRNYXRpeChjYWxsYmFjaz86IEZ1bmN0aW9uLCBzZXJ2ZXJSb290VXJsOiBzdHJpbmcgPSBcImh0dHBzOi8vcXAucWluZ3B1a2ouY29tOjgwNTUvXCIpIHtcclxuICAgICAgICB0aGlzLm1BcHBJZCA9IEdhbWVTZXR0aW5nc19jc2pjLkFwcElEX2NzamM7XHJcbiAgICAgICAgdGhpcy5tU2VydmVyUm9vdFVybCA9IHNlcnZlclJvb3RVcmw7XHJcbiAgICAgICAgdGhpcy5Jbml0KGNhbGxiYWNrIHx8IG51bGwpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgSW5pdChjYWxsYmFjaz86IEZ1bmN0aW9uLCBzaGFyZVVzZXI6IHN0cmluZyA9ICcnKSB7XHJcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIHRoaXMuTG9hZEluZm8oc2hhcmVVc2VyLCBmdW5jdGlvbiAocmVzKSB7XHJcbiAgICAgICAgICAgIHNldEludGVydmFsKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIHNlbGYuVXBkYXRlUmVjb3JkKCk7XHJcbiAgICAgICAgICAgIH0sIDMwMDAwKTtcclxuICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2socmVzKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvKiog5Yqg6L296YWN572uICovXHJcbiAgICBwcml2YXRlIExvYWRJbmZvKHNoYXJlVXNlcjogc3RyaW5nLCBjYWxsYmFjaz86IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIGxldCBvcHRpb24gPSBXWEFQSV9jc2pjLmdldExhdW5jaE9wdGlvbnNTeW5jX2NzamMoKTtcclxuICAgICAgICBsZXQgc2NlbmVDb2RlID0gb3B0aW9uLnNjZW5lO1xyXG4gICAgICAgIGxldCBzY2VuZUFwcElkID0gJyc7XHJcbiAgICAgICAgaWYgKG9wdGlvbi5yZWZlcnJlckluZm8gJiYgb3B0aW9uLnJlZmVycmVySW5mby5hcHBJZCkgc2NlbmVBcHBJZCA9IG9wdGlvbi5yZWZlcnJlckluZm8uYXBwSWQ7XHJcbiAgICAgICAgbGV0IHVybCA9IHNlbGYubVNlcnZlclJvb3RVcmwgKyAnYnVzaW5lc3MvcHJvZHVjdC9nYW1lL2dldFByb2R1Y3RJbmZvJztcclxuICAgICAgICBsZXQgcGFyYW1zT2JqOiBhbnkgPSB7fTtcclxuICAgICAgICBwYXJhbXNPYmouYXBwSWQgPSBHYW1lU2V0dGluZ3NfY3NqYy5BcHBJRF9jc2pjO1xyXG4gICAgICAgIHBhcmFtc09iai5jb2RlID0gVXNlcl9jc2pjLmNvZGVfY3NqYztcclxuICAgICAgICBwYXJhbXNPYmouc2NlbmVDb2RlID0gc2NlbmVDb2RlO1xyXG4gICAgICAgIHBhcmFtc09iai5zY2VuZUFwcElkID0gc2NlbmVBcHBJZDtcclxuICAgICAgICBwYXJhbXNPYmouc2hhcmVVc2VyID0gc2hhcmVVc2VyO1xyXG4gICAgICAgIGxldCBwYXJhbXNNc2cgPSBBZERhdGFNZ3IuSW5zdGFuY2UuR2V0UGFyYW1zTXNnRm9yT2JqKHBhcmFtc09iaik7XHJcbiAgICAgICAgSHR0cFRvb2xzLlBvc3QodXJsLCBwYXJhbXNNc2csIHRoaXMsIChkYXRhKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiW01hdHJpeF3or7vlj5bmnI3liqHnn6npmLXmlbDmja7vvJpcIiwgZGF0YSk7XHJcbiAgICAgICAgICAgIGlmIChkYXRhICYmIGRhdGEuY29kZSA9PSAwKSB7XHJcbiAgICAgICAgICAgICAgICBzZWxmLl9jYW5Vc2VkU3R5bGUgPSBbXTtcclxuICAgICAgICAgICAgICAgIGxldCBjYW5Vc2VTdHJpbmdTdHlsZSA9IGRhdGEuc3R5bGVBc3NlbWJseS5zcGxpdChcIixcIik7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGNhblVzZVN0cmluZ1N0eWxlLmxlbmd0aDsgKytpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fY2FuVXNlZFN0eWxlLnB1c2goTnVtYmVyKGNhblVzZVN0cmluZ1N0eWxlW2ldKSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBzZWxmLm1Qcm9kdWN0SWQgPSBkYXRhLnByb2R1Y3RJZDtcclxuICAgICAgICAgICAgICAgIHNlbGYuX2lzQ2hlY2sgPSAoTnVtYmVyKGRhdGEuaXNDaGVjaykgPT0gMSk7ICAvLzHpgJrov4fvvIwy5LiN6YCa6L+HIChzdHJpbmfnsbvlnospXHJcbiAgICAgICAgICAgICAgICBzZWxmLl9wcm9kdWN0cyA9IFtdO1xyXG4gICAgICAgICAgICAgICAgaWYgKCFkYXRhLnByb2R1Y3RFeHBvcnRMaXN0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5fbG9hZGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBkYXRhLnByb2R1Y3RFeHBvcnRMaXN0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGFwcCA9IGRhdGEucHJvZHVjdEV4cG9ydExpc3RbaV07XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IHByb2R1Y3RJbmZvOiBBUFBJdGVtID0gbmV3IEFQUEl0ZW0oKTtcclxuICAgICAgICAgICAgICAgICAgICBwcm9kdWN0SW5mby5zY3JlZW5MaXN0ID0gYXBwLnNjcmVlbkxpc3Q7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvZHVjdEluZm8uZ2lmTGlzdCA9IGFwcC5naWZMaXN0O1xyXG4gICAgICAgICAgICAgICAgICAgIHByb2R1Y3RJbmZvLmdhbWVOYW1lID0gYXBwLmdhbWVOYW1lO1xyXG4gICAgICAgICAgICAgICAgICAgIHByb2R1Y3RJbmZvLmJhbm5lckxpc3QgPSBhcHAuYmFubmVyTGlzdDtcclxuICAgICAgICAgICAgICAgICAgICBwcm9kdWN0SW5mby5hcHBJZCA9IGFwcC5hcHBJZDtcclxuICAgICAgICAgICAgICAgICAgICBwcm9kdWN0SW5mby5hZHZlcnRQYXRoID0gYXBwLmFkdmVydFBhdGg7XHJcbiAgICAgICAgICAgICAgICAgICAgcHJvZHVjdEluZm8ud2VpZ2h0ID0gYXBwLndlaWdodDtcclxuICAgICAgICAgICAgICAgICAgICBwcm9kdWN0SW5mby5pY29uRmlsbGV0TGlzdCA9IGFwcC5pY29uRmlsbGV0TGlzdDtcclxuICAgICAgICAgICAgICAgICAgICBwcm9kdWN0SW5mby5hZHZlcnRJZCA9IGFwcC5hZHZlcnRJZDtcclxuICAgICAgICAgICAgICAgICAgICBwcm9kdWN0SW5mby5kaXNwbGF5Q291bnQgPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuX3Byb2R1Y3RzLnB1c2gocHJvZHVjdEluZm8pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKFVzZXJfY3NqYy5vcGVuSWRfY3NqYyA9PSBcIlwiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5tT3BlbklkID0gZGF0YS5vcGVuSWQ7XHJcbiAgICAgICAgICAgICAgICAgICAgVXNlcl9jc2pjLm9wZW5JZF9jc2pjID0gdGhpcy5tT3BlbklkO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIuefqemYteWIl+ihqFwiLCB0aGlzLl9wcm9kdWN0cyk7XHJcbiAgICAgICAgICAgICAgICBzZWxmLl9sb2FkZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMubG9hZEFsbExpbmsoKTtcclxuICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soZGF0YSk7XHJcbiAgICAgICAgfSwgKGRhdGEpID0+IHtcclxuICAgICAgICAgICAgaWYgKHRydWUvKiBQbGF0Zm9ybU1hbmFnZXIuSW5zdGFuY2UuQ3VycmVudEFnZW50LkNvbnRlbnROYW1lID09IFwiRGVmYXVsdFwiICovKSB7XHJcbiAgICAgICAgICAgICAgICBzZWxmLl9wcm9kdWN0cyA9IFtdXHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IDEwOyBpKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBsZXQgZGF0YTEgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkdmVydElkOiAyMzMsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFkdmVydFBhdGg6IFwiP3d4Z2FtZWNpZD1DQ0JnQUFvWGtwUUFNMktWTlhSZjlCS1FcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXBwSWQ6IFwid3hjNWQxN2ZkZjUxNWZiYmMyXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGJhbm5lckxpc3Q6IFtcImh0dHBzOi8vaG4uZzU4bWFsbC5jb20vZ2FtZURldm9wc0ltZ3MvMjAyMDA5MTUvMjAyMDA5MTUxMDQzMjhfaGU3di5qcGdcIl0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRpc3BsYXlDb3VudDogMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgZ2FtZU5hbWU6IFwi6aaZ6IKg5aSn5Yaz5paXXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGdpZkxpc3Q6IFtdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBpY29uRmlsbGV0TGlzdDogW1wiaHR0cHM6Ly9obi5nNThtYWxsLmNvbS9nYW1lRGV2b3BzSW1ncy8yMDIwMTAyMi8yMDIwMTAyMjE2MjczMl91dGFvLmpwZ1wiLCBcImh0dHBzOi8vaG4uZzU4bWFsbC5jb20vZ2FtZURldm9wc0ltZ3MvMjAyMDEwMjIvMjAyMDEwMjIxNjI3NDRfNTh2ZC5wbmdcIl0sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNjcmVlbkxpc3Q6IFtcImh0dHBzOi8vaG4uZzU4bWFsbC5jb20vZ2FtZURldm9wc0ltZ3MvMjAyMDA5MTUvMjAyMDA5MTUxMDQyNDRfa2Vway5qcGdcIiwgXCJodHRwczovL2huLmc1OG1hbGwuY29tL2dhbWVEZXZvcHNJbWdzLzIwMjAwOTE3LzIwMjAwOTE3MTYwNTI0X2h4YmkucG5nXCJdLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB1c2VJbWdMaXN0OiBbXSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2VpZ2h0OiAxMFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBzZWxmLl9wcm9kdWN0cy5wdXNoKGRhdGExKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHNlbGYuX2xvYWRlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmxvYWRBbGxMaW5rKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY2FsbGJhY2sgJiYgY2FsbGJhY2soZGF0YSk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOW6lOeUqOi3s+i9rCAqL1xyXG4gICAgcHVibGljIE5hdmlnYXRlVG8oc3R5bGU6IENvbXBvbmVudFN0eWxlLCBkYXRhOiBBUFBJdGVtLCBfc3VjY2Vzcz86IEZ1bmN0aW9uLCBfZmFpbD86IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgQWREYXRhTWdyLkluc3RhbmNlLkFkZENsaWNrUmVjb3JkKHN0eWxlLCBkYXRhKTtcclxuICAgICAgICBXWEFQSV9jc2pjLm5hdmlnYXRlVG9NaW5pUHJvZ3JhbV9jc2pjKFxyXG4gICAgICAgICAgICBkYXRhLmFwcElkLFxyXG4gICAgICAgICAgICBkYXRhLmFkdmVydFBhdGgsXHJcbiAgICAgICAgICAgIChyZXMpID0+IHtcclxuICAgICAgICAgICAgICAgIEFkRGF0YU1nci5JbnN0YW5jZS5BZGRPcGVuUmVjb3JkKHN0eWxlLCBkYXRhLCB0cnVlKTtcclxuICAgICAgICAgICAgICAgIEFkRGF0YU1nci5JbnN0YW5jZS5VcGRhdGVSZWNvcmQoKTtcclxuICAgICAgICAgICAgICAgIEV2ZW50TWdyLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5BRF9PblNoYXJlQWRTdWNjZXNzX2NzamMsIHN0eWxlKTtcclxuICAgICAgICAgICAgICAgIGlmIChfc3VjY2VzcykgX3N1Y2Nlc3MocmVzKTtcclxuICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgKHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzLmVyck1zZyk7XHJcbiAgICAgICAgICAgICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5BRF9PblNoYXJlQWRGYWlsX2NzamMpO1xyXG4gICAgICAgICAgICAgICAgaWYgKF9mYWlsKSBfZmFpbChyZXMpXHJcbiAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgIChyZXMpID0+IHsgfVxyXG4gICAgICAgICk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOiOt+WPlumAmueUqOe7hOS7tuaVsOaNrlxyXG4gICAgKiBzdHlsZe+8miDmjqfku7bnsbvlnotcclxuICAgICogY291bnTvvJog55Sf5oiQ5pWw6YePXHJcbiAgICAqIHJldHVybu+8muayoeacieaVsOaNruaXtui/lOWbnuepuuaVsOe7hFxyXG4gICAgKi9cclxuICAgIC8vIHB1YmxpYyBHZXREYXRhQnlTdHlsZUFuZENvdW50KHN0eWxlOiBDb21wb25lbnRTdHlsZSwgY291bnQ6IG51bWJlcik6IEFycmF5PEFQUEl0ZW0+IHtcclxuICAgIC8vICAgICBsZXQgcmVzdWx0OiBBUFBJdGVtW10gPSBbXTtcclxuICAgIC8vICAgICBpZiAoIXRoaXMuX3Byb2R1Y3RzIHx8IHRoaXMuX3Byb2R1Y3RzLmxlbmd0aCA9PSAwKSByZXR1cm4gcmVzdWx0O1xyXG4gICAgLy8gICAgIGlmICghdGhpcy5DYW5Vc2VTdHlsZShzdHlsZSkpIHJldHVybiByZXN1bHQ7XHJcbiAgICAvLyAgICAgaWYgKCF0aGlzLl9sb2FkZWQpIHJldHVybiByZXN1bHQ7XHJcblxyXG4gICAgLy8gICAgIGxldCBsaWJzOiBBUFBJdGVtW10gPSBbXTtcclxuICAgIC8vICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX3Byb2R1Y3RzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAvLyAgICAgICAgIGxpYnNbaV0gPSB0aGlzLl9wcm9kdWN0c1tpXTtcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyAgICAgbGV0IHVzZWRJbWdzQXJyYXk6IEFycmF5PHN0cmluZz4gPSBbXTtcclxuICAgIC8vICAgICBsZXQgdXNlR2lmQWRJZHNBcnJheTogQXJyYXk8c3RyaW5nPiA9IFtdO1xyXG5cclxuICAgIC8vICAgICBsZXQgbG9vcENvdW50ID0gMDtcclxuICAgIC8vICAgICB3aGlsZSAocmVzdWx0Lmxlbmd0aCA8IGNvdW50ICYmIGxpYnMubGVuZ3RoID4gMCAmJiBsb29wQ291bnQgPCBjb3VudCAqIDUwKSB7XHJcbiAgICAvLyAgICAgICAgICsrbG9vcENvdW50O1xyXG4gICAgLy8gICAgICAgICBsZXQgaW5kZXggPSBBZERhdGFNZ3IuSW5zdGFuY2UuR2V0UmFuZG9tQnlXZWlnaHQobGlicyk7XHJcbiAgICAvLyAgICAgICAgIGxldCByYW5kRGF0YSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkobGlic1tpbmRleF0pKTtcclxuICAgIC8vICAgICAgICAgbGV0IGlzQ2FuVXNlR2lmID0gKHVzZUdpZkFkSWRzQXJyYXkuaW5kZXhPZihyYW5kRGF0YS5hcHBJZCkgPT0gLTEpO1xyXG4gICAgLy8gICAgICAgICBsZXQgdXNlSW1nVXJscyA9IEFkRGF0YU1nci5JbnN0YW5jZS5HZXRVc2VJbWdVcmwoc3R5bGUsIHJhbmREYXRhLCBpc0NhblVzZUdpZiwgdXNlZEltZ3NBcnJheSk7XHJcbiAgICAvLyAgICAgICAgIGlmICh1c2VJbWdVcmxzLmxlbmd0aCA+IDApIHtcclxuICAgIC8vICAgICAgICAgICAgIHJhbmREYXRhLnVzZUltZ0xpc3QgPSB1c2VJbWdVcmxzO1xyXG4gICAgLy8gICAgICAgICAgICAgcmVzdWx0LnB1c2gocmFuZERhdGEpO1xyXG4gICAgLy8gICAgICAgICAgICAgaWYgKHVzZUltZ1VybHMubGVuZ3RoID09IDEpIHtcclxuICAgIC8vICAgICAgICAgICAgICAgICB1c2VkSW1nc0FycmF5LnB1c2godXNlSW1nVXJsc1swXSk7XHJcbiAgICAvLyAgICAgICAgICAgICB9XHJcbiAgICAvLyAgICAgICAgICAgICBlbHNlIHtcclxuICAgIC8vICAgICAgICAgICAgICAgICB1c2VHaWZBZElkc0FycmF5LnB1c2gocmFuZERhdGEuYXBwSWQpO1xyXG4gICAgLy8gICAgICAgICAgICAgfVxyXG5cclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgICBlbHNlIHtcclxuICAgIC8vICAgICAgICAgICAgIGxpYnMuc3BsaWNlKGluZGV4LCAxKTtcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgIH1cclxuICAgIC8vICAgICByZXN1bHQgPSB0aGlzLlJlcGV0aXRpb25BcnIocmVzdWx0KTtcclxuICAgIC8vICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgLy8gfVxyXG5cclxuICAgIC8qKiDojrflj5bpgJrnlKjnu4Tku7bmlbDmja5cclxuICAgICogc3R5bGXvvJog5o6n5Lu257G75Z6LXHJcbiAgICAqIGNvdW5077yaIOeUn+aIkOaVsOmHj1xyXG4gICAgKiByZXR1cm7vvJrmsqHmnInmlbDmja7ml7bov5Tlm57nqbrmlbDnu4RcclxuICAgICovXHJcbiAgICBwdWJsaWMgR2V0RGF0YUJ5U3R5bGVBbmRDb3VudChzdHlsZTogQ29tcG9uZW50U3R5bGUsIGNvdW50OiBudW1iZXIpOiBBcnJheTxBUFBJdGVtPiB7XHJcbiAgICAgICAgLy8gY2MuZXJyb3IoJ3N0eWxlID09PT4nLCBzdHlsZSwgY291bnQpO1xyXG4gICAgICAgIGxldCByZXN1bHQ6IEFQUEl0ZW1bXSA9IFtdO1xyXG4gICAgICAgIGlmICghdGhpcy5fcHJvZHVjdHMgfHwgdGhpcy5fcHJvZHVjdHMubGVuZ3RoID09IDApIHJldHVybiByZXN1bHQ7XHJcbiAgICAgICAgLy8gaWYgKCF0aGlzLmNhblVzZVN0eWxlKHN0eWxlKSkgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgICBpZiAoIXRoaXMuX2xvYWRlZCkgcmV0dXJuIHJlc3VsdDtcclxuICAgICAgICBsZXQgYXJyID0gWzRdO1xyXG4gICAgICAgIGlmICh0aGlzLnNjcmVlbkxpc3QubGVuZ3RoIDwgY291bnQgfHwgdGhpcy5pY29uTGlzdC5sZW5ndGggPCBjb3VudCkgdGhpcy5sb2FkQWxsTGluaygpO1xyXG4gICAgICAgIGlmIChzdHlsZSA9PSAzKSB7XHJcbiAgICAgICAgICAgIHJlc3VsdCA9IHRoaXMuYmFubmVyTGlzdC5zcGxpY2UoMCwgY291bnQpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoYXJyLmluZGV4T2Yoc3R5bGUpID4gLTEpIHtcclxuICAgICAgICAgICAgcmVzdWx0ID0gdGhpcy5zY3JlZW5MaXN0LnNwbGljZSgwLCBjb3VudCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgcmVzdWx0ID0gdGhpcy5pY29uTGlzdC5zcGxpY2UoMCwgY291bnQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLkFkZFNob3dSZWNvcmQoc3R5bGUpO1xyXG4gICAgICAgIC8vIGNjLmVycm9yKCdyZXMgPT0nLCByZXN1bHQpO1xyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcblxyXG4gICAgaWNvbkxpc3QgPSBbXTtcclxuICAgIHNjcmVlbkxpc3QgPSBbXTtcclxuICAgIGJhbm5lckxpc3QgPSBbXTtcclxuICAgIGljb25OYW1lcyA9IFtdO1xyXG4gICAgc2NyZWVuTmFtZXMgPSBbXTtcclxuICAgIHB1YmxpYyBsb2FkQWxsTGluaygpIHtcclxuICAgICAgICB0aGlzLmljb25MaXN0ID0gW107XHJcbiAgICAgICAgdGhpcy5zY3JlZW5MaXN0ID0gW107XHJcbiAgICAgICAgLy8gdGhpcy5pY29uTmFtZXMgPSBbXTtcclxuICAgICAgICAvLyB0aGlzLnNjcmVlbk5hbWVzID0gW107XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9wcm9kdWN0cy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgYXBwSXRlbTogQVBQSXRlbSA9IHRoaXMuX3Byb2R1Y3RzW2ldO1xyXG4gICAgICAgICAgICBhcHBJdGVtLmljb25GaWxsZXRMaXN0LnNvcnQoKGEsIGIpID0+IE1hdGgucmFuZG9tKCkgLSAwLjUpO1xyXG4gICAgICAgICAgICBhcHBJdGVtLnNjcmVlbkxpc3Quc29ydCgoYSwgYikgPT4gTWF0aC5yYW5kb20oKSAtIDAuNSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBfaWNvbkxpc3QxID0gW107XHJcbiAgICAgICAgICAgIGxldCBfaWNvbkxpc3QyID0gW107XHJcbiAgICAgICAgICAgIGxldCBfc2NyZWVuTGlzdDEgPSBbXTtcclxuICAgICAgICAgICAgbGV0IF9zY3JlZW5MaXN0MiA9IFtdO1xyXG4gICAgICAgICAgICBmb3IgKGxldCBqID0gMDsgaiA8IHRoaXMuX3Byb2R1Y3RzLmxlbmd0aDsgaisrKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgYXBwSXRlbSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5fcHJvZHVjdHNbal0pKTtcclxuICAgICAgICAgICAgICAgIGlmIChhcHBJdGVtLmljb25GaWxsZXRMaXN0W2ldKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwSXRlbSA9IEpTT04ucGFyc2UoSlNPTi5zdHJpbmdpZnkodGhpcy5fcHJvZHVjdHNbal0pKTtcclxuICAgICAgICAgICAgICAgICAgICBhcHBJdGVtLnVzZUltZ0xpc3QgPSBbYXBwSXRlbS5pY29uRmlsbGV0TGlzdFtpXV07XHJcbiAgICAgICAgICAgICAgICAgICAgaiA+IHRoaXMuX3Byb2R1Y3RzLmxlbmd0aCAvIDIgPyBfaWNvbkxpc3QxLnB1c2goYXBwSXRlbSkgOiBfaWNvbkxpc3QyLnB1c2goYXBwSXRlbSk7XHJcbiAgICAgICAgICAgICAgICAgICAgLy8gdGhpcy5pY29uTmFtZXMucHVzaCh7Z2FtZU5hbWU6IGFwcEl0ZW0uZ2FtZU5hbWUsIHVzZUltZ0xpc3Q6IGFwcEl0ZW0udXNlSW1nTGlzdH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGFwcEl0ZW0uc2NyZWVuTGlzdFtpXSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcEl0ZW0gPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuX3Byb2R1Y3RzW2pdKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwSXRlbS51c2VJbWdMaXN0ID0gW2FwcEl0ZW0uc2NyZWVuTGlzdFtpXV07XHJcbiAgICAgICAgICAgICAgICAgICAgaiA+IHRoaXMuX3Byb2R1Y3RzLmxlbmd0aCAvIDIgPyBfc2NyZWVuTGlzdDEucHVzaChhcHBJdGVtKSA6IF9zY3JlZW5MaXN0Mi5wdXNoKGFwcEl0ZW0pO1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMuc2NyZWVuTmFtZXMucHVzaCh7Z2FtZU5hbWU6IGFwcEl0ZW0uZ2FtZU5hbWUsIHVzZUltZ0xpc3Q6IGFwcEl0ZW0udXNlSW1nTGlzdH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgaWYgKGFwcEl0ZW0uYmFubmVyTGlzdFtpXSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGFwcEl0ZW0gPSBKU09OLnBhcnNlKEpTT04uc3RyaW5naWZ5KHRoaXMuX3Byb2R1Y3RzW2pdKSk7XHJcbiAgICAgICAgICAgICAgICAgICAgYXBwSXRlbS51c2VJbWdMaXN0ID0gW2FwcEl0ZW0uYmFubmVyTGlzdFtpXV07XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5iYW5uZXJMaXN0LnB1c2goYXBwSXRlbSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBfaWNvbkxpc3QxLnNvcnQoKGEsIGIpID0+IE1hdGgucmFuZG9tKCkgLSAwLjUpO1xyXG4gICAgICAgICAgICBfaWNvbkxpc3QyLnNvcnQoKGEsIGIpID0+IE1hdGgucmFuZG9tKCkgLSAwLjUpO1xyXG4gICAgICAgICAgICBfc2NyZWVuTGlzdDEuc29ydCgoYSwgYikgPT4gTWF0aC5yYW5kb20oKSAtIDAuNSk7XHJcbiAgICAgICAgICAgIF9zY3JlZW5MaXN0Mi5zb3J0KChhLCBiKSA9PiBNYXRoLnJhbmRvbSgpIC0gMC41KTtcclxuICAgICAgICAgICAgdGhpcy5iYW5uZXJMaXN0LnNvcnQoKGEsIGIpID0+IE1hdGgucmFuZG9tKCkgLSAwLjUpO1xyXG4gICAgICAgICAgICB0aGlzLmljb25MaXN0ID0gdGhpcy5pY29uTGlzdC5jb25jYXQoX2ljb25MaXN0MSwgX2ljb25MaXN0Mik7XHJcbiAgICAgICAgICAgIHRoaXMuc2NyZWVuTGlzdCA9IHRoaXMuaWNvbkxpc3QuY29uY2F0KF9zY3JlZW5MaXN0MSwgX3NjcmVlbkxpc3QyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3RoaXMuaWNvbkxpc3QgPT0+JywgdGhpcy5pY29uTGlzdCk7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3RoaXMuc2NyZWVuTGlzdCA9PT4nLCB0aGlzLnNjcmVlbkxpc3QpO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKCd0aGlzLmljb25OYW1lcyA9PT4nLCB0aGlzLmljb25OYW1lcyk7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coJ3RoaXMuc2NyZWVuTmFtZXMgPT0+JywgdGhpcy5zY3JlZW5OYW1lcyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBSZXBldGl0aW9uQXJyKGxpc3Q6IEFycmF5PEFQUEl0ZW0+KSB7XHJcbiAgICAgICAgbGV0IGRhdGE6IGFueSA9IHt9O1xyXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBsaXN0Lmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICBsZXQgYXBwOiBBUFBJdGVtID0gbGlzdFtpbmRleF07XHJcbiAgICAgICAgICAgIGxldCBhcnJheTogQXJyYXk8QVBQSXRlbT4gPSBkYXRhW2FwcC5hcHBJZF07XHJcbiAgICAgICAgICAgIGlmICghYXJyYXkpIHtcclxuICAgICAgICAgICAgICAgIGFycmF5ID0gW107XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYXJyYXkucHVzaChhcHApO1xyXG4gICAgICAgICAgICBkYXRhW2FwcC5hcHBJZF0gPSBhcnJheTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBhcHBzID0gW107XHJcbiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IDU7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgaW4gZGF0YSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChkYXRhLCBrZXkpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGVsZW1lbnQ6IEFycmF5PEFQUEl0ZW0+ID0gZGF0YVtrZXldO1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBhcHBpdGVtID0gZWxlbWVudFtpbmRleF07XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKGFwcGl0ZW0pIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXBwcy5wdXNoKGVsZW1lbnRbaW5kZXhdKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGFwcHM7XHJcbiAgICB9XHJcblxyXG4gICAgLy8g6I635Y+W5bm/5ZGK5Zyo54m55a6a5L2N572u55qE5Zu+54mH6Lev5b6E6ZuG5ZCIXHJcbiAgICBwdWJsaWMgR2V0VXNlSW1nVXJsKHN0eWxlOiBDb21wb25lbnRTdHlsZSwgZGF0YTogQVBQSXRlbSwgaXNDYW5Vc2VHaWY6IGJvb2xlYW4sIGdpbm9yZVVybHM6IEFycmF5PHN0cmluZz4pOiBBcnJheTxzdHJpbmc+IHtcclxuICAgICAgICBpZiAoIWRhdGEpIHtcclxuICAgICAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgZ2lmdExpc3Q6IEFycmF5PHN0cmluZz4gPSBbXTtcclxuICAgICAgICBpZiAodGhpcy5HZXRJc0NhblVzZUdpZkJ5U3R5bGUoc3R5bGUpICYmIGlzQ2FuVXNlR2lmICYmIGRhdGEuZ2lmTGlzdCAmJiBkYXRhLmdpZkxpc3QubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICBnaWZ0TGlzdCA9IGRhdGEuZ2lmTGlzdDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCBpY29uc0FycmF5OiBBcnJheTxhbnk+ID0gW107XHJcbiAgICAgICAgc3dpdGNoIChzdHlsZSkge1xyXG4gICAgICAgICAgICBjYXNlIENvbXBvbmVudFN0eWxlLmNlX2xhX2xhbjpcclxuICAgICAgICAgICAgICAgIGljb25zQXJyYXkgPSBkYXRhLnNjcmVlbkxpc3Q7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb21wb25lbnRTdHlsZS5iaWdfZXhwb3J0X3VpOlxyXG4gICAgICAgICAgICAgICAgaWNvbnNBcnJheSA9IGRhdGEuc2NyZWVuTGlzdDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIENvbXBvbmVudFN0eWxlLmJhbm5lcjpcclxuICAgICAgICAgICAgICAgIGljb25zQXJyYXkgPSBkYXRhLmJhbm5lckxpc3Q7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBDb21wb25lbnRTdHlsZS5oX3NsaWRlcjpcclxuICAgICAgICAgICAgICAgIGljb25zQXJyYXkgPSBkYXRhLmljb25GaWxsZXRMaXN0O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgQ29tcG9uZW50U3R5bGUub3Zlcl91aTpcclxuICAgICAgICAgICAgICAgIGljb25zQXJyYXkgPSBkYXRhLmljb25GaWxsZXRMaXN0O1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgdGFyZ2V0TnVtID0gMC41O1xyXG4gICAgICAgIGlmIChnaWZ0TGlzdC5sZW5ndGggPT0gMCkge1xyXG4gICAgICAgICAgICB0YXJnZXROdW0gPSAxLjE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCByYW5kVmFsdWUgPSBNYXRoLnJhbmRvbSgpO1xyXG4gICAgICAgIGlmIChyYW5kVmFsdWUgPiB0YXJnZXROdW0pIHtcclxuICAgICAgICAgICAgcmV0dXJuIGdpZnRMaXN0O1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoaWNvbnNBcnJheS5sZW5ndGggPT0gMCkge1xyXG4gICAgICAgICAgICByZXR1cm4gW107XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBsZXQgY2FuVXNlSW1nQXJyYXk6IEFycmF5PHN0cmluZz4gPSBbXTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IGljb25zQXJyYXkubGVuZ3RoOyArK2kpIHtcclxuICAgICAgICAgICAgaWYgKGdpbm9yZVVybHMuaW5kZXhPZihpY29uc0FycmF5W2ldKSA9PSAtMSkge1xyXG4gICAgICAgICAgICAgICAgY2FuVXNlSW1nQXJyYXkucHVzaChpY29uc0FycmF5W2ldKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGNhblVzZUltZ0FycmF5Lmxlbmd0aCA9PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBbXTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGxldCByYW5kSW5kZXggPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBjYW5Vc2VJbWdBcnJheS5sZW5ndGgpO1xyXG4gICAgICAgIHJldHVybiBbY2FuVXNlSW1nQXJyYXlbcmFuZEluZGV4XV07XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOagueaNruadg+mHjemaj+acuiAqL1xyXG4gICAgcHVibGljIEdldFJhbmRvbUJ5V2VpZ2h0KGFycjogQVBQSXRlbVtdKTogbnVtYmVyIHtcclxuICAgICAgICBsZXQgdG90YWwgPSAwO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgYXJyLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIHRvdGFsICs9IGFycltpXS53ZWlnaHQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCByID0gTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdG90YWwpO1xyXG4gICAgICAgIGxldCBpbmRleCA9IDA7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKGkgPiAwKSB7XHJcbiAgICAgICAgICAgICAgICByIC09IGFycltpIC0gMV0ud2VpZ2h0O1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChyIDwgYXJyW2ldLndlaWdodCkge1xyXG4gICAgICAgICAgICAgICAgaW5kZXggPSBpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGluZGV4O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBHZXRJc0NhblVzZUdpZkJ5U3R5bGUoc3R5bGU6IENvbXBvbmVudFN0eWxlKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIChzdHlsZSA9PSBDb21wb25lbnRTdHlsZS5jZV9sYV9sYW4gfHwgc3R5bGUgPT0gQ29tcG9uZW50U3R5bGUuYmlnX2V4cG9ydF91aSB8fCBzdHlsZSA9PSBDb21wb25lbnRTdHlsZS5oX3NsaWRlcik7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBHZXRQYXJhbXNNc2dGb3JPYmoocGFyYW1zT2JqOiBhbnkpOiBzdHJpbmcge1xyXG4gICAgICAgIGxldCByZXMgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gcGFyYW1zT2JqKSB7XHJcbiAgICAgICAgICAgIHJlcy5wdXNoKGtleSArICc9JyArIHBhcmFtc09ialtrZXldKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlcy5qb2luKCcmJyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOS/neWtmOWxleekuuasoeaVsCAqL1xyXG4gICAgcHVibGljIEFkZFNob3dSZWNvcmQoc3R5bGU6IENvbXBvbmVudFN0eWxlKSB7XHJcbiAgICAgICAgbGV0IGlzSGFzZWQgPSBmYWxzZTtcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuX21hdGVyaWFMaXN0Lmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCBtbCA9IHRoaXMuX21hdGVyaWFMaXN0W2ldO1xyXG4gICAgICAgICAgICBpZiAoc3R5bGUgPT0gTnVtYmVyKG1sLmxvY2F0aW9uQ29kZSkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX21hdGVyaWFMaXN0W2ldLmRpc3BsYXlDb3VudCsrO1xyXG4gICAgICAgICAgICAgICAgaXNIYXNlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFpc0hhc2VkKSB7XHJcbiAgICAgICAgICAgIGxldCBtbCA9IG5ldyBBUFBJdGVtUmVjb3JkKCk7XHJcbiAgICAgICAgICAgIG1sLmxvY2F0aW9uQ29kZSA9IFwiXCIgKyBzdHlsZTtcclxuICAgICAgICAgICAgbWwuZGlzcGxheUNvdW50ID0gMTtcclxuICAgICAgICAgICAgbWwuY2xpY2tDb3VudCA9IDA7XHJcbiAgICAgICAgICAgIG1sLmlzRXhwb3J0ID0gMDtcclxuICAgICAgICAgICAgbWwuZXhwb3J0Q291bnQgPSAwO1xyXG4gICAgICAgICAgICBtbC5leHBvcnRQcm9kdWN0SWQgPSBcIlwiO1xyXG4gICAgICAgICAgICB0aGlzLl9tYXRlcmlhTGlzdC5wdXNoKG1sKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOS/neWtmOeCueWHu+asoeaVsCAqL1xyXG4gICAgcHVibGljIEFkZENsaWNrUmVjb3JkKHN0eWxlOiBDb21wb25lbnRTdHlsZSwgZGF0YTogQVBQSXRlbSkge1xyXG4gICAgICAgIGxldCBpc0hhc2VkID0gZmFsc2U7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9leHBvcnRQcm9kdWN0TGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgZXBsID0gdGhpcy5fZXhwb3J0UHJvZHVjdExpc3RbaV07XHJcbiAgICAgICAgICAgIGlmIChkYXRhLmFkdmVydElkID09IE51bWJlcihlcGwucHJvZHVjdElkKSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZXhwb3J0UHJvZHVjdExpc3RbaV0uY2xpY2tDb3VudCsrO1xyXG4gICAgICAgICAgICAgICAgaXNIYXNlZCA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKCFpc0hhc2VkKSB7XHJcbiAgICAgICAgICAgIGxldCBlcGwgPSB7XHJcbiAgICAgICAgICAgICAgICBwcm9kdWN0SWQ6IFwiXCIgKyBkYXRhLmFkdmVydElkLFxyXG4gICAgICAgICAgICAgICAgY2xpY2tDb3VudDogMVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuX2V4cG9ydFByb2R1Y3RMaXN0LnB1c2goZXBsKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9tYXRlcmlhTGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgbWwgPSB0aGlzLl9tYXRlcmlhTGlzdFtpXTtcclxuICAgICAgICAgICAgaWYgKHN0eWxlID09IE51bWJlcihtbC5sb2NhdGlvbkNvZGUpKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9tYXRlcmlhTGlzdFtpXS5jbGlja0NvdW50Kys7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOS/neWtmOWvvOWHuuaVsOaNriAqL1xyXG4gICAgcHVibGljIEFkZE9wZW5SZWNvcmQoc3R5bGU6IENvbXBvbmVudFN0eWxlLCBkYXRhOiBBUFBJdGVtLCBzdWNjZXNzOiBib29sZWFuKSB7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9tYXRlcmlhTGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBsZXQgbWwgPSB0aGlzLl9tYXRlcmlhTGlzdFtpXTtcclxuICAgICAgICAgICAgaWYgKHN0eWxlID09IE51bWJlcihtbC5sb2NhdGlvbkNvZGUpKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoc3VjY2Vzcykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX21hdGVyaWFMaXN0W2ldLmV4cG9ydENvdW50Kys7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWF0ZXJpYUxpc3RbaV0uZXhwb3J0UHJvZHVjdElkID0gZGF0YS5hZHZlcnRJZCArIFwiXCI7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fbWF0ZXJpYUxpc3RbaV0uaXNFeHBvcnQgPSAxO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKiDkuIrmiqXmlbDmja4gKi9cclxuICAgIHByb3RlY3RlZCBVcGRhdGVSZWNvcmQoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX3JlY29yZGluZykge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnW01hdHJpeF3mlbDmja7kuIrmiqXkuK0nKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoKHRoaXMuX2V4cG9ydFByb2R1Y3RMaXN0Lmxlbmd0aCA8PSAwICYmICF0aGlzLkNoZWNrTWF0ZXJpYSgpKSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZygnW01hdHJpeF3mlbDmja7ml6Dlj5jmm7TvvIzkuI3pnIDopoHkuIrmiqUnKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5fcmVjb3JkaW5nID0gdHJ1ZTtcclxuICAgICAgICBsZXQgcGFyYW1zID0ge1xyXG4gICAgICAgICAgICBvcGVuSWQ6IFVzZXJfY3NqYy5vcGVuSWRfY3NqYyxcclxuICAgICAgICAgICAgcHJvZHVjdElkOiB0aGlzLm1Qcm9kdWN0SWQsXHJcbiAgICAgICAgICAgIG1hdGVyaWFMaXN0OiB0aGlzLl9tYXRlcmlhTGlzdCxcclxuICAgICAgICAgICAgZXhwb3J0UHJvZHVjdExpc3Q6IHRoaXMuX2V4cG9ydFByb2R1Y3RMaXN0LFxyXG4gICAgICAgICAgICBzaGFyZUNvdW50OiB0aGlzLnNoYXJlQ291bnRcclxuICAgICAgICB9O1xyXG4gICAgICAgIGlmIChwYXJhbXMubWF0ZXJpYUxpc3QubGVuZ3RoID09IDAgJiYgcGFyYW1zLmV4cG9ydFByb2R1Y3RMaXN0Lmxlbmd0aCA9PSAwICYmIHBhcmFtcy5zaGFyZUNvdW50ID09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zb2xlLmxvZyhcIltNYXRyaXhd5LiK5Lyg5pWw5o2u5Yiw5pyN5Yqh5ZmoIHBhcmFtczpcXG5cIiwgSlNPTi5zdHJpbmdpZnkocGFyYW1zKSk7XHJcbiAgICAgICAgdmFyIHVybCA9IHRoaXMubVNlcnZlclJvb3RVcmwgKyAncmVwb3J0R2FtZS9tYXRyaXhSZXBvcnQnO1xyXG4gICAgICAgIEh0dHBUb29scy5Qb3N0SnNvbih1cmwsIHBhcmFtcywgdGhpcywgKGRhdGEpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJbTWF0cml4XeS4iuS8oOaVsOaNruWIsOacjeWKoeWZqOe7k+aenO+8mlwiLCBKU09OLnN0cmluZ2lmeShkYXRhKSk7XHJcbiAgICAgICAgICAgIGlmIChkYXRhICE9IC0xICYmIGRhdGEuY29kZSA9PSAyMDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xlYXJSZWNvcmQoKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLl9yZWNvcmRpbmcgPSBmYWxzZTtcclxuICAgICAgICB9LCBudWxsKTtcclxuICAgIH1cclxuXHJcbiAgICAvKiog5qOA5rWL5pWw5o2u5Y+Y5YqoICovXHJcbiAgICBwcm90ZWN0ZWQgQ2hlY2tNYXRlcmlhKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9tYXRlcmlhTGlzdC5sZW5ndGggPD0gMCkgcmV0dXJuIGZhbHNlO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5fbWF0ZXJpYUxpc3QubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX21hdGVyaWFMaXN0W2ldLmNsaWNrQ291bnQgIT0gMCB8fFxyXG4gICAgICAgICAgICAgICAgdGhpcy5fbWF0ZXJpYUxpc3RbaV0uZGlzcGxheUNvdW50ICE9IDAgfHxcclxuICAgICAgICAgICAgICAgIHRoaXMuX21hdGVyaWFMaXN0W2ldLmV4cG9ydENvdW50ICE9IDAgfHxcclxuICAgICAgICAgICAgICAgIHRoaXMuX21hdGVyaWFMaXN0W2ldLmlzRXhwb3J0ICE9IDApIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgIH1cclxuXHJcbiAgICAvKiog5riF6Zmk5a+85Ye65pWw5o2uICovXHJcbiAgICBwcm90ZWN0ZWQgY2xlYXJSZWNvcmQoKSB7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9tYXRlcmlhTGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICB0aGlzLl9tYXRlcmlhTGlzdFtpXS5jbGlja0NvdW50ID0gMDtcclxuICAgICAgICAgICAgdGhpcy5fbWF0ZXJpYUxpc3RbaV0uZGlzcGxheUNvdW50ID0gMDtcclxuICAgICAgICAgICAgdGhpcy5fbWF0ZXJpYUxpc3RbaV0uZXhwb3J0Q291bnQgPSAwO1xyXG4gICAgICAgICAgICB0aGlzLl9tYXRlcmlhTGlzdFtpXS5pc0V4cG9ydCA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX2V4cG9ydFByb2R1Y3RMaXN0ID0gW107XHJcbiAgICAgICAgLy8gZm9yIChsZXQgaSA9IDA7IGkgPCB0aGlzLl9leHBvcnRQcm9kdWN0TGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgIC8vICAgICB0aGlzLl9leHBvcnRQcm9kdWN0TGlzdFtpXS5jbGlja0NvdW50ID0gMDtcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgdGhpcy5zaGFyZUNvdW50ID0gMDtcclxuICAgIH1cclxuXHJcbiAgICAvKiog5piv5ZCm5bey6L+H5a6hICovXHJcbiAgICBwdWJsaWMgR2V0SXNQYXNzZWQoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2lzQ2hlY2s7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOaYr+WQpuWQr+eUqOivpeexu+WeiyAqL1xyXG4gICAgcHVibGljIENhblVzZVN0eWxlKHN0eWxlOiBDb21wb25lbnRTdHlsZSk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9jYW5Vc2VkU3R5bGUuaW5kZXhPZihzdHlsZSkgPiAtMTtcclxuICAgIH1cclxufSIsIlxyXG5pbXBvcnQgSVZpZXdTdGF0ZUxpc3RlbmVyX2NzamMgZnJvbSBcIi4uLy4uL1ZpZXcvSVZpZXdTdGF0ZUxpc3RlbmVyXCI7XHJcbmltcG9ydCBFdmVudE1ncl9jc2pjIGZyb20gXCIuLi8uLi9FdmVudC9FdmVudE1nclwiO1xyXG5pbXBvcnQgeyBFdmVudERlZl9jc2pjIH0gZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50RGVmXCI7XHJcbmltcG9ydCBXWEFQSV9jc2pjIGZyb20gXCIuLi8uLi9QbGF0Zm9ybUFwaS9XWEFQSVwiO1xyXG5pbXBvcnQgeyBBZERhdGFNZ3IsIENvbXBvbmVudFN0eWxlIH0gZnJvbSBcIi4uL0FkRGF0YU1nclwiO1xyXG5pbXBvcnQgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjIGZyb20gXCIuLi8uLi9QbGF0Zm9ybUFwaS9DYWNoZWRXWEJhbm5lckFkXCI7XHJcbmltcG9ydCBFeGFtaW5lTWdyIGZyb20gXCIuLi8uLi9Db21tb21BUEkvRXhhbWluZU1nclwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG1CYW5uZXJBZFZpZXcgZXh0ZW5kcyBMYXlhLlNjcmlwdCBpbXBsZW1lbnRzIElWaWV3U3RhdGVMaXN0ZW5lcl9jc2pjIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKClcclxuICAgIH1cclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6UmVmcmVzaFRpbWUsIHRpcHM6XCLliLfmlrDpgJ/luqYs5Y2V5L2N5Li65q+r56eSXCIsIHR5cGU6TnVtYmVyLCBkZWZhdWx0OjYwMDB9Ki9cclxuICAgIHB1YmxpYyBSZWZyZXNoVGltZTogbnVtYmVyID0gNjAwMDtcclxuXHJcbiAgICBwcm90ZWN0ZWQgX3Nob3dTcDogTGF5YS5TcHJpdGU7XHJcblxyXG4gICAgcHJvdGVjdGVkIF9kYXRhOiBhbnkgPSBudWxsO1xyXG4gICAgcHVibGljIFdYQmFubmVyV2lkdGg6IG51bWJlcjtcclxuICAgIHByb3RlY3RlZCBfd3hCYW5uZXI6IGFueSA9IG51bGw7XHJcbiAgICBvbkF3YWtlKCkge1xyXG4gICAgICAgIHRoaXMuX3Nob3dTcCA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJEaXNwbGF5XCIpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIGlmICh0aGlzLl9zaG93U3AgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zaG93U3AgPSB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIG9uRGlzYWJsZSgpIHtcclxuICAgICAgICB0aGlzLmNsZWFyQmFubmVyV3goKTtcclxuICAgIH1cclxuXHJcbiAgICBvblN0YXJ0KCkge1xyXG4gICAgICAgIGlmIChFeGFtaW5lTWdyLkNhblNob3dBZF9XeCkge1xyXG4gICAgICAgICAgICB0aGlzLnJlZnJlc2hBZCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fc2hvd1NwLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmVmcmVzaEFkKCkge1xyXG4gICAgICAgIC8qIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSB8fCBMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQmFubmVy57uE5Lu25pi+56S6QmFubmVyV3hcIik7XHJcbiAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5jaGFuZ2VTaG93X2NzamMoKTtcclxuICAgICAgICAgICAgLy8gdGhpcy5yZWZyZXNoQmFubmVyV3goKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSAqLyB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQmFubmVy57uE5Lu25pi+56S6QmFubmVyQWRcIik7XHJcbiAgICAgICAgICAgIHRoaXMucmVmcmVzaEJhbm5lckFkKCk7XHJcbiAgICAgICAgICAgIExheWEudGltZXIubG9vcCh0aGlzLlJlZnJlc2hUaW1lLCB0aGlzLCB0aGlzLnJlZnJlc2hCYW5uZXJBZCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJlZnJlc2hCYW5uZXJBZCgpIHtcclxuICAgICAgICB0aGlzLl9kYXRhID0gQWREYXRhTWdyLkluc3RhbmNlLkdldERhdGFCeVN0eWxlQW5kQ291bnQoQ29tcG9uZW50U3R5bGUuYmFubmVyLCAxKVswXTtcclxuICAgICAgICBpZiAodGhpcy5fZGF0YSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLl9kYXRhKTtcclxuICAgICAgICAgICAgdGhpcy5fc2hvd1NwLmxvYWRJbWFnZSh0aGlzLl9kYXRhLmJhbm5lckxpc3RbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdGhpcy5fZGF0YS5iYW5uZXJMaXN0Lmxlbmd0aCldKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIG9uQ2xpY2soKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2RhdGEpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazmuLjmiI/vvJogXCIgKyB0aGlzLl9kYXRhLmdhbWVOYW1lKTtcclxuICAgICAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgICAgICBBZERhdGFNZ3IuSW5zdGFuY2UuTmF2aWdhdGVUbyhDb21wb25lbnRTdHlsZS5iYW5uZXIsIHRoaXMuX2RhdGEpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazlrozmiJBcIilcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgcmVmcmVzaEJhbm5lcld4KCkge1xyXG4gICAgICAgIExheWEudGltZXIuY2xlYXIodGhpcywgdGhpcy5yZWZyZXNoQmFubmVyQWQpO1xyXG4gICAgICAgIGlmICghTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUgfHwgISh0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlKS52aXNpYmxlKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgdGhpcy5jbGVhckJhbm5lcld4KCk7XHJcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIHZhciBzeXNJbmZvID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLmdldFN5c3RlbUluZm9TeW5jKCk7XHJcbiAgICAgICAgdmFyIHN3ID0gc3lzSW5mby5zY3JlZW5XaWR0aDtcclxuICAgICAgICB2YXIgc2ggPSBzeXNJbmZvLnNjcmVlbkhlaWdodDtcclxuICAgICAgICB2YXIgcG9zID0gdGhpcy5fc2hvd1NwLmxvY2FsVG9HbG9iYWwobmV3IExheWEuUG9pbnQoMCwgMCkpXHJcblxyXG4gICAgICAgIHZhciBsZWZ0ID0gcG9zLnggLyBMYXlhLnN0YWdlLndpZHRoICogc3c7XHJcbiAgICAgICAgdmFyIHRvcCA9IHBvcy55IC8gTGF5YS5zdGFnZS5oZWlnaHQgKiBzaDtcclxuICAgICAgICB2YXIgd2lkdGggPSB0aGlzLldYQmFubmVyV2lkdGggPyB0aGlzLldYQmFubmVyV2lkdGggLyBMYXlhLnN0YWdlLndpZHRoICogc3cgOiBzdztcclxuXHJcbiAgICAgICAgdGhpcy5fd3hCYW5uZXIgPSBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0uY3JlYXRlQmFubmVyQWQoXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGFkVW5pdElkOiBXWEFQSV9jc2pjLmJhbm5lckFkVW5pdElkX2NzamMsXHJcbiAgICAgICAgICAgICAgICBhZEludGVydmFsczogMzAsXHJcbiAgICAgICAgICAgICAgICBzdHlsZTpcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxlZnQ6IGxlZnQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRvcDogdG9wLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB3aWR0aDogd2lkdGgsXHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIHNlbGYuX3d4QmFubmVyLm9uTG9hZCgocmVzKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiV1hCYW5uZXLlub/lkYog5Yqg6L295a6M5oiQXCIpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgdGhpcy5fd3hCYW5uZXIub25FcnJvcigoZXJyKSA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiV1hCYW5uZXLlub/lkYog5Yqg6L295aSx6LSlXCIpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhlcnIpO1xyXG4gICAgICAgICAgICB0aGlzLnJlZnJlc2hCYW5uZXJBZCgpO1xyXG4gICAgICAgICAgICB0aGlzLmNsZWFyQmFubmVyV3goKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIHRoaXMuX3d4QmFubmVyLm9uUmVzaXplKHJlcyA9PiB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHNlbGYuX3d4QmFubmVyLnN0eWxlLnJlYWxXaWR0aCwgc2VsZi5fd3hCYW5uZXIuc3R5bGUucmVhbEhlaWdodClcclxuICAgICAgICB9KVxyXG4gICAgICAgIHNlbGYuX3d4QmFubmVyLnNob3coKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY2xlYXJCYW5uZXJXeCgpIHtcclxuICAgICAgICBpZiAodGhpcy5fd3hCYW5uZXIpIHtcclxuICAgICAgICAgICAgdGhpcy5fd3hCYW5uZXIuZGVzdHJveSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl93eEJhbm5lciA9IG51bGw7XHJcbiAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLmhpZGVfY3NqYygpO1xyXG4gICAgICAgIExheWEudGltZXIuY2xlYXIodGhpcywgdGhpcy5yZWZyZXNoQmFubmVyQWQpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvblZpZXdTaG93KCkge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgb25WaWV3SGlkZSgpIHtcclxuICAgICAgICB0aGlzLmNsZWFyQmFubmVyV3goKTtcclxuICAgIH1cclxufSIsImltcG9ydCBFdmVudE1ncl9jc2pjIGZyb20gXCIuLi8uLi9FdmVudC9FdmVudE1nclwiO1xyXG5pbXBvcnQgeyBFdmVudERlZl9jc2pjIH0gZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50RGVmXCI7XHJcbmltcG9ydCBXWEFQSV9jc2pjIGZyb20gXCIuLi8uLi9QbGF0Zm9ybUFwaS9XWEFQSVwiO1xyXG5pbXBvcnQgeyBBZERhdGFNZ3IsIENvbXBvbmVudFN0eWxlIH0gZnJvbSBcIi4uL0FkRGF0YU1nclwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUXBMaXN0QWRCb3ggZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICBwcm90ZWN0ZWQgX2Rpc3BsYXlTcDogTGF5YS5TcHJpdGU7XHJcbiAgICBwcm90ZWN0ZWQgX2Rpc1RleHQ6IExheWEuVGV4dDtcclxuICAgIHByb3RlY3RlZCBfZGF0YTogYW55ID0gbnVsbDtcclxuICAgIC8vIHByb3RlY3RlZCBfb3JpZ2luVzogbnVtYmVyID0gMjAwO1xyXG4gICAgLy8gcHJvdGVjdGVkIF9vcmlnaW5IOiBudW1iZXIgPSAyMDA7XHJcbiAgICBwcm90ZWN0ZWQgX2ZvbnRTaXplID0gMjU7XHJcbiAgICBwcm90ZWN0ZWQgX3Bvc2l0aW9uSWQgPSAwO1xyXG4gICAgcHJvdGVjdGVkIF9jcmVhdGl2ZUlkID0gMDtcclxuICAgIHByb3RlY3RlZCBfYXBwSWQgPSBcIlwiO1xyXG4gICAgcHJvdGVjdGVkIF9wYXJlbnRBZFZpZXc6IExheWEuVUlDb21wb25lbnQ7XHJcbiAgICBvbkF3YWtlKCkge1xyXG4gICAgICAgIHRoaXMuX2Rpc3BsYXlTcCA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJEaXNwbGF5XCIpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIC8vIHRoaXMuX29yaWdpblcgPSB0aGlzLl9kaXNwbGF5U3Aud2lkdGg7XHJcbiAgICAgICAgLy8gdGhpcy5fb3JpZ2luSCA9IHRoaXMuX2Rpc3BsYXlTcC5oZWlnaHQ7XHJcbiAgICAgICAgdGhpcy5fZGlzVGV4dCA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJUaXRsZVRleHRcIikgYXMgTGF5YS5UZXh0O1xyXG4gICAgICAgIHRoaXMuX2Rpc1RleHQudGV4dCA9IFwiXCI7XHJcbiAgICAgICAgdGhpcy5fZm9udFNpemUgPSB0aGlzLl9kaXNUZXh0LmZvbnRTaXplO1xyXG4gICAgfVxyXG5cclxuICAgIC8vIG9uRW5hYmxlKCk6IHZvaWQge1xyXG4gICAgLy8gICAgIHRoaXMuX2Rpc3BsYXlTcC5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLkNsaWNrZWQpO1xyXG4gICAgLy8gfVxyXG5cclxuICAgIC8vIG9uRGlzYWJsZSgpOiB2b2lkIHtcclxuICAgIC8vICAgICB0aGlzLl9kaXNwbGF5U3Aub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25DbGljayk7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgcHVibGljIHNldERhdGEoZGF0YSwgcGFyZW50LCBpbmRleCkge1xyXG4gICAgICAgIGlmIChkYXRhKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2RhdGEgPSBkYXRhO1xyXG4gICAgICAgICAgICB0aGlzLl9kaXNwbGF5U3AubG9hZEltYWdlKHRoaXMuX2RhdGEudXNlSW1nTGlzdFtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0aGlzLl9kYXRhLnVzZUltZ0xpc3QubGVuZ3RoKV0sIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgLy8gaWYgKCF0aGlzLl9kaXNwbGF5U3AuZGVzdHJveWVkKSB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgdGhpcy5fZGlzcGxheVNwLndpZHRoID0gdGhpcy5fb3JpZ2luVztcclxuICAgICAgICAgICAgICAgIC8vICAgICB0aGlzLl9kaXNwbGF5U3AuaGVpZ2h0ID0gdGhpcy5fb3JpZ2luSDtcclxuICAgICAgICAgICAgICAgIC8vIH1cclxuICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgICAgICAvLyB2YXIgc3RyID0gU3RyaW5nKGRhdGEuc2hvd19jb25maWcudGl0bGUpO1xyXG4gICAgICAgICAgICAvLyB2YXIgbnVtID0gc3RyLmxlbmd0aDtcclxuICAgICAgICAgICAgLy8gbnVtID0gTWF0aC5tYXgoNSxudW0pO1xyXG4gICAgICAgICAgICAvLyB2YXIgZm9udFNpemUgPSBNYXRoLmZsb29yKCg1IC8gbnVtKSAqIHRoaXMuX2ZvbnRTaXplKTtcclxuICAgICAgICAgICAgLy8gdGhpcy5fZGlzVGV4dC5mb250U2l6ZSA9IGZvbnRTaXplO1xyXG4gICAgICAgICAgICB0aGlzLl9kaXNUZXh0LnRleHQgPSB0aGlzLl9kYXRhLmdhbWVOYW1lO1xyXG5cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fcGFyZW50QWRWaWV3ID0gcGFyZW50O1xyXG4gICAgfVxyXG5cclxuICAgIG9uTW91c2VEb3duKCkge1xyXG4gICAgICAgIHRoaXMuTmF2aWdhdGVUbygpO1xyXG4gICAgfVxyXG5cclxuICAgIE5hdmlnYXRlVG8oKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2RhdGEpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazmuLjmiI/vvJogXCIgKyB0aGlzLl9kYXRhLmdhbWVOYW1lKTtcclxuICAgICAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgICAgICBBZERhdGFNZ3IuSW5zdGFuY2UuTmF2aWdhdGVUbyhDb21wb25lbnRTdHlsZS5oX3NsaWRlciwgdGhpcy5fZGF0YSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIui3s+i9rOWujOaIkFwiKVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IFFwTGlzdEFkQm94IGZyb20gXCIuL1FwTGlzdEFkQm94XCI7XHJcbmltcG9ydCB7IEFkRGF0YU1nciwgQ29tcG9uZW50U3R5bGUgfSBmcm9tIFwiLi4vQWREYXRhTWdyXCI7XHJcbmltcG9ydCBFeGFtaW5lTWdyIGZyb20gXCIuLi8uLi9Db21tb21BUEkvRXhhbWluZU1nclwiO1xyXG5cclxuLyoqXHJcbiAqIOeUqOS6juaYvuekuua7muWKqOW5v+WRiuWIl+ihqOeahOexu1xyXG4gKiBcclxuICogQGV4cG9ydFxyXG4gKiBAY2xhc3MgTGlzdEFkVmlld1xyXG4gKiBAZXh0ZW5kcyB7TGF5YS5TY3JpcHR9XHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBMaXN0QWRWaWV3IGV4dGVuZHMgTGF5YS5TY3JpcHQge1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpBZFN0eWxlLCB0aXBzOlwi5bm/5ZGK5L2N57G75Z6LXCIsIHR5cGU6T3B0aW9uLCBkZWZhdWx0OlwiU2xpZGVyXCIsb3B0aW9uOlwiU2xpZGVyLEV4cG9ydFwifSovXHJcbiAgICBwdWJsaWMgQWRTdHlsZTogc3RyaW5nID0gXCJTbGlkZXJcIjtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6U2Nyb2xsRGlyZWN0aW9uLHRpcHM6XCLmu5rliqjmlrnlkJEs5rC05bmz5oiW56uW55u0XCIsdHlwZTpPcHRpb24sb3B0aW9uOlwiSG9yaXpvbnRhbCxWZXJ0aWNhbFwiLGRlZmF1bHQ6XCJIb3Jpem9udGFsXCJ9Ki9cclxuICAgIHB1YmxpYyBTY3JvbGxEaXJlY3Rpb246IFN0cmluZyA9IFwiSG9yaXpvbnRhbFwiO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpTY3JvbGxTcGVlZCwgdGlwczpcIua7muWKqOmAn+W6plwiLCB0eXBlOk51bWJlciwgZGVmYXVsdDoxMDB9Ki9cclxuICAgIHB1YmxpYyBTY3JvbGxTcGVlZDogbnVtYmVyID0gMTAwO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpMaXN0Q291bnQsIHRpcHM6XCLmlbDph49cIiwgdHlwZTpOdW1iZXIsIGRlZmF1bHQ6MjB9Ki9cclxuICAgIHB1YmxpYyBMaXN0Q291bnQ6IG51bWJlciA9IDIwO1xyXG5cclxuICAgIHByb3RlY3RlZCBfb3duZXJTcDogTGF5YS5TcHJpdGU7XHJcbiAgICBwcm90ZWN0ZWQgX2xpc3Q6IExheWEuTGlzdDtcclxuICAgIHByb3RlY3RlZCBfc2Nyb2xsRm9yd2FyZCA9IHRydWU7XHJcblxyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICB0aGlzLl9vd25lclNwID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLl9saXN0ID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkxpc3RcIikgYXMgTGF5YS5MaXN0O1xyXG4gICAgICAgIHRoaXMuX2xpc3QuZWxhc3RpY0VuYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuX2xpc3QucmVuZGVySGFuZGxlciA9IExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5vbkxpc3RSZW5kZXIsIG51bGwsIGZhbHNlKVxyXG4gICAgICAgIGlmICh0aGlzLlNjcm9sbERpcmVjdGlvbiA9PSBcIkhvcml6b250YWxcIikge1xyXG4gICAgICAgICAgICB0aGlzLl9saXN0LmhTY3JvbGxCYXJTa2luID0gXCJcIjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2xpc3QudlNjcm9sbEJhclNraW4gPSBcIlwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm93bmVyLm9uKFwiQWRSZWZyZXNoXCIsIHRoaXMsIHRoaXMuUmVmcmVzaEFkTGlzdCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKEV4YW1pbmVNZ3IuQ2FuU2hvd0FkX1d4KSB7XHJcbiAgICAgICAgICAgIHRoaXMuUmVmcmVzaEFkTGlzdCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fb3duZXJTcC52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uVXBkYXRlKCkge1xyXG4gICAgICAgIGxldCBzY3JvbGxWYWx1ZSA9IHRoaXMuU2Nyb2xsU3BlZWQgKiBMYXlhLnRpbWVyLmRlbHRhIC8gMTAwMDtcclxuICAgICAgICB0aGlzLl9saXN0LnNjcm9sbEJhci52YWx1ZSArPSBzY3JvbGxWYWx1ZTtcclxuICAgICAgICBpZiAodGhpcy5fbGlzdC5zY3JvbGxCYXIudmFsdWUgPj0gdGhpcy5fbGlzdC5zY3JvbGxCYXIubWF4KSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2xpc3Quc2Nyb2xsQmFyLnZhbHVlID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5fbGlzdC5zY3JvbGxCYXIudmFsdWUgPCAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2xpc3Quc2Nyb2xsQmFyLnZhbHVlID0gdGhpcy5fbGlzdC5zY3JvbGxCYXIubWF4O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIG9uTGlzdFJlbmRlcihjZWxsOiBMYXlhLkJveCwgaW5kZXg6IG51bWJlcik6IHZvaWQge1xyXG4gICAgICAgIHZhciBkYXRhID0gdGhpcy5fbGlzdC5hcnJheVtpbmRleF07XHJcbiAgICAgICAgdmFyIGxpc3RBZEJveDogUXBMaXN0QWRCb3ggPSBjZWxsLmdldENvbXBvbmVudChRcExpc3RBZEJveCk7XHJcbiAgICAgICAgbGlzdEFkQm94LnNldERhdGEoZGF0YSwgdGhpcy5vd25lciwgaW5kZXgpO1xyXG4gICAgfVxyXG5cclxuICAgIFJlZnJlc2hBZExpc3QoKSB7XHJcbiAgICAgICAgbGV0IHN0eWxlOiBDb21wb25lbnRTdHlsZSA9IENvbXBvbmVudFN0eWxlLmhfc2xpZGVyO1xyXG4gICAgICAgIHN3aXRjaCAodGhpcy5BZFN0eWxlKSB7XHJcbiAgICAgICAgICAgIGNhc2UgXCJTbGlkZXJcIjpcclxuICAgICAgICAgICAgICAgIHN0eWxlID0gQ29tcG9uZW50U3R5bGUuaF9zbGlkZXI7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIkJhbm5lclwiOlxyXG4gICAgICAgICAgICAgICAgc3R5bGUgPSBDb21wb25lbnRTdHlsZS5iYW5uZXI7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBcIkV4cG9ydFwiOlxyXG4gICAgICAgICAgICAgICAgc3R5bGUgPSBDb21wb25lbnRTdHlsZS5iaWdfZXhwb3J0X3VpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBkYXRhID0gQWREYXRhTWdyLkluc3RhbmNlLkdldERhdGFCeVN0eWxlQW5kQ291bnQoc3R5bGUsIDMwKTtcclxuICAgICAgICBpZiAoZGF0YS5sZW5ndGggPiAwICYmIGRhdGEubGVuZ3RoIDwgdGhpcy5MaXN0Q291bnQpIHtcclxuICAgICAgICAgICAgbGV0IHJlc2V0Q291bnQgPSB0aGlzLkxpc3RDb3VudCAtIGRhdGEubGVuZ3RoXHJcbiAgICAgICAgICAgIGxldCBkYXRhVGVtcCA9IGRhdGEuY29uY2F0KCk7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCByZXNldENvdW50OyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gZGF0YVtpbmRleF07XHJcbiAgICAgICAgICAgICAgICBkYXRhVGVtcC5wdXNoKGVsZW1lbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuX2xpc3QuYXJyYXkgPSBkYXRhVGVtcDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2xpc3QuYXJyYXkgPSBkYXRhO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBBZERhdGFNZ3IsIENvbXBvbmVudFN0eWxlIH0gZnJvbSBcIi4uL0FkRGF0YU1nclwiO1xyXG5pbXBvcnQgRXhhbWluZU1nciBmcm9tIFwiLi4vLi4vQ29tbW9tQVBJL0V4YW1pbmVNZ3JcIjtcclxuaW1wb3J0IFFwR2FtZVN3aXRjaCBmcm9tIFwiLi4vUXBHYW1lU3dpdGNoXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBRcFJhbmRvbUp1bXAgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICBwcml2YXRlIF9jbGlja1RpbWVyOiBudW1iZXIgPSA1MDA7XHJcblxyXG4gICAgb25VcGRhdGUoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2NsaWNrVGltZXIgPiAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NsaWNrVGltZXIgLT0gTGF5YS50aW1lci5kZWx0YTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBvbkNsaWNrKCkge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhg6Ieq5Yqo6Lez5Yqf6IO95bGP6JS9JHtFeGFtaW5lTWdyLkNhbkRvU2N6X1d4fSzlvIDlhbMke1FwR2FtZVN3aXRjaC5HYW1lU3dpdGNoLnBvcEFkID09IDF9YCk7XHJcbiAgICAgICAgICAgIGlmIChFeGFtaW5lTWdyLkNhbkRvU2N6X1d4ICYmIFFwR2FtZVN3aXRjaC5HYW1lU3dpdGNoLnBvcEFkID09IDEgJiYgUXBHYW1lU3dpdGNoLkdhbWVTd2l0Y2guaW5kZXhBZCkge1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2NsaWNrVGltZXIgPiAwKSByZXR1cm47XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jbGlja1RpbWVyID0gMzAwMDtcclxuICAgICAgICAgICAgICAgIGxldCBhcnIgPSBBZERhdGFNZ3IuSW5zdGFuY2UuR2V0RGF0YUJ5U3R5bGVBbmRDb3VudChDb21wb25lbnRTdHlsZS5oX3NsaWRlciwgMTApO1xyXG4gICAgICAgICAgICAgICAgaWYgKGFyci5sZW5ndGggPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGdhbWUgPSBhcnJbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogYXJyLmxlbmd0aCldO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChnYW1lKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIEFkRGF0YU1nci5JbnN0YW5jZS5OYXZpZ2F0ZVRvKENvbXBvbmVudFN0eWxlLmhfc2xpZGVyLCBnYW1lKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgRXZlbnRNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcclxuaW1wb3J0IHsgRXZlbnREZWZfY3NqYyB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xyXG5pbXBvcnQgV1hBUElfY3NqYyBmcm9tIFwiLi4vLi4vUGxhdGZvcm1BcGkvV1hBUElcIjtcclxuaW1wb3J0IHsgQWREYXRhTWdyLCBDb21wb25lbnRTdHlsZSB9IGZyb20gXCIuLi9BZERhdGFNZ3JcIjtcclxuaW1wb3J0IFFwTGlzdEFkQm94IGZyb20gXCIuL1FwTGlzdEFkQm94XCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBRcFJkTGlzdEFkQm94IGV4dGVuZHMgUXBMaXN0QWRCb3gge1xyXG4gICAgLyoqIEBwcm9wIHtuYW1lOlJkTmFtZSwgdGlwczpcIuW5v+WRiuS9jeexu+Wei1wiLCB0eXBlOlN0cmluZywgZGVmYXVsdDpcIlwifSovXHJcbiAgICBwdWJsaWMgUmROYW1lOiBzdHJpbmcgPSBcIlwiO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpSZENvdW50LCB0aXBzOlwi5bm/5ZGK5L2N57G75Z6LXCIsIHR5cGU6TnVtYmVyLCBkZWZhdWx0OlwiMFwifSovXHJcbiAgICBwdWJsaWMgUmRDb3VudDogbnVtYmVyID0gMDtcclxuXHJcbiAgICBwcm90ZWN0ZWQgX3JkU3A6IExheWEuSW1hZ2U7XHJcbiAgICBvbkF3YWtlKCkge1xyXG4gICAgICAgIHN1cGVyLm9uQXdha2UoKTtcclxuICAgICAgICB0aGlzLl9yZFNwID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlJkU3BcIikgYXMgTGF5YS5JbWFnZTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBvbkVuYWJsZSgpOiB2b2lkIHtcclxuICAgIC8vICAgICB0aGlzLl9kaXNwbGF5U3Aub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5DbGlja2VkKTtcclxuICAgIC8vIH1cclxuXHJcbiAgICAvLyBvbkRpc2FibGUoKTogdm9pZCB7XHJcbiAgICAvLyAgICAgdGhpcy5fZGlzcGxheVNwLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uQ2xpY2spO1xyXG4gICAgLy8gfVxyXG5cclxuICAgIHB1YmxpYyBzZXREYXRhKGRhdGEsIHBhcmVudCwgaW5kZXgpIHtcclxuICAgICAgICBpZiAoZGF0YSkge1xyXG4gICAgICAgICAgICB0aGlzLl9kYXRhID0gZGF0YTtcclxuICAgICAgICAgICAgdGhpcy5fZGlzcGxheVNwLmxvYWRJbWFnZSh0aGlzLl9kYXRhLnVzZUltZ0xpc3RbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogdGhpcy5fZGF0YS51c2VJbWdMaXN0Lmxlbmd0aCldLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIC8vIGlmICghdGhpcy5fZGlzcGxheVNwLmRlc3Ryb3llZCkge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIHRoaXMuX2Rpc3BsYXlTcC53aWR0aCA9IHRoaXMuX29yaWdpblc7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgdGhpcy5fZGlzcGxheVNwLmhlaWdodCA9IHRoaXMuX29yaWdpbkg7XHJcbiAgICAgICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgIH0pKTtcclxuICAgICAgICAgICAgLy8gdmFyIHN0ciA9IFN0cmluZyhkYXRhLnNob3dfY29uZmlnLnRpdGxlKTtcclxuICAgICAgICAgICAgLy8gdmFyIG51bSA9IHN0ci5sZW5ndGg7XHJcbiAgICAgICAgICAgIC8vIG51bSA9IE1hdGgubWF4KDUsbnVtKTtcclxuICAgICAgICAgICAgLy8gdmFyIGZvbnRTaXplID0gTWF0aC5mbG9vcigoNSAvIG51bSkgKiB0aGlzLl9mb250U2l6ZSk7XHJcbiAgICAgICAgICAgIC8vIHRoaXMuX2Rpc1RleHQuZm9udFNpemUgPSBmb250U2l6ZTtcclxuICAgICAgICAgICAgdGhpcy5fZGlzVGV4dC50ZXh0ID0gdGhpcy5fZGF0YS5nYW1lTmFtZTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuUmROYW1lICE9IG51bGwgJiYgdGhpcy5SZENvdW50ID4gMCAmJiB0aGlzLl9yZFNwICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIGxldCBpID0gaW5kZXggJSB0aGlzLlJkQ291bnQ7XHJcbiAgICAgICAgICAgICAgICBsZXQgcmVzbmFtZSA9IHRoaXMuUmROYW1lICsgaSArIFwiLnBuZ1wiO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcmRTcC5za2luID0gcmVzbmFtZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl9wYXJlbnRBZFZpZXcgPSBwYXJlbnQ7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgUXBMaXN0QWRCb3ggZnJvbSBcIi4vUXBMaXN0QWRCb3hcIjtcclxuaW1wb3J0IHsgQWREYXRhTWdyLCBDb21wb25lbnRTdHlsZSB9IGZyb20gXCIuLi9BZERhdGFNZ3JcIjtcclxuaW1wb3J0IEV4YW1pbmVNZ3IgZnJvbSBcIi4uLy4uL0NvbW1vbUFQSS9FeGFtaW5lTWdyXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBRcFNoYWtlQWQyVmlldyBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6QWRTdHlsZSwgdGlwczpcIuW5v+WRiuS9jeexu+Wei1wiLCB0eXBlOk9wdGlvbiwgZGVmYXVsdDpcIlNsaWRlclwiLG9wdGlvbjpcIlNsaWRlcixFeHBvcnQsQmFubmVyXCJ9Ki9cclxuICAgIHB1YmxpYyBBZFN0eWxlOiBzdHJpbmcgPSBcIlNsaWRlclwiO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpTaGFrZVJlc3RUaW1lLCB0aXBzOlwi6Zeq5Yqo5LyR5oGvXCIsIHR5cGU6TnVtYmVyLCBkZWZhdWx0OjEwMDB9Ki9cclxuICAgIHB1YmxpYyBTaGFrZVJlc3RUaW1lOiBudW1iZXIgPSAxNTAwO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpTaGFrZVRpbWUsIHRpcHM6XCLpl6rliqjpgJ/luqZcIiwgdHlwZTpOdW1iZXIsIGRlZmF1bHQ6MzAwfSovXHJcbiAgICBwdWJsaWMgU2hha2VUaW1lOiBudW1iZXIgPSAzMDA7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOlNoYWtlTmVlZENvdW50LCB0aXBzOlwi6Zeq5Yqo5qyh5pWwXCIsIHR5cGU6TnVtYmVyLCBkZWZhdWx0OjR9Ki9cclxuICAgIHB1YmxpYyBTaGFrZU5lZWRDb3VudDogbnVtYmVyID0gNDtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6Q2hhbmVBZFRpbWUsIHRpcHM6XCLmm7TmjaLlub/lkYrpgJ/luqZcIiwgdHlwZTpOdW1iZXIsIGRlZmF1bHQ6NjAwMH0qL1xyXG4gICAgcHVibGljIENoYW5lQWRUaW1lOiBudW1iZXIgPSA2MDAwO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpSb3RhQW5nZWwsIHRpcHM6XCLmmYPliqjop5LluqZcIiwgdHlwZTpOdW1iZXIsIGRlZmF1bHQ6MTB9Ki9cclxuICAgIHB1YmxpYyBSb3RhQW5nZWw6IG51bWJlciA9IDEwO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpTY2FsZSwgdGlwczpcIuaZg+WKqOe8qeaUvlwiLCB0eXBlOk51bWJlciwgZGVmYXVsdDowLjF9Ki9cclxuICAgIHB1YmxpYyBTY2FsZTogbnVtYmVyID0gMC4xO1xyXG5cclxuICAgIHByb3RlY3RlZCBfb3duZXJTcDogTGF5YS5TcHJpdGU7XHJcbiAgICBwcm90ZWN0ZWQgX2xpc3Q6IExheWEuTGlzdDtcclxuICAgIHByb3RlY3RlZCBfY2VsbHM6IEFycmF5PExheWEuVUlDb21wb25lbnQ+O1xyXG4gICAgcHJvdGVjdGVkIF9zaGFrZVRpbWVyOiBudW1iZXIgPSAwO1xyXG5cclxuICAgIG9uQXdha2UoKSB7XHJcbiAgICAgICAgdGhpcy5fb3duZXJTcCA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5fbGlzdCA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJMaXN0XCIpIGFzIExheWEuTGlzdDtcclxuICAgICAgICB0aGlzLl9saXN0LnJlbmRlckhhbmRsZXIgPSBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMub25MaXN0UmVuZGVyLCBudWxsLCBmYWxzZSlcclxuICAgICAgICB0aGlzLl9jZWxscyA9IHRoaXMuX2xpc3QuY2VsbHM7XHJcbiAgICB9XHJcblxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKEV4YW1pbmVNZ3IuQ2FuU2hvd0FkX1d4KSB7XHJcbiAgICAgICAgICAgIHRoaXMuUmVmcmVzaEFkTGlzdCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fb3duZXJTcC52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uVXBkYXRlKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9zaGFrZVRpbWVyIDw9IHRoaXMuQ2hhbmVBZFRpbWUpIHtcclxuICAgICAgICAgICAgdGhpcy5fc2hha2VUaW1lciArPSBMYXlhLnRpbWVyLmRlbHRhO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fc2hha2VUaW1lciA9IDA7XHJcbiAgICAgICAgICAgIHRoaXMuUmVmcmVzaEFkTGlzdCgpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIGlmICh0aGlzLlNoYWtlVGltZSAqIHRoaXMuU2hha2VOZWVkVGltZSlcclxuICAgICAgICAvLyAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHRoaXMuX2NlbGxzLmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgIC8vICAgICAgICAgY29uc3QgYm94ID0gdGhpcy5fY2VsbHNbaW5kZXhdO1xyXG4gICAgICAgIC8vICAgICAgICAgbGV0IHBlcmlvZCA9IGN1clRpbWUgLyB0aGlzLlNoYWtlVGltZTtcclxuICAgICAgICAvLyAgICAgICAgIGxldCBhbmlQZXJpb2QgPSBNYXRoLnNpbihwZXJpb2QgKiAzLjE0ICogMik7XHJcbiAgICAgICAgLy8gICAgICAgICBib3gucm90YXRpb24gPSBhbmlQZXJpb2QgKiB0aGlzLlJvdGFBbmdlbDtcclxuICAgICAgICAvLyAgICAgICAgIGJveC5zY2FsZVggPSAxIC0gKGFuaVBlcmlvZCAqIHRoaXMuU2NhbGUpO1xyXG4gICAgICAgIC8vICAgICAgICAgYm94LnNjYWxlWSA9IGJveC5zY2FsZVg7XHJcbiAgICAgICAgLy8gICAgIH1cclxuICAgICAgICBpZiAodGhpcy5fc2hha2VUaW1lciA+IHRoaXMuU2hha2VSZXN0VGltZSAmJiB0aGlzLl9zaGFrZVRpbWVyIDw9ICh0aGlzLlNoYWtlUmVzdFRpbWUgKyAodGhpcy5TaGFrZVRpbWUgKiB0aGlzLlNoYWtlTmVlZENvdW50KSkpIHtcclxuICAgICAgICAgICAgbGV0IHBlcmlvZCA9ICgodGhpcy5fc2hha2VUaW1lciAtIHRoaXMuU2hha2VSZXN0VGltZSkgJSB0aGlzLlNoYWtlVGltZSkgLyB0aGlzLlNoYWtlVGltZTtcclxuICAgICAgICAgICAgbGV0IGFuaVBlcmlvZCA9IE1hdGguc2luKHBlcmlvZCAqIDMuMTQgKiAyKTtcclxuICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHRoaXMuX2NlbGxzLmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgYm94ID0gdGhpcy5fY2VsbHNbaW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgYm94LnJvdGF0aW9uID0gYW5pUGVyaW9kICogdGhpcy5Sb3RhQW5nZWw7XHJcbiAgICAgICAgICAgICAgICBib3guc2NhbGVYID0gMSAtIChhbmlQZXJpb2QgKiB0aGlzLlNjYWxlKTtcclxuICAgICAgICAgICAgICAgIGJveC5zY2FsZVkgPSBib3guc2NhbGVYO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdGhpcy5fY2VsbHMubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zdCBib3ggPSB0aGlzLl9jZWxsc1tpbmRleF07XHJcbiAgICAgICAgICAgICAgICBib3gucm90YXRpb24gPSAwO1xyXG4gICAgICAgICAgICAgICAgYm94LnNjYWxlWCA9IDE7XHJcbiAgICAgICAgICAgICAgICBib3guc2NhbGVZID0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgb25MaXN0UmVuZGVyKGNlbGw6IExheWEuQm94LCBpbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgdmFyIGRhdGEgPSB0aGlzLl9saXN0LmFycmF5W2luZGV4XTtcclxuICAgICAgICB2YXIgbG9vcEFkQm94OiBRcExpc3RBZEJveCA9IGNlbGwuZ2V0Q29tcG9uZW50KFFwTGlzdEFkQm94KTtcclxuICAgICAgICBsb29wQWRCb3guc2V0RGF0YShkYXRhLCB0aGlzLm93bmVyLCBpbmRleCk7XHJcbiAgICB9XHJcblxyXG4gICAgUmVmcmVzaEFkTGlzdCgpIHtcclxuICAgICAgICBsZXQgc3R5bGU6IENvbXBvbmVudFN0eWxlID0gQ29tcG9uZW50U3R5bGUuaF9zbGlkZXI7XHJcbiAgICAgICAgc3dpdGNoICh0aGlzLkFkU3R5bGUpIHtcclxuICAgICAgICAgICAgY2FzZSBcIlNsaWRlclwiOlxyXG4gICAgICAgICAgICAgICAgc3R5bGUgPSBDb21wb25lbnRTdHlsZS5oX3NsaWRlcjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiQmFubmVyXCI6XHJcbiAgICAgICAgICAgICAgICBzdHlsZSA9IENvbXBvbmVudFN0eWxlLmJhbm5lcjtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIFwiRXhwb3J0XCI6XHJcbiAgICAgICAgICAgICAgICBzdHlsZSA9IENvbXBvbmVudFN0eWxlLmJpZ19leHBvcnRfdWk7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGRhdGEgPSBBZERhdGFNZ3IuSW5zdGFuY2UuR2V0RGF0YUJ5U3R5bGVBbmRDb3VudChzdHlsZSwgdGhpcy5fY2VsbHMubGVuZ3RoKTtcclxuICAgICAgICB0aGlzLl9saXN0LmFycmF5ID0gZGF0YTtcclxuICAgIH1cclxuXHJcbiAgICAvLyBvbkNsaWNrKCkge1xyXG4gICAgLy8gICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xyXG4gICAgLy8gICAgICAgICBsZXQgYXJyID0gQWREYXRhTWdyLkluc3RhbmNlLkdldERhdGFCeVN0eWxlQW5kQ291bnQoQ29tcG9uZW50U3R5bGUuaF9zbGlkZXIsIDEwKTtcclxuICAgIC8vICAgICAgICAgaWYgKGFyci5sZW5ndGggPiAwKSB7XHJcbiAgICAvLyAgICAgICAgICAgICBsZXQgZ2FtZSA9IGFycltNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBhcnIubGVuZ3RoKV07XHJcbiAgICAvLyAgICAgICAgICAgICBpZiAoZ2FtZSkge1xyXG4gICAgLy8gICAgICAgICAgICAgICAgIEFkRGF0YU1nci5JbnN0YW5jZS5OYXZpZ2F0ZVRvKENvbXBvbmVudFN0eWxlLmhfc2xpZGVyLCBnYW1lKTtcclxuICAgIC8vICAgICAgICAgICAgIH1cclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgIH1cclxuICAgIC8vIH1cclxufSIsImltcG9ydCBRcFNoYWtlQWQyVmlldyBmcm9tIFwiLi9RcFNoYWtlQWQyVmlld1wiO1xyXG5pbXBvcnQgUXBMaXN0QWRCb3ggZnJvbSBcIi4vUXBMaXN0QWRCb3hcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFFwU2hha2VBZDNWaWV3IGV4dGVuZHMgUXBTaGFrZUFkMlZpZXcge1xyXG4gICAgLyoqIEBwcm9wIHtuYW1lOkFkU3R5bGUsIHRpcHM6XCLlub/lkYrkvY3nsbvlnotcIiwgdHlwZTpPcHRpb24sIGRlZmF1bHQ6XCJTbGlkZXJcIixvcHRpb246XCJTbGlkZXIsRXhwb3J0LEJhbm5lclwifSovXHJcbiAgICBwdWJsaWMgQWRTdHlsZTogc3RyaW5nID0gXCJTbGlkZXJcIjtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6U2hha2VSZXN0VGltZSwgdGlwczpcIumXquWKqOS8keaBr1wiLCB0eXBlOk51bWJlciwgZGVmYXVsdDoxMDAwfSovXHJcbiAgICBwdWJsaWMgU2hha2VSZXN0VGltZTogbnVtYmVyID0gMTUwMDtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6U2hha2VUaW1lLCB0aXBzOlwi6Zeq5Yqo6YCf5bqmXCIsIHR5cGU6TnVtYmVyLCBkZWZhdWx0OjMwMH0qL1xyXG4gICAgcHVibGljIFNoYWtlVGltZTogbnVtYmVyID0gMzAwO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpTaGFrZU5lZWRDb3VudCwgdGlwczpcIumXquWKqOasoeaVsFwiLCB0eXBlOk51bWJlciwgZGVmYXVsdDo0fSovXHJcbiAgICBwdWJsaWMgU2hha2VOZWVkQ291bnQ6IG51bWJlciA9IDQ7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOkNoYW5lQWRUaW1lLCB0aXBzOlwi5pu05o2i5bm/5ZGK6YCf5bqmXCIsIHR5cGU6TnVtYmVyLCBkZWZhdWx0OjYwMDB9Ki9cclxuICAgIHB1YmxpYyBDaGFuZUFkVGltZTogbnVtYmVyID0gNjAwMDtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6Um90YUFuZ2VsLCB0aXBzOlwi5pmD5Yqo6KeS5bqmXCIsIHR5cGU6TnVtYmVyLCBkZWZhdWx0OjEwfSovXHJcbiAgICBwdWJsaWMgUm90YUFuZ2VsOiBudW1iZXIgPSAxMDtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6U2NhbGUsIHRpcHM6XCLmmYPliqjnvKnmlL5cIiwgdHlwZTpOdW1iZXIsIGRlZmF1bHQ6MC4xfSovXHJcbiAgICBwdWJsaWMgU2NhbGU6IG51bWJlciA9IDAuMTtcclxuICAgIHByb3RlY3RlZCBfbGlzdDI6IExheWEuTGlzdDtcclxuICAgIG9uQXdha2UoKSB7XHJcbiAgICAgICAgc3VwZXIub25Bd2FrZSgpO1xyXG4gICAgICAgIHRoaXMuX2xpc3QyID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkxpc3QyXCIpIGFzIExheWEuTGlzdDtcclxuICAgICAgICB0aGlzLl9saXN0Mi5yZW5kZXJIYW5kbGVyID0gTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLm9uTGlzdDJSZW5kZXIsIG51bGwsIGZhbHNlKVxyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBvbkxpc3QyUmVuZGVyKGNlbGw6IExheWEuQm94LCBpbmRleDogbnVtYmVyKTogdm9pZCB7XHJcbiAgICAgICAgdmFyIGRhdGEgPSB0aGlzLl9saXN0LmFycmF5W2luZGV4XTtcclxuICAgICAgICB2YXIgbG9vcEFkQm94OiBRcExpc3RBZEJveCA9IGNlbGwuZ2V0Q29tcG9uZW50KFFwTGlzdEFkQm94KTtcclxuICAgICAgICBsb29wQWRCb3guc2V0RGF0YShkYXRhLCB0aGlzLm93bmVyLCBpbmRleCk7XHJcbiAgICB9XHJcblxyXG4gICAgUmVmcmVzaEFkTGlzdCgpIHtcclxuICAgICAgICBzdXBlci5SZWZyZXNoQWRMaXN0KClcclxuICAgICAgICB0aGlzLl9saXN0Mi5hcnJheSA9IHRoaXMuX2xpc3QuYXJyYXkuY29uY2F0KCk7XHJcbiAgICB9XHJcbn0iLCJleHBvcnQgY2xhc3MgSHR0cFRvb2xzIHtcclxuICAgIHB1YmxpYyBzdGF0aWMgUmVxdXNldCh1cmw6IHN0cmluZywgZGF0YTogYW55LCBjYWxsZXI6IGFueSwgY29tcGxldGVkOiBGdW5jdGlvbiwgZXJyb3I6IEZ1bmN0aW9uLCBtZXRob2Q6IHN0cmluZywgcmVzcG9uc2VUeXBlOiBzdHJpbmcgPSBcImpzb25cIiwgaGVhZGVycyA9IG51bGwpOiB2b2lkIHtcclxuICAgICAgICBsZXQgeGhyOiBMYXlhLkh0dHBSZXF1ZXN0ID0gbmV3IExheWEuSHR0cFJlcXVlc3QoKTtcclxuICAgICAgICB4aHIub25jZShMYXlhLkV2ZW50LkNPTVBMRVRFLCBudWxsLCAoZGF0YSkgPT4ge1xyXG4gICAgICAgICAgICBpZiAoZGF0YS5jb2RlICE9IDIwMCAmJiBkYXRhLmNvZGUgIT0gMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5FcnJvcih4aHIsIGRhdGEpO1xyXG4gICAgICAgICAgICAgICAgZXJyb3IgJiYgZXJyb3IuY2FsbChkYXRhKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb21wbGV0ZWQgJiYgY29tcGxldGVkLmNhbGwoY2FsbGVyLCBkYXRhKTtcclxuICAgICAgICB9KTtcclxuICAgICAgICB4aHIub25jZShMYXlhLkV2ZW50LkVSUk9SLCBjYWxsZXIsIGVycm9yKTtcclxuICAgICAgICB4aHIub25jZShMYXlhLkV2ZW50LkVSUk9SLCBIdHRwVG9vbHMsIHRoaXMuRXJyb3IpO1xyXG4gICAgICAgIHhoci5zZW5kKHVybCwgZGF0YSwgbWV0aG9kLCByZXNwb25zZVR5cGUsIGhlYWRlcnMpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgUG9zdCh1cmw6IHN0cmluZywgZGF0YTogYW55LCBjYWxsZXI6IGFueSwgY29tcGxldGVkOiBGdW5jdGlvbiwgZXJyb3I6IEZ1bmN0aW9uLCByZXNwb25zZVR5cGU6IHN0cmluZyA9IFwianNvblwiLCBoZWFkZXJzID0gbnVsbCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuUmVxdXNldCh1cmwsIGRhdGEsIGNhbGxlciwgY29tcGxldGVkLCBlcnJvciwgXCJwb3N0XCIsIHJlc3BvbnNlVHlwZSwgaGVhZGVycyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBHZXQodXJsOiBzdHJpbmcsIGRhdGE6IGFueSwgY2FsbGVyOiBhbnksIGNvbXBsZXRlZDogRnVuY3Rpb24sIGVycm9yOiBGdW5jdGlvbiwgcmVzcG9uc2VUeXBlOiBzdHJpbmcgPSBcImpzb25cIiwgaGVhZGVycyA9IG51bGwpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLlJlcXVzZXQodXJsLCBkYXRhLCBjYWxsZXIsIGNvbXBsZXRlZCwgZXJyb3IsIFwiZ2V0XCIsIHJlc3BvbnNlVHlwZSwgaGVhZGVycyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBQb3N0SnNvbih1cmw6IHN0cmluZywgZGF0YTogYW55LCBjYWxsZXI6IGFueSwgY29tcGxldGVkOiBGdW5jdGlvbiwgZXJyb3I6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgdGhpcy5Qb3N0KHVybCwgZGF0YSwgY2FsbGVyLCBjb21wbGV0ZWQsIGVycm9yLCBcImpzb25cIik7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgRXJyb3IoeGhyOiBMYXlhLkh0dHBSZXF1ZXN0LCBtZXNzYWdlOiBhbnkpOiB2b2lkIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIlJlcXVzZXQgRXJyb3IsIFVybDpcIiArIHhoci51cmwgKyBcIiwgRXJyb3IgTWVzc2FnZTpcIiArIEpTT04uc3RyaW5naWZ5KG1lc3NhZ2UpKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIEpzb25Ub0tleVZhbHVlKHBhcmFtOiBhbnkpOiBzdHJpbmcge1xyXG4gICAgICAgIGxldCByZXMgPSBbXTtcclxuICAgICAgICBmb3IgKHZhciBrZXkgaW4gcGFyYW0pIHtcclxuICAgICAgICAgICAgcmVzLnB1c2goa2V5ICsgJz0nICsgcGFyYW1ba2V5XSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByZXMuam9pbignJicpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IEdhbWVTZXR0aW5nc19jc2pjIGZyb20gXCIuLi9HYW1lU2V0dGluZ3NcIjtcclxuaW1wb3J0IEh0dHBVbml0X2NzamMsIHsgcmVxdWVzdERhdGFfY3NqYyB9IGZyb20gXCIuLi9OZXQvSHR0cFVuaXRcIjtcclxuXHJcbmV4cG9ydCBjbGFzcyBzZGtjdXN0b20ge1xyXG4gICAgd3VkaWFuU3dpdGNoOiBudW1iZXIgPSAxOy8v5omA5pyJ6K+v54K554uC54K555qE5oC75byA5YWzXHJcbiAgICBleHBvcnQ6IG51bWJlciA9IDE7Ly/lpKflr7zlh7rpobXpnaJcclxuICAgIGVuZEV4cG9ydDogbnVtYmVyID0gMTsvL+iDnOWIqeWksei0peWQju+8jOmineWklueahOWvvOWHuumhtemdolxyXG4gICAgYnRuU2hvd1RpbWVyOiBudW1iZXIgPSAyOy8v5omA5pyJ5LiL5LiA5q2l5oyJ6ZKu5bu26L+f5Ye6546w55qE5pe26Ze0XHJcbiAgICBidG5Nb3ZlVGltZXI6IG51bWJlciA9IDIuNTsvL+aJgOacieivr+eCueaMiemSruS4iuenu+eahOaXtumXtFxyXG4gICAgYmFubmVyTW92ZVRpbWVyOiBudW1iZXIgPSAxLjU7Ly/miYDmnInor6/ngrlCYW5uZXLkuIrnp7vnmoTml7bpl7RcclxuICAgIGJhbm5lckt1YW5nZGlhbjE6IG51bWJlciA9IDA7Ly/lvIDlsYDnmoTni4LngrlcclxuICAgIGJhbm5lckt1YW5nZGlhbjI6IG51bWJlciA9IDA7Ly/nu5PmnZ/ni4LngrlcclxuICAgIGJhbm5lcld1ZGlhbjogbnVtYmVyID0gMDsvL+aJgOacieeVjOmdoueahOivr+eCuVxyXG4gICAgY2l0eUxpc3Q6IEFycmF5PHN0cmluZz4gPSBbXTsvL+Wxj+iUveWuoeaguOeahOWfjuW4guWIl+ihqFxyXG4gICAgaW5kZXhQYW5lbDogbnVtYmVyID0gMDsvL+WlveWPi+eDreeOqeWKn+iDvVxyXG4gICAgcG9wQWQ6IG51bWJlciA9IDA7Ly/oh6rliqjlvLnlr7zlh7pcclxuICAgIHNjZW5lTGlzdDogQXJyYXk8bnVtYmVyPiA9IFsxMDA1LCAxMDA2LCAxMDA3LCAxMDA4LCAxMDExLCAxMDEyLCAxMDEzLCAxMDE0LCAxMDE3LCAxMDIwLCAxMDIzLCAxMDI0LCAxMDI1LFxyXG4gICAgICAgIDEwMzAsIDEwMzEsIDEwMzIsIDEwMzYsIDEwNDIsIDEwNDQsIDEwNDcsIDEwNDgsIDEwNDksIDEwNTMsIDExMDJdOy8v5bGP6JS95Zy65pmv5YC8XHJcbiAgICBrdWFuZ2RpYW5UaW1lOiBBcnJheTxudW1iZXI+ID0gWzExLCAxMiwgMTMsIDE0LCAxOCwgMTksIDIwXTtcclxuICAgIHN0YXJ0VmlkZW86IG51bWJlciA9IDA7XHJcbiAgICBpbmRleEFkOiBudW1iZXIgPSAxO1xyXG59XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBRcEdhbWVTd2l0Y2gge1xyXG4gICAgc3RhdGljIGN1c3RvbWtleTogc2RrY3VzdG9tID0gbmV3IHNka2N1c3RvbSgpO1xyXG4gICAgc3RhdGljIGdldEN1c3RvbUtleShzdWNjZXNzPzogRnVuY3Rpb24pIHtcclxuICAgICAgICB0aGlzLmh0dHBSZXF1ZXN0KFwiaHR0cHM6Ly9xcC5xaW5ncHVrai5jb206ODA1NS9idXNpbmVzcy9wcm9kdWN0L2dhbWUvZ2V0QXR0cmlidXRlXCIsIFwiYXBwaWQ9XCIgKyBHYW1lU2V0dGluZ3NfY3NqYy5BcHBJRF9jc2pjLCBcImFwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZFwiLCAocmVzKSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBrZXkgPSBKU09OLnBhcnNlKHJlcy5tc2cpO1xyXG4gICAgICAgICAgICBpZiAoa2V5KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoa2V5Lnd1ZGlhblN3aXRjaCkgdGhpcy5jdXN0b21rZXkud3VkaWFuU3dpdGNoID0ga2V5Lnd1ZGlhblN3aXRjaDtcclxuICAgICAgICAgICAgICAgIGlmIChrZXkuZXhwb3J0KSB0aGlzLmN1c3RvbWtleS5leHBvcnQgPSBrZXkuZXhwb3J0O1xyXG4gICAgICAgICAgICAgICAgaWYgKGtleS5lbmRFeHBvcnQpIHRoaXMuY3VzdG9ta2V5LmVuZEV4cG9ydCA9IGtleS5lbmRFeHBvcnQ7XHJcbiAgICAgICAgICAgICAgICBpZiAoa2V5LmJ0blNob3dUaW1lcikgdGhpcy5jdXN0b21rZXkuYnRuU2hvd1RpbWVyID0ga2V5LmJ0blNob3dUaW1lcjtcclxuICAgICAgICAgICAgICAgIGlmIChrZXkuYnRuTW92ZVRpbWVyKSB0aGlzLmN1c3RvbWtleS5idG5Nb3ZlVGltZXIgPSBrZXkuYnRuTW92ZVRpbWVyO1xyXG4gICAgICAgICAgICAgICAgaWYgKGtleS5iYW5uZXJNb3ZlVGltZXIpIHRoaXMuY3VzdG9ta2V5LmJhbm5lck1vdmVUaW1lciA9IGtleS5iYW5uZXJNb3ZlVGltZXI7XHJcbiAgICAgICAgICAgICAgICBpZiAoa2V5LmJhbm5lckt1YW5nZGlhbjEpIHRoaXMuY3VzdG9ta2V5LmJhbm5lckt1YW5nZGlhbjEgPSBrZXkuYmFubmVyS3VhbmdkaWFuMTtcclxuICAgICAgICAgICAgICAgIGlmIChrZXkuYmFubmVyS3VhbmdkaWFuMikgdGhpcy5jdXN0b21rZXkuYmFubmVyS3VhbmdkaWFuMiA9IGtleS5iYW5uZXJLdWFuZ2RpYW4yO1xyXG4gICAgICAgICAgICAgICAgaWYgKGtleS5iYW5uZXJXdWRpYW4pIHRoaXMuY3VzdG9ta2V5LmJhbm5lcld1ZGlhbiA9IGtleS5iYW5uZXJXdWRpYW47XHJcbiAgICAgICAgICAgICAgICBpZiAoa2V5LmluZGV4UGFuZWwpIHRoaXMuY3VzdG9ta2V5LmluZGV4UGFuZWwgPSBrZXkuaW5kZXhQYW5lbDtcclxuICAgICAgICAgICAgICAgIGlmIChrZXkucG9wQWQpIHRoaXMuY3VzdG9ta2V5LnBvcEFkID0ga2V5LnBvcEFkO1xyXG4gICAgICAgICAgICAgICAgaWYgKGtleS5jaXR5TGlzdCkgdGhpcy5jdXN0b21rZXkuY2l0eUxpc3QgPSBKU09OLnBhcnNlKGtleS5jaXR5TGlzdCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoa2V5LnNjZW5lTGlzdCkgdGhpcy5jdXN0b21rZXkuc2NlbmVMaXN0ID0gSlNPTi5wYXJzZShrZXkuc2NlbmVMaXN0KTtcclxuICAgICAgICAgICAgICAgIGlmIChrZXkua3VhbmdkaWFuVGltZSkgdGhpcy5jdXN0b21rZXkua3VhbmdkaWFuVGltZSA9IEpTT04ucGFyc2Uoa2V5Lmt1YW5nZGlhblRpbWUpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGtleS5zdGFydFZpZGVvKSB0aGlzLmN1c3RvbWtleS5zdGFydFZpZGVvID0gIGtleS5zdGFydFZpZGVvO1xyXG4gICAgICAgICAgICAgICAgaWYgKGtleS5pbmRleEFkKSB0aGlzLmN1c3RvbWtleS5pbmRleEFkID0gIGtleS5pbmRleEFkO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChzdWNjZXNzKSBzdWNjZXNzKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGdldCBJc0lwUGFzcygpOiBib29sZWFuIHtcclxuICAgICAgICBpZiAodGhpcy5fY2l0eSA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwi5LiN6YCa6L+HLOW9k+WJjeWcsOWdgOS4uuepulwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLmN1c3RvbWtleS5jaXR5TGlzdC5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGNpdHkgPSB0aGlzLmN1c3RvbWtleS5jaXR5TGlzdFtpbmRleF07XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fY2l0eS5zZWFyY2goY2l0eSkgPiAtMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwi5LiN6YCa6L+HLOW9k+WJjeWcsOWdgOS4ujpcIiwgdGhpcy5fY2l0eSwgXCJjaXR5OlwiLCBjaXR5KTtcclxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCLpgJrov4cs5b2T5YmN5Zyw5Z2A5Li6OlwiLCB0aGlzLl9jaXR5KTtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc3RhdGljIF9jaXR5OiBzdHJpbmc7XHJcbiAgICBzdGF0aWMgVXBkYXRlSXBDaXR5KHN1Y2Nlc3M/OiBGdW5jdGlvbikge1xyXG4gICAgICAgIHRoaXMuaHR0cFJlcXVlc3QoXCJodHRwczovL3FwLnFpbmdwdWtqLmNvbTo4MDU1L2J1c2luZXNzL3Byb2R1Y3QvZ2FtZS9nZXRJUEFyZWFcIiwgXCJhcHBpZD1cIiArIEdhbWVTZXR0aW5nc19jc2pjLkFwcElEX2NzamMsIFwiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkXCIsIChyZXMpID0+IHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJJUFwiLCByZXMpO1xyXG4gICAgICAgICAgICBpZiAocmVzICYmIHJlcy5hcmVhKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jaXR5ID0gcmVzLmFyZWE7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHN1Y2Nlc3MpIHN1Y2Nlc3MoKTtcclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBzdGF0aWMgZ2V0IEdhbWVTd2l0Y2goKTogc2RrY3VzdG9tIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5jdXN0b21rZXk7XHJcbiAgICB9XHJcblxyXG4gICAgc3RhdGljIGh0dHBSZXF1ZXN0KHVybDogc3RyaW5nLCBkYXRhOiBhbnksIGNvbnRlbnRfdHlwZTogc3RyaW5nLCBjb21wbGV0ZTogRnVuY3Rpb24sIG1ldGhvZDogc3RyaW5nID0gJ1BPU1QnKSB7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbJ3d4J10ucmVxdWVzdCh7XHJcbiAgICAgICAgICAgICAgICB1cmw6IHVybCwgLy/mjqXlj6PlnLDlnYBcclxuICAgICAgICAgICAgICAgIGRhdGE6IGRhdGEsXHJcbiAgICAgICAgICAgICAgICBtZXRob2Q6IG1ldGhvZCxcclxuICAgICAgICAgICAgICAgIGhlYWRlcjoge1xyXG4gICAgICAgICAgICAgICAgICAgICdjb250ZW50LXR5cGUnOiBjb250ZW50X3R5cGUgLy8g6buY6K6k5YC8XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgc3VjY2VzcyhyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY29tcGxldGUpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlKHJlcy5kYXRhKTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIui/nuaOpeaIkOWKn1wiLCByZXMpO1xyXG4gICAgICAgICAgICAgICAgfSwgZmFpbChyZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoY29tcGxldGUpXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlKG51bGwpO1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6L+e5o6l6ZSZ6K+vXCIsIHJlcyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FtZXJhMlVJIHtcclxuICAgIC8qKltTaXhHb2RdXHJcbiAgICAgKiDkuJbnlYzlnZDmoIfovazlsY/luZXlnZDmoIdcclxuICAgICAqIEBwYXJhbSB7TGF5YS5DYW1lcmF9IGNhbWVyYSAgIOWPgueFp+ebuOaculxyXG4gICAgICogQHBhcmFtIHtMYXlhLlZlY3RvcjN9IHBvaW50ICAg6ZyA6KaB6L2s5o2i55qE54K5XHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgV29ybGRUb1NjcmVlbjIoY2FtZXJhLCBwb2ludCkge1xyXG4gICAgICAgIHZhciBwb2ludEEgPSB0aGlzLkludmVyc2VUcmFuc2Zvcm1Qb2ludChjYW1lcmEudHJhbnNmb3JtLCBwb2ludCk7XHJcbiAgICAgICAgdmFyIGRpc3RhbmNlID0gcG9pbnRBLno7XHJcbiAgICAgICAgdmFyIG91dCA9IG5ldyBMYXlhLlZlY3RvcjMoKTtcclxuICAgICAgICBjYW1lcmEudmlld3BvcnQucHJvamVjdChwb2ludCwgY2FtZXJhLnByb2plY3Rpb25WaWV3TWF0cml4LCBvdXQpO1xyXG4gICAgICAgIHZhciB2YWx1ZSA9IG5ldyBMYXlhLlZlY3RvcjMob3V0LnggLyBMYXlhLnN0YWdlLmNsaWVudFNjYWxlWCwgb3V0LnkgLyBMYXlhLnN0YWdlLmNsaWVudFNjYWxlWSwgZGlzdGFuY2UpO1xyXG4gICAgICAgIHJldHVybiB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICAvKipbU2l4R29kXVxyXG4gICAgICog5LiW55WM5Z2Q5qCH6L2s55u45a+55Z2Q5qCHXHJcbiAgICAgKiBAcGFyYW0ge0xheWEuVHJhbnNmb3JtfSBvcmlnaW4gICBjYW1lcmEudHJhbnNmb3JtXHJcbiAgICAgKiBAcGFyYW0ge0xheWEuVmVjdG9yM30gcG9pbnQgICAgICDpnIDopoHovazmjaLnmoTngrlcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBJbnZlcnNlVHJhbnNmb3JtUG9pbnQob3JpZ2luLCBwb2ludCkge1xyXG4gICAgICAgIHZhciB4eCA9IG5ldyBMYXlhLlZlY3RvcjMoKTtcclxuICAgICAgICBvcmlnaW4uZ2V0UmlnaHQoeHgpO1xyXG4gICAgICAgIHZhciB5eSA9IG5ldyBMYXlhLlZlY3RvcjMoKTtcclxuICAgICAgICBvcmlnaW4uZ2V0VXAoeXkpO1xyXG4gICAgICAgIHZhciB6eiA9IG5ldyBMYXlhLlZlY3RvcjMoKTtcclxuICAgICAgICBvcmlnaW4uZ2V0Rm9yd2FyZCh6eik7XHJcbiAgICAgICAgdmFyIHp6MSA9IG5ldyBMYXlhLlZlY3RvcjMoLXp6LngsIC16ei55LCAtenoueik7XHJcbiAgICAgICAgdmFyIHggPSB0aGlzLlByb2plY3REaXN0YW5jZShwb2ludCwgb3JpZ2luLnBvc2l0aW9uLCB4eCk7XHJcbiAgICAgICAgdmFyIHkgPSB0aGlzLlByb2plY3REaXN0YW5jZShwb2ludCwgb3JpZ2luLnBvc2l0aW9uLCB5eSk7XHJcbiAgICAgICAgdmFyIHogPSB0aGlzLlByb2plY3REaXN0YW5jZShwb2ludCwgb3JpZ2luLnBvc2l0aW9uLCB6ejEpO1xyXG4gICAgICAgIHZhciB2YWx1ZSA9IG5ldyBMYXlhLlZlY3RvcjMoeCwgeSwgeik7XHJcbiAgICAgICAgcmV0dXJuIHZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKltTaXhHb2RdXHJcbiAgICAgKiDlkJHph4/mipXlvbHplb/luqYsIOWQkemHj0NBIOWcqOWQkemHjyBDQiDkuIrnmoTmipXlvbHplb/luqZcclxuICAgICAqIEBwYXJhbSB7TGF5YS5WZWN0b3IzfSBBXHJcbiAgICAgKiBAcGFyYW0ge0xheWEuVmVjdG9yM30gQ1xyXG4gICAgICogQHBhcmFtIHtMYXlhLlZlY3RvcjN9IEJcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBQcm9qZWN0RGlzdGFuY2UoQSwgQywgQikge1xyXG4gICAgICAgIHZhciBDQSA9IG5ldyBMYXlhLlZlY3RvcjMoKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc3VidHJhY3QoQSwgQywgQ0EpO1xyXG4gICAgICAgIHZhciBhbmdsZSA9IHRoaXMuQW5nbGUyKENBLCBCKSAqIE1hdGguUEkgLyAxODA7XHJcbiAgICAgICAgdmFyIGRpc3RhbmNlID0gTGF5YS5WZWN0b3IzLmRpc3RhbmNlKEEsIEMpO1xyXG4gICAgICAgIGRpc3RhbmNlICo9IE1hdGguY29zKGFuZ2xlKTtcclxuICAgICAgICByZXR1cm4gZGlzdGFuY2U7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqW1NpeEdvZF1cclxuICAgICAqIOWQkemHj+WkueinklxyXG4gICAgICogQHBhcmFtIHtMYXlhLlZlY3RvcjN9IG1hIOWQkemHj0FcclxuICAgICAqIEBwYXJhbSB7TGF5YS5WZWN0b3IzfSBtYiDlkJHph49CXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgQW5nbGUyKG1hLCBtYikge1xyXG4gICAgICAgIHZhciB2MSA9IChtYS54ICogbWIueCkgKyAobWEueSAqIG1iLnkpICsgKG1hLnogKiBtYi56KTtcclxuICAgICAgICB2YXIgbWFfdmFsID0gTWF0aC5zcXJ0KG1hLnggKiBtYS54ICsgbWEueSAqIG1hLnkgKyBtYS56ICogbWEueik7XHJcbiAgICAgICAgdmFyIG1iX3ZhbCA9IE1hdGguc3FydChtYi54ICogbWIueCArIG1iLnkgKiBtYi55ICsgbWIueiAqIG1iLnopO1xyXG4gICAgICAgIHZhciBjb3NNID0gdjEgLyAobWFfdmFsICogbWJfdmFsKTtcclxuXHJcbiAgICAgICAgaWYgKGNvc00gPCAtMSkgY29zTSA9IC0xO1xyXG4gICAgICAgIGlmIChjb3NNID4gMSkgY29zTSA9IDE7XHJcblxyXG4gICAgICAgIHZhciBhbmdsZUFNQiA9IE1hdGguYWNvcyhjb3NNKSAqIDE4MCAvIE1hdGguUEk7XHJcbiAgICAgICAgcmV0dXJuIGFuZ2xlQU1CO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgQ2FtZXJhU3RhdGUsIFNwZWVkU3RhdGUgfSBmcm9tIFwiLi9FbnVtc1wiO1xyXG5pbXBvcnQgeyBDYW1lcmFTZXR0aW5nIH0gZnJvbSBcIi4vR2FtZVNldHRpbmdcIjtcclxuaW1wb3J0IEV2ZW50TWdyX2NzamMgZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XHJcbmltcG9ydCB7IEV2ZW50RGVmX2NzamMgfSBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnREZWZcIjtcclxuXHJcbi8qKlxyXG4gKiDmjqfliLbmkYTlg4/mnLrnp7vliqjnmoTnsbss5L2/55So5pe26LCD55SoSW5pdENhbWVyYSgp5pa55rOV5Yid5aeL5YyW77yM5Lyg5YWl55qE5Y+C5pWw5Li6546p5a6257uE5Lu255qE5byV55So77yM5Lul5Y+K5Zyo5Zyw6Z2i5ZKM56m65Lit5pGE5YOP5py655qE5Yid5aeL5YGP56e7XHJcbiAqIOatpOexu+S9v+eUqOa2iOaBr+S4reW/g+ino+iApuWQiO+8jOWmguaenOmcgOimgeinpuWPkeaRhOWDj+acuuS6i+S7tu+8jOmcgOimgeS9v+eUqOa2iOaBr+S4reW/g2Rpc3BhdGNoKEV2ZW50RGVmLkNhbWVyYV9FdmVudCnkuovku7ZcclxuICogXHJcbiAqIEBleHBvcnRcclxuICogQGNsYXNzIENhbWVyYUN0clxyXG4gKiBAZXh0ZW5kcyB7TGF5YS5TY3JpcHR9XHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDYW1lcmFDdHIgZXh0ZW5kcyBMYXlhLlNjcmlwdDNEIHtcclxuICAgIGdldCBTcHJpdGUzRCgpOiBMYXlhLlNwcml0ZTNEIHsgcmV0dXJuIHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGUzRDsgfVxyXG5cclxuXHJcbiAgICAvL+S/neWtmOeahOWvueiHqui6q+aRhOWDj+acuue7hOS7tueahOW8leeUqFxyXG4gICAgcHJpdmF0ZSBfY2FtZXJhUGFyZW50OiBMYXlhLlNwcml0ZTNEO1xyXG4gICAgLy/nnJ/mraPnmoTmkYTlg4/mnLrnu4Tku7bvvIzlj6/og73lpJbpnaLlpZfkuobkuIDlsYLniLbnu4Tku7ZcclxuICAgIHByaXZhdGUgX2NhbWVyYTogTGF5YS5DYW1lcmE7XHJcbiAgICAvL+S/neWtmOeahOeOqeWutueahOW8leeUqFxyXG4gICAgcHJpdmF0ZSBfZm9sbG93T2JqU3AzRDogTGF5YS5TcHJpdGUzRDtcclxuICAgIC8v5pGE5YOP5py65b2T5YmN55qE54q25oCBXHJcbiAgICBwcml2YXRlIF9jYW1lcmFTdGF0ZTogQ2FtZXJhU3RhdGU7XHJcbiAgICAvL+aRhOWDj+acuuW9k+WJjeeahOWKoOmAn+eKtuaAgVxyXG4gICAgcHJpdmF0ZSBfc3BlZWRTdGF0ZTogU3BlZWRTdGF0ZTtcclxuICAgIC8v5Zyo5Zyw6Z2i5pe25pGE5YOP5py656a7546p5a6255qE6Led56a7XHJcbiAgICBwcml2YXRlIF9nb3VuZE9mZnNldDogTGF5YS5WZWN0b3IzID0gQ2FtZXJhU2V0dGluZy5Hb3VuZE9mZnNldDtcclxuICAgIC8v5pGE5YOP5py66KeG6KeSXHJcbiAgICBwcml2YXRlIF9maWVsZE9mVmlldzogbnVtYmVyID0gQ2FtZXJhU2V0dGluZy5GaWVsZE9mVmlldztcclxuICAgIC8v5b2T5YmN5pGE5YOP5py656a7546p5a6255qE6Led56a7XHJcbiAgICBwcml2YXRlIF9jdXJyZW50T2Zmc2V0OiBMYXlhLlZlY3RvcjMgPSBuZXcgTGF5YS5WZWN0b3IzKCk7XHJcbiAgICAvL+aRhOWDj+acuuebuOWvueS6jueOqeWutueahOinkuW6plxyXG4gICAgcHJpdmF0ZSBfY3VycmVudHJvdGF0ZTogTGF5YS5Qb2ludCA9IG5ldyBMYXlhLlBvaW50KCk7XHJcbiAgICAvL+aRhOWDj+aculjovbTml4vovazop5LluqZcclxuICAgIHByaXZhdGUgX2FuZ2xlWDogbnVtYmVyID0gLTYwO1xyXG4gICAgLy/mkYTlg4/mnLpZ6L205peL6L2s6KeS5bqmXHJcbiAgICBwcml2YXRlIF9hbmdsZVk6IG51bWJlciA9IC05MDtcclxuICAgIC8v5pGE5YOP5py655uu5qCH5bem5Y+z5YGP56e7XHJcbiAgICAvLyBwcml2YXRlIF90YXJnZXRPZmZzZXQ6IG51bWJlciA9IDA7XHJcbiAgICAvL+aRhOWDj+acuuW9k+WJjeW3puWPs+WBj+enu1xyXG4gICAgLy8gcHJpdmF0ZSBfY2FtZXJhT2Zmc2V0OiBudW1iZXIgPSAwO1xyXG4gICAgLy/mkYTlg4/mnLrlm7rlrprot5/pmo/ngrlcclxuICAgIC8vIHByaXZhdGUgX2ZpeGVkRm9sbG93UG9zOiBMYXlhLlZlY3RvcjM7XHJcbiAgICAvL+W9k+WJjeaRhOWDj+acuuWQkeWJjeeci+eahOWAvFxyXG4gICAgcHJpdmF0ZSBfY3VyVmlld0ZvcndhcmQ6IG51bWJlciA9IDA7XHJcbiAgICAvL+aRhOWDj+acuuW6lOW9k+WQkeWJjeeci+eahOWAvFxyXG4gICAgcHJpdmF0ZSBfbmVlZFZpZXdGb3J3YXJkOiBudW1iZXIgPSBDYW1lcmFTZXR0aW5nLkZyb250QmFja09mZnNldDtcclxuICAgIC8v5pGE5YOP5py65oqW5YqoXHJcbiAgICBwcml2YXRlIF9zaGFrZVRpbWU6IG51bWJlciA9IDA7XHJcbiAgICAvL+aRhOWDj+acuumrmOW6plxyXG4gICAgcHJpdmF0ZSBfaGVpZ2h0OiBudW1iZXIgPSAwO1xyXG4gICAgLy/mkYTlg4/mnLrovazmjaLnm67moIfml7bnmoTpgJ/luqZcclxuICAgIHByaXZhdGUgX2NoYW5nZU1vdmVTcGVlZDogbnVtYmVyID0gMDtcclxuICAgIC8v5pGE5YOP5py66L2s5o2i55uu5qCH5LiA5YWx6ZyA6KaB6LWw55qE6Led56a7XHJcbiAgICBwcml2YXRlIF9jaGFuZ2VUb3RsYURpc3RhbmNlOiBudW1iZXIgPSAwO1xyXG4gICAgLy/mkYTlg4/mnLrovazmjaLnm67moIflvZPliY3otbDnmoTot53nprtcclxuICAgIHByaXZhdGUgX2NoYW5nZUN1cnJlbnREaXN0YW5jZTogbnVtYmVyID0gMDtcclxuICAgIC8v5pGE5YOP5py65LiK5LiA5Liq6ZyA6KaB6L+96Liq55qE54mp5L2TXHJcbiAgICBwcml2YXRlIF9wcmVGb2xsb3dPYmo6IExheWEuU3ByaXRlM0Q7XHJcbiAgICAvLyBwcml2YXRlIF9zcGVlZEVmZmVjdDogTGF5YS5TcHJpdGUzRDtcclxuICAgIC8qKuaehOmAoOWHveaVsFxyXG4gICAgICogQ3JlYXRlcyBhbiBpbnN0YW5jZSBvZiBDYW1lcmFDdHIuXHJcbiAgICAgKiBAbWVtYmVyb2YgQ2FtZXJhQ3RyXHJcbiAgICAgKi9cclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliJ3lp4vljJbvvIzms6jlhozmkYTlg4/mnLrkuovku7ZcclxuICAgICAqIFxyXG4gICAgICogQG1lbWJlcm9mIENhbWVyYUN0clxyXG4gICAgICovXHJcbiAgICBvbkF3YWtlKCkge1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMucmVnRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLkNhbWVyYV9FdmVudF9jc2pjLCB0aGlzLCB0aGlzLkNoYW5nZUNhbWVyYVN0YXRlKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOiEmuacrOiiq+WIoOmZpOaXtuiHquWKqOWPjeazqOWGjOS6i+S7tlxyXG4gICAgICogXHJcbiAgICAgKiBAbWVtYmVyb2YgQ2FtZXJhQ3RyXHJcbiAgICAgKi9cclxuICAgIG9uRGVzdHJveSgpIHtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlbW92ZUV2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5DYW1lcmFfRXZlbnRfY3NqYywgdGhpcywgdGhpcy5DaGFuZ2VDYW1lcmFTdGF0ZSk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmkYTlg4/mnLrkvY3nva7np7vliqjlnKhMYXRlVXBkYXRl5Lit6L+Q6KGMXHJcbiAgICAgKiBcclxuICAgICAqIEBtZW1iZXJvZiBDYW1lcmFDdHJcclxuICAgICAqL1xyXG4gICAgb25MYXRlVXBkYXRlKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9jYW1lcmFTdGF0ZSA9PSBDYW1lcmFTdGF0ZS5DaGFuZ2VpbmdGb2xsb3dPYmopIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2NoYW5nZUN1cnJlbnREaXN0YW5jZSA+IHRoaXMuX2NoYW5nZVRvdGxhRGlzdGFuY2UpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2NhbWVyYVN0YXRlID0gQ2FtZXJhU3RhdGUuTm9ybWFsO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuX2NoYW5nZUN1cnJlbnREaXN0YW5jZSArPSAoTGF5YS50aW1lci5kZWx0YSAvIDEwMDApICogdGhpcy5fY2hhbmdlTW92ZVNwZWVkO1xyXG4gICAgICAgICAgICBsZXQgZmluYWxPZmZzZXQgPSBuZXcgTGF5YS5WZWN0b3IzKCk7XHJcbiAgICAgICAgICAgIGxldCBwcm9ncmVzcyA9IHRoaXMuX2NoYW5nZUN1cnJlbnREaXN0YW5jZSAvIHRoaXMuX2NoYW5nZVRvdGxhRGlzdGFuY2U7XHJcbiAgICAgICAgICAgIExheWEuVmVjdG9yMy5sZXJwKHRoaXMuX3ByZUZvbGxvd09iai50cmFuc2Zvcm0ucG9zaXRpb24sIHRoaXMuX2ZvbGxvd09ialNwM0QudHJhbnNmb3JtLnBvc2l0aW9uLCBwcm9ncmVzcywgZmluYWxPZmZzZXQpO1xyXG4gICAgICAgICAgICBMYXlhLlZlY3RvcjMuYWRkKGZpbmFsT2Zmc2V0LCB0aGlzLl9mb2xsb3dPYmpTcDNELnRyYW5zZm9ybS5wb3NpdGlvbiwgdGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucG9zaXRpb24pO1xyXG4gICAgICAgICAgICB0aGlzLlNwcml0ZTNELnRyYW5zZm9ybS5wb3NpdGlvbiA9IHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLl9mb2xsb3dPYmpTcDNEID09IG51bGwpIHJldHVybjtcclxuICAgICAgICBsZXQgZGVsdGFUaW1lID0gTGF5YS50aW1lci5kZWx0YSAvIDEwMDA7XHJcbiAgICAgICAgLy8gbGV0IGZpbmFsT2Zmc2VyID0gdGhpcy5HZXRPZmZzZXRCeUFuZ2VsKCk7XHJcbiAgICAgICAgbGV0IGZpbmFsT2Zmc2VyID0gdGhpcy5Sb3RhdGVDYW1lcmEoKTtcclxuICAgICAgICAvKiDkuIvpnaLnmoTku6PnoIHmmK/mjInnhafmkYTlg4/mnLrlkoznjqnlrrbnmoTlgY/np7tfY3VycmVudE9mZnNldOaxguWHuuaRhOWDj+acuueahOS9jee9riAqL1xyXG4gICAgICAgIGxldCBvZmZzZXRfeDogTGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMygpO1xyXG4gICAgICAgIHRoaXMuX2ZvbGxvd09ialNwM0QudHJhbnNmb3JtLmdldFJpZ2h0KG9mZnNldF94KTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc2NhbGUob2Zmc2V0X3gsIGZpbmFsT2Zmc2VyLngsIG9mZnNldF94KTtcclxuICAgICAgICBsZXQgb2Zmc2V0X3k6IExheWEuVmVjdG9yMyA9IG5ldyBMYXlhLlZlY3RvcjMoKTtcclxuICAgICAgICB0aGlzLl9mb2xsb3dPYmpTcDNELnRyYW5zZm9ybS5nZXRVcChvZmZzZXRfeSk7XHJcbiAgICAgICAgTGF5YS5WZWN0b3IzLnNjYWxlKG9mZnNldF95LCBmaW5hbE9mZnNlci55LCBvZmZzZXRfeSk7XHJcbiAgICAgICAgbGV0IG9mZnNldF96OiBMYXlhLlZlY3RvcjMgPSBuZXcgTGF5YS5WZWN0b3IzKCk7XHJcbiAgICAgICAgdGhpcy5fZm9sbG93T2JqU3AzRC50cmFuc2Zvcm0uZ2V0Rm9yd2FyZChvZmZzZXRfeik7XHJcbiAgICAgICAgTGF5YS5WZWN0b3IzLnNjYWxlKG9mZnNldF96LCBmaW5hbE9mZnNlci56LCBvZmZzZXRfeik7XHJcbiAgICAgICAgbGV0IG9mZnNldCA9IG5ldyBMYXlhLlZlY3RvcjMoKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuYWRkKG9mZnNldF94LCBvZmZzZXRfeSwgb2Zmc2V0KTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuYWRkKG9mZnNldCwgb2Zmc2V0X3osIG9mZnNldCk7XHJcbiAgICAgICAgLy8gbGV0IHNjYWxlID0gTWF0aC5taW4odGhpcy5faGVpZ2h0IC8gNSwgMSk7XHJcbiAgICAgICAgLy8gTGF5YS5WZWN0b3IzLnNjYWxlKG9mZnNldCwgMSArIHNjYWxlLCBvZmZzZXQpO1xyXG4gICAgICAgIG9mZnNldC55ICs9IHRoaXMuX2hlaWdodDtcclxuICAgICAgICAvLyBvZmZzZXQueCAtPSBNYXRoLm1heCgwLCB0aGlzLl9oZWlnaHQgLSAxLjUpICogMzsgICAgICAgIFxyXG4gICAgICAgIG9mZnNldC54IC09IHRoaXMuX2hlaWdodDtcclxuICAgICAgICBvZmZzZXQueiAtPSB0aGlzLl9oZWlnaHQ7XHJcbiAgICAgICAgLyog5pS56Imv5YmN55qE5pa55rOVICovXHJcbiAgICAgICAgbGV0IGZpbmFsUG9zID0gbmV3IExheWEuVmVjdG9yMygpO1xyXG4gICAgICAgIGxldCBmb2xsb3dQb3MgPSBuZXcgTGF5YS5WZWN0b3IzKCk7XHJcbiAgICAgICAgLyog5bem5Y+z5bmz56e75bmz5ruR5Ye95pWwICovXHJcbiAgICAgICAgLyogaWYgKHRoaXMuX2NhbWVyYVN0YXRlID09IENhbWVyYVN0YXRlLkZpeGVkKSB7XHJcbiAgICAgICAgICAgIC8vIGlmICh0aGlzLl9maXhlZEZvbGxvd1BvcyAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIC8vICAgICBmb2xsb3dQb3MgPSBcclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICBmb2xsb3dQb3MgPSB0aGlzLl9maXhlZEZvbGxvd1BvcztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSAgKi9cclxuICAgICAgICBpZiAodGhpcy5fY2FtZXJhU3RhdGUgPT0gQ2FtZXJhU3RhdGUuUm90YXRlZEFyb3VuZCkge1xyXG4gICAgICAgICAgICBmb2xsb3dQb3MgPSB0aGlzLl9mb2xsb3dPYmpTcDNELnRyYW5zZm9ybS5wb3NpdGlvbjtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2N1clZpZXdGb3J3YXJkID4gMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY3VyVmlld0ZvcndhcmQgLT0gKGRlbHRhVGltZSkgKiBDYW1lcmFTZXR0aW5nLkZyb250QmFja09mZnNldE1vdmVTcGQ7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fY3VyVmlld0ZvcndhcmQgPCAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VyVmlld0ZvcndhcmQgPSAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuX2N1clZpZXdGb3J3YXJkIDwgMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY3VyVmlld0ZvcndhcmQgKz0gKGRlbHRhVGltZSkgKiBDYW1lcmFTZXR0aW5nLkZyb250QmFja09mZnNldE1vdmVTcGQ7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fY3VyVmlld0ZvcndhcmQgPiAwKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VyVmlld0ZvcndhcmQgPSAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fY3VyVmlld0ZvcndhcmQgPCB0aGlzLl9uZWVkVmlld0ZvcndhcmQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2N1clZpZXdGb3J3YXJkICs9IChkZWx0YVRpbWUpICogQ2FtZXJhU2V0dGluZy5Gcm9udEJhY2tPZmZzZXRNb3ZlU3BkO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2N1clZpZXdGb3J3YXJkID4gdGhpcy5fbmVlZFZpZXdGb3J3YXJkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VyVmlld0ZvcndhcmQgPSB0aGlzLl9uZWVkVmlld0ZvcndhcmQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5fY3VyVmlld0ZvcndhcmQgPiB0aGlzLl9uZWVkVmlld0ZvcndhcmQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2N1clZpZXdGb3J3YXJkIC09IChkZWx0YVRpbWUpICogQ2FtZXJhU2V0dGluZy5Gcm9udEJhY2tPZmZzZXRNb3ZlU3BkO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2N1clZpZXdGb3J3YXJkIDwgdGhpcy5fbmVlZFZpZXdGb3J3YXJkKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VyVmlld0ZvcndhcmQgPSB0aGlzLl9uZWVkVmlld0ZvcndhcmQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLyogaWYgKHRoaXMuX3Bvc09iai5DdXJyZW50UG9zT25Sb2FkICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIGxldCBkaXN0YW5jZSA9IChkZWx0YVRpbWUpICogQ2FtZXJhU2V0dGluZy5MZWZ0UmlnaHRNb3ZlU3BkO1xyXG4gICAgICAgICAgICAgICAgaWYgKHRoaXMuX2NhbWVyYU9mZnNldCA+IHRoaXMuX3RhcmdldE9mZnNldCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NhbWVyYU9mZnNldCAtPSBkaXN0YW5jZTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5fY2FtZXJhT2Zmc2V0IDw9IHRoaXMuX3RhcmdldE9mZnNldCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9jYW1lcmFPZmZzZXQgPSB0aGlzLl90YXJnZXRPZmZzZXQ7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5fY2FtZXJhT2Zmc2V0IDwgdGhpcy5fdGFyZ2V0T2Zmc2V0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY2FtZXJhT2Zmc2V0ICs9IGRpc3RhbmNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLl9jYW1lcmFPZmZzZXQgPj0gdGhpcy5fdGFyZ2V0T2Zmc2V0KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2NhbWVyYU9mZnNldCA9IHRoaXMuX3RhcmdldE9mZnNldDtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBmb2xsb3dQb3MgPSB0aGlzLkdldFBvc0J5T2Zmc2V0KHRoaXMuX3Bvc09ialNwM0QudHJhbnNmb3JtLCB0aGlzLl9wb3NPYmouQ3VycmVudFBvc09uUm9hZC5Qb3NXaXRoT3V0T2Zmc2V0LCB0aGlzLl9jYW1lcmFPZmZzZXQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgICove1xyXG4gICAgICAgICAgICAgICAgZm9sbG93UG9zID0gdGhpcy5fZm9sbG93T2JqU3AzRC50cmFuc2Zvcm0ucG9zaXRpb247XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgTGF5YS5WZWN0b3IzLmFkZChvZmZzZXQsIGZvbGxvd1BvcywgZmluYWxQb3MpO1xyXG4gICAgICAgIHRoaXMuX2NhbWVyYVBhcmVudC50cmFuc2Zvcm0ucG9zaXRpb24gPSBmaW5hbFBvcztcclxuICAgICAgICBsZXQgZGlyID0gbmV3IExheWEuVmVjdG9yMygpO1xyXG4gICAgICAgIHRoaXMuX2ZvbGxvd09ialNwM0QudHJhbnNmb3JtLmdldEZvcndhcmQoZGlyKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMubm9ybWFsaXplKGRpciwgZGlyKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc2NhbGUoZGlyLCB0aGlzLl9jdXJWaWV3Rm9yd2FyZCAqIC0xLCBkaXIpO1xyXG4gICAgICAgIExheWEuVmVjdG9yMy5hZGQoZGlyLCBmb2xsb3dQb3MsIGRpcik7XHJcbiAgICAgICAgdGhpcy5fY2FtZXJhUGFyZW50LnRyYW5zZm9ybS5sb29rQXQoZGlyLCBMYXlhLlZlY3RvcjMuX1VwLCBmYWxzZSk7XHJcbiAgICAgICAgaWYgKHRoaXMuX2NhbWVyYSAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NhbWVyYS5maWVsZE9mVmlldyA9IHRoaXMuX2ZpZWxkT2ZWaWV3O1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fc2hha2VUaW1lID4gMCkge1xyXG4gICAgICAgICAgICAgICAgbGV0IHNoYWtlRnJlcXVlbmN5ID0gdGhpcy5fc2hha2VUaW1lICogMiAqIE1hdGguUEkgKiBDYW1lcmFTZXR0aW5nLlNoYWtlRnJlcXVlbmN5O1xyXG4gICAgICAgICAgICAgICAgLy8gbGV0IHBvcyA9IG5ldyBMYXlhLlZlY3RvcjMoTWF0aC5zaW4oc2hha2VGcmVxdWVuY3kpICogMC4xLCBNYXRoLmNvcyhzaGFrZUZyZXF1ZW5jeSkgKiAwLjEsIE1hdGguY29zKHNoYWtlRnJlcXVlbmN5KSAqIDAuMSk7XHJcbiAgICAgICAgICAgICAgICBsZXQgcG9zID0gbmV3IExheWEuVmVjdG9yMyhNYXRoLnNpbihzaGFrZUZyZXF1ZW5jeSkgKiBDYW1lcmFTZXR0aW5nLlNoYWtlU3RyZW5ndGgsIDAsIDApO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY2FtZXJhUGFyZW50LnRyYW5zZm9ybS5nZXRSaWdodChwb3MpO1xyXG4gICAgICAgICAgICAgICAgTGF5YS5WZWN0b3IzLnNjYWxlKHBvcywgTWF0aC5zaW4oc2hha2VGcmVxdWVuY3kpICogQ2FtZXJhU2V0dGluZy5TaGFrZVN0cmVuZ3RoLCBwb3MpXHJcbiAgICAgICAgICAgICAgICBMYXlhLlZlY3RvcjMuYWRkKHBvcywgdGhpcy5fY2FtZXJhLnRyYW5zZm9ybS5wb3NpdGlvbiwgcG9zKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2NhbWVyYS50cmFuc2Zvcm0ucG9zaXRpb24gPSBwb3M7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9zaGFrZVRpbWUgLT0gTGF5YS50aW1lci5kZWx0YSAvIDEwMDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmjInnhafop5LluqblvpfliLDmkYTlg4/mnLrlgY/np7vvvIznlKjkuo7ml4vovazmkYTlg4/mnLpcclxuICAgICAqIFxyXG4gICAgICogQHJldHVybnMge0xheWEuVmVjdG9yM30gXHJcbiAgICAgKiBAbWVtYmVyb2YgQ2FtZXJhQ3RyXHJcbiAgICAgKi9cclxuICAgIEdldE9mZnNldEJ5QW5nZWwoKTogTGF5YS5WZWN0b3IzIHtcclxuICAgICAgICBsZXQgcmVzdWx0OiBMYXlhLlZlY3RvcjM7XHJcbiAgICAgICAgbGV0IGRpcyA9IExheWEuVmVjdG9yMy5kaXN0YW5jZSh0aGlzLl9jdXJyZW50T2Zmc2V0LCBMYXlhLlZlY3RvcjMuX1pFUk8uY2xvbmUoKSk7XHJcbiAgICAgICAgLy/lvZPmkYTlg4/mnLrnirbmgIHkuLrpnZ7ml4vovaznirbmgIHml7ZcclxuICAgICAgICBpZiAodGhpcy5fY2FtZXJhU3RhdGUgIT0gQ2FtZXJhU3RhdGUuUm90YXRlZEFyb3VuZCkge1xyXG4gICAgICAgICAgICAvL+W9k+aRhOWDj+acuueKtuaAgeS4uumdnuaXi+i9rOeKtuaAgeS4lOW9k+WJjeinkuW6puS4jeS4ujDml7bvvIzlhYjlsIbop5LluqbovazkuLowXHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9hbmdsZVkgPiAxODApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2FuZ2xlWSArPSBMYXlhLnRpbWVyLmRlbHRhIC8gMTAwMCAqIDM2MDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLl9hbmdsZVkgPiAwICYmIHRoaXMuX2FuZ2xlWSA8IDE4MCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fYW5nbGVZIC09IExheWEudGltZXIuZGVsdGEgLyAxMDAwICogMzYwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8v5b2T5pGE5YOP5py654q25oCB5Li66Z2e5peL6L2s54q25oCB5LiU5b2T5YmN6KeS5bqm5Li6MOaXtlxyXG4gICAgICAgICAgICBpZiAodGhpcy5fYW5nbGVZIDwgMCB8fCB0aGlzLl9hbmdsZVkgPj0gMzYwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9hbmdsZVkgPSAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJlc3VsdCA9IHRoaXMuUm90YXRlQXJvdW5kWUJ5QW5nbGUoZGlzLCB0aGlzLl9jdXJyZW50T2Zmc2V0LCB0aGlzLl9hbmdsZVkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fYW5nbGVZICs9IExheWEudGltZXIuZGVsdGEgLyAxMDAwICogMzA7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9hbmdsZVkgPiAzNjApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2FuZ2xlWSA9IHRoaXMuX2FuZ2xlWSAtIDM2MDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICByZXN1bHQgPSB0aGlzLlJvdGF0ZUFyb3VuZFlCeUFuZ2xlKGRpcywgdGhpcy5fY3VycmVudE9mZnNldCwgdGhpcy5fYW5nbGVZKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuXHJcblxyXG4gICAgUm90YXRlQ2FtZXJhKCk6IExheWEuVmVjdG9yMyB7XHJcbiAgICAgICAgbGV0IHJlc3VsdDogTGF5YS5WZWN0b3IzO1xyXG4gICAgICAgIGxldCBkaXMgPSBMYXlhLlZlY3RvcjMuZGlzdGFuY2UodGhpcy5fY3VycmVudE9mZnNldCwgTGF5YS5WZWN0b3IzLl9aRVJPLmNsb25lKCkpO1xyXG4gICAgICAgIHJlc3VsdCA9IHRoaXMuUm90YXRlQXJvdW5kQnlBbmdsZShkaXMsIHRoaXMuX2N1cnJlbnRPZmZzZXQsIHRoaXMuX2FuZ2xlWCwgdGhpcy5fYW5nbGVZKTtcclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5oyJ54Wn5LiW55WM5Z2Q5qCH55qEWei9tOaXi+i9rCBcclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtMYXlhLlZlY3RvcjN9IHZlY3RvciBcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBhbmdlbFkgXHJcbiAgICAgKiBAcmV0dXJucyB7TGF5YS5WZWN0b3IzfSBcclxuICAgICAqIEBtZW1iZXJvZiBDYW1lcmFDdHJcclxuICAgICAqL1xyXG4gICAgUm90YXRlQXJvdW5kWUJ5QW5nbGUocmFkaXVzOiBudW1iZXIsIHZlY3RvcjogTGF5YS5WZWN0b3IzLCBhbmdlbFk6IG51bWJlcik6IExheWEuVmVjdG9yMyB7XHJcbiAgICAgICAgLy/op5LluqbkuLow55qE5pe25YCZ5LiN6ZyA6KaB5peL6L2s55u05o6l6L+U5Zue5Y6f5L2N56e777yM5Y+v5Lul6IqC57qm5oCn6IO9XHJcbiAgICAgICAgaWYgKGFuZ2VsWSA9PSAwKSB7XHJcbiAgICAgICAgICAgIHJldHVybiB2ZWN0b3I7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCByZXN1bHQgPSBuZXcgTGF5YS5WZWN0b3IzKCk7XHJcbiAgICAgICAgbGV0IHJhZCA9IChhbmdlbFkgLyAxODApICogTWF0aC5QSTtcclxuICAgICAgICByZXN1bHQueCA9IE1hdGguc2luKHJhZCkgKiByYWRpdXM7XHJcbiAgICAgICAgcmVzdWx0LnkgPSB2ZWN0b3IueTtcclxuICAgICAgICByZXN1bHQueiA9IE1hdGguY29zKHJhZCkgKiByYWRpdXM7XHJcbiAgICAgICAgcmV0dXJuIHJlc3VsdDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaMieeFp+S4lueVjOWdkOagh+eahFjovbTml4vovawgXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7TGF5YS5WZWN0b3IzfSB2ZWN0b3IgXHJcbiAgICAgKiBAcGFyYW0ge251bWJlcn0gYW5nZWxYIFxyXG4gICAgICogQHJldHVybnMge0xheWEuVmVjdG9yM30gXHJcbiAgICAgKiBAbWVtYmVyb2YgQ2FtZXJhQ3RyXHJcbiAgICAgKi9cclxuICAgIFJvdGF0ZUFyb3VuZFhCeUFuZ2xlKHJhZGl1czogbnVtYmVyLCB2ZWN0b3I6IExheWEuVmVjdG9yMywgYW5nZWxYOiBudW1iZXIpIHtcclxuICAgICAgICAvL+inkuW6puS4ujDnmoTml7blgJnkuI3pnIDopoHml4vovaznm7TmjqXov5Tlm57ljp/kvY3np7vvvIzlj6/ku6XoioLnuqbmgKfog71cclxuICAgICAgICBpZiAoYW5nZWxYID09IDApIHtcclxuICAgICAgICAgICAgcmV0dXJuIHZlY3RvcjtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHJlc3VsdCA9IG5ldyBMYXlhLlZlY3RvcjMoKTtcclxuICAgICAgICBsZXQgcmFkID0gKGFuZ2VsWCAvIDE4MCkgKiBNYXRoLlBJO1xyXG4gICAgICAgIHJlc3VsdC54ID0gdmVjdG9yLng7XHJcbiAgICAgICAgcmVzdWx0LnkgPSBNYXRoLnNpbihyYWQpICogcmFkaXVzO1xyXG4gICAgICAgIHJlc3VsdC56ID0gTWF0aC5jb3MocmFkKSAqIHJhZGl1cztcclxuICAgICAgICByZXR1cm4gcmVzdWx0O1xyXG4gICAgfVxyXG5cclxuICAgIFJvdGF0ZUFyb3VuZEJ5QW5nbGUocmFkaXVzOiBudW1iZXIsIHZlY3RvcjogTGF5YS5WZWN0b3IzLCBhbmdlbFg6IG51bWJlciwgYW5nZWxZOiBudW1iZXIpIHtcclxuICAgICAgICBsZXQgcmVzdWx0ID0gdmVjdG9yLmNsb25lKCk7XHJcbiAgICAgICAgbGV0IHJhZHggPSAoYW5nZWxYIC8gMTgwKSAqIE1hdGguUEk7XHJcbiAgICAgICAgbGV0IHJhZHkgPSAoYW5nZWxZIC8gMTgwKSAqIE1hdGguUEk7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2cocmFkeCk7XHJcbiAgICAgICAgcmVzdWx0LnggPSBNYXRoLnNpbihyYWR4KSAqIE1hdGguY29zKHJhZHkpICogcmFkaXVzO1xyXG4gICAgICAgIHJlc3VsdC55ID0gTWF0aC5jb3MocmFkeCkgKiByYWRpdXM7XHJcbiAgICAgICAgcmVzdWx0LnogPSBNYXRoLnNpbihyYWR4KSAqIE1hdGguc2luKHJhZHkpICogcmFkaXVzO1xyXG4gICAgICAgIHJldHVybiByZXN1bHQ7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDorr7nva7mkYTlg4/mnLrliqjnlLvnirbmgIHnmoTmlrnms5VcclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHsqfSBhcmdzIFxyXG4gICAgICogQG1lbWJlcm9mIENhbWVyYUN0clxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgQ2hhbmdlQ2FtZXJhU3RhdGUoYXJnczogYW55KSB7XHJcbiAgICAgICAgLy8gbGV0IHRyYW5zZm9ybU9mZnNldDogTGF5YS5WZWN0b3IzOy8v5pGE5YOP5py65LiO6KeS6Imy55qEdHJhbnNmb3Jt5YGP56e7XHJcbiAgICAgICAgLy8gbGV0IHJvdGF0ZTogTGF5YS5WZWN0b3IzOy8v5pGE5YOP5py655qE5peL6L2sXHJcbiAgICAgICAgbGV0IGZpZWxkT2ZWaWV3OiBudW1iZXI7Ly/mkYTlg4/mnLrop5LluqbvvIznlKjmnaXooajnjrDliqDpgJ/lh4/pgJ/nmoTmlYjmnpxcclxuICAgICAgICAvLyBsZXQgY2FtZXJhU3RhdGUgPSBhcmdzLkNhbWVyYVN0YXRlIGFzIENhbWVyYVN0YXRlO1xyXG4gICAgICAgIGxldCBzcGVlZFN0YXRlID0gYXJncy5TcGVlZFN0YXRlIGFzIFNwZWVkU3RhdGU7XHJcbiAgICAgICAgbGV0IGNhbWVyYU9mZlNldCA9IGFyZ3MuQ2FtZXJhT2Zmc2V0IGFzIExheWEuVmVjdG9yMztcclxuICAgICAgICBsZXQgY2FtZXJhUm90YXRlID0gYXJncy5DYW1lcmFSb3RhdGUgYXMgTGF5YS5Qb2ludDtcclxuICAgICAgICBsZXQgY2FtZXJhUm90YXRlWCA9IGFyZ3MuQ2FtZXJhUm90YXRlWDtcclxuICAgICAgICBsZXQgY2FtZXJhUm90YXRlWSA9IGFyZ3MuQ2FtZXJhUm90YXRlWTtcclxuICAgICAgICBsZXQgY2FtZXJhVmlld0ZvcndhcmQgPSBhcmdzLkNhbWVyYVZpZXdGb3J3YXJkIGFzIG51bWJlcjtcclxuICAgICAgICAvLyBsZXQgcm9hZE9mZnNldCA9IGFyZ3MuUm9hZE9mZnNldCBhcyBudW1iZXI7XHJcbiAgICAgICAgbGV0IHNoYWtlVGltZSA9IGFyZ3MuU2hha2VUaW1lIGFzIG51bWJlcjtcclxuICAgICAgICBsZXQgaGVpZ2h0ID0gYXJncy5IZWlnaHQgYXMgbnVtYmVyO1xyXG4gICAgICAgIGlmIChzaGFrZVRpbWUpIHtcclxuICAgICAgICAgICAgdGhpcy5fc2hha2VUaW1lID0gTWF0aC5tYXgoMCwgc2hha2VUaW1lKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGhlaWdodCkge1xyXG4gICAgICAgICAgICB0aGlzLl9oZWlnaHQgPSBNYXRoLm1heCgwLCBoZWlnaHQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBpZiAocm9hZE9mZnNldCkge1xyXG4gICAgICAgIC8vICAgICB0aGlzLl90YXJnZXRPZmZzZXQgPSByb2FkT2Zmc2V0ICogQ2FtZXJhU2V0dGluZy5MZWZ0UmlnaHRSYXRlO1xyXG4gICAgICAgIC8vICAgICAvLyBpZiAodGhpcy5fY2FtZXJhU3RhdGUgPT0gQ2FtZXJhU3RhdGUuR3JvdW5kUnVuICYmIGNhbWVyYVN0YXRlID09IENhbWVyYVN0YXRlLkdyb3VuZCkge1xyXG4gICAgICAgIC8vICAgICAvLyAgICAgdGhpcy5fY2FtZXJhT2Zmc2V0ID0gb2Zmc2V0O1xyXG4gICAgICAgIC8vICAgICAvLyB9XHJcbiAgICAgICAgLy8gICAgIC8vIGVsc2Uge1xyXG4gICAgICAgIC8vICAgICAvLyAgICAgdGhpcy5fdGFyZ2V0T2Zmc2V0ID0gb2Zmc2V0ICogMC42O1xyXG4gICAgICAgIC8vICAgICAvLyB9XHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIC8qIOWIh+aNouaRhOWDj+acuui3n+maj+eKtuaAgSAqL1xyXG4gICAgICAgIC8vIGlmIChjYW1lcmFTdGF0ZSkge1xyXG4gICAgICAgIC8vICAgICB0aGlzLl9jYW1lcmFTdGF0ZSA9IGNhbWVyYVN0YXRlO1xyXG4gICAgICAgIC8vICAgICAvKiAgICAgICAgICAgICBzd2l0Y2ggKGNhbWVyYVN0YXRlKSB7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICBjYXNlIENhbWVyYVN0YXRlLlJvdGF0ZWRBcm91bmQ6XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICBjYXNlIENhbWVyYVN0YXRlLk5vcm1hbDpcclxuXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgICAgICAgICAgdGhpc1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgIC8vIGlmICh0aGlzLl9jYW1lcmFTdGF0ZSA9PSBDYW1lcmFTdGF0ZS5GaXhlZCkge1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICAgICAvLyAgICAgdGhpcy5fZml4ZWRGb2xsb3dQb3MgPSB0aGlzLl9wbGF5ZXIudHJhbnNmb3JtLnBvc2l0aW9uLmNsb25lKCk7XHJcbiAgICAgICAgLy8gICAgICAgICAgICAgICAgIC8vIH1cclxuICAgICAgICAvLyAgICAgICovXHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIGlmIChjYW1lcmFPZmZTZXQpIHtcclxuICAgICAgICAgICAgbGV0IGRpcyA9IExheWEuVmVjdG9yMy5kaXN0YW5jZSh0aGlzLl9jdXJyZW50T2Zmc2V0LCBjYW1lcmFPZmZTZXQpO1xyXG4gICAgICAgICAgICBsZXQgdGltZSA9IGRpcztcclxuICAgICAgICAgICAgaWYgKGRpcyA+IDAuMSkge1xyXG4gICAgICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLl9jdXJyZW50T2Zmc2V0LCB7IHg6IGNhbWVyYU9mZlNldC54LCB5OiBjYW1lcmFPZmZTZXQueSwgejogY2FtZXJhT2ZmU2V0LnogfSwgTWF0aC5taW4oMTAwMCwgdGltZSAqIDEwMDApLCBMYXlhLkVhc2UubGluZWFyTm9uZSwgbnVsbCwgMCwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGNhbWVyYVJvdGF0ZVgpIHtcclxuICAgICAgICAgICAgdGhpcy5fYW5nbGVYICs9IGNhbWVyYVJvdGF0ZVg7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9hbmdsZVggPiAtMTApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2FuZ2xlWCA9IC0xMFxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKHRoaXMuX2FuZ2xlWCA8IC0xMjApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2FuZ2xlWCA9IC0xMjA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGNhbWVyYVJvdGF0ZSkge1xyXG4gICAgICAgICAgICAvLyB0aGlzLl9hbmdsZVggPSBjYW1lcmFSb3RhdGUueDtcclxuICAgICAgICAgICAgLy8gdGhpcy5fYW5nbGVZID0gY2FtZXJhUm90YXRlLnk7XHJcbiAgICAgICAgICAgIGxldCBkaXMgPSBNYXRoLnBvdyhjYW1lcmFSb3RhdGUueCAtIHRoaXMuX2FuZ2xlWCwgMikgKyBNYXRoLnBvdyhjYW1lcmFSb3RhdGUueSAtIHRoaXMuX2FuZ2xlWSwgMik7XHJcbiAgICAgICAgICAgIGlmIChkaXMgPiAxKSB7XHJcbiAgICAgICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMsIHsgX2FuZ2xlWDogY2FtZXJhUm90YXRlLngsIF9hbmdsZVk6IGNhbWVyYVJvdGF0ZS55IH0sIDEwMDAsIExheWEuRWFzZS5saW5lYXJOb25lLCBudWxsLCAwLCB0cnVlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoY2FtZXJhUm90YXRlWSkge1xyXG4gICAgICAgICAgICB0aGlzLl9hbmdsZVkgKz0gY2FtZXJhUm90YXRlWTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKGNhbWVyYVZpZXdGb3J3YXJkICE9IG51bGwpIHtcclxuICAgICAgICAgICAgdGhpcy5fbmVlZFZpZXdGb3J3YXJkID0gY2FtZXJhVmlld0ZvcndhcmQ7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8qIOaRhOWDj+acuuWKoOmAn+WHj+mAn+aViOaenO+8jOWKoOmAn+aXtuS8muaJqeWkp+WKoOWkp2ZpZWxkT2ZWaWV377yM5YeP6YCf5pe25YiZ55u45Y+NICovXHJcbiAgICAgICAgaWYgKHNwZWVkU3RhdGUpIHtcclxuICAgICAgICAgICAgc3dpdGNoIChzcGVlZFN0YXRlKSB7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFNwZWVkU3RhdGUuU3BlZWRVcDpcclxuICAgICAgICAgICAgICAgICAgICAvLyB0aGlzLl9zcGVlZEVmZmVjdC5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIGZpZWxkT2ZWaWV3ID0gNzA7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFNwZWVkU3RhdGUuU3BlZWREb3duOlxyXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMuX3NwZWVkRWZmZWN0LmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGZpZWxkT2ZWaWV3ID0gNTU7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFNwZWVkU3RhdGUuTm9ybWFsOlxyXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMuX3NwZWVkRWZmZWN0LmFjdGl2ZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIGZpZWxkT2ZWaWV3ID0gNjA7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRoaXMuX3NwZWVkU3RhdGUgIT0gc3BlZWRTdGF0ZSAmJiBmaWVsZE9mVmlldyAmJiB0aGlzLl9maWVsZE9mVmlldyAhPSBmaWVsZE9mVmlldykge1xyXG4gICAgICAgICAgICAgICAgLy8g562J5rWL6K+V5a6M5q+V5LmL5ZCO5L2/55So6L+Z5Liq5pa55rOVXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9zcGVlZFN0YXRlID0gc3BlZWRTdGF0ZTtcclxuICAgICAgICAgICAgICAgIGxldCB0aW1lID0gKChNYXRoLmFicyhNYXRoLmFicyh0aGlzLl9maWVsZE9mVmlldykgLSBNYXRoLmFicyhmaWVsZE9mVmlldykpKSAvIDQ1KSAqIDEwMDA7XHJcbiAgICAgICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMsIHsgX2ZpZWxkT2ZWaWV3OiBmaWVsZE9mVmlldyB9LCB0aW1lLCBMYXlhLkVhc2UubGluZWFyTm9uZSwgbnVsbCwgMCwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gaWYgKHJvdGF0ZSAmJiB0aGlzLl9yb3RhdGUgIT0gcm90YXRlKSB7XHJcbiAgICAgICAgLy8gICAgIExheWEuVHdlZW4udG8odGhpcy5fcm90YXRlLCB7IHg6IHJvdGF0ZS54LCB5OiByb3RhdGUueSwgejogcm90YXRlLnogfSwgMzAwLCBMYXlhLkVhc2UuY2lyY091dCwgbnVsbCwgMCwgdHJ1ZSk7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yid5aeL5YyW5pGE5YOP5py6XHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7TGF5YS5TcHJpdGUzRH0gcGxheWVyQ3RyIOeOqeWutuaOp+WItuWZqOeahOW8leeUqFxyXG4gICAgICogQHBhcmFtIHtMYXlhLlZlY3RvcjN9IGdvdW5kT2Zmc2V0IOeOqeWutuWcqOWcsOmdouaXtu+8jOaRhOWDj+acuuS9jeenu1xyXG4gICAgICogQHBhcmFtIHtMYXlhLlZlY3RvcjN9IHNreU9mZnNldCDnjqnlrrblnKjnqbrkuK3ml7bvvIzmkYTlg4/mnLrkvY3np7tcclxuICAgICAqIEBwYXJhbSB7bnVtYmVyfSBbZmllbGRPZlZpZXcgPSA2MF0g5q2j5bi45oOF5Ya15LiL55qE6KeG6KeSXHJcbiAgICAgKiBAbWVtYmVyb2YgQ2FtZXJhQ3RyXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBJbml0Q2FtZXJhKHBvc09iajogTGF5YS5TcHJpdGUzRCkge1xyXG4gICAgICAgIHRoaXMuX2NhbWVyYVBhcmVudCA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGUzRDtcclxuICAgICAgICB0aGlzLl9jYW1lcmEgPSB0aGlzLm93bmVyIGFzIExheWEuQ2FtZXJhO1xyXG4gICAgICAgIGlmICh0aGlzLl9mb2xsb3dPYmpTcDNEICE9IG51bGwgJiYgdGhpcy5fY2FtZXJhU3RhdGUgPT0gQ2FtZXJhU3RhdGUuQ2hhbmdlRm9sbG93T2JqKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NhbWVyYVN0YXRlID0gQ2FtZXJhU3RhdGUuQ2hhbmdlaW5nRm9sbG93T2JqO1xyXG4gICAgICAgICAgICB0aGlzLl9wcmVGb2xsb3dPYmogPSB0aGlzLl9mb2xsb3dPYmpTcDNEO1xyXG4gICAgICAgICAgICB0aGlzLl9mb2xsb3dPYmpTcDNEID0gcG9zT2JqO1xyXG4gICAgICAgICAgICB0aGlzLl9jaGFuZ2VUb3RsYURpc3RhbmNlID0gTGF5YS5WZWN0b3IzLmRpc3RhbmNlKHRoaXMuX3ByZUZvbGxvd09iai50cmFuc2Zvcm0ucG9zaXRpb24sIHRoaXMuX2ZvbGxvd09ialNwM0QudHJhbnNmb3JtLnBvc2l0aW9uKTtcclxuICAgICAgICAgICAgdGhpcy5fY2hhbmdlTW92ZVNwZWVkID0gdGhpcy5fY2hhbmdlVG90bGFEaXN0YW5jZSAvIENhbWVyYVNldHRpbmcuQ2hhbmdlT2JqVGltZTtcclxuICAgICAgICAgICAgdGhpcy5fY2hhbmdlQ3VycmVudERpc3RhbmNlID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2ZvbGxvd09ialNwM0QgPSBwb3NPYmo7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIHRoaXMuX2NhbWVyYSA9IHRoaXMuX2NhbWVyYVBhcmVudC5nZXRDaGlsZEJ5TmFtZShcIk1haW4gQ2FtZXJhXCIpIGFzIExheWEuQ2FtZXJhO1xyXG4gICAgICAgIC8vIHRoaXMuX3NwZWVkRWZmZWN0ID0gdGhpcy5fY2FtZXJhUGFyZW50LmdldENoaWxkQnlOYW1lKFwic2hleGlhblwiKSBhcyBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgIHRoaXMuX2N1cnJlbnRPZmZzZXQgPSB0aGlzLl9nb3VuZE9mZnNldC5jbG9uZSgpO1xyXG4gICAgICAgIHRoaXMuX2NhbWVyYVBhcmVudC50cmFuc2Zvcm0ucG9zaXRpb24gPSB0aGlzLl9mb2xsb3dPYmpTcDNELnRyYW5zZm9ybS5wb3NpdGlvbi5jbG9uZSgpO1xyXG4gICAgICAgIHRoaXMuX2NhbWVyYVN0YXRlID0gQ2FtZXJhU3RhdGUuTm9ybWFsO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IENoYXJhY3RlckN0ciBmcm9tIFwiLi9DaGFyYWN0ZXJDdHJcIjtcclxuaW1wb3J0IEV2ZW50TWdyX2NzamMgZnJvbSBcIi4uLy4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XHJcbmltcG9ydCB7IEV2ZW50RGVmX2NzamMgfSBmcm9tIFwiLi4vLi4vLi4vRXZlbnQvRXZlbnREZWZcIjtcclxuaW1wb3J0IHsgSW5wdXRUeXBlLCBQbGF5ZXJUeXBlLCBDb2xsaXNpb25Hcm91cCB9IGZyb20gXCIuLi9FbnVtc1wiO1xyXG5pbXBvcnQgRlNNU3lzdGVtIGZyb20gXCIuLi9Gc20vRlNNU3lzdGVtXCI7XHJcbmltcG9ydCBUUmV4U3RhdGUgZnJvbSBcIi4uL0ZzbVN0YXRlcy9UUmV4U3RhdGVcIjtcclxuaW1wb3J0IEtpbmdraW5nU3RhdGUgZnJvbSBcIi4uL0ZzbVN0YXRlcy9LaW5na2luZ1N0YXRlXCI7XHJcbmltcG9ydCBTY2VuZU1ncl9jc2NqIGZyb20gXCIuLi9TY2VuZU1nclwiO1xyXG5pbXBvcnQgQmFzZVN0YXRlIGZyb20gXCIuLi9Gc21TdGF0ZXMvQmFzZVN0YXRlXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCb3NzUm9ib3QgZXh0ZW5kcyBDaGFyYWN0ZXJDdHIge1xyXG5cclxuICAgIGdldCBQbGF5ZXIoKTogTGF5YS5TcHJpdGUzRCB7IHJldHVybiBTY2VuZU1ncl9jc2NqLkluc3RhbmNlLlBsYXllci5Gb2xsb3dPYmo7IH1cclxuICAgIGdldCBBbmlTcHJpdGUoKTogTGF5YS5TcHJpdGUzRCB7IHJldHVybiB0aGlzLl9tb3duZXIuZ2V0Q2hpbGRBdCgwKWFzIExheWEuU3ByaXRlM0QgfVxyXG4gICAgcHJpdmF0ZSBfZGllOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBwcml2YXRlIF90aW1lcjogbnVtYmVyID0gMDtcclxuICAgIHByaXZhdGUgX2FuaSA6IExheWEuQW5pbWF0b3IgPSBudWxsO1xyXG4gICAgcHJpdmF0ZSBfcmlnaWRCb2R5M0Q6IExheWEuUmlnaWRib2R5M0Q7XHJcbiAgICBwcml2YXRlIF9waHlzaWNzQ29tcG9uZW50OiBMYXlhLlBoeXNpY3NDb21wb25lbnQ7XHJcbiAgICBwcml2YXRlIF9pc0F0azpib29sZWFuID0gZmFsc2VcclxuICAgIG9uRW5hYmxlKClcclxuICAgIHtcclxuICAgICAgICBzdXBlci5vbkVuYWJsZSgpXHJcbiAgICAgICAgdGhpcy5fbW93bmVyID0gdGhpcy5fcGxheWVyS2luZCAhPSBQbGF5ZXJUeXBlLktpbmdrb25nP3RoaXMuX3RSZXg6dGhpcy5fa2luZ2tvbmc7XHJcbiAgICAgICAgdGhpcy5fYW5pID0gdGhpcy5fbW93bmVyLmdldENoaWxkQXQoMCkuZ2V0Q29tcG9uZW50KExheWEuQW5pbWF0b3IpIGFzIExheWEuQW5pbWF0b3I7XHJcbiAgICAgICAgdGhpcy5fcmlnaWRCb2R5M0QgPXRoaXMuX21vd25lci5nZXRDb21wb25lbnQoTGF5YS5SaWdpZGJvZHkzRCkgYXMgTGF5YS5SaWdpZGJvZHkzRDtcclxuXHJcbiAgICAgICAgdGhpcy5fcGh5c2ljc0NvbXBvbmVudCA9IHRoaXMuX21vd25lci5nZXRDb21wb25lbnQoTGF5YS5QaHlzaWNzQ29tcG9uZW50KTtcclxuICAgICAgICAvLyB0aGlzLl9waHlzaWNzQ29tcG9uZW50LmNvbGxpc2lvbkdyb3VwID0gQ29sbGlzaW9uR3JvdXAuT2JzdGFjbGU7XHJcbiAgICAgICAgLy8gdGhpcy5fcGh5c2ljc0NvbXBvbmVudC5jYW5Db2xsaWRlV2l0aCA9IENvbGxpc2lvbkdyb3VwLk5vbmUgfCBDb2xsaXNpb25Hcm91cC5Hcm91bmQgfCBDb2xsaXNpb25Hcm91cC5DaGFyYWN0ZXI7XHJcbiAgICAgICAgdGhpcy5fcmlnaWRCb2R5M0QuaXNLaW5lbWF0aWMgPSBmYWxzZVxyXG4gICAgICAgIFxyXG4gICAgfVxyXG4gICAgLy8gb25EaXNhYmxlKClcclxuICAgIC8vIHtcclxuICAgIC8vICAgICB0aGlzLl9yaWdpZEJvZHkzRC5pc0tpbmVtYXRpYyA9IHRydWVcclxuXHJcbiAgICAvLyB9XHJcbiAgICBJbnB1dChwb2ludDogTGF5YS5Qb2ludCkge1xyXG4gICAgfVxyXG4gICAgTWFrZUZzbSgpIHtcclxuICAgICAgICB0aGlzLl9mc20gPSBuZXcgRlNNU3lzdGVtKHRoaXMpO1xyXG5cclxuICAgICAgICBpZihTY2VuZU1ncl9jc2NqLkluc3RhbmNlLkJvc3NLaW5kID09IFBsYXllclR5cGUuS2luZ2tvbmcpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB0aGlzLl9mc20uQWRkU3RhdGUodGhpcy5fa2luZ2tvbmcuYWRkQ29tcG9uZW50KEtpbmdraW5nU3RhdGUpKTtcclxuICAgICAgICAgICAgdGhpcy5fZnNtYm9zcyA9IHRoaXMuX2tpbmdrb25nLmdldENvbXBvbmVudChLaW5na2luZ1N0YXRlKVxyXG4gICAgICAgICAgICB0aGlzLl9raW5na29uZy5nZXRDaGlsZEF0KDApLmdldENoaWxkQnlOYW1lKFwiQXR0YWNrMV9LaW5na29uZ1wiKS5uYW1lID0gXCJBdHRhY2sxa2tcIlxyXG4gICAgICAgICAgICB0aGlzLl90UmV4LmFjdGl2ZT1mYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5fcGxheWVyS2luZCA9IFBsYXllclR5cGUuS2luZ2tvbmc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHRoaXMuX2ZzbS5BZGRTdGF0ZSh0aGlzLl90UmV4LmFkZENvbXBvbmVudChUUmV4U3RhdGUpKTtcclxuICAgICAgICAgICAgdGhpcy5fZnNtYm9zcyA9IHRoaXMuX3RSZXguZ2V0Q29tcG9uZW50KFRSZXhTdGF0ZSlcclxuICAgICAgICAgICAgdGhpcy5fa2luZ2tvbmcuYWN0aXZlPWZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLl9wbGF5ZXJLaW5kID0gUGxheWVyVHlwZS5UUmV4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIFNldEZvbGxvd09iaihvYmo6IExheWEuU3ByaXRlM0QpIHtcclxuICAgIH1cclxuXHJcbiAgICBvblVwZGF0ZSgpXHJcbiAgICB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCIqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t5pS75Ye75Lit572a56uZXCIsdGhpcy5faXNBdGspXHJcblxyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXh4eHh4eHh4eHhcIix0aGlzLl9pc0F0aylcclxuXHJcbiAgICAgICAgaWYoU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5Cb3NzVmlzaWJsZSA9PSBmYWxzZXx8U2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5HYW1lT3ZlciAhPSAwKVxyXG4gICAgICAgIHJldHVyblxyXG4gICAgICAgIHN1cGVyLm9uVXBkYXRlKClcclxuXHJcbiAgICAgICAgLy8gcmV0dXJuXHJcbiAgICAgICAgaWYgKHRoaXMuX2RpZXx8U2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5QbGF5ZXI9PW51bGwpIHJldHVybjtcclxuICAgICAgICBsZXQgZGlzID0gTGF5YS5WZWN0b3IzLmRpc3RhbmNlKHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uLCB0aGlzLlBsYXllci50cmFuc2Zvcm0ucG9zaXRpb24pO1xyXG4gICAgICAgIGxldCBpblBsYW5lID0gTWF0aC5hYnModGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucG9zaXRpb24ueSAtIHRoaXMuUGxheWVyLnRyYW5zZm9ybS5wb3NpdGlvbi55KSA8PSAxO1xyXG4gICAgICAgIHRoaXMuQW5pU3ByaXRlLnRyYW5zZm9ybS5sb2NhbFJvdGF0aW9uRXVsZXJZPTAgICAgXHJcbiAgICAgICAgdGhpcy5DaGFzZU1ldGhvZCgpO1xyXG5cclxuICAgICAgICBpZih0aGlzLl9pc0F0az09dHJ1ZSlcclxuICAgICAgICByZXR1cm5cclxuICAgICAgICBpZiAoZGlzIDw9IDEwICYmIGluUGxhbmUmJnRoaXMuX3RpbWVyPD0wKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQXR0YWNrKCk7XHJcbiAgICAgICAgICAgIHRoaXMuX3JpZ2lkQm9keTNELmxpbmVhclZlbG9jaXR5ID0gTGF5YS5WZWN0b3IzLl9aRVJPXHJcbiAgICAgICAgICAgIHRoaXMuX2lzQXRrID0gdHJ1ZVxyXG4gICAgICAgICAgICB0aGlzLl9hbmkuc3BlZWQgPTEuNTtcclxuXHJcbiAgICAgICAgICAgIExheWEudGltZXIub25jZSgzMDAwLHRoaXMsKCk9PntcclxuICAgICAgICAgICAgICAgIHRoaXMuX2lzQXRrID0gZmFsc2VcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoZGlzIDwgODAgJiYgaW5QbGFuZSkge1xyXG4gICAgICAgICAgICAvLyBpZihkaXM8NjApXHJcbiAgICAgICAgICAgIC8vIHtcclxuICAgICAgICAgICAgLy8gICAgIHRoaXMuX2FuaS5wbGF5KFwiV2Fsa1wiKTtcclxuICAgICAgICAgICAgLy8gICAgIHRoaXMuX3JpZ2lkQm9keTNELmxpbmVhclZlbG9jaXR5ID0gbmV3IExheWEuVmVjdG9yMyhNYXRoLnNpbih0aGlzLl9tb3duZXIudHJhbnNmb3JtLnBvc2l0aW9uLnkpICogMyAsIFxyXG4gICAgICAgICAgICAvLyAgICAgdGhpcy5fcmlnaWRCb2R5M0QubGluZWFyVmVsb2NpdHkueSwgTWF0aC5jb3ModGhpcy5fbW93bmVyLnRyYW5zZm9ybS5wb3NpdGlvbi55KSAqIDMgKTtcclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICAvLyBlbHNlXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGxldCBzcGVlZCA9IDAuMyArIChkaXMvODApKjAuN1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fYW5pLnBsYXkoXCJXYWxrXCIpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fYW5pLnNwZWVkID0gc3BlZWQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5saW5lYXJWZWxvY2l0eSA9IG5ldyBMYXlhLlZlY3RvcjMoTWF0aC5zaW4odGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucm90YXRpb25FdWxlci55KSAqIDgqc3BlZWQgLFxyXG4gICAgICAgICAgICAgICAgIHRoaXMuX3JpZ2lkQm9keTNELmxpbmVhclZlbG9jaXR5LnksIE1hdGguY29zKHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnJvdGF0aW9uRXVsZXIueSkgKiA4KnNwZWVkICk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2FuaS5wbGF5KFwiSWRsZVwiKTtcclxuICAgICAgICAgICAgdGhpcy5fcmlnaWRCb2R5M0QubGluZWFyVmVsb2NpdHkgPSBMYXlhLlZlY3RvcjMuX1pFUk9cclxuICAgICAgICAgICAgLy8gdGhpcy5DaGFzZU1ldGhvZCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBBdHRhY2soKSB7XHJcbiAgICAgICAgdGhpcy5BbmlTcHJpdGUudHJhbnNmb3JtLmxvY2FsUm90YXRpb25FdWxlclk9MCAgICBcclxuICAgICAgICB0aGlzLl90aW1lciA9IDQwMDA7XHJcbiAgICAgICAgdGhpcy5DaGFzZU1ldGhvZCgpO1xyXG5cclxuICAgICAgICB0aGlzLkVuZW15VHJ1bigpO1xyXG4gICAgICAgIHRoaXMuX2ZzbS5DdXJyZW50U3RhdGUuUmVhc29uKHtJbnB1dFR5cGU6SW5wdXRUeXBlLkF0dGFja30pO1xyXG4gICAgfVxyXG5cclxuICAgIENoYXNlTWV0aG9kKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl90aW1lciA8PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuRW5lbXlUcnVuKCk7XHJcbiAgICAgICAgICAgIC8vIHRoaXMuRW5lbXlNb3ZlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl90aW1lciAtPSBMYXlhLnRpbWVyLmRlbHRhO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgRW5lbXlUcnVuKCkge1xyXG4gICAgICAgIHRoaXMuQW5pU3ByaXRlLnRyYW5zZm9ybS5sb2NhbFJvdGF0aW9uRXVsZXJZPTAgICAgXHJcblxyXG4gICAgICAgIGxldCBkaXIgPSBuZXcgTGF5YS5WZWN0b3IzKCk7XHJcbiAgICAgICAgTGF5YS5WZWN0b3IzLnN1YnRyYWN0KHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uLCB0aGlzLlBsYXllci50cmFuc2Zvcm0ucG9zaXRpb24sIGRpcik7XHJcbiAgICAgICAgTGF5YS5WZWN0b3IzLmFkZCh0aGlzLlNwcml0ZTNELnRyYW5zZm9ybS5wb3NpdGlvbiwgZGlyLCBkaXIpO1xyXG4gICAgICAgIHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLmxvb2tBdChkaXIsIExheWEuVmVjdG9yMy5fVXApO1xyXG4gICAgfVxyXG5cclxufSIsImltcG9ydCB7IFRyYW5zaXRpb24sIFN0YXRlSUQgfSBmcm9tIFwiLi4vRnNtL0ZzbUVudW1cIjtcclxuaW1wb3J0IEZTTVN5c3RlbSBmcm9tIFwiLi4vRnNtL0ZTTVN5c3RlbVwiO1xyXG5pbXBvcnQgVFJleFN0YXRlIGZyb20gXCIuLi9Gc21TdGF0ZXMvVFJleFN0YXRlXCI7XHJcbmltcG9ydCBQdGVyU3RhdGUgZnJvbSBcIi4uL0ZzbVN0YXRlcy9QdGVyU3RhdGVcIjtcclxuaW1wb3J0IFNjZW5lTWdyX2NzY2ogZnJvbSBcIi4uL1NjZW5lTWdyXCI7XHJcbmltcG9ydCBLaW5na2luZ1N0YXRlIGZyb20gXCIuLi9Gc21TdGF0ZXMvS2luZ2tpbmdTdGF0ZVwiO1xyXG5pbXBvcnQgeyBQbGF5ZXJUeXBlLCBJbnB1dFR5cGUgfSBmcm9tIFwiLi4vRW51bXNcIjtcclxuaW1wb3J0IEJhc2VTdGF0ZSBmcm9tIFwiLi4vRnNtU3RhdGVzL0Jhc2VTdGF0ZVwiO1xyXG5pbXBvcnQgRXZlbnRNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcclxuaW1wb3J0IHsgRXZlbnREZWZfY3NqYyB9IGZyb20gXCIuLi8uLi8uLi9FdmVudC9FdmVudERlZlwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2hhcmFjdGVyQ3RyIGV4dGVuZHMgTGF5YS5TY3JpcHQzRCB7XHJcbiAgICBnZXQgRm9sbG93T2JqKCk6IExheWEuU3ByaXRlM0QgeyByZXR1cm4gdGhpcy5fZm9sbG93T2JqOyB9XHJcbiAgICBnZXQgU3RhdGVJZCgpOiBTdGF0ZUlEIHsgcmV0dXJuIHRoaXMuX2ZzbS5DdXJyZW50U3RhdGVJRDsgfVxyXG4gICAgZ2V0IFN0YXRlKCk6IEJhc2VTdGF0ZSB7IHJldHVybiB0aGlzLl9mc21ib3NzIH1cclxuICAgIGdldCBTcHJpdGUzRCgpOiBMYXlhLlNwcml0ZTNEIHsgcmV0dXJuIHRoaXMuX21vd25lciBhcyBMYXlhLlNwcml0ZTNEIH1cclxuICAgIHByaXZhdGUgX3NlbGVjZXRLaW5kID0gMFxyXG4gICAgcHJpdmF0ZSBfY2FuUk8gPSB0cnVlXHJcblxyXG4gICAgcHJvdGVjdGVkIF9tb3duZXI6IExheWEuU3ByaXRlM0QgPSBudWxsO1xyXG4gICAgcHJvdGVjdGVkIF9mc206IEZTTVN5c3RlbTtcclxuICAgIHByb3RlY3RlZCBfdFJleDogTGF5YS5TcHJpdGUzRDtcclxuICAgIHByb3RlY3RlZCBfa2luZ2tvbmc6IExheWEuU3ByaXRlM0Q7XHJcbiAgICBwcm90ZWN0ZWQgX3BsYXllcktpbmQ6IFBsYXllclR5cGVcclxuICAgIHByb3RlY3RlZCBfZnNtYm9zczogQmFzZVN0YXRlXHJcbiAgICBcclxuICAgIC8vIHByb3RlY3RlZCBfcHRlcjogTGF5YS5TcHJpdGUzRDtcclxuICAgIHByb3RlY3RlZCBfZm9sbG93T2JqOiBMYXlhLlNwcml0ZTNEO1xyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICB0aGlzLl90UmV4ID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlRSZXhcIikgYXMgTGF5YS5TcHJpdGUzRDtcclxuICAgICAgICB0aGlzLl9raW5na29uZyA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJLaW5na29uZ1wiKSBhcyBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgIC8vIHRoaXMuX3B0ZXIgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiUHRlcm9TaG9ydFwiKSBhcyBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgIHRoaXMuTWFrZUZzbSgpO1xyXG4gICAgfVxyXG4gICAgb25FbmFibGUoKSAge1xyXG4gICAgICAgIHRoaXMuX21vd25lciA9IHRoaXMuX3BsYXllcktpbmQgIT0gUGxheWVyVHlwZS5LaW5na29uZz90aGlzLl90UmV4LmdldENoaWxkQXQoMCkgYXMgTGF5YS5TcHJpdGUzRDp0aGlzLl9raW5na29uZy5nZXRDaGlsZEF0KDApYXMgTGF5YS5TcHJpdGUzRDtcclxuICAgICAgICB0aGlzLl9jYW5STz10cnVlXHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5yZWdFdmVudF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9JbnB1dF9jc2pjLCB0aGlzLCB0aGlzLklucHV0X2NzamMpO1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMucmVnRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLkJvc3NWaXNpYmxlLCB0aGlzLCB0aGlzLk9uU2VsZWN0SGVybyk7XHJcblxyXG4gICAgfVxyXG4gICAgb25EaXNhYmxlKClcclxuICAgIHtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlbW92ZUV2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5HYW1lX0lucHV0X2NzamMsIHRoaXMsIHRoaXMuSW5wdXRfY3NqYyk7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5yZW1vdmVFdmVudF9jc2pjKEV2ZW50RGVmX2NzamMuQm9zc1Zpc2libGUsIHRoaXMsIHRoaXMuT25TZWxlY3RIZXJvKTtcclxuICAgIH1cclxuICAgIC8vIFJlbW92ZUV2ZW50KCkge1xyXG4gICAgLy8gICAgIHN1cGVyLlJlbW92ZUV2ZW50XHJcbiAgICAvLyB9XHJcbiAgICAvKirnm5HlkKzpgInmi6noi7Hpm4QgKi9cclxuICAgIE9uU2VsZWN0SGVybygpIHtcclxuICAgICAgICBpZiAoU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5QbGF5ZXJLaW5kID09IFBsYXllclR5cGUuS2luZ2tvbmcpICB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NlbGVjZXRLaW5kID0gMFxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fc2VsZWNldEtpbmQgPSAxXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLXh4eOmAieaLqee7k+aenFwiLHRoaXMuX3NlbGVjZXRLaW5kKVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBvblVwZGF0ZSgpIHtcclxuICAgICAgICB0aGlzLl9mc20uQ3VycmVudFN0YXRlLkFjdCgpO1xyXG4gICAgfVxyXG4gICAgcHVibGljIElucHV0X2NzamMocG9pbnQpIHtcclxuICAgICAgICBpZihTY2VuZU1ncl9jc2NqLkluc3RhbmNlLkJvc3NWaXNpYmxlPT1mYWxzZSlcclxuICAgICAgICByZXR1cm4gO1xyXG4gICAgICAgIGlmICghcG9pbnQpIHJldHVybjtcclxuICAgICAgICBsZXQgdHlwZSA9IHBvaW50LklucHV0VHlwZTtcclxuXHJcbiAgICAgICAgaWYodHlwZSA9PSBJbnB1dFR5cGUuQXR0YWNrJiZ0aGlzLl9jYW5STyA9PSB0cnVlKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5fY2FuUk8gPSBmYWxzZVxyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMTAwMCx0aGlzLCgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jYW5STyA9IHRydWVcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgbGV0IGRpciA9IG5ldyBMYXlhLlZlY3RvcjMoKTtcclxuICAgICAgICAgICAgTGF5YS5WZWN0b3IzLnN1YnRyYWN0KHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uLFxyXG4gICAgICAgICAgICAoU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5Cb3NzU3ByaXRlM0QuZ2V0Q2hpbGRBdCh0aGlzLl9zZWxlY2V0S2luZCkgYXMgTGF5YS5TcHJpdGUzRCkudHJhbnNmb3JtLnBvc2l0aW9uLCBkaXIpO1xyXG4gICAgICAgICAgICBMYXlhLlZlY3RvcjMuYWRkKHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uLCBkaXIsIGRpcik7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLeaXi+i9rOi+k+WHulwiLFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuQm9zc1Nwcml0ZTNELmdldENoaWxkQXQodGhpcy5fc2VsZWNldEtpbmQpLm5hbWUsdGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucm90YXRpb25FdWxlci55KVxyXG4gICAgICAgICAgICB0aGlzLlNwcml0ZTNELnRyYW5zZm9ybS5sb29rQXQoZGlyLCBMYXlhLlZlY3RvcjMuX1VwKTtcclxuXHJcbiAgICAgICAgICAgIC8vIHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLmxvb2tBdCgoU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5Cb3NzU3ByaXRlM0QuZ2V0Q2hpbGRBdCh0aGlzLl9zZWxlY2V0S2luZCkgYXMgTGF5YS5TcHJpdGUzRCkudHJhbnNmb3JtLnBvc2l0aW9uLCBMYXlhLlZlY3RvcjMuX1VwKTtcclxuICAgICAgICAgICAgLy8gdGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ubG9jYWxSb3RhdGlvbkV1bGVyWSs9MTgwXHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLei+k+WHujIyMjIyMjIyMjIyMjIyXCIsdGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucm90YXRpb25FdWxlci55KVxyXG5cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIE1ha2VGc20oKSB7XHJcbiAgICAgICAgdGhpcy5fZnNtID0gbmV3IEZTTVN5c3RlbSh0aGlzKTtcclxuICAgICAgICAvLyB0aGlzLl9mc20uQWRkU3RhdGUodGhpcy5fa2luZ2tvbmcuYWRkQ29tcG9uZW50KEtpbmdraW5nU3RhdGUpKTtcclxuICAgICAgICAvLyB0aGlzLl9mc20uQWRkU3RhdGUodGhpcy5fdFJleC5hZGRDb21wb25lbnQoVFJleFN0YXRlKSk7XHJcbiAgICAgICAgLy8gdGhpcy5fa2luZ2tvbmcuYWN0aXZlPWZhbHNlXHJcblxyXG4gICAgICAgIGlmIChTY2VuZU1ncl9jc2NqLkluc3RhbmNlLlBsYXllcktpbmQgPT0gUGxheWVyVHlwZS5UUmV4KSAge1xyXG4gICAgICAgICAgICB0aGlzLl9mc20uQWRkU3RhdGUodGhpcy5fdFJleC5hZGRDb21wb25lbnQoVFJleFN0YXRlKSk7XHJcbiAgICAgICAgICAgIHRoaXMuX2ZzbWJvc3MgPSB0aGlzLl90UmV4LmdldENvbXBvbmVudChUUmV4U3RhdGUpXHJcbiAgICAgICAgICAgIHRoaXMuX2tpbmdrb25nLmFjdGl2ZSA9IGZhbHNlXHJcbiAgICAgICAgICAgIHRoaXMuX3BsYXllcktpbmQgPSBQbGF5ZXJUeXBlLlRSZXhcclxuXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgIHtcclxuICAgICAgICAgICAgdGhpcy5fZnNtLkFkZFN0YXRlKHRoaXMuX2tpbmdrb25nLmFkZENvbXBvbmVudChLaW5na2luZ1N0YXRlKSk7XHJcbiAgICAgICAgICAgIHRoaXMuX2ZzbWJvc3MgPSB0aGlzLl9raW5na29uZy5nZXRDb21wb25lbnQoS2luZ2tpbmdTdGF0ZSlcclxuICAgICAgICAgICAgdGhpcy5fdFJleC5hY3RpdmUgPSBmYWxzZVxyXG4gICAgICAgICAgICB0aGlzLl9wbGF5ZXJLaW5kID0gUGxheWVyVHlwZS5LaW5na29uZ1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBQZXJmb3JtVHJhbnNpdGlvbih0cnM6IFRyYW5zaXRpb24pIHtcclxuICAgICAgICB0aGlzLl9mc20uUGVyZm9ybVRyYW5zaXRpb24odHJzKTtcclxuICAgIH1cclxuXHJcbiAgICBJbnB1dChwb2ludDogTGF5YS5Qb2ludCkge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t6L6T5YWlXCIscG9pbnQpXHJcbiAgICAgICAgdGhpcy5fZnNtLkN1cnJlbnRTdGF0ZS5SZWFzb24ocG9pbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIFNldEZvbGxvd09iaihvYmo6IExheWEuU3ByaXRlM0QpIHtcclxuICAgICAgICB0aGlzLl9mb2xsb3dPYmogPSBvYmo7XHJcbiAgICAgICAgU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5DYW1lcmFDdHIuSW5pdENhbWVyYSh0aGlzLl9mb2xsb3dPYmopO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgX3Zzb3VuZDE6IGFueTtcclxuICAgIHByaXZhdGUgX2N1clVybDogc3RyaW5nO1xyXG4gICAgcHJpdmF0ZSBfZmlyZVNvdW5kOiBzdHJpbmcgPSBcInN1YlJlcy9zb3VuZC9GaXJlLm1wM1wiO1xyXG5cclxuICAgIHB1YmxpYyBGaXJlU291bmQodm9sdW1lKSB7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5fdnNvdW5kMSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdnNvdW5kMSA9IHd4LmNyZWF0ZUlubmVyQXVkaW9Db250ZXh0KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRoaXMuX2N1clVybCA9PSB0aGlzLl9maXJlU291bmQpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl92c291bmQxLnBhdXNlZCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3Zzb3VuZDEucGxheSgpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fdnNvdW5kMS52b2x1bWUgPSB2b2x1bWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jdXJVcmwgPSB0aGlzLl9maXJlU291bmQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl92c291bmQxLnN0b3AoKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3Zzb3VuZDEuc3JjID0gdGhpcy5fZmlyZVNvdW5kO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fdnNvdW5kMS5sb29wID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3Zzb3VuZDEucGxheSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIFN0b3BTb3VuZCgpIHtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX3Zzb3VuZDEpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3Zzb3VuZDEuc3RvcCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IHsgQ29sbGlzaW9uR3JvdXAgfSBmcm9tIFwiLi4vRW51bXNcIjtcclxuaW1wb3J0IFNjZW5lTWdyX2NzY2ogZnJvbSBcIi4uL1NjZW5lTWdyXCI7XHJcbmltcG9ydCBTb3VuZE1ncl9jc2pjIGZyb20gXCIuLi8uLi8uLi9NZ3IvU291bmRNZ3JcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIERlc3RydWN0aWJsZU9iaiBleHRlbmRzIExheWEuU2NyaXB0M0Qge1xyXG4gICAgZ2V0IFNwcml0ZTNEKCk6IExheWEuU3ByaXRlM0QgeyByZXR1cm4gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTNEIH1cclxuICAgIGdldCBpc0JyZWFrKCl7cmV0dXJuIHRoaXMuX2lzYnJlYWt9XHJcbiAgICBwcml2YXRlIF9waHlzaWNzQ29tcG9uZW50OiBMYXlhLlBoeXNpY3NDb21wb25lbnQ7XHJcbiAgICBwcm90ZWN0ZWQgX2lzYnJlYWsgOmJvb2xlYW49IGZhbHNlXHJcbiAgICBwcm90ZWN0ZWQgX3RpbWVyID0gLTE7XHJcblxyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICB0aGlzLl9waHlzaWNzQ29tcG9uZW50ID0gdGhpcy5vd25lci5nZXRDb21wb25lbnQoTGF5YS5QaHlzaWNzQ29tcG9uZW50KSBhcyBMYXlhLlBoeXNpY3NDb21wb25lbnQ7XHJcbiAgICAgICAgaWYgKHRoaXMuX3BoeXNpY3NDb21wb25lbnQgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICB0aGlzLl9waHlzaWNzQ29tcG9uZW50LmNvbGxpc2lvbkdyb3VwID0gQ29sbGlzaW9uR3JvdXAuT2JzdGFjbGU7XHJcbiAgICAgICAgICAgIHRoaXMuX3BoeXNpY3NDb21wb25lbnQuY2FuQ29sbGlkZVdpdGggPSBDb2xsaXNpb25Hcm91cC5Ob25lIHwgQ29sbGlzaW9uR3JvdXAuQ2hhcmFjdGVyO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIG9uVXBkYXRlKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl90aW1lciA+IDUwKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLlNwcml0ZTNELmFjdGl2ZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5TcHJpdGUzRC5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLl90aW1lciA+PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3RpbWVyICs9IExheWEudGltZXIuZGVsdGE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgb25UcmlnZ2VyRW50ZXIocmVzPykge1xyXG4gICAgICAgIFNvdW5kTWdyX2NzamMuaW5zdGFuY2VfY3NqYy5wbGF5U291bmRfY3NqYyhcIkJyb2tlblwiKTtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0t54mp5L2T5ZCN5a2X5p+l55yLXCIsdGhpcy5vd25lci5uYW1lKVxyXG4gICAgICAgIGxldCByZXBsYWNlID0gU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5SZXBsYWNlT2JqLmdldENoaWxkQnlOYW1lKHRoaXMub3duZXIubmFtZSArIFwiUmVwbGFjZVwiKSBhcyBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgIGxldCBhbmkgPSByZXBsYWNlLmdldENvbXBvbmVudChMYXlhLkFuaW1hdG9yKSBhcyBMYXlhLkFuaW1hdG9yO1xyXG4gICAgICAgIGFuaS5wbGF5KG51bGwsIDAsIDApO1xyXG4gICAgICAgIHJlcGxhY2UudHJhbnNmb3JtLndvcmxkTWF0cml4ID0gdGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ud29ybGRNYXRyaXg7XHJcbiAgICAgICAgaWYgKHRoaXMuX3RpbWVyIDwgMCkge1xyXG4gICAgICAgICAgICB0aGlzLl90aW1lciA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX2lzYnJlYWsgPSB0cnVlXHJcbiAgICAgICAgLy8gdGhpcy5fcGh5c2ljc0NvbXBvbmVudC5lbmFibGVkID0gZmFsc2U7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBDb2xsaXNpb25Hcm91cCB9IGZyb20gXCIuLi9FbnVtc1wiO1xyXG5pbXBvcnQgU2NlbmVNZ3JfY3NjaiBmcm9tIFwiLi4vU2NlbmVNZ3JcIjtcclxuaW1wb3J0IFNvdW5kTWdyX2NzamMgZnJvbSBcIi4uLy4uLy4uL01nci9Tb3VuZE1nclwiO1xyXG5pbXBvcnQgRGVzdHJ1Y3RpYmxlT2JqIGZyb20gXCIuL0Rlc3RydWN0aWJsZU9ialwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRGVzdHJ1Y3RpYmxlT2JqQnVpbGRzIGV4dGVuZHMgRGVzdHJ1Y3RpYmxlT2JqIHtcclxuXHJcbiAgICBvblRyaWdnZXJFbnRlcihyZXMpIHtcclxuICAgICAgICAvLyB0aGlzLmtleUxpc3QuaW5kZXhPZihlLmtleUNvZGUpIDwgMFxyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS3niankvZPlkI3lrZfmn6XnnItcIixyZXMub3duZXIubmFtZSlcclxuXHJcbiAgICAgICAgaWYocmVzLm93bmVyLm5hbWUuaW5kZXhPZihcIktpbmdrb25nXCIpPjApXHJcbiAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgU291bmRNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLnBsYXlTb3VuZF9jc2pjKFwiQnJva2VuXCIpO1xyXG4gICAgICAgIGxldCByZXBsYWNlID0gU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5SZXBsYWNlT2JqLmdldENoaWxkQnlOYW1lKHRoaXMub3duZXIubmFtZSArIFwiUmVwbGFjZVwiKSBhcyBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgIGxldCBhbmkgPSByZXBsYWNlLmdldENvbXBvbmVudChMYXlhLkFuaW1hdG9yKSBhcyBMYXlhLkFuaW1hdG9yO1xyXG4gICAgICAgIGFuaS5wbGF5KG51bGwsIDAsIDApO1xyXG4gICAgICAgIHJlcGxhY2UuYWN0aXZlPXRydWVcclxuXHJcbiAgICAgICAgcmVwbGFjZS50cmFuc2Zvcm0ud29ybGRNYXRyaXggPSB0aGlzLlNwcml0ZTNELnRyYW5zZm9ybS53b3JsZE1hdHJpeDtcclxuICAgICAgICBpZiAodGhpcy5fdGltZXIgPCAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3RpbWVyID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgTGF5YS50aW1lci5vbmNlKDMwMDAsdGhpcywoKT0+e1xyXG4gICAgICAgICAgICByZXBsYWNlLmFjdGl2ZT1mYWxzZVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgdGhpcy5faXNicmVhayA9IHRydWVcclxuICAgICAgICAvLyB0aGlzLl9waHlzaWNzQ29tcG9uZW50LmVuYWJsZWQgPSBmYWxzZTtcclxuICAgIH1cclxufSIsImltcG9ydCBTY2VuZU1ncl9jc2NqIGZyb20gXCIuLi9TY2VuZU1nclwiO1xyXG5pbXBvcnQgeyBDb2xsaXNpb25Hcm91cCB9IGZyb20gXCIuLi9FbnVtc1wiO1xyXG5pbXBvcnQgU291bmRNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vLi4vTWdyL1NvdW5kTWdyXCI7XHJcbmltcG9ydCBFdmVudE1ncl9jc2pjIGZyb20gXCIuLi8uLi8uLi9FdmVudC9FdmVudE1nclwiO1xyXG5pbXBvcnQgeyBFdmVudERlZl9jc2pjIH0gZnJvbSBcIi4uLy4uLy4uL0V2ZW50L0V2ZW50RGVmXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbmVteSBleHRlbmRzIExheWEuU2NyaXB0M0Qge1xyXG4gICAgZ2V0IEVuZW15U3ByaXRlM0QoKTogTGF5YS5TcHJpdGUzRCB7IHJldHVybiB0aGlzLlNwcml0ZTNEOyB9XHJcbiAgICBnZXQgQWxpdmUoKTogYm9vbGVhbiB7IHJldHVybiAhdGhpcy5fZGllOyB9XHJcbiAgICBnZXQgU3ByaXRlM0QoKTogTGF5YS5TcHJpdGUzRCB7IHJldHVybiB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlM0QgfVxyXG4gICAgZ2V0IFBsYXllcigpOiBMYXlhLlNwcml0ZTNEIHsgcmV0dXJuIFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuUGxheWVyLkZvbGxvd09iajsgfVxyXG4gICAgcHJpdmF0ZSBfcGh5c2ljc0NvbXBvbmVudDogTGF5YS5QaHlzaWNzQ29tcG9uZW50O1xyXG4gICAgcHJpdmF0ZSBfdGltZXI6IG51bWJlciA9IDA7XHJcbiAgICBwcml2YXRlIF9kaWU6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIHByaXZhdGUgX2VmZjogTGF5YS5TcHJpdGUzRDtcclxuICAgIG9uQXdha2UoKSB7XHJcbiAgICAgICAgdGhpcy5fZWZmID0gdGhpcy5vd25lci5nZXRDaGlsZEF0KDEpIGFzIExheWEuU3ByaXRlM0Q7XHJcbiAgICAgICAgdGhpcy5fcGh5c2ljc0NvbXBvbmVudCA9IHRoaXMub3duZXIuZ2V0Q29tcG9uZW50KExheWEuUGh5c2ljc0NvbXBvbmVudCk7XHJcbiAgICAgICAgdGhpcy5fcGh5c2ljc0NvbXBvbmVudC5jb2xsaXNpb25Hcm91cCA9IENvbGxpc2lvbkdyb3VwLk9ic3RhY2xlO1xyXG4gICAgICAgIHRoaXMuX3BoeXNpY3NDb21wb25lbnQuY2FuQ29sbGlkZVdpdGggPSBDb2xsaXNpb25Hcm91cC5Ob25lIHwgQ29sbGlzaW9uR3JvdXAuR3JvdW5kIHwgQ29sbGlzaW9uR3JvdXAuQ2hhcmFjdGVyO1xyXG4gICAgfVxyXG4gICAgb25VcGRhdGUoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2RpZXx8U2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5QbGF5ZXI9PW51bGwpIHJldHVybjtcclxuICAgICAgICBsZXQgZGlzID0gTGF5YS5WZWN0b3IzLmRpc3RhbmNlKHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uLCB0aGlzLlBsYXllci50cmFuc2Zvcm0ucG9zaXRpb24pO1xyXG4gICAgICAgIGxldCBpblBsYW5lID0gTWF0aC5hYnModGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucG9zaXRpb24ueSAtIHRoaXMuUGxheWVyLnRyYW5zZm9ybS5wb3NpdGlvbi55KSA8PSAxO1xyXG4gICAgICAgIC8vIGlmIChkaXMgPD0gMC41ICYmIGluUGxhbmUpIHtcclxuICAgICAgICAvLyAgICAgLy8gdGhpcy5fYW5pbWF0b3IucGxheShcIklkbGVfQ3JhenlfUm9ib3RcIik7XHJcbiAgICAgICAgLy8gICAgIHRoaXMuQXR0YWNrKCk7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIC8vIGVsc2UgXHJcbiAgICAgICAgaWYgKGRpcyA8IDcgJiYgaW5QbGFuZSkge1xyXG4gICAgICAgICAgICB0aGlzLkNoYXNlTWV0aG9kKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGRpcyA8IDE1ICYmIGluUGxhbmUpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2VmZi5hY3RpdmUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2VmZi5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQ2hhc2VNZXRob2QoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX3RpbWVyIDw9IDApIHtcclxuICAgICAgICAgICAgdGhpcy5FbmVteVRydW4oKTtcclxuICAgICAgICAgICAgLy8gdGhpcy5FbmVteU1vdmUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3RpbWVyIC09IExheWEudGltZXIuZGVsdGE7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8vIEF0dGFjaygpIHtcclxuICAgIC8vICAgICB0aGlzLl90aW1lciA9IDEwMDA7XHJcbiAgICAvLyAgICAgdGhpcy5FbmVteVRydW4oKTtcclxuICAgIC8vIH1cclxuXHJcbiAgICBFbmVteVRydW4oKSB7XHJcbiAgICAgICAgbGV0IGRpciA9IG5ldyBMYXlhLlZlY3RvcjMoKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc3VidHJhY3QodGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucG9zaXRpb24sIHRoaXMuUGxheWVyLnRyYW5zZm9ybS5wb3NpdGlvbiwgZGlyKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuYWRkKHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uLCBkaXIsIGRpcik7XHJcbiAgICAgICAgdGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ubG9va0F0KGRpciwgTGF5YS5WZWN0b3IzLl9VcCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gRW5lbXlNb3ZlKCkge1xyXG4gICAgLy8gICAgIGxldCBkaXIgPSBuZXcgTGF5YS5WZWN0b3IzKCk7XHJcbiAgICAvLyAgICAgTGF5YS5WZWN0b3IzLnN1YnRyYWN0KHRoaXMuUGxheWVyLnRyYW5zZm9ybS5wb3NpdGlvbiwgdGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucG9zaXRpb24sIGRpcik7XHJcbiAgICAvLyAgICAgTGF5YS5WZWN0b3IzLm5vcm1hbGl6ZShkaXIsIGRpcik7XHJcbiAgICAvLyAgICAgTGF5YS5WZWN0b3IzLnNjYWxlKGRpciwgTGF5YS50aW1lci5kZWx0YSAvIDEwMDAgKiAyLCBkaXIpO1xyXG4gICAgLy8gICAgIExheWEuVmVjdG9yMy5hZGQoZGlyLCB0aGlzLlNwcml0ZTNELnRyYW5zZm9ybS5wb3NpdGlvbiwgZGlyKTtcclxuICAgIC8vICAgICB0aGlzLlNwcml0ZTNELnRyYW5zZm9ybS5wb3NpdGlvbiA9IGRpcjtcclxuICAgIC8vIH1cclxuXHJcbiAgICBvbkNvbGxpc2lvbkVudGVyKGNvbGxpc2lvbjogTGF5YS5Db2xsaXNpb24pIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0t5ZCD54mp5ZOBeHh4eFwiLGNvbGxpc2lvbi5vdGhlci5vd25lci5uYW1lKVxyXG5cclxuICAgICAgICBpZiAodGhpcy5fZGllKSByZXR1cm47XHJcbiAgICAgICAgLyogaWYgKGNvbGxpc2lvbi5vdGhlci5vd25lci5uYW1lLnNlYXJjaChcIkF0dGFja1wiKSA+IC0xIHx8IGNvbGxpc2lvbi5vdGhlci5vd25lci5uYW1lLnNlYXJjaChcIi1DYXJcIikgPiAtMSB8fCBjb2xsaXNpb24ub3RoZXIub3duZXIubmFtZS5zZWFyY2goXCItUm9ib3RcIikgPiAtMSkgICove1xyXG4gICAgICAgICAgICBTb3VuZE1ncl9jc2pjLmluc3RhbmNlX2NzamMucGxheVNvdW5kX2NzamMoXCJCcm9rZW5cIik7XHJcbiAgICAgICAgICAgIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkVuZW15RGVhZCk7XHJcbiAgICAgICAgICAgIHRoaXMuX2RpZSA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuX3BoeXNpY3NDb21wb25lbnQuZW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLl9lZmYuYWN0aXZlID0gZmFsc2U7XHJcblxyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLmZyYW1lT25jZSgyMCx0aGlzLCgpPT57XHJcbiAgICAgICAgICAgICAgICB0aGlzLm93bmVyLmFjdGl2ZSA9ZmFsc2VcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgU291bmRNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vLi4vTWdyL1NvdW5kTWdyXCI7XHJcbmltcG9ydCBCYXNlU3RhdGUgZnJvbSBcIi4uL0ZzbVN0YXRlcy9CYXNlU3RhdGVcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE15QW5pbWF0b3JFdmVudCBleHRlbmRzIExheWEuU2NyaXB0M0Qge1xyXG4gICAgcHJpdmF0ZSBfYmFzZVN0YXRlOiBCYXNlU3RhdGU7XHJcbiAgICBTZXRDaGFyYWN0ZXIoY3RyKSB7XHJcbiAgICAgICAgdGhpcy5fYmFzZVN0YXRlID0gY3RyO1xyXG4gICAgfVxyXG5cclxuICAgIEF0dGFjazEoKSB7XHJcbiAgICAgICAgU291bmRNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLnBsYXlTb3VuZF9jc2pjKFwiQXR0YWNrMVwiKTtcclxuICAgIH1cclxuXHJcbiAgICBBdHRhY2syKCkge1xyXG4gICAgICAgIFNvdW5kTWdyX2NzamMuaW5zdGFuY2VfY3NqYy5wbGF5U291bmRfY3NqYyhcIkF0dGFjazJcIik7XHJcbiAgICB9XHJcblxyXG4gICAgV2FsaygpIHtcclxuICAgICAgICBpZiAodGhpcy5fYmFzZVN0YXRlLkN1cnJlbnRBbmkgPT0gXCJXYWxrXCIpIHtcclxuICAgICAgICAgICAgU291bmRNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLnBsYXlTb3VuZF9jc2pjKFwiU3RlcFwiKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBDb2xsaXNpb25Hcm91cCB9IGZyb20gXCIuLi9FbnVtc1wiO1xyXG5pbXBvcnQgU2NlbmVNZ3JfY3NjaiBmcm9tIFwiLi4vU2NlbmVNZ3JcIjtcclxuaW1wb3J0IEV2ZW50TWdyX2NzamMgZnJvbSBcIi4uLy4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XHJcbmltcG9ydCB7IEV2ZW50RGVmX2NzamMgfSBmcm9tIFwiLi4vLi4vLi4vRXZlbnQvRXZlbnREZWZcIjtcclxuaW1wb3J0IFNvdW5kTWdyX2NzamMgZnJvbSBcIi4uLy4uLy4uL01nci9Tb3VuZE1nclwiO1xyXG5pbXBvcnQgUG9vbE1hbmFnZXIgZnJvbSBcIi4uL0dhbWVUb29scy9Qb29sTWFuYWdlclwiO1xyXG5pbXBvcnQgQmV6aWVyUGF0aCBmcm9tIFwiLi4vR2FtZVRvb2xzL0JlemllclBhdGhcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN0b25lTWdyIGV4dGVuZHMgTGF5YS5TY3JpcHQzRCB7XHJcbiAgICBnZXQgU3ByaXRlM0QoKTogTGF5YS5TcHJpdGUzRCB7IHJldHVybiB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlM0QgfVxyXG5cclxuICAgIHByaXZhdGUgX3RhcmdldFBvczogTGF5YS5WZWN0b3IzO1xyXG4gICAgcHJpdmF0ZSBfcmlnaWRCb2R5M0Q6IExheWEuUmlnaWRib2R5M0Q7XHJcbiAgICBwcml2YXRlIF9mb3J3YXJkVjM6TGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMygpXHJcblxyXG5cclxuICAgIG9uQXdha2UoKSB7XHJcbiAgICAgICAgdGhpcy5fcmlnaWRCb2R5M0QgPSB0aGlzLm93bmVyLmdldENvbXBvbmVudChMYXlhLlJpZ2lkYm9keTNEKSBhcyBMYXlhLlJpZ2lkYm9keTNEO1xyXG4gICAgICAgIHRoaXMuX3JpZ2lkQm9keTNELmlzS2luZW1hdGljID0gZmFsc2VcclxuICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5ncmF2aXR5ID0gbmV3IExheWEuVmVjdG9yMygwLC0xMCwwKVxyXG5cclxuICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5jb2xsaXNpb25Hcm91cCA9IENvbGxpc2lvbkdyb3VwLkNoYXJhY3RlcjtcclxuICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5jYW5Db2xsaWRlV2l0aCA9IENvbGxpc2lvbkdyb3VwLk5vbmUgfCBDb2xsaXNpb25Hcm91cC5Hcm91bmQgfCBDb2xsaXNpb25Hcm91cC5PYnN0YWNsZTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgb25FbmFibGUoKVxyXG4gICAge1xyXG4gICAgICAgIC8vIExheWEudGltZXIuZnJhbWVPbmNlKDEyMCx0aGlzLCgpPT57XHJcbiAgICAgICAgLy8gICAgIHRoaXMuY29tZUJhY2tQb29sKClcclxuICAgICAgICAvLyB9KVxyXG4gICAgICAgIC8vIHRoaXMuY3JlYXRQYXRoKClcclxuICAgIH1cclxuXHJcbiAgICBvblVwZGF0ZSgpXHJcbiAgICB7XHJcbiAgICAgICAgLy8gdGhpcy5fcmlnaWRCb2R5M0QuaXNLaW5lbWF0aWNcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS3nur/pgJ/luqZcIix0aGlzLl9yaWdpZEJvZHkzRC5pc0tpbmVtYXRpYyx0aGlzLl9yaWdpZEJvZHkzRC5saW5lYXJWZWxvY2l0eSlcclxuXHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOWIneWni+WMluaKleaOt1xyXG4gICAgKi9cclxuICAgIHB1YmxpYyBJbml0KHJveSlcclxuICAgIHtcclxuICAgICAgICAvLyByb3krPTkwXHJcbiAgICAgICAgbGV0IGN1ckFuZ2xlID0gdGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ubG9jYWxSb3RhdGlvbkV1bGVyWSAqIDMuMTQgLyAxODA7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0t5re75Yqg57q/6YCf5bqmXCIscm95LE1hdGguc2luKHJveSksIE1hdGguY29zKHJveSkpXHJcbiAgICAgICAgdGhpcy5fcmlnaWRCb2R5M0QubGluZWFyVmVsb2NpdHkgPSBuZXcgTGF5YS5WZWN0b3IzKE1hdGguc2luKGN1ckFuZ2xlKSo1MCwgMTUsTWF0aC5jb3MoY3VyQW5nbGUpKjUwKTtcclxuICAgIH1cclxuXHJcbiAgICBvblRyaWdnZXJFbnRlcihyZXMpIHtcclxuICAgICAgICAvLyB0aGlzLmtleUxpc3QuaW5kZXhPZihlLmtleUNvZGUpIDwgMFxyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS3niankvZPlkI3lrZfmn6XnnItcIixyZXMub3duZXIubmFtZSlcclxuICAgICAgICB0aGlzLmNvbWVCYWNrUG9vbCgpXHJcbiAgICB9XHJcbiAgICAvLyBwcm90ZWN0ZWQgZ2V0Rm9yd2FyZCgpXHJcbiAgICAvLyB7XHJcbiAgICAvLyAgICAgdGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0uZ2V0Rm9yd2FyZCh0aGlzLl9mb3J3YXJkVjMpXHJcbiAgICAvLyAgICAgcmV0dXJuIHRoaXMuX2ZvcndhcmRWM1xyXG4gICAgLy8gfVxyXG5cclxuICAgIC8vIHByb3RlY3RlZCB0ZW1wVjM6TGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMygpXHJcbiAgICAvLyAvKipcclxuICAgIC8vICAqIOiuvue9ruS4reW/g+WPmOmHj3YzXHJcbiAgICAvLyAgKiBAcGFyYW0geCBcclxuICAgIC8vICAqIEBwYXJhbSB5IFxyXG4gICAgLy8gICogQHBhcmFtIHogXHJcbiAgICAvLyAgKi9cclxuICAgIC8vIHNldFRlbXBWMyh4Om51bWJlcj0wLHk6bnVtYmVyPTAsejpudW1iZXI9MClcclxuICAgIC8vIHtcclxuICAgIC8vICAgICB0aGlzLnRlbXBWMy54ID0geDtcclxuICAgIC8vICAgICB0aGlzLnRlbXBWMy55ID0geTtcclxuICAgIC8vICAgICB0aGlzLnRlbXBWMy56ID0gejtcclxuICAgIC8vICAgICByZXR1cm4gdGhpcy50ZW1wVjNcclxuICAgIC8vIH1cclxuXHJcbiAgICAvLyBwcm90ZWN0ZWQgY3JlYXRQYXRoKClcclxuICAgIC8vIHtcclxuICAgIC8vICAgICAvLyBtb29zbm93LmV2ZW50LnNlbmRFdmVudEltbWVkaWF0ZWx5KEV2ZW50VHlwZS5DQU1FUkFfUFVMTCk7XHJcblxyXG4gICAgLy8gICAgIGxldCBwb2ludHMgPSBbXVxyXG4gICAgLy8gICAgIGxldCBwb2ludDEgPSBuZXcgTGF5YS5WZWN0b3IzKHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uLngsIHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uLnksIHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uLnopIC8vIOi1t+eCuSAgICAgICAgXHJcbiAgICAvLyAgICAgbGV0IHBvaW50MiA9IG5ldyBMYXlhLlZlY3RvcjModGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucG9zaXRpb24ueCwgdGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucG9zaXRpb24ueSs0LCB0aGlzLlNwcml0ZTNELnRyYW5zZm9ybS5wb3NpdGlvbi56KS8v5LiA5Liq6aG254K5IOi/mOWPr+S7pee7p+e7rea3u+WKoCDngrlcclxuICAgIC8vICAgICBsZXQgcG9pbnQzID0gbmV3IExheWEuVmVjdG9yMyh0aGlzLlNwcml0ZTNELnRyYW5zZm9ybS5wb3NpdGlvbi54KzMwKnRoaXMuZ2V0Rm9yd2FyZCgpLngsIC0xMCwgdGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucG9zaXRpb24ueiszMCp0aGlzLmdldEZvcndhcmQoKS56KS8v57uI54K5ICAgIFxyXG4gICAgLy8gICAgIHBvaW50cy5wdXNoKHBvaW50MSlcclxuICAgIC8vICAgICBwb2ludHMucHVzaChwb2ludDIpXHJcbiAgICAvLyAgICAgcG9pbnRzLnB1c2gocG9pbnQzKVxyXG5cclxuICAgIC8vICAgICBsZXQgbWF4ZGQgPSA2NVxyXG4gICAgLy8gICAgIGxldCBhcnJheSA9IEJlemllclBhdGguQ3JlYXRlQmV6aWVyUG9pbnRzKHBvaW50cywgbWF4ZGQpXHJcbiAgICAvLyAgICAgbGV0IGluZGV4ID0gMFxyXG4gICAgLy8gICAgIExheWEudGltZXIuZnJhbWVMb29wKDEsIHRoaXMsICgpPT4ge1xyXG4gICAgLy8gICAgICAgICBpZiAoaW5kZXggPD0gYXJyYXkubGVuZ3RoIC0gMSkgIHtcclxuICAgIC8vICAgICAgICAgICAgIHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnJvdGF0ZVxyXG4gICAgLy8gICAgICAgICAgICAgLy8gKHRoaXMuc2V0VGVtcFYzKHRoaXMucm9TcGVlZCp0aGlzLm1haW5TcGVlZEN0cip0aGlzLmdldEZvcndhcmQoKS54LDAsdGhpcy5nZXRGb3J3YXJkKCkueiksZmFsc2UpXHJcbiAgICAvLyAgICAgICAgICAgICBpZihhcnJheVtpbmRleF0pXHJcbiAgICAvLyAgICAgICAgICAgICB0aGlzLlNwcml0ZTNELnRyYW5zZm9ybS5wb3NpdGlvbiA9IHRoaXMuc2V0VGVtcFYzKGFycmF5W2luZGV4XS54LGFycmF5W2luZGV4XS55LGFycmF5W2luZGV4XS56KS8vbmV3IExheWEuVmVjdG9yMyhhcnJheVtpbmRleF0ueCwgYXJyYXlbaW5kZXhdLnksIGFycmF5W2luZGV4XS56KVxyXG4gICAgLy8gICAgICAgICAgICAgaW5kZXgrPTFcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgICBlbHNlXHJcbiAgICAvLyAgICAgICAgIHtcclxuICAgIC8vICAgICAgICAgICAgIC8vIExheWEudGltZXIuY2xlYXJBbGwodGhpcylcclxuICAgIC8vICAgICAgICAgICAgIHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLmxvY2FsU2NhbGVYID0gMVxyXG4gICAgLy8gICAgICAgICAgICAgdGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ubG9jYWxTY2FsZVkgPSAxXHJcbiAgICAvLyAgICAgICAgICAgICB0aGlzLlNwcml0ZTNELnRyYW5zZm9ybS5sb2NhbFNjYWxlWiA9IDFcclxuICAgIC8vICAgICAgICAgICAgIHRoaXMuU3ByaXRlM0QuYWN0aXZlID1mYWxzZVxyXG4gICAgLy8gICAgICAgICAgICAgdGhpcy5jb21lQmFja1Bvb2woKVxyXG4gICAgLy8gICAgICAgICB9XHJcbiAgICAvLyAgICAgfSlcclxuICAgIC8vIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgY29tZUJhY2tQb29sKClcclxuICAgIHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0t6ZqQ6JePXCIpXHJcbiAgICAgICAgTGF5YS50aW1lci5jbGVhckFsbCh0aGlzKTsgICBcclxuICAgICAgICBQb29sTWFuYWdlci5nZXRJbnN0YW5jZSgpLkVucXVldWVJdGVtKDAsdGhpcy5vd25lcilcclxuICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5saW5lYXJWZWxvY2l0eSA9IExheWEuVmVjdG9yMy5fWkVST1xyXG5cclxuICAgIH1cclxuXHJcbiAgICAvLyAvLyBTZXRGaXJlUG9zKHRhcmdldFBvczogTGF5YS5WZWN0b3IzLCBjdXJQb3M6IExheWEuVmVjdG9yMywgcHRlcjogTGF5YS5TcHJpdGUzRCkge1xyXG4gICAgLy8gLy8gICAgIHRoaXMuX3RhcmdldFBvcyA9IHRhcmdldFBvcztcclxuXHJcbiAgICAvLyAvLyAgICAgdGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucG9zaXRpb24gPSBjdXJQb3M7XHJcblxyXG4gICAgLy8gLy8gICAgIGxldCBmb3J3YXJkID0gbmV3IExheWEuVmVjdG9yMygpO1xyXG4gICAgLy8gLy8gICAgIExheWEuVmVjdG9yMy5zdWJ0cmFjdCh0aGlzLlNwcml0ZTNELnRyYW5zZm9ybS5wb3NpdGlvbiwgdGFyZ2V0UG9zLCBmb3J3YXJkKTtcclxuICAgIC8vIC8vICAgICBMYXlhLlZlY3RvcjMuYWRkKHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uLCBmb3J3YXJkLCBmb3J3YXJkKTtcclxuICAgIC8vIC8vICAgICB0aGlzLlNwcml0ZTNELnRyYW5zZm9ybS5sb29rQXQoZm9yd2FyZCwgTGF5YS5WZWN0b3IzLl9VcCk7XHJcbiAgICAvLyAvLyB9XHJcblxyXG4gICAgLy8gLy8gb25Db2xsaXNpb25FbnRlcihvdGhlcjogTGF5YS5Db2xsaXNpb24pIHtcclxuICAgIC8vIC8vICAgICBpZiAob3RoZXIub3RoZXIub3duZXIubmFtZS5zZWFyY2goXCJFbmVteVwiKSA+IC0xKSB7XHJcbiAgICAvLyAvLyAgICAgICAgIFNvdW5kTWdyX2NzamMuaW5zdGFuY2VfY3NqYy5wbGF5U291bmRfY3NqYyhcIkV4cGxvcmVcIik7XHJcbiAgICAvLyAvLyAgICAgfVxyXG4gICAgLy8gLy8gfVxyXG59IiwiLyoqXHJcbiAqIOaRhOWDj+acuueahOi3n+maj+eKtuaAgeaemuS4vlxyXG4gKiBcclxuICogQGVudW0ge251bWJlcn1cclxuICovXHJcbmV4cG9ydCBlbnVtIENhbWVyYVN0YXRlIHtcclxuICAgIE5vcm1hbCA9IDEsXHJcbiAgICBSb3RhdGVkQXJvdW5kID0gMixcclxuICAgIENoYW5nZUZvbGxvd09iaiA9IDMsXHJcbiAgICBDaGFuZ2VpbmdGb2xsb3dPYmogPSA0LFxyXG59XHJcbi8qKlxyXG4gKiDop5LoibLliqDpgJ/nirbmgIHmnprkuL5cclxuICogXHJcbiAqIEBleHBvcnRcclxuICogQGVudW0ge251bWJlcn1cclxuICovXHJcbmV4cG9ydCBlbnVtIFNwZWVkU3RhdGUge1xyXG4gICAgTm9ybWFsID0gMSxcclxuICAgIFNwZWVkVXAgPSAyLFxyXG4gICAgU3BlZWREb3duID0gMyxcclxuICAgIFNwZWVkQmFja3dhcmQgPSA0LFxyXG59XHJcblxyXG5leHBvcnQgZW51bSBDaGFyYWN0ZXJTdGF0ZSB7XHJcbiAgICBJZGxlID0gXCJJZGxlXCIsXHJcbiAgICBQYXVzZWQgPSBcIlBhdXNlZFwiLFxyXG4gICAgR3JvdW5kTW92aW5nID0gXCJHcm91bmRNb3ZpbmdcIixcclxuICAgIEVuZFNwZWVkID0gXCJFbmRTcGVlZFwiLFxyXG4gICAgRW5kS2ljayA9IFwiRW5kS2lja1wiLFxyXG4gICAgRW5kUm9sbCA9IFwiRW5kUm9sbFwiLFxyXG4gICAgR2FtZU92ZXIgPSBcIkdhbWVPdmVyXCIsXHJcbn1cclxuXHJcbi8qKlxyXG4gKiDnorDmkp7nu4TliKtcclxuICogXHJcbiAqIEBleHBvcnRcclxuICogQGVudW0ge251bWJlcn1cclxuICovXHJcbmV4cG9ydCBlbnVtIENvbGxpc2lvbkdyb3VwIHtcclxuICAgIEFsbCA9IC0xLFxyXG4gICAgTm9uZSA9IDAsXHJcbiAgICBDaGFyYWN0ZXIgPSBNYXRoLnBvdygyLCAwKSxcclxuICAgIE9ic3RhY2xlID0gTWF0aC5wb3coMiwgMSksXHJcbiAgICBHcm91bmQgPSBNYXRoLnBvdygyLCAzKSxcclxuICAgIEtpbmdrb25nID0gTWF0aC5wb3coMiwgNCksXHJcbiAgICBUUmV4ID0gTWF0aC5wb3coMiwgNSksXHJcblxyXG59XHJcblxyXG5leHBvcnQgZW51bSBTa2luU3RhdGUge1xyXG4gICAgTm90T3duZWQgPSAwLFxyXG4gICAgT3duZWQgPSAxLFxyXG4gICAgU2VsZWNlZCA9IDJcclxufVxyXG5cclxuZXhwb3J0IGVudW0gR2FtZVN0YXRlIHtcclxuICAgIEdhbWVMb2FkLFxyXG4gICAgUHJlcGFyZSxcclxuICAgIEdhbWVpbmcsXHJcbiAgICBHYW1lT3ZlclxyXG59XHJcblxyXG5cclxuZXhwb3J0IGVudW0gSW5wdXRUeXBlIHtcclxuICAgIFJvY2tlckF4aXMsXHJcbiAgICBDYW1lcmFBeGlzLFxyXG4gICAgSnVtcCxcclxuICAgIFRyYW5zZm9ybSxcclxuICAgIEF0dGFjayxcclxuICAgIFVQLFxyXG4gICAgRG93bixcclxuICAgIEZpcmUsXHJcbiAgICBGaXJlQmFsbCxcclxuICAgIFRocm93U3RvbmUsXHJcbn1cclxuXHJcbmV4cG9ydCBlbnVtIFBsYXllclR5cGUge1xyXG4gICAgVFJleCxcclxuICAgIEtpbmdrb25nLFxyXG59IiwiaW1wb3J0IEZTTVN0YXRlIGZyb20gXCIuLi9Gc20vRnNtU3RhdGVcIjtcclxuaW1wb3J0IHsgSW5wdXRUeXBlIH0gZnJvbSBcIi4uL0VudW1zXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhYnN0cmFjdCBjbGFzcyBCYXNlU3RhdGUgZXh0ZW5kcyBGU01TdGF0ZSB7XHJcbiAgICBnZXQgQW5pbWF0b3IoKTogTGF5YS5BbmltYXRvciB7IHJldHVybiB0aGlzLl9hbmltYXRvciB9XHJcbiAgICBzZXQgQW5pbWF0b3IodikgeyB0aGlzLl9hbmltYXRvciA9IHY7IH1cclxuICAgIGdldCBDdXJyZW50QW5pKCk6IHN0cmluZyB7IHJldHVybiB0aGlzLl9jdXJyZW50QW5pOyB9XHJcbiAgICBzZXQgQ3VycmVudEFuaSh2KSB7IHRoaXMuX2N1cnJlbnRBbmkgPSB2OyB9XHJcbiAgICBnZXQgU3ByaXRlM0QoKTogTGF5YS5TcHJpdGUzRCB7IHJldHVybiB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlM0Q7IH1cclxuICAgIGdldCBNb2RlbCgpOiBMYXlhLlNwcml0ZTNEIHsgcmV0dXJuIHRoaXMub3duZXIuZ2V0Q2hpbGRBdCgwKSBhcyBMYXlhLlNwcml0ZTNEOyB9XHJcbiAgICBnZXQgbU93bmVyKCk6IExheWEuU3ByaXRlM0QgeyByZXR1cm4gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTNEOyB9XHJcbiAgICBnZXQgSHAoKTogbnVtYmVyIHtyZXR1cm4gIHRoaXMuX2hwfVxyXG4gICAgZ2V0IEhwU3VtKCk6IG51bWJlciB7cmV0dXJuICB0aGlzLl9ocFN1bX1cclxuXHJcbiAgICBwcm90ZWN0ZWQgX3JvY2tlckF4aXM6IExheWEuUG9pbnQ7XHJcbiAgICBwcml2YXRlIF9yb2NrZXJJbnB1dFRpbWVyOiBudW1iZXIgPSAwO1xyXG4gICAgcHJpdmF0ZSBfanVtcElucHV0VGltZXI6IG51bWJlciA9IDA7XHJcbiAgICBwcml2YXRlIF9maXJlSW5wdXRUaW1lcjogbnVtYmVyID0gMDtcclxuICAgIHByaXZhdGUgX2ZpcmVCYWxsSW5wdXRUaW1lcjogbnVtYmVyID0gMDtcclxuICAgIHByaXZhdGUgX3RyYW5zZm9ybUlucHV0VGltZXI6IG51bWJlciA9IDA7XHJcbiAgICBwcml2YXRlIF9hdHRhY2tJbnB1dFRpbWVyOiBudW1iZXIgPSAwO1xyXG4gICAgcHJpdmF0ZSBfdXBUaW1lcjogbnVtYmVyID0gMDtcclxuICAgIHByaXZhdGUgX2Rvd25UaW1lcjogbnVtYmVyID0gMDtcclxuICAgIHByaXZhdGUgX3Rocm93c3RvbmVUaW1lcjogbnVtYmVyID0gMDtcclxuXHJcbiAgICBwcm90ZWN0ZWQgX2hwOm51bWJlcjtcclxuICAgIHByb3RlY3RlZCBfaHBTdW06bnVtYmVyO1xyXG5cclxuICAgIHByb3RlY3RlZCBfaXNIaXRlZCA9IGZhbHNlXHJcbiAgICBwcm90ZWN0ZWQgX2FuaW1hdG9yOiBMYXlhLkFuaW1hdG9yO1xyXG4gICAgcHJvdGVjdGVkIF9jdXJyZW50QW5pOiBzdHJpbmc7XHJcbiAgICBwcm90ZWN0ZWQgcmF5OiBMYXlhLlJheSA9IG5ldyBMYXlhLlJheShuZXcgTGF5YS5WZWN0b3IzKCksIG5ldyBMYXlhLlZlY3RvcjMoKSk7XHJcbiAgICBwcm90ZWN0ZWQgaGl0UmVzdWx0czogQXJyYXk8TGF5YS5IaXRSZXN1bHQ+ID0gW107XHJcbiAgICBmb3J3YXJkVjM6TGF5YS5WZWN0b3IzID0gbmV3IExheWEuVmVjdG9yMygpXHJcblxyXG4gICAgZ2V0IFJvY2tlckF4aXMoKTogTGF5YS5Qb2ludCB7XHJcbiAgICAgICAgaWYgKHRoaXMuX3JvY2tlcklucHV0VGltZXIgPD0gMCkge1xyXG4gICAgICAgICAgICB0aGlzLl9yb2NrZXJBeGlzID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3JvY2tlckF4aXM7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IEp1bXBJbnB1dCgpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fanVtcElucHV0VGltZXIgPiAwO1xyXG4gICAgfVxyXG4gICAgZ2V0IFRocm93U3RvbmVJbnB1dCgpOiBib29sZWFuIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fdGhyb3dzdG9uZVRpbWVyID4gMDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgRmlyZUlucHV0KCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9maXJlSW5wdXRUaW1lciA+IDA7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IEZpcmVCYWxsSW5wdXQoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2ZpcmVCYWxsSW5wdXRUaW1lciA+IDA7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IFRyYW5zZm9ybUlucHV0KCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl90cmFuc2Zvcm1JbnB1dFRpbWVyID4gMDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgQXR0YWNrSW5wdXQoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2F0dGFja0lucHV0VGltZXIgPiAwO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBVcElucHV0KCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl91cFRpbWVyID4gMDtcclxuICAgIH1cclxuXHJcbiAgICBnZXQgRG93bklucHV0KCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9kb3duVGltZXIgPiAwO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBDYW1lcmFBeGlzKCk6IExheWEuUG9pbnQgeyByZXR1cm4gdGhpcy5fY2FtZXJhQXhpczsgfVxyXG5cclxuICAgIHByb3RlY3RlZCBfY2FtZXJhQXhpczogTGF5YS5Qb2ludCA9IG5ldyBMYXlhLlBvaW50KCk7XHJcbiAgICBwdWJsaWMgUmVhc29uKGFueT86IGFueSkge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3ovpPlhaXmlbDmja5cIixhbnkpXHJcbiAgICAgICAgbGV0IGlucHV0ID0gYW55O1xyXG4gICAgICAgIGlmICghaW5wdXQpIHJldHVybjtcclxuICAgICAgICBsZXQgdHlwZSA9IGlucHV0LklucHV0VHlwZTtcclxuICAgICAgICBsZXQgdmFsdWUgPSBpbnB1dC5WYWx1ZTtcclxuICAgICAgICBzd2l0Y2ggKHR5cGUpIHtcclxuICAgICAgICAgICAgY2FzZSBJbnB1dFR5cGUuUm9ja2VyQXhpczpcclxuXHJcbiAgICAgICAgICAgICAgICBpZiAodmFsdWUgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3JvY2tlckF4aXMgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9yb2NrZXJJbnB1dFRpbWVyID0gMTUwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fcm9ja2VyQXhpcyA9IG51bGw7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fcm9ja2VySW5wdXRUaW1lciA9IDA7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBJbnB1dFR5cGUuQ2FtZXJhQXhpczpcclxuICAgICAgICAgICAgICAgIHRoaXMuX2NhbWVyYUF4aXMgPSB2YWx1ZTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIElucHV0VHlwZS5KdW1wOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5fanVtcElucHV0VGltZXIgPSAxMDA7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBJbnB1dFR5cGUuRmlyZTpcclxuICAgICAgICAgICAgICAgIHRoaXMuX2ZpcmVJbnB1dFRpbWVyID0gMTAwO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgSW5wdXRUeXBlLkZpcmVCYWxsOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5fZmlyZUJhbGxJbnB1dFRpbWVyID0gMTAwO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIGNhc2UgSW5wdXRUeXBlLlRyYW5zZm9ybTpcclxuICAgICAgICAgICAgICAgIHRoaXMuX3RyYW5zZm9ybUlucHV0VGltZXIgPSAxMDA7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBJbnB1dFR5cGUuQXR0YWNrOlxyXG4gICAgICAgICAgICAgICAgdGhpcy5fYXR0YWNrSW5wdXRUaW1lciA9IDEwMDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIElucHV0VHlwZS5VUDpcclxuICAgICAgICAgICAgICAgIHRoaXMuX3VwVGltZXIgPSAxMDA7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgY2FzZSBJbnB1dFR5cGUuRG93bjpcclxuICAgICAgICAgICAgICAgIHRoaXMuX2Rvd25UaW1lciA9IDEwMDtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICBjYXNlIElucHV0VHlwZS5UaHJvd1N0b25lOlxyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0tLS0t5Lii55+z5aS0XCIpXHJcbiAgICAgICAgICAgICAgICB0aGlzLl90aHJvd3N0b25lVGltZXIgPSAxMDA7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIEFjdChhbnk/KSB7XHJcbiAgICAgICAgdGhpcy5fYXR0YWNrSW5wdXRUaW1lciAtPSBMYXlhLnRpbWVyLmRlbHRhO1xyXG4gICAgICAgIHRoaXMuX3JvY2tlcklucHV0VGltZXIgLT0gTGF5YS50aW1lci5kZWx0YTtcclxuICAgICAgICB0aGlzLl90cmFuc2Zvcm1JbnB1dFRpbWVyIC09IExheWEudGltZXIuZGVsdGE7XHJcbiAgICAgICAgdGhpcy5fanVtcElucHV0VGltZXIgLT0gTGF5YS50aW1lci5kZWx0YTtcclxuICAgICAgICB0aGlzLl9maXJlSW5wdXRUaW1lciAtPSBMYXlhLnRpbWVyLmRlbHRhO1xyXG4gICAgICAgIHRoaXMuX2ZpcmVCYWxsSW5wdXRUaW1lciAtPSBMYXlhLnRpbWVyLmRlbHRhO1xyXG4gICAgICAgIHRoaXMuX3VwVGltZXIgLT0gTGF5YS50aW1lci5kZWx0YTtcclxuICAgICAgICB0aGlzLl9kb3duVGltZXIgLT0gTGF5YS50aW1lci5kZWx0YTtcclxuICAgICAgICB0aGlzLl90aHJvd3N0b25lVGltZXIgLT0gTGF5YS50aW1lci5kZWx0YTtcclxuXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgQmFzZVN0YXRlIGZyb20gXCIuL0Jhc2VTdGF0ZVwiO1xyXG5pbXBvcnQgeyBUcmFuc2l0aW9uLCBTdGF0ZUlEIH0gZnJvbSBcIi4uL0ZzbS9Gc21FbnVtXCI7XHJcbmltcG9ydCBFdmVudE1ncl9jc2pjIGZyb20gXCIuLi8uLi8uLi9FdmVudC9FdmVudE1nclwiO1xyXG5pbXBvcnQgeyBFdmVudERlZl9jc2pjIH0gZnJvbSBcIi4uLy4uLy4uL0V2ZW50L0V2ZW50RGVmXCI7XHJcbmltcG9ydCBTY2VuZU1ncl9jc2NqIGZyb20gXCIuLi9TY2VuZU1nclwiO1xyXG5pbXBvcnQgU291bmRNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vLi4vTWdyL1NvdW5kTWdyXCI7XHJcbmltcG9ydCB7IENvbGxpc2lvbkdyb3VwIH0gZnJvbSBcIi4uL0VudW1zXCI7XHJcbmltcG9ydCBNeUFuaW1hdG9yRXZlbnQgZnJvbSBcIi4uL0NoYXJhY3Rlci9NeUFuaW1hdG9yRXZlbnRcIjtcclxuaW1wb3J0IFBvb2xNYW5hZ2VyIGZyb20gXCIuLi9HYW1lVG9vbHMvUG9vbE1hbmFnZXJcIjtcclxuaW1wb3J0IFN0b25lTWdyIGZyb20gXCIuLi9DaGFyYWN0ZXIvU3RvbmVNZ3JcIjtcclxuZW51bSBLaW5na29uZ1N1YlN0YXRlIHtcclxuICAgIElkbGUsXHJcbiAgICBNb3ZlLFxyXG4gICAgVHJhbnMyUHRlcixcclxuICAgIEF0dGFjayxcclxuICAgIFNwaXRGaXJlLFxyXG4gICAgSnVtcGluZyxcclxuICAgIEZhbGxpbmcsXHJcbiAgICBFYXRpbmcsXHJcbiAgICBDbGltYixcclxuICAgIENsaW1iRW5kLFxyXG4gICAgVGhyb3dTdG9uZSxcclxuICAgIEhpdGVkLFxyXG4gICAgRGllLFxyXG5cclxufVxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBLaW5na2luZ1N0YXRlIGV4dGVuZHMgQmFzZVN0YXRlIHtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgdGhpcy5BZGRUcmFuc2l0aW9uKFRyYW5zaXRpb24uS2luZ2tvbmcyVHJleCwgU3RhdGVJRC5LaW5nS29uZyk7XHJcbiAgICB9XHJcbiAgICBnZXQgSHAoKTogbnVtYmVyIHsgcmV0dXJuIHRoaXMuX2hwIH1cclxuICAgIHByaXZhdGUgX3N1YlN0YXRlOiBLaW5na29uZ1N1YlN0YXRlID0gS2luZ2tvbmdTdWJTdGF0ZS5JZGxlO1xyXG4gICAgcHJpdmF0ZSBfYXR0YWNrVGltZXI6IG51bWJlciA9IDA7XHJcbiAgICBwcm90ZWN0ZWQgc3RhdGVJRCA9IFN0YXRlSUQuS2luZ0tvbmc7XHJcbiAgICBwcml2YXRlIF9yaWdpZEJvZHkzRDogTGF5YS5SaWdpZGJvZHkzRDtcclxuICAgIHByaXZhdGUgX29uR3JvdW5kOiBib29sZWFuID0gdHJ1ZTtcclxuICAgIHByaXZhdGUgX2lzQ2xpbWI6IGJvb2xlYW4gPSBmYWxzZVxyXG4gICAgcHJpdmF0ZSBfY2xpbWJNYXNrOiBib29sZWFuID0gZmFsc2VcclxuICAgIHByaXZhdGUgX2ZhY2VXYWxsOiBib29sZWFuO1xyXG5cclxuICAgIHByaXZhdGUgX2F0a1N0b25lUG9zOiBMYXlhLlNwcml0ZTNEO1xyXG4gICAgcHJpdmF0ZSBfaXNUaHJvdzogYm9vbGVhbiA9IGZhbHNlXHJcblxyXG4gICAgLy8gcHJpdmF0ZSBfYXR0YWNrMTogTGF5YS5QaHlzaWNzQ29tcG9uZW50O1xyXG4gICAgLy8gcHJpdmF0ZSBfYXR0YWNrMjogTGF5YS5QaHlzaWNzQ29tcG9uZW50O1xyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t5byA5aeL54is5qW8XCIpXHJcbiAgICAgICAgdGhpcy5fYW5pbWF0b3IgPSB0aGlzLk1vZGVsLmdldENvbXBvbmVudChMYXlhLkFuaW1hdG9yKSBhcyBMYXlhLkFuaW1hdG9yO1xyXG4gICAgICAgIC8vIHRoaXMuX2FuaW1hdG9yLmF2YXRhci4gPSBmYWxzZVxyXG4gICAgICAgIHRoaXMuX3JpZ2lkQm9keTNEID0gdGhpcy5vd25lci5nZXRDb21wb25lbnQoTGF5YS5SaWdpZGJvZHkzRCkgYXMgTGF5YS5SaWdpZGJvZHkzRDtcclxuICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5hbmd1bGFyRmFjdG9yID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgICAgICAvLyB0aGlzLl9yaWdpZEJvZHkzRC5hbmcgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG5cclxuICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5pc0tpbmVtYXRpYyA9IGZhbHNlXHJcbiAgICAgICAgdGhpcy5fcmlnaWRCb2R5M0QuY29sbGlzaW9uR3JvdXAgPSBDb2xsaXNpb25Hcm91cC5DaGFyYWN0ZXI7XHJcbiAgICAgICAgdGhpcy5fcmlnaWRCb2R5M0QuY2FuQ29sbGlkZVdpdGggPSBDb2xsaXNpb25Hcm91cC5BbGwgXiBDb2xsaXNpb25Hcm91cC5DaGFyYWN0ZXI7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t6I635Y+W6IqC54K5XCIsdGhpcy5vd25lcix0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQXRrU3RvbmVcIikpXHJcbiAgICAgICAgdGhpcy5fYXRrU3RvbmVQb3MgPSB0aGlzLm93bmVyLmdldENoaWxkQXQoMCkuZ2V0Q2hpbGRCeU5hbWUoXCJBdGtTdG9uZVwiKSBhcyBMYXlhLlNwcml0ZTNEXHJcbiAgICAgICAgbGV0IGFuaSA9IHRoaXMuTW9kZWwuYWRkQ29tcG9uZW50KE15QW5pbWF0b3JFdmVudCkgYXMgTXlBbmltYXRvckV2ZW50O1xyXG4gICAgICAgIHRoaXMuX2lzQ2xpbWIgPSBmYWxzZVxyXG4gICAgICAgIEV2ZW50TWdyX2NzamMucmVnRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLkF0dGFja0lucHV0LHRoaXMsdGhpcy5IaXRlZCk7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5yZWdFdmVudF9jc2pjKEV2ZW50RGVmX2NzamMuRW5lbXlEZWFkLHRoaXMsdGhpcy5FYXRpbmdFdmVudCk7XHJcblxyXG4gICAgICAgIGFuaS5TZXRDaGFyYWN0ZXIodGhpcyk7XHJcbiAgICAgICAgdGhpcy5TZXRBdHRhY2soKTtcclxuICAgIH1cclxuXHJcbiAgICBTZXRBdHRhY2soKSB7XHJcbiAgICAgICAgLy8gdGhpcy5fYXR0YWNrMSA9IHRoaXMuTW9kZWwuZ2V0Q2hpbGRCeU5hbWUoXCJBdHRhY2sxXCIpLmdldENvbXBvbmVudChMYXlhLlBoeXNpY3NDb21wb25lbnQpO1xyXG4gICAgICAgIC8vIHRoaXMuX2F0dGFjazEuY29sbGlzaW9uR3JvdXAgPSBDb2xsaXNpb25Hcm91cC5DaGFyYWN0ZXJcclxuICAgICAgICAvLyB0aGlzLl9hdHRhY2sxLmNhbkNvbGxpZGVXaXRoID0gQ29sbGlzaW9uR3JvdXAuQWxsIHwgQ29sbGlzaW9uR3JvdXAuT2JzdGFjbGUgXiBDb2xsaXNpb25Hcm91cC5DaGFyYWN0ZXI7XHJcbiAgICAgICAgLy8gdGhpcy5fYXR0YWNrMiA9IHRoaXMuTW9kZWwuZ2V0Q2hpbGRCeU5hbWUoXCJBdHRhY2syXCIpLmdldENvbXBvbmVudChMYXlhLlBoeXNpY3NDb21wb25lbnQpO1xyXG4gICAgICAgIC8vIHRoaXMuX2F0dGFjazIuY29sbGlzaW9uR3JvdXAgPSBDb2xsaXNpb25Hcm91cC5DaGFyYWN0ZXJcclxuICAgICAgICAvLyB0aGlzLl9hdHRhY2syLmNhbkNvbGxpZGVXaXRoID0gQ29sbGlzaW9uR3JvdXAuQWxsIHwgQ29sbGlzaW9uR3JvdXAuT2JzdGFjbGUgXiBDb2xsaXNpb25Hcm91cC5DaGFyYWN0ZXI7XHJcbiAgICAgICAgLy8gdGhpcy5BbmltYXRvci5wbGF5KFwiQ2xpbWJpbmcgVXAgV2FsbFwiKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgRG9CZWZvcmVFbnRlcmluZyhhbnk/OiBhbnkpIHtcclxuICAgICAgICB0aGlzLmNoYXJhY3RlckN0ci5TZXRGb2xsb3dPYmoodGhpcy5TcHJpdGUzRCk7XHJcbiAgICAgICAgdGhpcy5BbmltYXRvci5wbGF5KFwiSWRsZVwiKTtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5UcmFuc2Zvcm1FdmVudCwgW2ZhbHNlXSk7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3ms6jlhozooqvmlLvlh7vkuovku7ZcIilcclxuICAgICAgICAvL+a1i+ivleS4ujMwXHJcbiAgICAgICAgdGhpcy5faHBTdW0gPSAxMFxyXG4gICAgICAgIHRoaXMuX2hwID0gdGhpcy5faHBTdW1cclxuICAgIH1cclxuXHJcblxyXG4gICAgRWF0aW5nRXZlbnQoKVxyXG4gICAge1xyXG4gICAgICAgIHRoaXMuX3N1YlN0YXRlID0gS2luZ2tvbmdTdWJTdGF0ZS5FYXRpbmc7XHJcbiAgICAgICAgU291bmRNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLnBsYXlTb3VuZF9jc2pjKFwiRWF0aW5nXCIpO1xyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKirlj5flh7sgKi9cclxuICAgIHB1YmxpYyBIaXRlZChkYXRhKSB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0tLS0tLS0t5ZCN5a2XXCIsZGF0YSx0aGlzLm93bmVyLm5hbWUpXHJcbiAgICAgICAgaWYgKGRhdGEubmFtZSA9PSB0aGlzLm93bmVyLm5hbWUpXHJcbiAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgIGxldCBkaXMgPSBMYXlhLlZlY3RvcjMuZGlzdGFuY2UodGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucG9zaXRpb24sIGRhdGEudjMpO1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLeaUu+WHu+i3neemu1wiLGRpcylcclxuICAgICAgICBpZiAoZGlzID4gOClcclxuICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgaWYgKHRoaXMuQ3VycmVudEFuaSAhPSBcIkhpdCBMZWZ0XCIpIHtcclxuICAgICAgICAgICAgdGhpcy5fcmlnaWRCb2R5M0QubGluZWFyVmVsb2NpdHkgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IEtpbmdrb25nU3ViU3RhdGUuSGl0ZWQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBEb0JlZm9yZUxlYXZpbmcoYW55PzogYW55KSB7XHJcbiAgICAgICAgdGhpcy5fc3ViU3RhdGUgPSBLaW5na29uZ1N1YlN0YXRlLklkbGU7XHJcbiAgICAgICAgdGhpcy5jaGFyYWN0ZXJDdHIuU3RvcFNvdW5kKCk7XHJcbiAgICB9XHJcbiAgICBwdWJsaWMgUmVhc29uKGFueT86IGFueSkge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3ovpPlhaXmlbDmja5cIixhbnkpXHJcbiAgICAgICAgc3VwZXIuUmVhc29uKGFueSlcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWPjeW6lFxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0geyp9IFthbnldIFxyXG4gICAgICogXHJcbiAgICAgKiBAbWVtYmVyT2YgUm9ib3RTdGF0ZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgQWN0KGFueT86IGFueSkge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3mjpLpmaTlnKjlpJZcIix0aGlzLl9zdWJTdGF0ZSx0aGlzLkN1cnJlbnRBbmkgPT0gXCJEZWF0aFwiIHx8XHJcbiAgICAgICAgLy8gIHRoaXMuX2lzVGhyb3cgPT0gdHJ1ZSwodGhpcy5DdXJyZW50QW5pID09IFwiSnVtcFwiKSAmJiB0aGlzLkFuaW1hdG9yLmdldEN1cnJlbnRBbmltYXRvclBsYXlTdGF0ZSgwKS5ub3JtYWxpemVkVGltZSA8PSAwLjYpXHJcblxyXG4gICAgICAgIGlmICh0aGlzLkN1cnJlbnRBbmkgPT0gXCJEZWF0aFwiIHx8IHRoaXMuX2lzVGhyb3cgPT0gdHJ1ZSlcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiLSotLS0tLS0tLS0tLS0tLS0tLS0t5q275Lqh5LqGXCIpXHJcbiAgICAgICAgICAgIHJldHVybjtcclxuIFxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLei+k+WHulwiLHRoaXMuX3JpZ2lkQm9keTNELmlzS2luZW1hdGljKVxyXG4gICAgICAgIGlmICgodGhpcy5DdXJyZW50QW5pID09IFwiSnVtcFwiKSAmJiB0aGlzLkFuaW1hdG9yLmdldEN1cnJlbnRBbmltYXRvclBsYXlTdGF0ZSgwKS5ub3JtYWxpemVkVGltZSA8PSAwLjYpXHJcbiAgICAgICAgICAgIHJldHVyblxyXG5cclxuICAgICAgICB0aGlzLl9vbkdyb3VuZCA9IHRoaXMuT25Hcm91bmRDaGVjaygpO1xyXG5cclxuICAgICAgICBpZiAodGhpcy5fc3ViU3RhdGUgIT0gS2luZ2tvbmdTdWJTdGF0ZS5DbGltYkVuZCAmJiB0aGlzLl9jbGltYk1hc2sgPT0gZmFsc2UpICB7XHJcbiAgICAgICAgICAgIHRoaXMuT25XYWxsQ2hlY2soKVxyXG4gICAgICAgICAgICBpZiAodGhpcy5faXNDbGltYikgIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuQ2xpbWJNZXRob2QoKTtcclxuICAgICAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIHRoaXMuT25XYWxsQ2hlY2soKTtcclxuXHJcbiAgICAgICAgdGhpcy5fb25Hcm91bmQgPSB0aGlzLk9uR3JvdW5kQ2hlY2soKTtcclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t54q25oCB5py6XCIsdGhpcy5fc3ViU3RhdGUpXHJcblxyXG4gICAgICAgIHN1cGVyLkFjdChhbnkpO1xyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgc3dpdGNoICh0aGlzLl9zdWJTdGF0ZSkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSBLaW5na29uZ1N1YlN0YXRlLklkbGU6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5JZGxlTWV0aG9kKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIEtpbmdrb25nU3ViU3RhdGUuTW92ZTpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLk1vdmVNZXRob2QoKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgS2luZ2tvbmdTdWJTdGF0ZS5BdHRhY2s6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5BdHRhY2tNZXRob2QoKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgS2luZ2tvbmdTdWJTdGF0ZS5KdW1waW5nOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuSnVtcE1ldGhvZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBLaW5na29uZ1N1YlN0YXRlLkZhbGxpbmc6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5GYWxsaW5nKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIEtpbmdrb25nU3ViU3RhdGUuRWF0aW5nOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuRWF0aW5nTWV0aG9kKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIEtpbmdrb25nU3ViU3RhdGUuQ2xpbWI6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5DbGltYk1ldGhvZCgpO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBLaW5na29uZ1N1YlN0YXRlLkNsaW1iRW5kOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ2xpbWJPdmVyTWV0aG9kKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIEtpbmdrb25nU3ViU3RhdGUuVGhyb3dTdG9uZTpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlRocm93U3RvbmVNZXRob2QoKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgS2luZ2tvbmdTdWJTdGF0ZS5IaXRlZDpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkhpdGVkTWV0aG9kKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIEtpbmdrb25nU3ViU3RhdGUuRGllOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuRGllTWV0aG9kKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBBdHRhY2tNZXRob2QoKSB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0tLS0tLS0t5pS75Ye7XCIsdGhpcy5vd25lci5uYW1lKVxyXG5cclxuICAgICAgICB0aGlzLlN0b3BNb3ZlKCk7XHJcbiAgICAgICAgdGhpcy5jaGFyYWN0ZXJDdHIuU3RvcFNvdW5kKCk7XHJcbiAgICAgICAgdGhpcy5fYXR0YWNrVGltZXIgLT0gTGF5YS50aW1lci5kZWx0YTtcclxuICAgICAgICBsZXQgYW5nbGUgPSAwO1xyXG4gICAgICAgIGxldCBzcGQgPSAxO1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkF0dGFja0lucHV0LCB7IG5hbWU6IHRoaXMub3duZXIubmFtZSwgdjM6IHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uIH0pXHJcblxyXG4gICAgICAgIGlmICh0aGlzLlJvY2tlckF4aXMgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICBhbmdsZSA9IChNYXRoLmF0YW4yKHRoaXMuUm9ja2VyQXhpcy54LCB0aGlzLlJvY2tlckF4aXMueSkgLyAzLjE0ICogMTgwKSArIDE4MDtcclxuICAgICAgICAgICAgc3BkID0gTWF0aC5taW4oMSwgTWF0aC5tYXgoMC43LCB0aGlzLlJvY2tlckF4aXMuZGlzdGFuY2UoMCwgMCkpKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuQ3VycmVudEFuaSA9PSBcIkF0dGFja1wiICYmIHRoaXMuX2F0dGFja1RpbWVyID4gNjAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuVHVybkFuZE1vdmUoYW5nbGUsIHNwZCAqIDUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLkN1cnJlbnRBbmkgPT0gXCJBdHRhY2sgQm94XCIgJiYgdGhpcy5fYXR0YWNrVGltZXIgPCA4MDAgJiYgdGhpcy5fYXR0YWNrVGltZXIgPiA3MDApIHtcclxuICAgICAgICAgICAgdGhpcy5UdXJuQW5kTW92ZShhbmdsZSwgc3BkICogNSk7XHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5fYXR0YWNrVGltZXIgPD0gMjAwICYmIHRoaXMuQXR0YWNrSW5wdXQpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuQ3VycmVudEFuaSA9PSBcIkF0dGFja1wiKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9hdHRhY2tUaW1lciA9IDE0MDA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnBsYXkoXCJBdHRhY2sgQm94XCIpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5DdXJyZW50QW5pID0gXCJBdHRhY2sgQm94XCI7XHJcbiAgICAgICAgICAgICAgICBTb3VuZE1ncl9jc2pjLmluc3RhbmNlX2NzamMucGxheVNvdW5kX2NzamMoXCJBdHRhY2sxXCIpO1xyXG5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2F0dGFja1RpbWVyID0gMTAwMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuQW5pbWF0b3IucGxheShcIkF0dGFja1wiKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuQ3VycmVudEFuaSA9IFwiQXR0YWNrXCI7XHJcbiAgICAgICAgICAgICAgICBTb3VuZE1ncl9jc2pjLmluc3RhbmNlX2NzamMucGxheVNvdW5kX2NzamMoXCJBdHRhY2sxXCIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuX2F0dGFja1RpbWVyIDw9IDApIHtcclxuICAgICAgICAgICAgdGhpcy5fc3ViU3RhdGUgPSBLaW5na29uZ1N1YlN0YXRlLklkbGU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgSnVtcE1ldGhvZCgpIHtcclxuICAgICAgICAvLyBpZih0aGlzLl9hdHRhY2tUaW1lcjwpXHJcbiAgICAgICAgdGhpcy5jaGFyYWN0ZXJDdHIuU3RvcFNvdW5kKCk7XHJcbiAgICAgICAgaWYgKHRoaXMuQ3VycmVudEFuaSAhPSBcIkp1bXBcIikge1xyXG4gICAgICAgICAgICB0aGlzLkN1cnJlbnRBbmkgPSBcIkp1bXBcIjtcclxuICAgICAgICAgICAgdGhpcy5BbmltYXRvci5zcGVlZCA9IDE7XHJcbiAgICAgICAgICAgIHRoaXMuQW5pbWF0b3IucGxheShcIkp1bXBcIiwgMCwgMCk7XHJcbiAgICAgICAgICAgIFNvdW5kTWdyX2NzamMuaW5zdGFuY2VfY3NqYy5wbGF5U291bmRfY3NqYyhcIkxhbmRcIik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuQ3VycmVudEFuaSA9PSBcIkp1bXBcIikge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5BbmltYXRvci5nZXRDdXJyZW50QW5pbWF0b3JQbGF5U3RhdGUoMCkubm9ybWFsaXplZFRpbWUgPiAwLjUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3JpZ2lkQm9keTNELmxpbmVhclZlbG9jaXR5ID0gbmV3IExheWEuVmVjdG9yMygwLCAyMCwgMCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IEtpbmdrb25nU3ViU3RhdGUuRmFsbGluZztcclxuXHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEZhbGxpbmcoKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCIqLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS3lkJHkuIvokL1cIilcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX29uR3JvdW5kKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gS2luZ2tvbmdTdWJTdGF0ZS5JZGxlO1xyXG4gICAgICAgICAgICBTb3VuZE1ncl9jc2pjLmluc3RhbmNlX2NzamMucGxheVNvdW5kX2NzamMoXCJMYW5kXCIpO1xyXG4gICAgICAgIH0vKiBcclxuICAgICAgICBlbHNlIGlmICh0aGlzLkZhY2VXYWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gVFJleFN1YlN0YXRlLkNsaW1iaW5nO1xyXG4gICAgICAgIH0gKi9cclxuICAgICAgICBpZiAodGhpcy5DdXJyZW50QW5pICE9IFwiSWRsZVwiICYmIHRoaXMuX3JpZ2lkQm9keTNELmxpbmVhclZlbG9jaXR5LnkgPCAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQ3VycmVudEFuaSA9IFwiSWRsZVwiO1xyXG4gICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnNwZWVkID0gMTtcclxuICAgICAgICAgICAgdGhpcy5BbmltYXRvci5jcm9zc0ZhZGUoXCJJZGxlXCIsIDAuNSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLlJvY2tlckF4aXMgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICBsZXQgYW5nbGUgPSAoTWF0aC5hdGFuMih0aGlzLlJvY2tlckF4aXMueCwgdGhpcy5Sb2NrZXJBeGlzLnkpIC8gMy4xNCAqIDE4MCkgKyAxODA7XHJcbiAgICAgICAgICAgIGxldCBzcGQgPSBNYXRoLm1pbigxLCBNYXRoLm1heCgwLjcsIHRoaXMuUm9ja2VyQXhpcy5kaXN0YW5jZSgwLCAwKSkpO1xyXG4gICAgICAgICAgICB0aGlzLlR1cm5BbmRNb3ZlKGFuZ2xlLCBzcGQgKiAyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuQ2hhcmFjdGVyRmFsbGluZyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmmoLlgZxcclxuICAgICAqIFxyXG4gICAgICogXHJcbiAgICAgKiBAbWVtYmVyT2YgQ2hhcmFjdGVyQ3RyXHJcbiAgICAgKi9cclxuICAgIElkbGVNZXRob2QoKSB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCItKi0tLS0tLS0tLS0tLS0tLS0tLS0t5pmu6YCaXCIpXHJcbiAgICAgICAgLy8gRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuQ2hhcmFjdGVyTm9ybWFsKTtcclxuXHJcbiAgICAgICAgaWYgKCF0aGlzLl9vbkdyb3VuZCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IEtpbmdrb25nU3ViU3RhdGUuRmFsbGluZztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5GaXJlSW5wdXQpIHtcclxuICAgICAgICAgICAgdGhpcy5fc3ViU3RhdGUgPSBLaW5na29uZ1N1YlN0YXRlLlNwaXRGaXJlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLlRyYW5zZm9ybUlucHV0KSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gS2luZ2tvbmdTdWJTdGF0ZS5UcmFuczJQdGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLkF0dGFja0lucHV0KSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gS2luZ2tvbmdTdWJTdGF0ZS5BdHRhY2s7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuUm9ja2VyQXhpcyAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gS2luZ2tvbmdTdWJTdGF0ZS5Nb3ZlO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLkp1bXBJbnB1dCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IEtpbmdrb25nU3ViU3RhdGUuSnVtcGluZztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5UaHJvd1N0b25lSW5wdXQpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0tLS0t5Lii55+z5aS05pa55rOV54q25oCBXCIpXHJcblxyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IEtpbmdrb25nU3ViU3RhdGUuVGhyb3dTdG9uZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLkN1cnJlbnRBbmkgIT0gXCJJZGxlXCIpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLkN1cnJlbnRBbmkgIT0gXCJJZGxlXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkN1cnJlbnRBbmkgPSBcIklkbGVcIjtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnNwZWVkID0gMTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkFuaW1hdG9yLmNyb3NzRmFkZShcIklkbGVcIiwgMC4xKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlN0b3BNb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuQ2hhcmFjdGVyTm9ybWFsKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgTW92ZU1ldGhvZCgpIHtcclxuICAgICAgICBpZiAodGhpcy5UcmFuc2Zvcm1JbnB1dCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IEtpbmdrb25nU3ViU3RhdGUuVHJhbnMyUHRlcjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5BdHRhY2tJbnB1dCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IEtpbmdrb25nU3ViU3RhdGUuQXR0YWNrO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLkp1bXBJbnB1dCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IEtpbmdrb25nU3ViU3RhdGUuSnVtcGluZztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5UaHJvd1N0b25lSW5wdXQpIHtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gS2luZ2tvbmdTdWJTdGF0ZS5UaHJvd1N0b25lO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLlJvY2tlckF4aXMgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICBsZXQgYW5nbGUgPSAoTWF0aC5hdGFuMih0aGlzLlJvY2tlckF4aXMueCwgdGhpcy5Sb2NrZXJBeGlzLnkpIC8gMy4xNCAqIDE4MCkgKyAxODA7XHJcbiAgICAgICAgICAgIC8vIGxldCBzcGQgPSBNYXRoLm1pbigxLCBNYXRoLm1heCgwLjcsIHRoaXMuUm9ja2VyQXhpcy5kaXN0YW5jZSgwLCAwKSkpO1xyXG4gICAgICAgICAgICBsZXQgc3BkID0gTWF0aC5taW4oMSwgTWF0aC5tYXgoMC4yLCB0aGlzLlJvY2tlckF4aXMuZGlzdGFuY2UoMCwgMCkpKTtcclxuXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLkN1cnJlbnRBbmkgIT0gXCJXYWxrXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnBsYXkoXCJXYWxrXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQ3VycmVudEFuaSA9IFwiV2Fsa1wiO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5BbmltYXRvci5zcGVlZCA9IHNwZDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLlR1cm5BbmRNb3ZlKGFuZ2xlLCBzcGQgKiAzKTtcclxuICAgICAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuQ2hhcmFjdGVyTm9ybWFsKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gS2luZ2tvbmdTdWJTdGF0ZS5JZGxlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcblxyXG5cclxuICAgIFN0b3BNb3ZlKCkge1xyXG4gICAgICAgIHRoaXMuX3JpZ2lkQm9keTNELmxpbmVhclZlbG9jaXR5ID0gTGF5YS5WZWN0b3IzLl9aRVJPLmNsb25lKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLypcclxuICAgICAgICDmnLrlmajop5LoibLovazlkJHnp7vliqggXHJcbiAgICAqL1xyXG4gICAgVHVybkFuZE1vdmUoYW5nbGU6IG51bWJlciwgc3BkOiBudW1iZXIpIHtcclxuICAgICAgICBpZiAodGhpcy5fb25Hcm91bmQgPT0gZmFsc2UpICB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gS2luZ2tvbmdTdWJTdGF0ZS5GYWxsaW5nO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLlR1cm5CeUNhbWVyYShhbmdsZSk7XHJcbiAgICAgICAgdGhpcy5Nb3ZlRm9yd2FyZChzcGQpO1xyXG4gICAgICAgIC8vIGlmICh0aGlzLlR1cm5CeUNhbWVyYShhbmdsZSkpIHtcclxuICAgICAgICAvLyAgICAgdGhpcy5Nb3ZlRm9yd2FyZChzcGQpO1xyXG4gICAgICAgIC8vIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgVHVybihhbmdsZTogbnVtYmVyKSB7XHJcbiAgICAgICAgbGV0IGN1ckFuZ2xlID0gdGhpcy5Nb2RlbC50cmFuc2Zvcm0ubG9jYWxSb3RhdGlvbkV1bGVyWTtcclxuICAgICAgICBpZiAoTWF0aC5hYnMoY3VyQW5nbGUgLSBhbmdsZSkgPCAzKSByZXR1cm47XHJcbiAgICAgICAgaWYgKGN1ckFuZ2xlID4gYW5nbGUpIHtcclxuICAgICAgICAgICAgaWYgKGN1ckFuZ2xlIC0gYW5nbGUgPiAxODApIHtcclxuICAgICAgICAgICAgICAgIGN1ckFuZ2xlICs9IDM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjdXJBbmdsZSAtPSAzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGFuZ2xlID4gY3VyQW5nbGUpIHtcclxuICAgICAgICAgICAgaWYgKGFuZ2xlIC0gY3VyQW5nbGUgPiAxODApIHtcclxuICAgICAgICAgICAgICAgIGN1ckFuZ2xlIC09IDM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjdXJBbmdsZSArPSAzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGN1ckFuZ2xlID0gY3VyQW5nbGUgJSAzNjA7XHJcbiAgICAgICAgaWYgKGN1ckFuZ2xlIDwgMCkge1xyXG4gICAgICAgICAgICBjdXJBbmdsZSArPSAzNjA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuTW9kZWwudHJhbnNmb3JtLmxvY2FsUm90YXRpb25FdWxlclkgPSBjdXJBbmdsZVxyXG4gICAgfVxyXG5cclxuICAgIC8qXHJcbiAgICAgICAg5py65Zmo6KeS6Imy6L2s5ZCRIFxyXG4gICAgKi9cclxuICAgIFR1cm5CeUNhbWVyYShhbmdsZTogbnVtYmVyKSB7XHJcbiAgICAgICAgbGV0IGRpciA9IG5ldyBMYXlhLlZlY3RvcjMoKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc3VidHJhY3QoU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5DYW1lcmEudHJhbnNmb3JtLnBvc2l0aW9uLCB0aGlzLk1vZGVsLnRyYW5zZm9ybS5wb3NpdGlvbiwgZGlyKTtcclxuICAgICAgICBkaXIueSA9IDA7XHJcbiAgICAgICAgbGV0IGFuZ2xlMiA9IChNYXRoLmF0YW4yKGRpci54LCBkaXIueikgLyBNYXRoLlBJICogMTgwKSArIDE4MDtcclxuICAgICAgICBhbmdsZSA9IChhbmdsZSArIGFuZ2xlMikgJSAzNjA7XHJcbiAgICAgICAgbGV0IGN1ckFuZ2xlID0gdGhpcy5Nb2RlbC50cmFuc2Zvcm0ubG9jYWxSb3RhdGlvbkV1bGVyWTtcclxuICAgICAgICBpZiAoTWF0aC5hYnMoY3VyQW5nbGUgLSBhbmdsZSkgPCAzKSByZXR1cm47XHJcbiAgICAgICAgaWYgKGN1ckFuZ2xlID4gYW5nbGUpIHtcclxuICAgICAgICAgICAgaWYgKGN1ckFuZ2xlIC0gYW5nbGUgPiAxODApIHtcclxuICAgICAgICAgICAgICAgIGN1ckFuZ2xlICs9IDM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjdXJBbmdsZSAtPSAzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGFuZ2xlID4gY3VyQW5nbGUpIHtcclxuICAgICAgICAgICAgaWYgKGFuZ2xlIC0gY3VyQW5nbGUgPiAxODApIHtcclxuICAgICAgICAgICAgICAgIGN1ckFuZ2xlIC09IDM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjdXJBbmdsZSArPSAzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGN1ckFuZ2xlID0gY3VyQW5nbGUgJSAzNjA7XHJcbiAgICAgICAgaWYgKGN1ckFuZ2xlIDwgMCkge1xyXG4gICAgICAgICAgICBjdXJBbmdsZSArPSAzNjA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuTW9kZWwudHJhbnNmb3JtLmxvY2FsUm90YXRpb25FdWxlclkgPSBjdXJBbmdsZTtcclxuICAgIH1cclxuXHJcbiAgICAvKlxyXG4gICAgICAgIOWQkeWJjeenu+WKqCBcclxuICAgICAqL1xyXG4gICAgTW92ZUZvcndhcmQoc3BkOiBudW1iZXIpIHtcclxuICAgICAgICBsZXQgY3VyQW5nbGUgPSB0aGlzLk1vZGVsLnRyYW5zZm9ybS5sb2NhbFJvdGF0aW9uRXVsZXJZICogMy4xNCAvIDE4MDtcclxuICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5saW5lYXJWZWxvY2l0eSA9IG5ldyBMYXlhLlZlY3RvcjMoTWF0aC5zaW4oY3VyQW5nbGUpICogMyAqIHNwZCwgdGhpcy5fcmlnaWRCb2R5M0QubGluZWFyVmVsb2NpdHkueSwgTWF0aC5jb3MoY3VyQW5nbGUpICogMyAqIHNwZCk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIE9uR3JvdW5kQ2hlY2soKTogYm9vbGVhbiB7XHJcbiAgICAgICAgbGV0IHVwID0gbmV3IExheWEuVmVjdG9yMygwLCA1LCAwKTtcclxuICAgICAgICBsZXQgZG93biA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgLTAuMSwgMCk7XHJcbiAgICAgICAgTGF5YS5WZWN0b3IzLmFkZCh0aGlzLlNwcml0ZTNELnRyYW5zZm9ybS5wb3NpdGlvbiwgZG93biwgZG93bik7XHJcbiAgICAgICAgTGF5YS5WZWN0b3IzLmFkZCh0aGlzLlNwcml0ZTNELnRyYW5zZm9ybS5wb3NpdGlvbiwgdXAsIHVwKTtcclxuICAgICAgICBsZXQgaGl0UmVzdWx0czogTGF5YS5IaXRSZXN1bHQgPSBuZXcgTGF5YS5IaXRSZXN1bHQoKTtcclxuICAgICAgICBsZXQgY29sbGlzaW9uR3JvdXAgPSBDb2xsaXNpb25Hcm91cC5DaGFyYWN0ZXI7XHJcbiAgICAgICAgbGV0IGNhbkNvbGxpc2lvbldpdGggPSBDb2xsaXNpb25Hcm91cC5Ob25lIHwgQ29sbGlzaW9uR3JvdXAuR3JvdW5kIHwgQ29sbGlzaW9uR3JvdXAuT2JzdGFjbGU7XHJcbiAgICAgICAgbGV0IHJlcyA9IFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuQ3VycmVudFNjZW5lLnBoeXNpY3NTaW11bGF0aW9uLnJheWNhc3RGcm9tVG8odXAsIGRvd24sIGhpdFJlc3VsdHMsIGNvbGxpc2lvbkdyb3VwLCBjYW5Db2xsaXNpb25XaXRoKTtcclxuICAgICAgICByZXR1cm4gcmVzO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBnZXRGb3J3YXJkKCkgIHtcclxuICAgICAgICB0aGlzLk1vZGVsLnRyYW5zZm9ybS5nZXRGb3J3YXJkKHRoaXMuZm9yd2FyZFYzKVxyXG4gICAgICAgIHJldHVybiB0aGlzLmZvcndhcmRWM1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCB0ZW1wVjM6IExheWEuVmVjdG9yMyA9IG5ldyBMYXlhLlZlY3RvcjMoKVxyXG4gICAgLyoqXHJcbiAgICAgKiDorr7nva7kuK3lv4Plj5jph492M1xyXG4gICAgICogQHBhcmFtIHggXHJcbiAgICAgKiBAcGFyYW0geSBcclxuICAgICAqIEBwYXJhbSB6IFxyXG4gICAgICovXHJcbiAgICBzZXRUZW1wVjMoeDogbnVtYmVyID0gMCwgeTogbnVtYmVyID0gMCwgejogbnVtYmVyID0gMCkgIHtcclxuICAgICAgICB0aGlzLnRlbXBWMy54ID0geDtcclxuICAgICAgICB0aGlzLnRlbXBWMy55ID0geTtcclxuICAgICAgICB0aGlzLnRlbXBWMy56ID0gejtcclxuICAgICAgICByZXR1cm4gdGhpcy50ZW1wVjNcclxuICAgIH1cclxuXHJcbiAgICBPbldhbGxDaGVjaygpIHtcclxuICAgICAgICBsZXQgdGVtcFkgPSB0aGlzLkN1cnJlbnRBbmkgPT0gXCJDbGltYmluZyBVcCBXYWxsXCIgPyAxNSA6IDVcclxuICAgICAgICB0aGlzLkxpbmVSYXlDYXN0KHRoaXMuc2V0VGVtcFYzKHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uLngsIHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uLnkgKyB0ZW1wWSwgdGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucG9zaXRpb24ueilcclxuICAgICAgICAgICAgLCB0aGlzLmdldEZvcndhcmQoKSwgLTMsIHRydWUpXHJcbiAgICAgICAgbGV0IGNoZWNrcmVzID0gZmFsc2VcclxuICAgICAgICBmb3IgKGxldCBpID0gMDsgaSA8IHRoaXMuaGl0UmVzdWx0cy5sZW5ndGg7IGkrKykgIHtcclxuICAgICAgICAgICAgbGV0IGNvbGxpZGVyID0gdGhpcy5oaXRSZXN1bHRzW2ldLmNvbGxpZGVyXHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0t5p+l55yL5YmN5pa5XCIsY29sbGlkZXIpXHJcbiAgICAgICAgICAgIGlmIChjb2xsaWRlci5vd25lci5wYXJlbnQubmFtZSA9PSBcIkJ1aWxkaW5nc1wiKSAge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fc3ViU3RhdGUgPSBLaW5na29uZ1N1YlN0YXRlLkNsaW1iO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5faXNDbGltYiA9IHRydWVcclxuICAgICAgICAgICAgICAgIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkNoYXJhY3RlckNsaW1iaW5nKTtcclxuXHJcbiAgICAgICAgICAgICAgICBjaGVja3JlcyA9IHRydWVcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5DdXJyZW50QW5pID09IFwiQ2xpbWJpbmcgVXAgV2FsbFwiICYmIGNoZWNrcmVzID09IGZhbHNlKSAge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IEtpbmdrb25nU3ViU3RhdGUuQ2xpbWJFbmQ7XHJcbiAgICAgICAgICAgIHRoaXMuX2lzQ2xpbWIgPSBmYWxzZVxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcbiAgICBUZXh0TGluZVxyXG4gICAgcHJvdGVjdGVkIExpbmVSYXlDYXN0KG1fb3JpZ2luOiBMYXlhLlZlY3RvcjMsIGRyaWVjdDogTGF5YS5WZWN0b3IzLCBkaXN0YW5jZTogbnVtYmVyLCBpc1Rlc3QgPSBmYWxzZSkvLzogQXJyYXk8TGF5YS5IaXRSZXN1bHQ+ICB7XHJcbiAgICB7XHJcbiAgICAgICAgLy8gaWYoaXNUZXN0PT10cnVlKVxyXG4gICAgICAgIC8vIHtcclxuICAgICAgICAvLyAgICAgaWYodGhpcy5UZXh0TGluZSlcclxuICAgICAgICAvLyAgICAge1xyXG4gICAgICAgIC8vICAgICAgICAgdGhpcy5UZXh0TGluZS5kZXN0cm95KCk7XHJcbiAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAvLyAgICAgdmFyIGxpbmVEaXIgPSBuZXcgTGF5YS5WZWN0b3IzKGRyaWVjdC54KmRpc3RhbmNlLGRyaWVjdC55KmRpc3RhbmNlLGRyaWVjdC56KmRpc3RhbmNlKVxyXG4gICAgICAgIC8vICAgICB2YXIgbGluZVNwcml0ZTpMYXlhLlBpeGVsTGluZVNwcml0ZTNEID0gU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5DdXJyZW50U2NlbmUuYWRkQ2hpbGQobmV3IExheWEuUGl4ZWxMaW5lU3ByaXRlM0QoMSkpIGFzIExheWEuUGl4ZWxMaW5lU3ByaXRlM0Q7XHJcbiAgICAgICAgLy8gICAgIGxpbmVTcHJpdGUuYWRkTGluZShtX29yaWdpbiwgbmV3IExheWEuVmVjdG9yMyhtX29yaWdpbi54K2xpbmVEaXIueCxtX29yaWdpbi55K2xpbmVEaXIueSxtX29yaWdpbi56K2xpbmVEaXIueiksIExheWEuQ29sb3IuUkVELCBMYXlhLkNvbG9yLlJFRCk7XHJcbiAgICAgICAgLy8gICAgIHRoaXMuVGV4dExpbmUgPSBsaW5lU3ByaXRlXHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIHRoaXMucmF5Lm9yaWdpbiA9IG1fb3JpZ2luLy89IG5ldyBMYXlhLlJheShvcmlnaW4sIGRyaWVjdCk7XHJcbiAgICAgICAgdGhpcy5yYXkuZGlyZWN0aW9uID0gZHJpZWN0XHJcbiAgICAgICAgU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5DdXJyZW50U2NlbmUucGh5c2ljc1NpbXVsYXRpb24ucmF5Q2FzdEFsbCh0aGlzLnJheSwgdGhpcy5oaXRSZXN1bHRzLCBkaXN0YW5jZSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25Db2xsaXNpb25FbnRlcihjb2xsaXNpb246IExheWEuQ29sbGlzaW9uKSB7XHJcbiAgICAgICAgbGV0IGVuZW15ID0gY29sbGlzaW9uLm90aGVyLm93bmVyIGFzIExheWEuU3ByaXRlM0Q7XHJcbiAgICAgICAgaWYgKGVuZW15Lm5hbWUuc2VhcmNoKFwiRW5lbXlcIikgPiAtMSkge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IEtpbmdrb25nU3ViU3RhdGUuRWF0aW5nO1xyXG4gICAgICAgICAgICBTb3VuZE1ncl9jc2pjLmluc3RhbmNlX2NzamMucGxheVNvdW5kX2NzamMoXCJFYXRpbmdcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEVhdGluZ01ldGhvZCgpIHtcclxuICAgICAgICB0aGlzLmNoYXJhY3RlckN0ci5TdG9wU291bmQoKTtcclxuICAgICAgICBpZiAodGhpcy5DdXJyZW50QW5pICE9IFwiRWF0aW5nXCIpIHtcclxuICAgICAgICAgICAgdGhpcy5DdXJyZW50QW5pID0gXCJFYXRpbmdcIjtcclxuICAgICAgICAgICAgdGhpcy5BbmltYXRvci5zcGVlZCA9IDE7XHJcbiAgICAgICAgICAgIHRoaXMuQW5pbWF0b3IucGxheShcIkVhdGluZ1wiLCAwLCAwKTtcclxuICAgICAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuQ2hhcmFjdGVyRmFsbGluZyk7XHJcbiAgICAgICAgICAgIHRoaXMuU3RvcE1vdmUoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5DdXJyZW50QW5pID09IFwiRWF0aW5nXCIgJiYgdGhpcy5BbmltYXRvci5nZXRDdXJyZW50QW5pbWF0b3JQbGF5U3RhdGUoMCkubm9ybWFsaXplZFRpbWUgPj0gMSkge1xyXG4gICAgICAgICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5DaGFyYWN0ZXJOb3JtYWwpO1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IEtpbmdrb25nU3ViU3RhdGUuSWRsZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBEaWVNZXRob2QoKSAge1xyXG4gICAgICAgIGlmICh0aGlzLkN1cnJlbnRBbmkgIT0gXCJEZWF0aFwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQ3VycmVudEFuaSA9IFwiRGVhdGhcIjtcclxuICAgICAgICAgICAgdGhpcy5BbmltYXRvci5zcGVlZCA9IDE7XHJcbiAgICAgICAgICAgIHRoaXMuQW5pbWF0b3IucGxheShcIkRlYXRoXCIpO1xyXG4gICAgICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5saW5lYXJWZWxvY2l0eSA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcblxyXG4gICAgICAgICAgICAvLyBMYXlhLnRpbWVyLm9uY2UodGhpcy5BbmltYXRvci5nZXRDdXJyZW50QW5pbWF0b3JQbGF5U3RhdGUoMCkuZHVyYXRpb24qMTAwMCx0aGlzLCgpPT57XHJcbiAgICAgICAgICAgIC8vICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5DaGFyYWN0ZXJOb3JtYWwpO1xyXG4gICAgICAgICAgICAvLyAgICAgdGhpcy5fc3ViU3RhdGUgPSBLaW5na29uZ1N1YlN0YXRlLklkbGU7XHJcbiAgICAgICAgICAgIC8vICAgICB0aGlzLl9pc0hpdGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIC8vIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKuWPl+WHuyAqL1xyXG4gICAgSGl0ZWRNZXRob2QoKSB7XHJcbiAgICAgICAgLy8gaWYgKHRoaXMuQ3VycmVudEFuaSAhPSBcIkhpdCBMZWZ0XCIpIHtcclxuICAgICAgICAvLyAgICAgdGhpcy5DdXJyZW50QW5pID0gXCJIaXQgTGVmdFwiO1xyXG4gICAgICAgIC8vICAgICB0aGlzLkFuaW1hdG9yLnNwZWVkID0gMTtcclxuICAgICAgICAvLyAgICAgdGhpcy5BbmltYXRvci5wbGF5KFwiSGl0IExlZnRcIik7XHJcbiAgICAgICAgLy8gICAgIHRoaXMuX2hwPXRoaXMuX2hwPjA/dGhpcy5faHAtMToxO1xyXG4gICAgICAgIC8vIH1cclxuICAgICAgICAvLyBlbHNlIGlmICgodGhpcy5DdXJyZW50QW5pID09IFwiSGl0IExlZnRcIiApJiYgdGhpcy5BbmltYXRvci5nZXRDdXJyZW50QW5pbWF0b3JQbGF5U3RhdGUoMCkubm9ybWFsaXplZFRpbWUgPj0gMSkge1xyXG4gICAgICAgIC8vICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5DaGFyYWN0ZXJOb3JtYWwpO1xyXG4gICAgICAgIC8vICAgICB0aGlzLl9zdWJTdGF0ZSA9IEtpbmdrb25nU3ViU3RhdGUuSWRsZTtcclxuICAgICAgICAvLyAgICAgdGhpcy5fcmlnaWRCb2R5M0QubGluZWFyVmVsb2NpdHkgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgICAgIC8vIH1cclxuICAgICAgICBpZiAodGhpcy5DdXJyZW50QW5pICE9IFwiSGl0IExlZnRcIikge1xyXG4gICAgICAgICAgICB0aGlzLkN1cnJlbnRBbmkgPSBcIkhpdCBMZWZ0XCI7XHJcbiAgICAgICAgICAgIHRoaXMuQW5pbWF0b3Iuc3BlZWQgPSAxO1xyXG4gICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnBsYXkoXCJIaXQgTGVmdFwiKTtcclxuICAgICAgICAgICAgdGhpcy5faHAgPSB0aGlzLl9ocCA+IDAgPyB0aGlzLl9ocCAtIDEgOiAxO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5faHAgPD0gMCkgIHtcclxuICAgICAgICAgICAgICAgIFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuQm9zc1Zpc2libGUgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5BbmltYXRvci5wbGF5KFwiRGVhdGhcIik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkN1cnJlbnRBbmkgPSBcIkRlYXRoXCI7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IEtpbmdrb25nU3ViU3RhdGUuRGllO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS1z5Y+X5Ye7XCIpXHJcbiAgICAgICAgICAgIHRoaXMuX2lzSGl0ZWQgPSB0cnVlO1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS3miaPooYBcIix0aGlzLl9ocCk7XHJcbiAgICAgICAgICAgIExheWEudGltZXIub25jZSh0aGlzLkFuaW1hdG9yLmdldEN1cnJlbnRBbmltYXRvclBsYXlTdGF0ZSgwKS5kdXJhdGlvbiAqIDUwMCwgdGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuQ2hhcmFjdGVyTm9ybWFsKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gS2luZ2tvbmdTdWJTdGF0ZS5JZGxlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcmlnaWRCb2R5M0QubGluZWFyVmVsb2NpdHkgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5faXNIaXRlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKuS4ouefs+WktCAqL1xyXG4gICAgVGhyb3dTdG9uZU1ldGhvZCgpIHtcclxuICAgICAgICBpZiAodGhpcy5DdXJyZW50QW5pICE9IFwiVGhyb3dTdG9uZVwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2lzVGhyb3cgPSB0cnVlXHJcbiAgICAgICAgICAgIHRoaXMuX3JpZ2lkQm9keTNELmxpbmVhclZlbG9jaXR5ID0gTGF5YS5WZWN0b3IzLl9aRVJPXHJcbiAgICAgICAgICAgIHRoaXMuQ3VycmVudEFuaSA9IFwiVGhyb3dTdG9uZVwiO1xyXG4gICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnNwZWVkID0gMTtcclxuICAgICAgICAgICAgdGhpcy5BbmltYXRvci5wbGF5KFwiVGhyb3dTdG9uZVwiKTtcclxuICAgICAgICAgICAgLy8gbGV0IGVmY29sIDpMYXlhLlNwcml0ZTNEID0gUG9vbE1hbmFnZXIuZ2V0SW5zdGFuY2UoKS5EZXF1ZXVlSXRlbSgwKWFzIExheWEuTWVzaFNwcml0ZTNEO1xyXG4gICAgICAgICAgICAvLyBlZmNvbC5hY3RpdmUgPSB0cnVlXHJcbiAgICAgICAgICAgIC8vIHRoaXMuX2F0a1N0b25lUG9zLmFkZENoaWxkKGVmY29sKVxyXG4gICAgICAgICAgICAvLyBlZmNvbC50cmFuc2Zvcm0ubG9jYWxQb3NpdGlvbiA9IExheWEuVmVjdG9yMy5fWkVST1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS3lvZPliY3liqjnlLvmkq3mlL5cIix0aGlzLkFuaW1hdG9yLmdldEN1cnJlbnRBbmltYXRvclBsYXlTdGF0ZSgwKS5kdXJhdGlvbilcclxuICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKDQuOSoyMDAsIHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIC8vIHRoaXMuX2F0a1N0b25lUG9zLnJlbW92ZUNoaWxkKGVmY29sKVxyXG4gICAgICAgICAgICAgICAgLy8gU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5DdXJyZW50U2NlbmUuYWRkQ2hpbGQoZWZjb2wpO1xyXG4gICAgICAgICAgICAgICAgbGV0IGVmY29sOiBMYXlhLlNwcml0ZTNEID0gUG9vbE1hbmFnZXIuZ2V0SW5zdGFuY2UoKS5EZXF1ZXVlSXRlbSgwKSBhcyBMYXlhLk1lc2hTcHJpdGUzRDtcclxuICAgICAgICAgICAgICAgIFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuQ3VycmVudFNjZW5lLmFkZENoaWxkKGVmY29sKTtcclxuICAgICAgICAgICAgICAgIGVmY29sLmFjdGl2ZSA9IHRydWVcclxuICAgICAgICAgICAgICAgIGVmY29sLnRyYW5zZm9ybS5wb3NpdGlvbiA9IHRoaXMuX2F0a1N0b25lUG9zLnRyYW5zZm9ybS5wb3NpdGlvbi5jbG9uZSgpXHJcbiAgICAgICAgICAgICAgICBlZmNvbC50cmFuc2Zvcm0ucm90YXRpb25FdWxlciA9IHRoaXMuTW9kZWwudHJhbnNmb3JtLnJvdGF0aW9uRXVsZXIuY2xvbmUoKVxyXG5cclxuICAgICAgICAgICAgICAgIGlmIChlZmNvbC5nZXRDb21wb25lbnQoU3RvbmVNZ3IpID09IG51bGwpICB7XHJcbiAgICAgICAgICAgICAgICAgICAgZWZjb2wuYWRkQ29tcG9uZW50KFN0b25lTWdyKVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWZjb2wuZ2V0Q29tcG9uZW50KFN0b25lTWdyKS5Jbml0KGVmY29sLnRyYW5zZm9ybS5yb3RhdGlvbkV1bGVyLnkpXHJcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoNC45KjIwMCwgdGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2lzVGhyb3cgPSBmYWxzZVxyXG4gICAgICAgICAgICAgICAgfSlcclxuXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuQ3VycmVudEFuaSA9PSBcIlRocm93U3RvbmVcIiAmJiB0aGlzLkFuaW1hdG9yLmdldEN1cnJlbnRBbmltYXRvclBsYXlTdGF0ZSgwKS5ub3JtYWxpemVkVGltZSA+PSAxKSB7XHJcbiAgICAgICAgICAgIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkNoYXJhY3Rlck5vcm1hbCk7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gS2luZ2tvbmdTdWJTdGF0ZS5JZGxlO1xyXG4gICAgICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5saW5lYXJWZWxvY2l0eSA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaUgOeIrOe7k+adn1xyXG4gICAgICovXHJcbiAgICBDbGltYk92ZXJNZXRob2QoKSB7XHJcbiAgICAgICAgLy8gdGhpcy5jaGFyYWN0ZXJDdHIuU3RvcFNvdW5kKCk7XHJcbiAgICAgICAgaWYgKHRoaXMuQ3VycmVudEFuaSAhPSBcIkNsaW1iaW5nT3ZlclwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQ3VycmVudEFuaSA9IFwiQ2xpbWJpbmdPdmVyXCI7XHJcbiAgICAgICAgICAgIHRoaXMuQW5pbWF0b3Iuc3BlZWQgPSAxO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLeW8gOWni+aUgOeIrFwiKVxyXG4gICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnBsYXkoXCJDbGltYmluZ092ZXJcIik7XHJcbiAgICAgICAgICAgIExheWEudGltZXIub25jZSh0aGlzLkFuaW1hdG9yLmdldEN1cnJlbnRBbmltYXRvclBsYXlTdGF0ZSgwKS5kdXJhdGlvbiAqIDYwMCwgdGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcmlnaWRCb2R5M0QubGluZWFyVmVsb2NpdHkgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDUsIDApO1xyXG4gICAgICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKHRoaXMuQW5pbWF0b3IuZ2V0Q3VycmVudEFuaW1hdG9yUGxheVN0YXRlKDApLmR1cmF0aW9uICogMjAwLCB0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGxvY2FseSA9IHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLmxvY2FsUG9zaXRpb25ZICsgMTBcclxuICAgICAgICAgICAgICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLCB7IGxvY2FsUG9zaXRpb25ZOiBsb2NhbHkgfSwgMzAwKVxyXG4gICAgICAgICAgICAgICAgICAgIC8vIHRoaXMuX3JpZ2lkQm9keTNELmxpbmVhclZlbG9jaXR5ID0gbmV3IExheWEuVmVjdG9yMygwLCAyMCwgMCk7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UodGhpcy5BbmltYXRvci5nZXRDdXJyZW50QW5pbWF0b3JQbGF5U3RhdGUoMCkuZHVyYXRpb24gKiAxMDAwLCB0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLk1vdmVGb3J3YXJkKDEuNSk7XHJcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMzAwLCB0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fcmlnaWRCb2R5M0QubGluZWFyVmVsb2NpdHkgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5DdXJyZW50QW5pID09IFwiQ2xpbWJpbmdPdmVyXCIgJiYgdGhpcy5BbmltYXRvci5nZXRDdXJyZW50QW5pbWF0b3JQbGF5U3RhdGUoMCkubm9ybWFsaXplZFRpbWUgPj0gMSkge1xyXG4gICAgICAgICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5DaGFyYWN0ZXJOb3JtYWwpO1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IEtpbmdrb25nU3ViU3RhdGUuSWRsZTtcclxuICAgICAgICAgICAgLy8gdGhpcy5fcmlnaWRCb2R5M0QuaXNLaW5lbWF0aWMgPSB0cnVlXHJcbiAgICAgICAgICAgIHRoaXMuX3JpZ2lkQm9keTNELmdyYXZpdHkgPSB0aGlzLnNldFRlbXBWMygwLCAtMTAsIDApXHJcbiAgICAgICAgICAgIHRoaXMuX3JpZ2lkQm9keTNELmxpbmVhclZlbG9jaXR5ID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIENsaW1iTWFzaygpICB7XHJcbiAgICAgICAgdGhpcy5fY2xpbWJNYXNrID0gZmFsc2VcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOaUgOeIrOWHveaVsFxyXG4gICAgICovXHJcbiAgICBDbGltYk1ldGhvZCgpIHtcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX29uR3JvdW5kKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gS2luZ2tvbmdTdWJTdGF0ZS5GYWxsaW5nO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLkp1bXBJbnB1dCkge1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tLS0tLei+k+WFpeadoee6plwiKVxyXG4gICAgICAgICAgICB0aGlzLl9pc0NsaW1iID0gZmFsc2VcclxuICAgICAgICAgICAgdGhpcy5fY2xpbWJNYXNrID0gdHJ1ZVxyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLmNsZWFyKHRoaXMsIHRoaXMuQ2xpbWJNYXNrKVxyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLmZyYW1lT25jZSg1MDAsIHRoaXMsIHRoaXMuQ2xpbWJNYXNrKVxyXG4gICAgICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5ncmF2aXR5ID0gdGhpcy5zZXRUZW1wVjMoMCwgLTEwLCAwKVxyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IEtpbmdrb25nU3ViU3RhdGUuSnVtcGluZztcclxuXHJcbiAgICAgICAgICAgIHJldHVyblxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLmNoYXJhY3RlckN0ci5TdG9wU291bmQoKTtcclxuICAgICAgICBpZiAodGhpcy5DdXJyZW50QW5pICE9IFwiQ2xpbWJpbmcgVXAgV2FsbFwiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQ3VycmVudEFuaSA9IFwiQ2xpbWJpbmcgVXAgV2FsbFwiO1xyXG4gICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnNwZWVkID0gMTtcclxuICAgICAgICAgICAgdGhpcy5BbmltYXRvci5wbGF5KFwiQ2xpbWJpbmcgVXAgV2FsbFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fcmlnaWRCb2R5M0QuZ3Jhdml0eSA9IHRoaXMuc2V0VGVtcFYzKDAsIDAsIDApXHJcblxyXG4gICAgICAgIGlmICh0aGlzLlJvY2tlckF4aXMgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICBsZXQgaXN1cCA9IHRoaXMuUm9ja2VyQXhpcy55ID49IDAgPyAxIDogLTFcclxuXHJcbiAgICAgICAgICAgIGxldCBzcGQgPSBNYXRoLm1pbigxLCBNYXRoLm1heCgwLjcsIHRoaXMuUm9ja2VyQXhpcy5kaXN0YW5jZSgwLCAwKSkpO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5BbmltYXRvci5zcGVlZCA9IHRoaXMuUm9ja2VyQXhpcyA9PSBudWxsID8gMCA6IGlzdXAgKiBzcGQgKiAtMTtcclxuXHJcbiAgICAgICAgICAgIC8vIGxldCBjdXJBbmdsZSA9IHRoaXMuTW9kZWwudHJhbnNmb3JtLmxvY2FsUm90YXRpb25FdWxlclkgKiAzLjE0IC8gMTgwO1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tLS0tLS3niKzkuIrniKzkuItcIix0aGlzLlJvY2tlckF4aXMueSxzcGQpXHJcbiAgICAgICAgICAgIHRoaXMuX3JpZ2lkQm9keTNELmxpbmVhclZlbG9jaXR5ID0gbmV3IExheWEuVmVjdG9yMygwLCBpc3VwICogc3BkICogLTMsIDApO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlICB7XHJcbiAgICAgICAgICAgIHRoaXMuX3JpZ2lkQm9keTNELmxpbmVhclZlbG9jaXR5ID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgICAgICAgICAgdGhpcy5BbmltYXRvci5zcGVlZCA9IDBcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25EZXN0cm95KCkge1xyXG4gICAgICAgIHRoaXMuY2hhcmFjdGVyQ3RyLlN0b3BTb3VuZCgpO1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMucmVtb3ZlRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLkF0dGFja0lucHV0LCB0aGlzLCB0aGlzLkhpdGVkKTtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlbW92ZUV2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5FbmVteURlYWQsdGhpcyx0aGlzLkVhdGluZ0V2ZW50KTtcclxuXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgQmFzZVN0YXRlIGZyb20gXCIuL0Jhc2VTdGF0ZVwiO1xyXG5pbXBvcnQgeyBUcmFuc2l0aW9uLCBTdGF0ZUlEIH0gZnJvbSBcIi4uL0ZzbS9Gc21FbnVtXCI7XHJcbmltcG9ydCBFdmVudE1ncl9jc2pjIGZyb20gXCIuLi8uLi8uLi9FdmVudC9FdmVudE1nclwiO1xyXG5pbXBvcnQgeyBFdmVudERlZl9jc2pjIH0gZnJvbSBcIi4uLy4uLy4uL0V2ZW50L0V2ZW50RGVmXCI7XHJcbmltcG9ydCBTY2VuZU1ncl9jc2NqIGZyb20gXCIuLi9TY2VuZU1nclwiO1xyXG5pbXBvcnQgU291bmRNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vLi4vTWdyL1NvdW5kTWdyXCI7XHJcbmltcG9ydCB7IENvbGxpc2lvbkdyb3VwIH0gZnJvbSBcIi4uL0VudW1zXCI7XHJcbmltcG9ydCBNeUFuaW1hdG9yRXZlbnQgZnJvbSBcIi4uL0NoYXJhY3Rlci9NeUFuaW1hdG9yRXZlbnRcIjtcclxuZW51bSBUUmV4U3ViU3RhdGUge1xyXG4gICAgSWRsZSxcclxuICAgIE1vdmUsXHJcbiAgICBUcmFuczJQdGVyLFxyXG4gICAgQXR0YWNrLFxyXG4gICAgU3BpdEZpcmUsXHJcbiAgICBKdW1waW5nLFxyXG4gICAgRmFsbGluZyxcclxuICAgIEVhdGluZyxcclxuICAgIEhpdGVkLFxyXG4gICAgRGllXHJcblxyXG59XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRSZXhTdGF0ZSBleHRlbmRzIEJhc2VTdGF0ZSB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgICAgIHRoaXMuQWRkVHJhbnNpdGlvbihUcmFuc2l0aW9uLlRyZXgyS2luZ2tvbmcsIFN0YXRlSUQuVFJleCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBfZmlyZTogTGF5YS5TcHJpdGUzRDtcclxuICAgIHByaXZhdGUgX2ZpcmVDb2w6IExheWEuUGh5c2ljc0NvbXBvbmVudDtcclxuICAgIHByaXZhdGUgX3N1YlN0YXRlOiBUUmV4U3ViU3RhdGUgPSBUUmV4U3ViU3RhdGUuSWRsZTtcclxuICAgIHByaXZhdGUgX2F0dGFja1RpbWVyOiBudW1iZXIgPSAwO1xyXG4gICAgcHJvdGVjdGVkIHN0YXRlSUQgPSBTdGF0ZUlELlRSZXg7XHJcbiAgICBwcml2YXRlIF9yaWdpZEJvZHkzRDogTGF5YS5SaWdpZGJvZHkzRDtcclxuICAgIHByaXZhdGUgX29uR3JvdW5kOiBib29sZWFuID0gdHJ1ZTtcclxuICAgIHByaXZhdGUgX2F0dGFjazE6IExheWEuUGh5c2ljc0NvbXBvbmVudDtcclxuICAgIHByaXZhdGUgX2F0dGFjazI6IExheWEuUGh5c2ljc0NvbXBvbmVudDtcclxuICAgIG9uQXdha2UoKSB7XHJcbiAgICAgICAgdGhpcy5fYW5pbWF0b3IgPSB0aGlzLk1vZGVsLmdldENvbXBvbmVudChMYXlhLkFuaW1hdG9yKSBhcyBMYXlhLkFuaW1hdG9yO1xyXG4gICAgICAgIHRoaXMuX3JpZ2lkQm9keTNEID0gdGhpcy5vd25lci5nZXRDb21wb25lbnQoTGF5YS5SaWdpZGJvZHkzRCkgYXMgTGF5YS5SaWdpZGJvZHkzRDtcclxuICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5hbmd1bGFyRmFjdG9yID0gbmV3IExheWEuVmVjdG9yMygwLCAwLCAwKTtcclxuICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5jb2xsaXNpb25Hcm91cCA9IENvbGxpc2lvbkdyb3VwLkNoYXJhY3RlcjtcclxuICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5jYW5Db2xsaWRlV2l0aCA9IENvbGxpc2lvbkdyb3VwLkFsbCA7XHJcbiAgICAgICAgdGhpcy5fcmlnaWRCb2R5M0QuaXNLaW5lbWF0aWMgPSBmYWxzZVxyXG4gICAgICAgIC8vIGlmICh0aGlzLl9yaWdpZEJvZHkzRC5jb2xsaWRlclNoYXBlICE9IG51bGwpIHtcclxuICAgICAgICAvLyAgICAgdGhpcy5fcmlnaWRCb2R5M0QuY29sbGlkZXJTaGFwZS5kZXN0cm95KCk7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIC8vIGxldCBzaGFwZSA9IG5ldyBMYXlhLkNhcHN1bGVDb2xsaWRlclNoYXBlKDMsIDgsIDApO1xyXG4gICAgICAgIC8vIHNoYXBlLmxvY2FsT2Zmc2V0ID0gbmV3IExheWEuVmVjdG9yMygwLCAzLCAwKTtcclxuICAgICAgICAvLyB0aGlzLl9yaWdpZEJvZHkzRC5jb2xsaWRlclNoYXBlID0gc2hhcGU7XHJcbiAgICAgICAgdGhpcy5fZmlyZSA9IHRoaXMuTW9kZWwuZ2V0Q2hpbGRCeU5hbWUoXCJGbGFtZXN0cmlrZVwiKSBhcyBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgIHRoaXMuX2ZpcmVDb2wgPSB0aGlzLl9maXJlLmdldENvbXBvbmVudChMYXlhLlBoeXNpY3NDb21wb25lbnQpIGFzIExheWEuUGh5c2ljc0NvbXBvbmVudDtcclxuICAgICAgICB0aGlzLl9maXJlQ29sLmNvbGxpc2lvbkdyb3VwID0gQ29sbGlzaW9uR3JvdXAuQ2hhcmFjdGVyO1xyXG4gICAgICAgIHRoaXMuX2ZpcmVDb2wuY2FuQ29sbGlkZVdpdGggPSBDb2xsaXNpb25Hcm91cC5Ob25lIHwgQ29sbGlzaW9uR3JvdXAuT2JzdGFjbGU7XHJcbiAgICAgICAgdGhpcy5fZmlyZS5hY3RpdmUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLl9maXJlQ29sLmVuYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICBsZXQgYW5pID0gdGhpcy5Nb2RlbC5hZGRDb21wb25lbnQoTXlBbmltYXRvckV2ZW50KSBhcyBNeUFuaW1hdG9yRXZlbnQ7XHJcbiAgICAgICAgYW5pLlNldENoYXJhY3Rlcih0aGlzKTtcclxuICAgICAgICB0aGlzLlNldEF0dGFjaygpO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIFNldEF0dGFjaygpIHtcclxuICAgICAgICB0aGlzLl9hdHRhY2sxID0gdGhpcy5Nb2RlbC5nZXRDaGlsZEJ5TmFtZShcIkF0dGFjazFfVFJleFwiKS5nZXRDb21wb25lbnQoTGF5YS5QaHlzaWNzQ29tcG9uZW50KTtcclxuICAgICAgICB0aGlzLl9hdHRhY2sxLmNvbGxpc2lvbkdyb3VwID0gQ29sbGlzaW9uR3JvdXAuQ2hhcmFjdGVyXHJcbiAgICAgICAgdGhpcy5fYXR0YWNrMS5jYW5Db2xsaWRlV2l0aCA9IENvbGxpc2lvbkdyb3VwLkFsbCB8IENvbGxpc2lvbkdyb3VwLk9ic3RhY2xlIF4gQ29sbGlzaW9uR3JvdXAuQ2hhcmFjdGVyO1xyXG4gICAgICAgIC8vIHRoaXMuX2F0dGFjazEuXHJcbiAgICAgICAgdGhpcy5fYXR0YWNrMiA9IHRoaXMuTW9kZWwuZ2V0Q2hpbGRCeU5hbWUoXCJBdHRhY2syX1RSZXhcIikuZ2V0Q29tcG9uZW50KExheWEuUGh5c2ljc0NvbXBvbmVudCk7XHJcbiAgICAgICAgdGhpcy5fYXR0YWNrMi5jb2xsaXNpb25Hcm91cCA9IENvbGxpc2lvbkdyb3VwLkNoYXJhY3RlclxyXG4gICAgICAgIHRoaXMuX2F0dGFjazIuY2FuQ29sbGlkZVdpdGggPSBDb2xsaXNpb25Hcm91cC5BbGwgfCBDb2xsaXNpb25Hcm91cC5PYnN0YWNsZSBeIENvbGxpc2lvbkdyb3VwLkNoYXJhY3RlcjtcclxuXHJcbiAgICAgICAgTGF5YS50aW1lci5mcmFtZU9uY2UoMzAsdGhpcywoKT0+e1xyXG4gICAgICAgICAgICB0aGlzLmNoYXJhY3RlckN0ci5QZXJmb3JtVHJhbnNpdGlvbihUcmFuc2l0aW9uLlRyZXgyS2luZ2tvbmcpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS3ovazmjaLlvaLmgIFcIilcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBEb0JlZm9yZUVudGVyaW5nKGFueT86IGFueSkge1xyXG4gICAgICAgIHRoaXMuY2hhcmFjdGVyQ3RyLlNldEZvbGxvd09iaih0aGlzLlNwcml0ZTNEKTtcclxuICAgICAgICB0aGlzLkFuaW1hdG9yLnBsYXkoXCJFbmQgU2xlZXBpbmdcIik7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuVHJhbnNmb3JtRXZlbnQsIFtmYWxzZV0pO1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMucmVnRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLkF0dGFja0lucHV0LHRoaXMsdGhpcy5IaXRlZCk7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5yZWdFdmVudF9jc2pjKEV2ZW50RGVmX2NzamMuRW5lbXlEZWFkLHRoaXMsdGhpcy5FYXRpbmdFdmVudCk7XHJcblxyXG4gICAgICAgIC8v5Yid5q2l5rWL6K+V55SoMzBcclxuICAgICAgICB0aGlzLl9ocFN1bSA9IDEwXHJcbiAgICAgICAgdGhpcy5faHAgPSB0aGlzLl9ocFN1bVxyXG4gICAgICAgIC8vIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkNhbWVyYV9FdmVudF9jc2pjLCB7IENhbWVyYU9mZnNldDogbmV3IExheWEuVmVjdG9yMygwLCAyMCwgMTApLCBDYW1lcmFWaWV3Rm9yd2FyZDogMCB9KTtcclxuICAgIH1cclxuXHJcbiAgICBcclxuICAgIG9uRGlzYWJsZSgpXHJcbiAgICB7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5yZW1vdmVFdmVudF9jc2pjKEV2ZW50RGVmX2NzamMuQXR0YWNrSW5wdXQsdGhpcyx0aGlzLkhpdGVkKTtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlbW92ZUV2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5FbmVteURlYWQsdGhpcyx0aGlzLkVhdGluZ0V2ZW50KTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgRWF0aW5nRXZlbnQoKVxyXG4gICAge1xyXG4gICAgICAgIHRoaXMuX3N1YlN0YXRlID0gVFJleFN1YlN0YXRlLkVhdGluZztcclxuICAgICAgICBTb3VuZE1ncl9jc2pjLmluc3RhbmNlX2NzamMucGxheVNvdW5kX2NzamMoXCJFYXRpbmdcIik7XHJcbiAgICB9XHJcblxyXG4gICAgLyoq5Y+X5Ye7ICovXHJcbiAgICBwdWJsaWMgSGl0ZWQoZGF0YSl7XHJcblxyXG4gICAgICAgIGlmKGRhdGEubmFtZT09dGhpcy5vd25lci5uYW1lKVxyXG4gICAgICAgIHJldHVyblxyXG4gICAgICAgIGxldCBkaXMgPSBMYXlhLlZlY3RvcjMuZGlzdGFuY2UodGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucG9zaXRpb24sIGRhdGEudjMpO1xyXG4gICAgICAgIGlmKGRpcz44KVxyXG4gICAgICAgIHJldHVyblxyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLeaBkOm+meaUu+WHu1wiLGRpcylcclxuXHJcbiAgICAgICAgaWYgKHRoaXMuQ3VycmVudEFuaSAhPSBcIkVuZCBTbGVlcGluZ1wiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3JpZ2lkQm9keTNELmxpbmVhclZlbG9jaXR5ID0gbmV3IExheWEuVmVjdG9yMygwLDAsMCk7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gVFJleFN1YlN0YXRlLkhpdGVkO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHB1YmxpYyBEb0JlZm9yZUxlYXZpbmcoYW55PzogYW55KSB7XHJcbiAgICAgICAgdGhpcy5fc3ViU3RhdGUgPSBUUmV4U3ViU3RhdGUuSWRsZTtcclxuICAgICAgICB0aGlzLmNoYXJhY3RlckN0ci5TdG9wU291bmQoKTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWPjeW6lFxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0geyp9IFthbnldIFxyXG4gICAgICogXHJcbiAgICAgKiBAbWVtYmVyT2YgUm9ib3RTdGF0ZVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgQWN0KGFueT86IGFueSkge1xyXG4gICAgICAgIGlmKHRoaXMuQ3VycmVudEFuaSA9PSBcIlN0YXJ0IFNsaXBpbmdcIilcclxuICAgICAgICByZXR1cm4gO1xyXG4gICAgICAgIHRoaXMuX29uR3JvdW5kID0gdGhpcy5Pbkdyb3VuZENoZWNrKCk7XHJcbiAgICAgICAgc3VwZXIuQWN0KGFueSk7XHJcbiAgICAgICAgLy8gaWYgKHRoaXMuX2NsaW1iT3ZlciA+PSAwKSB7XHJcbiAgICAgICAgLy8gICAgIGlmICh0aGlzLl9zdWJTdGF0ZSA9PSBUUmV4U3ViU3RhdGUuTW92ZSB8fFxyXG4gICAgICAgIC8vICAgICAgICAgdGhpcy5fc3ViU3RhdGUgPT0gVFJleFN1YlN0YXRlLklkbGUgfHxcclxuICAgICAgICAvLyAgICAgKSB7XHJcbiAgICAgICAgLy8gICAgICAgICB0aGlzLl9jbGltYk92ZXIgLT0gTGF5YS50aW1lci5kZWx0YTs7XHJcbiAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgLyogaWYgKCF0aGlzLklzVHJhbnNmb3JtaW5nKSAgKi97XHJcbiAgICAgICAgICAgIHN3aXRjaCAodGhpcy5fc3ViU3RhdGUpIHtcclxuICAgICAgICAgICAgICAgIGNhc2UgVFJleFN1YlN0YXRlLklkbGU6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5JZGxlTWV0aG9kKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFRSZXhTdWJTdGF0ZS5Nb3ZlOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuTW92ZU1ldGhvZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBUUmV4U3ViU3RhdGUuQXR0YWNrOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQXR0YWNrTWV0aG9kKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFRSZXhTdWJTdGF0ZS5UcmFuczJQdGVyOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuVHJhc2Zvcm0yUHRlck1ldGhvZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICAgICAgY2FzZSBUUmV4U3ViU3RhdGUuSnVtcGluZzpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkp1bXBNZXRob2QoKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgVFJleFN1YlN0YXRlLkZhbGxpbmc6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5GYWxsaW5nKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFRSZXhTdWJTdGF0ZS5TcGl0RmlyZTpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlNwaXRGaXJlTWV0aG9kKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIFRSZXhTdWJTdGF0ZS5FYXRpbmc6XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5FYXRpbmdNZXRob2QoKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgVFJleFN1YlN0YXRlLkhpdGVkOlxyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuSGl0ZWRNZXRob2QoKTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgVFJleFN1YlN0YXRlLkRpZTpcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkRpZU1ldGhvZCgpO1xyXG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgQXR0YWNrTWV0aG9kKCkge1xyXG4gICAgICAgIHRoaXMuU3RvcE1vdmUoKTtcclxuICAgICAgICB0aGlzLmNoYXJhY3RlckN0ci5TdG9wU291bmQoKTtcclxuICAgICAgICB0aGlzLl9hdHRhY2tUaW1lciAtPSBMYXlhLnRpbWVyLmRlbHRhO1xyXG4gICAgICAgIGxldCBhbmdsZSA9IDA7XHJcbiAgICAgICAgbGV0IHNwZCA9IDE7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuQXR0YWNrSW5wdXQsIHsgbmFtZTp0aGlzLm93bmVyLm5hbWUsdjM6dGhpcy5TcHJpdGUzRC50cmFuc2Zvcm0ucG9zaXRpb24gfSlcclxuICAgICAgICBpZiAodGhpcy5Sb2NrZXJBeGlzICE9IG51bGwpIHtcclxuICAgICAgICAgICAgYW5nbGUgPSAoTWF0aC5hdGFuMih0aGlzLlJvY2tlckF4aXMueCwgdGhpcy5Sb2NrZXJBeGlzLnkpIC8gMy4xNCAqIDE4MCkgKyAxODA7XHJcbiAgICAgICAgICAgIHNwZCA9IE1hdGgubWluKDEsIE1hdGgubWF4KDAuNywgdGhpcy5Sb2NrZXJBeGlzLmRpc3RhbmNlKDAsIDApKSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLkN1cnJlbnRBbmkgPT0gXCJBdHRhY2sgSmF3XCIgJiYgdGhpcy5fYXR0YWNrVGltZXIgPiA2MDApIHtcclxuICAgICAgICAgICAgdGhpcy5UdXJuQW5kTW92ZShhbmdsZSwgc3BkICogNSk7XHJcbiAgICAgICAgICAgIHRoaXMuRW5hYmxlQXR0YWNrKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuQ3VycmVudEFuaSA9PSBcIkF0dGFjayBUYWlsXCIgJiYgdGhpcy5fYXR0YWNrVGltZXIgPCA4MDAgJiYgdGhpcy5fYXR0YWNrVGltZXIgPiA3MDApIHtcclxuICAgICAgICAgICAgdGhpcy5UdXJuQW5kTW92ZShhbmdsZSwgc3BkICogNSk7XHJcbiAgICAgICAgICAgIHRoaXMuRW5hYmxlQXR0YWNrKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLl9hdHRhY2tUaW1lciA8PSAyMDAgJiYgdGhpcy5BdHRhY2tJbnB1dCkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5DdXJyZW50QW5pID09IFwiQXR0YWNrIEphd1wiKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9hdHRhY2tUaW1lciA9IDE0MDA7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnBsYXkoXCJBdHRhY2sgVGFpbFwiKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuQ3VycmVudEFuaSA9IFwiQXR0YWNrIFRhaWxcIjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2F0dGFja1RpbWVyID0gMTAwMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuQW5pbWF0b3IucGxheShcIkF0dGFjayBKYXdcIik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkN1cnJlbnRBbmkgPSBcIkF0dGFjayBKYXdcIjtcclxuICAgICAgICAgICAgICAgIFNvdW5kTWdyX2NzamMuaW5zdGFuY2VfY3NqYy5wbGF5U291bmRfY3NqYyhcIkF0dGFjayBKYXdcIik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5fYXR0YWNrVGltZXIgPD0gMCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IFRSZXhTdWJTdGF0ZS5JZGxlO1xyXG4gICAgICAgICAgICB0aGlzLkRpc2FibGVBdHRhY2soKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBKdW1wTWV0aG9kKCkge1xyXG4gICAgICAgIC8vIGlmKHRoaXMuX2F0dGFja1RpbWVyPClcclxuICAgICAgICB0aGlzLmNoYXJhY3RlckN0ci5TdG9wU291bmQoKTtcclxuICAgICAgICBpZiAodGhpcy5DdXJyZW50QW5pICE9IFwiSnVtcGluZ1wiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQ3VycmVudEFuaSA9IFwiSnVtcGluZ1wiO1xyXG4gICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnNwZWVkID0gMTtcclxuICAgICAgICAgICAgdGhpcy5BbmltYXRvci5wbGF5KFwiSnVtcGluZ1wiLCAwLCAwKTtcclxuICAgICAgICAgICAgU291bmRNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLnBsYXlTb3VuZF9jc2pjKFwiTGFuZFwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5DdXJyZW50QW5pID09IFwiSnVtcGluZ1wiKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLkFuaW1hdG9yLmdldEN1cnJlbnRBbmltYXRvclBsYXlTdGF0ZSgwKS5ub3JtYWxpemVkVGltZSA+IDAuMFxyXG4gICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3JpZ2lkQm9keTNELmxpbmVhclZlbG9jaXR5ID0gbmV3IExheWEuVmVjdG9yMygwLCAyMCwgMCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IFRSZXhTdWJTdGF0ZS5GYWxsaW5nO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEZhbGxpbmcoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX29uR3JvdW5kKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t6JC95LiL56Kw5Yiw5Zyw6Z2iXCIpXHJcblxyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IFRSZXhTdWJTdGF0ZS5JZGxlO1xyXG4gICAgICAgICAgICBTb3VuZE1ncl9jc2pjLmluc3RhbmNlX2NzamMucGxheVNvdW5kX2NzamMoXCJMYW5kXCIpO1xyXG4gICAgICAgIH0vKiBcclxuICAgICAgICBlbHNlIGlmICh0aGlzLkZhY2VXYWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gVFJleFN1YlN0YXRlLkNsaW1iaW5nO1xyXG4gICAgICAgIH0gKi9cclxuICAgICAgICBpZiAodGhpcy5DdXJyZW50QW5pICE9IFwiTG9va2luZyBVcFwiICYmIHRoaXMuX3JpZ2lkQm9keTNELmxpbmVhclZlbG9jaXR5LnkgPCAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQ3VycmVudEFuaSA9IFwiTG9va2luZyBVcFwiO1xyXG4gICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnNwZWVkID0gMTtcclxuICAgICAgICAgICAgdGhpcy5BbmltYXRvci5jcm9zc0ZhZGUoXCJMb29raW5nIFVwXCIsIDAuNSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLlJvY2tlckF4aXMgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICBsZXQgYW5nbGUgPSAoTWF0aC5hdGFuMih0aGlzLlJvY2tlckF4aXMueCwgdGhpcy5Sb2NrZXJBeGlzLnkpIC8gMy4xNCAqIDE4MCkgKyAxODA7XHJcbiAgICAgICAgICAgIGxldCBzcGQgPSBNYXRoLm1pbigxLCBNYXRoLm1heCgwLjcsIHRoaXMuUm9ja2VyQXhpcy5kaXN0YW5jZSgwLCAwKSkpO1xyXG4gICAgICAgICAgICB0aGlzLlR1cm5BbmRNb3ZlKGFuZ2xlLCBzcGQgKiAyKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuQ2hhcmFjdGVyRmFsbGluZyk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDmmoLlgZxcclxuICAgICAqIFxyXG4gICAgICogXHJcbiAgICAgKiBAbWVtYmVyT2YgQ2hhcmFjdGVyQ3RyXHJcbiAgICAgKi9cclxuICAgIElkbGVNZXRob2QoKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9vbkdyb3VuZCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IFRSZXhTdWJTdGF0ZS5GYWxsaW5nO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLkZpcmVJbnB1dCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IFRSZXhTdWJTdGF0ZS5TcGl0RmlyZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5UcmFuc2Zvcm1JbnB1dCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IFRSZXhTdWJTdGF0ZS5UcmFuczJQdGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLkF0dGFja0lucHV0KSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gVFJleFN1YlN0YXRlLkF0dGFjaztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5Sb2NrZXJBeGlzICE9IG51bGwpIHtcclxuICAgICAgICAgICAgdGhpcy5fc3ViU3RhdGUgPSBUUmV4U3ViU3RhdGUuTW92ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5KdW1wSW5wdXQpIHtcclxuICAgICAgICAgICAgdGhpcy5fc3ViU3RhdGUgPSBUUmV4U3ViU3RhdGUuSnVtcGluZztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLkN1cnJlbnRBbmkgIT0gXCJJZGxlXCIpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLkN1cnJlbnRBbmkgIT0gXCJJZGxlXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkN1cnJlbnRBbmkgPSBcIklkbGVcIjtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnNwZWVkID0gMTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkFuaW1hdG9yLmNyb3NzRmFkZShcIklkbGVcIiwgMC4xKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlN0b3BNb3ZlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuQ2hhcmFjdGVyTm9ybWFsKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgTW92ZU1ldGhvZCgpIHtcclxuICAgICAgICAvKiBpZiAoIXRoaXMuT25Hcm91bmQpIHtcclxuICAgICAgICAgICAgdGhpcy5fc3ViU3RhdGUgPSBUUmV4U3ViU3RhdGUuRmFsbGluZztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5GYWNlV2FsbCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IFRSZXhTdWJTdGF0ZS5DbGltYmluZztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSAgKi9pZiAodGhpcy5UcmFuc2Zvcm1JbnB1dCkge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IFRSZXhTdWJTdGF0ZS5UcmFuczJQdGVyO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLkF0dGFja0lucHV0KSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gVFJleFN1YlN0YXRlLkF0dGFjaztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5KdW1wSW5wdXQpIHtcclxuICAgICAgICAgICAgdGhpcy5fc3ViU3RhdGUgPSBUUmV4U3ViU3RhdGUuSnVtcGluZztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5Sb2NrZXJBeGlzICE9IG51bGwpIHtcclxuICAgICAgICAgICAgbGV0IGFuZ2xlID0gKE1hdGguYXRhbjIodGhpcy5Sb2NrZXJBeGlzLngsIHRoaXMuUm9ja2VyQXhpcy55KSAvIDMuMTQgKiAxODApICsgMTgwO1xyXG4gICAgICAgICAgICAvLyBsZXQgc3BkID0gTWF0aC5taW4oMSwgTWF0aC5tYXgoMC43LCB0aGlzLlJvY2tlckF4aXMuZGlzdGFuY2UoMCwgMCkpKTtcclxuICAgICAgICAgICAgbGV0IHNwZCA9IE1hdGgubWluKDEsIE1hdGgubWF4KDAuMiwgdGhpcy5Sb2NrZXJBeGlzLmRpc3RhbmNlKDAsIDApKSk7XHJcbiAgICAgICAgICAgIC8qIGlmIChzcGQgPCAwLjUpIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLkN1cnJlbnRBbmkgIT0gXCJXYWxrXCIpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkFuaW1hdG9yLmNyb3NzRmFkZShcIldhbGtcIiwgMC4xKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkN1cnJlbnRBbmkgPSBcIldhbGtcIjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQW5pbWF0b3Iuc3BlZWQgPSBzcGQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSAqLyB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5DdXJyZW50QW5pICE9IFwiV2Fsa1wiKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5BbmltYXRvci5wbGF5KFwiV2Fsa1wiKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkN1cnJlbnRBbmkgPSBcIldhbGtcIjtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuQW5pbWF0b3Iuc3BlZWQgPSBzcGQ7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5UdXJuQW5kTW92ZShhbmdsZSwgc3BkICogMyk7XHJcbiAgICAgICAgICAgIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkNoYXJhY3Rlck5vcm1hbCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IFRSZXhTdWJTdGF0ZS5JZGxlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBUcmFzZm9ybTJQdGVyTWV0aG9kKCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0t5Y+Y6Lqr77yB77yB77yB77yB77yB77yB77yB77yBXCIpXHJcbiAgICAgICAgaWYgKHRoaXMuQ3VycmVudEFuaSAhPSBcIlN0YXJ0IFNsaXBpbmdcIikge1xyXG4gICAgICAgICAgICB0aGlzLkN1cnJlbnRBbmkgPSBcIlN0YXJ0IFNsaXBpbmdcIjtcclxuICAgICAgICAgICAgdGhpcy5BbmltYXRvci5zcGVlZCA9IDE7XHJcbiAgICAgICAgICAgIHRoaXMuQW5pbWF0b3IucGxheShcIlN0YXJ0IFNsaXBpbmdcIiwgMCwgMCk7XHJcbiAgICAgICAgICAgIFNvdW5kTWdyX2NzamMuaW5zdGFuY2VfY3NqYy5wbGF5U291bmRfY3NqYyhcIlJvYXIxXCIpO1xyXG4gICAgICAgICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5DaGFyYWN0ZXJGYWxsaW5nKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5DdXJyZW50QW5pID09IFwiU3RhcnQgU2xpcGluZ1wiICYmIHRoaXMuQW5pbWF0b3IuZ2V0Q3VycmVudEFuaW1hdG9yUGxheVN0YXRlKDApLm5vcm1hbGl6ZWRUaW1lID49IDEpIHtcclxuICAgICAgICAgICAgU291bmRNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLnBsYXlTb3VuZF9jc2pjKFwiUm9hcjJcIik7XHJcbiAgICAgICAgICAgIHRoaXMuY2hhcmFjdGVyQ3RyLlBlcmZvcm1UcmFuc2l0aW9uKFRyYW5zaXRpb24uVFJleDJQdGVyKTtcclxuXHJcblxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLlN0b3BNb3ZlKCk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIFN0b3BNb3ZlKCkge1xyXG4gICAgICAgIHRoaXMuX3JpZ2lkQm9keTNELmxpbmVhclZlbG9jaXR5ID0gTGF5YS5WZWN0b3IzLl9aRVJPLmNsb25lKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLypcclxuICAgICAgICDmnLrlmajop5LoibLovazlkJHnp7vliqggXHJcbiAgICAqL1xyXG4gICAgVHVybkFuZE1vdmUoYW5nbGU6IG51bWJlciwgc3BkOiBudW1iZXIpIHtcclxuICAgICAgICB0aGlzLlR1cm5CeUNhbWVyYShhbmdsZSk7XHJcbiAgICAgICAgdGhpcy5Nb3ZlRm9yd2FyZChzcGQpO1xyXG4gICAgICAgIC8vIGlmICh0aGlzLlR1cm5CeUNhbWVyYShhbmdsZSkpIHtcclxuICAgICAgICAvLyAgICAgdGhpcy5Nb3ZlRm9yd2FyZChzcGQpO1xyXG4gICAgICAgIC8vIH1cclxuICAgIH1cclxuXHJcblxyXG4gICAgVHVybihhbmdsZTogbnVtYmVyKSB7XHJcbiAgICAgICAgbGV0IGN1ckFuZ2xlID0gdGhpcy5Nb2RlbC50cmFuc2Zvcm0ubG9jYWxSb3RhdGlvbkV1bGVyWTtcclxuICAgICAgICBpZiAoTWF0aC5hYnMoY3VyQW5nbGUgLSBhbmdsZSkgPCAzKSByZXR1cm47XHJcbiAgICAgICAgaWYgKGN1ckFuZ2xlID4gYW5nbGUpIHtcclxuICAgICAgICAgICAgaWYgKGN1ckFuZ2xlIC0gYW5nbGUgPiAxODApIHtcclxuICAgICAgICAgICAgICAgIGN1ckFuZ2xlICs9IDM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjdXJBbmdsZSAtPSAzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGFuZ2xlID4gY3VyQW5nbGUpIHtcclxuICAgICAgICAgICAgaWYgKGFuZ2xlIC0gY3VyQW5nbGUgPiAxODApIHtcclxuICAgICAgICAgICAgICAgIGN1ckFuZ2xlIC09IDM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjdXJBbmdsZSArPSAzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGN1ckFuZ2xlID0gY3VyQW5nbGUgJSAzNjA7XHJcbiAgICAgICAgaWYgKGN1ckFuZ2xlIDwgMCkge1xyXG4gICAgICAgICAgICBjdXJBbmdsZSArPSAzNjA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuTW9kZWwudHJhbnNmb3JtLmxvY2FsUm90YXRpb25FdWxlclkgPSBjdXJBbmdsZVxyXG4gICAgfVxyXG5cclxuICAgIC8qXHJcbiAgICAgICAg5py65Zmo6KeS6Imy6L2s5ZCRIFxyXG4gICAgKi9cclxuICAgIFR1cm5CeUNhbWVyYShhbmdsZTogbnVtYmVyKSB7XHJcbiAgICAgICAgbGV0IGRpciA9IG5ldyBMYXlhLlZlY3RvcjMoKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuc3VidHJhY3QoU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5DYW1lcmEudHJhbnNmb3JtLnBvc2l0aW9uLCB0aGlzLk1vZGVsLnRyYW5zZm9ybS5wb3NpdGlvbiwgZGlyKTtcclxuICAgICAgICBkaXIueSA9IDA7XHJcbiAgICAgICAgbGV0IGFuZ2xlMiA9IChNYXRoLmF0YW4yKGRpci54LCBkaXIueikgLyBNYXRoLlBJICogMTgwKSArIDE4MDtcclxuICAgICAgICBhbmdsZSA9IChhbmdsZSArIGFuZ2xlMikgJSAzNjA7XHJcbiAgICAgICAgbGV0IGN1ckFuZ2xlID0gdGhpcy5Nb2RlbC50cmFuc2Zvcm0ubG9jYWxSb3RhdGlvbkV1bGVyWTtcclxuICAgICAgICBpZiAoTWF0aC5hYnMoY3VyQW5nbGUgLSBhbmdsZSkgPCAzKSByZXR1cm47XHJcbiAgICAgICAgaWYgKGN1ckFuZ2xlID4gYW5nbGUpIHtcclxuICAgICAgICAgICAgaWYgKGN1ckFuZ2xlIC0gYW5nbGUgPiAxODApIHtcclxuICAgICAgICAgICAgICAgIGN1ckFuZ2xlICs9IDM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjdXJBbmdsZSAtPSAzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKGFuZ2xlID4gY3VyQW5nbGUpIHtcclxuICAgICAgICAgICAgaWYgKGFuZ2xlIC0gY3VyQW5nbGUgPiAxODApIHtcclxuICAgICAgICAgICAgICAgIGN1ckFuZ2xlIC09IDM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBjdXJBbmdsZSArPSAzO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGN1ckFuZ2xlID0gY3VyQW5nbGUgJSAzNjA7XHJcbiAgICAgICAgaWYgKGN1ckFuZ2xlIDwgMCkge1xyXG4gICAgICAgICAgICBjdXJBbmdsZSArPSAzNjA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuTW9kZWwudHJhbnNmb3JtLmxvY2FsUm90YXRpb25FdWxlclkgPSBjdXJBbmdsZTtcclxuICAgIH1cclxuXHJcbiAgICAvKlxyXG4gICAgICAgIOWQkeWJjeenu+WKqCBcclxuICAgICAqL1xyXG4gICAgTW92ZUZvcndhcmQoc3BkOiBudW1iZXIpIHtcclxuICAgICAgICBsZXQgY3VyQW5nbGUgPSB0aGlzLk1vZGVsLnRyYW5zZm9ybS5sb2NhbFJvdGF0aW9uRXVsZXJZICogMy4xNCAvIDE4MDtcclxuICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5saW5lYXJWZWxvY2l0eSA9IG5ldyBMYXlhLlZlY3RvcjMoTWF0aC5zaW4oY3VyQW5nbGUpICogMyAqIHNwZCwgdGhpcy5fcmlnaWRCb2R5M0QubGluZWFyVmVsb2NpdHkueSwgTWF0aC5jb3MoY3VyQW5nbGUpICogMyAqIHNwZCk7XHJcbiAgICB9XHJcblxyXG4gICAgRW5hYmxlQXR0YWNrKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5fYXR0YWNrMS5lbmFibGVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2F0dGFjazEuZW5hYmxlZCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICghdGhpcy5fYXR0YWNrMi5lbmFibGVkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2F0dGFjazIuZW5hYmxlZCA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIERpc2FibGVBdHRhY2soKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2F0dGFjazEuZW5hYmxlZCkge1xyXG4gICAgICAgICAgICB0aGlzLl9hdHRhY2sxLmVuYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuX2F0dGFjazIuZW5hYmxlZCkge1xyXG4gICAgICAgICAgICB0aGlzLl9hdHRhY2syLmVuYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgT25Hcm91bmRDaGVjaygpOiBib29sZWFuIHtcclxuICAgICAgICBsZXQgdXAgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDUsIDApO1xyXG4gICAgICAgIGxldCBkb3duID0gbmV3IExheWEuVmVjdG9yMygwLCAtMC4xLCAwKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuYWRkKHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uLCBkb3duLCBkb3duKTtcclxuICAgICAgICBMYXlhLlZlY3RvcjMuYWRkKHRoaXMuU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uLCB1cCwgdXApO1xyXG4gICAgICAgIGxldCBoaXRSZXN1bHRzOiBMYXlhLkhpdFJlc3VsdCA9IG5ldyBMYXlhLkhpdFJlc3VsdCgpO1xyXG4gICAgICAgIGxldCBjb2xsaXNpb25Hcm91cCA9IENvbGxpc2lvbkdyb3VwLkNoYXJhY3RlcjtcclxuICAgICAgICBsZXQgY2FuQ29sbGlzaW9uV2l0aCA9IENvbGxpc2lvbkdyb3VwLk5vbmUgfCBDb2xsaXNpb25Hcm91cC5Hcm91bmQgfCBDb2xsaXNpb25Hcm91cC5PYnN0YWNsZTtcclxuICAgICAgICBsZXQgcmVzID0gU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5DdXJyZW50U2NlbmUucGh5c2ljc1NpbXVsYXRpb24ucmF5Y2FzdEZyb21Ubyh1cCwgZG93biwgaGl0UmVzdWx0cywgY29sbGlzaW9uR3JvdXAsIGNhbkNvbGxpc2lvbldpdGgpO1xyXG4gICAgICAgIHJldHVybiByZXM7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8vIEZpcmVSYXkoKSB7XHJcbiAgICAvLyAgICAgbGV0IGZyb250ID0gbmV3IExheWEuVmVjdG9yMygpO1xyXG4gICAgLy8gICAgIGxldCBjdXIgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgLy8gICAgIHRoaXMuTW9kZWwudHJhbnNmb3JtLmdldEZvcndhcmQoZnJvbnQpO1xyXG4gICAgLy8gICAgIExheWEuVmVjdG9yMy5ub3JtYWxpemUoZnJvbnQsIGZyb250KTtcclxuICAgIC8vICAgICBMYXlhLlZlY3RvcjMuc2NhbGUoZnJvbnQsIC0xMCwgZnJvbnQpO1xyXG4gICAgLy8gICAgIExheWEuVmVjdG9yMy5hZGQodGhpcy5Nb2RlbC50cmFuc2Zvcm0ucG9zaXRpb24sIGZyb250LCBmcm9udCk7XHJcbiAgICAvLyAgICAgbGV0IGhpdFJlc3VsdHM6IEFycmF5PExheWEuSGl0UmVzdWx0PiA9IFtdO1xyXG4gICAgLy8gICAgIGxldCBjb2xsaXNpb25Hcm91cCA9IENvbGxpc2lvbkdyb3VwLkNoYXJhY3RlcjtcclxuICAgIC8vICAgICBsZXQgY2FuQ29sbGlzaW9uV2l0aCA9IENvbGxpc2lvbkdyb3VwLk9ic3RhY2xlIHwgQ29sbGlzaW9uR3JvdXAuR3JvdW5kO1xyXG4gICAgLy8gICAgIGxldCBjb2xsaWRlclNoYXBlID0gbmV3IExheWEuU3BoZXJlQ29sbGlkZXJTaGFwZSg1KTtcclxuICAgIC8vICAgICBsZXQgcmVzID0gU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5DdXJyZW50U2NlbmUucGh5c2ljc1NpbXVsYXRpb24uc2hhcGVDYXN0QWxsKGNvbGxpZGVyU2hhcGUsIHRoaXMuTW9kZWwudHJhbnNmb3JtLnBvc2l0aW9uLCBmcm9udCxcclxuICAgIC8vICAgICAgICAgaGl0UmVzdWx0cywgTGF5YS5RdWF0ZXJuaW9uLk5BTiwgTGF5YS5RdWF0ZXJuaW9uLk5BTiwgY29sbGlzaW9uR3JvdXAsIGNhbkNvbGxpc2lvbldpdGgsIDEpO1xyXG4gICAgLy8gICAgIGlmIChyZXMpIHtcclxuICAgIC8vICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGhpdFJlc3VsdHMubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAvLyAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gaGl0UmVzdWx0c1tpbmRleF07XHJcbiAgICAvLyAgICAgICAgIH1cclxuICAgIC8vICAgICB9XHJcbiAgICAvLyAgICAgcmV0dXJuIHJlcztcclxuICAgIC8vIH1cclxuXHJcbiAgICBwcml2YXRlIF9maXJlVGltZXI6IG51bWJlciA9IDA7XHJcbiAgICBTcGl0RmlyZU1ldGhvZCgpIHtcclxuICAgICAgICBpZiAodGhpcy5GaXJlSW5wdXQpIHtcclxuICAgICAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuQXR0YWNrSW5wdXQsIHsgbmFtZTp0aGlzLm93bmVyLm5hbWUsdjM6dGhpcy5fZmlyZSAudHJhbnNmb3JtLnBvc2l0aW9ufSlcclxuICAgICAgICAgICAgdGhpcy5fZmlyZVRpbWVyID0gMzAwO1xyXG4gICAgICAgICAgICB0aGlzLlN0b3BNb3ZlKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY2hhcmFjdGVyQ3RyLkZpcmVTb3VuZCgxKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuQ3VycmVudEFuaSAhPSBcIlJvYXJuaW5nXCIpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuQ3VycmVudEFuaSA9IFwiUm9hcm5pbmdcIjtcclxuICAgICAgICAgICAgICAgIHRoaXMuQW5pbWF0b3Iuc3BlZWQgPSAxO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5BbmltYXRvci5wbGF5KFwiUm9hcm5pbmdcIiwgMCwgMCk7XHJcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMjAwLCB0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZmlyZS5hY3RpdmUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2ZpcmVDb2wuZW5hYmxlZCA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLlJvY2tlckF4aXMgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5Nb2RlbC50cmFuc2Zvcm0ubG9jYWxSb3RhdGlvbkV1bGVyWSAtPSB0aGlzLlJvY2tlckF4aXMueCAqIDM7XHJcbiAgICAgICAgICAgICAgICAvLyB0aGlzLl9maXJlLnRyYW5zZm9ybS5sb2NhbFJvdGF0aW9uRXVsZXJZID0gdGhpcy5Nb2RlbC50cmFuc2Zvcm0ubG9jYWxSb3RhdGlvbkV1bGVyWTtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9maXJlQ29sLmNvbGxpZGVyU2hhcGUgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2ZpcmVDb2wuY29sbGlkZXJTaGFwZS5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBsZXQgc2hhcGUgPSBuZXcgTGF5YS5Cb3hDb2xsaWRlclNoYXBlKDUsIDYsIDMwKTtcclxuICAgICAgICAgICAgICAgIHNoYXBlLmxvY2FsT2Zmc2V0ID0gbmV3IExheWEuVmVjdG9yMygwLCAtMiwgMTUpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZmlyZUNvbC5jb2xsaWRlclNoYXBlID0gc2hhcGU7XHJcbiAgICAgICAgICAgICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5DaGFyYWN0ZXJOb3JtYWwpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIC8vIHRoaXMuRmlyZVJheSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2ZpcmVUaW1lciA+IDApIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2ZpcmVUaW1lciAtPSBMYXlhLnRpbWVyLmRlbHRhO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuY2hhcmFjdGVyQ3RyLlN0b3BTb3VuZCgpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fZmlyZVRpbWVyID4gMCkgcmV0dXJuO1xyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMTAwMCwgdGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jaGFyYWN0ZXJDdHIuU3RvcFNvdW5kKCk7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIHRoaXMuX2ZpcmUuYWN0aXZlID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuX2ZpcmVDb2wuZW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5UcmFuc2Zvcm1JbnB1dCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fc3ViU3RhdGUgPSBUUmV4U3ViU3RhdGUuVHJhbnMyUHRlcjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmICh0aGlzLkF0dGFja0lucHV0KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IFRSZXhTdWJTdGF0ZS5BdHRhY2s7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAodGhpcy5KdW1wSW5wdXQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gVFJleFN1YlN0YXRlLkp1bXBpbmc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IFRSZXhTdWJTdGF0ZS5JZGxlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uQ29sbGlzaW9uRW50ZXIoY29sbGlzaW9uOiBMYXlhLkNvbGxpc2lvbikge1xyXG4gICAgICAgIC8vIGxldCBlbmVteSA9IGNvbGxpc2lvbi5vdGhlci5vd25lciBhcyBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgIC8vIGlmIChlbmVteS5uYW1lLnNlYXJjaChcIkVuZW15XCIpID4gLTEpIHtcclxuICAgICAgICAvLyAgICAgdGhpcy5fc3ViU3RhdGUgPSBUUmV4U3ViU3RhdGUuRWF0aW5nO1xyXG4gICAgICAgIC8vICAgICBTb3VuZE1ncl9jc2pjLmluc3RhbmNlX2NzamMucGxheVNvdW5kX2NzamMoXCJFYXRpbmdcIik7XHJcbiAgICAgICAgLy8gfVxyXG5cclxuICAgICAgICAvLyBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS3miJHmmK/mgZDpvpnmlLvlh7vmiJFcIixlbmVteS5uYW1lKVxyXG4gICAgICAgIC8vIGlmKClcclxuICAgIH1cclxuXHJcbiAgICBEaWVNZXRob2QoKVxyXG4gICAge1xyXG4gICAgICAgIGlmICh0aGlzLkN1cnJlbnRBbmkgIT0gXCJTdGFydCBTbGlwaW5nXCIpIHtcclxuICAgICAgICAgICAgdGhpcy5DdXJyZW50QW5pID0gXCJTdGFydCBTbGlwaW5nXCI7XHJcbiAgICAgICAgICAgIHRoaXMuQW5pbWF0b3Iuc3BlZWQgPSAxO1xyXG4gICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnBsYXkoXCJTdGFydCBTbGlwaW5nXCIpO1xyXG4gICAgICAgICAgICB0aGlzLl9yaWdpZEJvZHkzRC5saW5lYXJWZWxvY2l0eSA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMCwgMCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvKirlj5flh7sgKi9cclxuICAgIEhpdGVkTWV0aG9kKCl7XHJcbiAgICAgICAgaWYgKHRoaXMuQ3VycmVudEFuaSAhPSBcIkVuZCBTbGVlcGluZ1wiKSB7XHJcbiAgICAgICAgICAgIHRoaXMuQ3VycmVudEFuaSA9IFwiRW5kIFNsZWVwaW5nXCI7XHJcbiAgICAgICAgICAgIHRoaXMuQW5pbWF0b3Iuc3BlZWQgPSAxO1xyXG4gICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnBsYXkoXCJFbmQgU2xlZXBpbmdcIik7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0t5Y+R6YCB5pS75Ye75LqL5Lu2XCIpXHJcblxyXG4gICAgICAgICAgICB0aGlzLl9ocD10aGlzLl9ocD4wP3RoaXMuX2hwLTE6MTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0tLS0tLS0tLS0tLWhwXCIsdGhpcy5faHApXHJcbiAgICAgICAgICAgIGlmKHRoaXMuX2hwPD0wKVxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS0tLS0tLeatu+S6oVwiKVxyXG4gICAgICAgICAgICAgICAgU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5Cb3NzVmlzaWJsZSA9IGZhbHNlXHJcbiAgICAgICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnBsYXkoXCJTdGFydCBTbGlwaW5nXCIpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5DdXJyZW50QW5pID0gXCJTdGFydCBTbGlwaW5nXCI7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IFRSZXhTdWJTdGF0ZS5EaWU7XHJcbiAgICAgICAgICAgICAgICByZXR1cm5cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLl9pc0hpdGVkID0gdHJ1ZTtcclxuICAgICAgICAgICAgLy8gY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0tLS0t5omj6KGAXCIsdGhpcy5faHApO1xyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UodGhpcy5BbmltYXRvci5nZXRDdXJyZW50QW5pbWF0b3JQbGF5U3RhdGUoMCkuZHVyYXRpb24qNTAwLHRoaXMsKCk9PntcclxuICAgICAgICAgICAgICAgIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkNoYXJhY3Rlck5vcm1hbCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9zdWJTdGF0ZSA9IFRSZXhTdWJTdGF0ZS5JZGxlO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcmlnaWRCb2R5M0QubGluZWFyVmVsb2NpdHkgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5faXNIaXRlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICAvLyBlbHNlIGlmICgodGhpcy5DdXJyZW50QW5pID09IFwiRW5kIFNsZWVwaW5nXCIgKSYmIHRoaXMuQW5pbWF0b3IuZ2V0Q3VycmVudEFuaW1hdG9yUGxheVN0YXRlKDApLm5vcm1hbGl6ZWRUaW1lID49IDEpIHtcclxuICAgICAgICAvLyAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuQ2hhcmFjdGVyTm9ybWFsKTtcclxuICAgICAgICAvLyAgICAgdGhpcy5fc3ViU3RhdGUgPSBUUmV4U3ViU3RhdGUuSWRsZTtcclxuICAgICAgICAvLyAgICAgdGhpcy5fcmlnaWRCb2R5M0QubGluZWFyVmVsb2NpdHkgPSBuZXcgTGF5YS5WZWN0b3IzKDAsIDAsIDApO1xyXG4gICAgICAgIC8vIH1cclxufVxyXG5cclxuICAgIC8qKui/m+mjnyAqL1xyXG4gICAgRWF0aW5nTWV0aG9kKCkge1xyXG4gICAgICAgIHRoaXMuY2hhcmFjdGVyQ3RyLlN0b3BTb3VuZCgpO1xyXG4gICAgICAgIGlmICh0aGlzLkN1cnJlbnRBbmkgIT0gXCJFYXRpbmdcIikge1xyXG4gICAgICAgICAgICB0aGlzLkN1cnJlbnRBbmkgPSBcIkVhdGluZ1wiO1xyXG4gICAgICAgICAgICB0aGlzLkFuaW1hdG9yLnNwZWVkID0gMTtcclxuICAgICAgICAgICAgdGhpcy5BbmltYXRvci5wbGF5KFwiRWF0aW5nXCIsIDAsIDApO1xyXG4gICAgICAgICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5DaGFyYWN0ZXJGYWxsaW5nKTtcclxuICAgICAgICAgICAgdGhpcy5TdG9wTW92ZSgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLkN1cnJlbnRBbmkgPT0gXCJFYXRpbmdcIiAmJiB0aGlzLkFuaW1hdG9yLmdldEN1cnJlbnRBbmltYXRvclBsYXlTdGF0ZSgwKS5ub3JtYWxpemVkVGltZSA+PSAxKSB7XHJcbiAgICAgICAgICAgIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkNoYXJhY3Rlck5vcm1hbCk7XHJcbiAgICAgICAgICAgIHRoaXMuX3N1YlN0YXRlID0gVFJleFN1YlN0YXRlLklkbGU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uRGVzdHJveSgpIHtcclxuICAgICAgICB0aGlzLmNoYXJhY3RlckN0ci5TdG9wU291bmQoKTtcclxuXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgeyBTdGF0ZUlELCBUcmFuc2l0aW9uIH0gZnJvbSBcIi4vRnNtRW51bVwiO1xyXG5pbXBvcnQgRlNNU3RhdGUgZnJvbSBcIi4vRnNtU3RhdGVcIjtcclxuaW1wb3J0IENoYXJhY3RlckN0ciBmcm9tIFwiLi4vQ2hhcmFjdGVyL0NoYXJhY3RlckN0clwiO1xyXG5cclxuLyoqXHJcbkEgRmluaXRlIFN0YXRlIE1hY2hpbmUgU3lzdGVtIGJhc2VkIG9uIENoYXB0ZXIgMy4xIG9mIEdhbWUgUHJvZ3JhbW1pbmcgR2VtcyAxIGJ5IEVyaWMgRHlic2FuZFxyXG4gXHJcbldyaXR0ZW4gYnkgUm9iZXJ0byBDZXphciBCaWFuY2hpbmksIEp1bHkgMjAxMFxyXG4gXHJcbiBcclxuSG93IHRvIHVzZTpcclxuXHQxLiBQbGFjZSB0aGUgbGFiZWxzIGZvciB0aGUgdHJhbnNpdGlvbnMgYW5kIHRoZSBzdGF0ZXMgb2YgdGhlIEZpbml0ZSBTdGF0ZSBTeXN0ZW1cclxuXHQgICAgaW4gdGhlIGNvcnJlc3BvbmRpbmcgZW51bXMuXHJcbiBcclxuXHQyLiBXcml0ZSBuZXcgY2xhc3MoZXMpIGluaGVyaXRpbmcgZnJvbSBGU01TdGF0ZSBhbmQgZmlsbCBlYWNoIG9uZSB3aXRoIHBhaXJzICh0cmFuc2l0aW9uLXN0YXRlKS5cclxuXHQgICAgVGhlc2UgcGFpcnMgcmVwcmVzZW50IHRoZSBzdGF0ZSBTMiB0aGUgRlNNU3lzdGVtIHNob3VsZCBiZSBpZiB3aGlsZSBiZWluZyBvbiBzdGF0ZSBTMSwgYVxyXG5cdCAgICB0cmFuc2l0aW9uIFQgaXMgZmlyZWQgYW5kIHN0YXRlIFMxIGhhcyBhIHRyYW5zaXRpb24gZnJvbSBpdCB0byBTMi4gUmVtZW1iZXIgdGhpcyBpcyBhIERldGVybWluaXN0aWMgRlNNLiBcclxuXHQgICAgWW91IGNhbid0IGhhdmUgb25lIHRyYW5zaXRpb24gbGVhZGluZyB0byB0d28gZGlmZmVyZW50IHN0YXRlcy5cclxuIFxyXG5cdCAgIE1ldGhvZCBSZWFzb24gaXMgdXNlZCB0byBkZXRlcm1pbmUgd2hpY2ggdHJhbnNpdGlvbiBzaG91bGQgYmUgZmlyZWQuXHJcblx0ICAgWW91IGNhbiB3cml0ZSB0aGUgY29kZSB0byBmaXJlIHRyYW5zaXRpb25zIGluIGFub3RoZXIgcGxhY2UsIGFuZCBsZWF2ZSB0aGlzIG1ldGhvZCBlbXB0eSBpZiB5b3VcclxuXHQgICBmZWVsIGl0J3MgbW9yZSBhcHByb3ByaWF0ZSB0byB5b3VyIHByb2plY3QuXHJcbiBcclxuXHQgICBNZXRob2QgQWN0IGhhcyB0aGUgY29kZSB0byBwZXJmb3JtIHRoZSBhY3Rpb25zIHRoZSBOUEMgaXMgc3VwcG9zZWQgZG8gaWYgaXQncyBvbiB0aGlzIHN0YXRlLlxyXG5cdCAgIFlvdSBjYW4gd3JpdGUgdGhlIGNvZGUgZm9yIHRoZSBhY3Rpb25zIGluIGFub3RoZXIgcGxhY2UsIGFuZCBsZWF2ZSB0aGlzIG1ldGhvZCBlbXB0eSBpZiB5b3VcclxuXHQgICBmZWVsIGl0J3MgbW9yZSBhcHByb3ByaWF0ZSB0byB5b3VyIHByb2plY3QuXHJcbiBcclxuXHQzLiBDcmVhdGUgYW4gaW5zdGFuY2Ugb2YgRlNNU3lzdGVtIGNsYXNzIGFuZCBhZGQgdGhlIHN0YXRlcyB0byBpdC5cclxuIFxyXG5cdDQuIENhbGwgUmVhc29uIGFuZCBBY3QgKG9yIHdoaWNoZXZlciBtZXRob2RzIHlvdSBoYXZlIGZvciBmaXJpbmcgdHJhbnNpdGlvbnMgYW5kIG1ha2luZyB0aGUgTlBDc1xyXG5cdCAgICAgYmVoYXZlIGluIHlvdXIgZ2FtZSkgZnJvbSB5b3VyIFVwZGF0ZSBvciBGaXhlZFVwZGF0ZSBtZXRob2RzLlxyXG4gXHJcblx0QXN5bmNocm9ub3VzIHRyYW5zaXRpb25zIGZyb20gVW5pdHkgRW5naW5lLCBsaWtlIE9uVHJpZ2dlckVudGVyLCBTZW5kTWVzc2FnZSwgY2FuIGFsc28gYmUgdXNlZCwgXHJcblx0anVzdCBjYWxsIHRoZSBNZXRob2QgUGVyZm9ybVRyYW5zaXRpb24gZnJvbSB5b3VyIEZTTVN5c3RlbSBpbnN0YW5jZSB3aXRoIHRoZSBjb3JyZWN0IFRyYW5zaXRpb24gXHJcblx0d2hlbiB0aGUgZXZlbnQgb2NjdXJzLlxyXG4gXHJcbiBcclxuIFxyXG5USEUgU09GVFdBUkUgSVMgUFJPVklERUQgXCJBUyBJU1wiLCBXSVRIT1VUIFdBUlJBTlRZIE9GIEFOWSBLSU5ELCBFWFBSRVNTIE9SIElNUExJRUQsIFxyXG5JTkNMVURJTkcgQlVUIE5PVCBMSU1JVEVEIFRPIFRIRSBXQVJSQU5USUVTIE9GIE1FUkNIQU5UQUJJTElUWSwgRklUTkVTUyBGT1IgQSBQQVJUSUNVTEFSIFBVUlBPU0UgXHJcbkFORCBOT04tSU5GUklOR0VNRU5ULiBJTiBOTyBFVkVOVCBTSEFMTCBUSEUgQVVUSE9SUyBPUiBDT1BZUklHSFQgSE9MREVSUyBCRSBMSUFCTEUgRk9SIEFOWSBDTEFJTSwgXHJcbkRBTUFHRVMgT1IgT1RIRVIgTElBQklMSVRZLCBXSEVUSEVSIElOIEFOIEFDVElPTiBPRiBDT05UUkFDVCwgVE9SVCBPUiBPVEhFUldJU0UsIEFSSVNJTkcgRlJPTSwgXHJcbk9VVCBPRiBPUiBJTiBDT05ORUNUSU9OIFdJVEggVEhFIFNPRlRXQVJFIE9SIFRIRSBVU0UgT1IgT1RIRVIgREVBTElOR1MgSU4gVEhFIFNPRlRXQVJFLlxyXG4qL1xyXG5cclxuXHJcbi8vLyA8c3VtbWFyeT5cclxuLy8vIEZTTVN5c3RlbSBjbGFzcyByZXByZXNlbnRzIHRoZSBGaW5pdGUgU3RhdGUgTWFjaGluZSBjbGFzcy5cclxuLy8vICBJdCBoYXMgYSBMaXN0IHdpdGggdGhlIFN0YXRlcyB0aGUgTlBDIGhhcyBhbmQgbWV0aG9kcyB0byBhZGQsXHJcbi8vLyAgZGVsZXRlIGEgc3RhdGUsIGFuZCB0byBjaGFuZ2UgdGhlIGN1cnJlbnQgc3RhdGUgdGhlIE1hY2hpbmUgaXMgb24uXHJcbi8vLyA8L3N1bW1hcnk+XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZTTVN5c3RlbSB7XHJcbiAgICBwcml2YXRlIHN0YXRlczogQXJyYXk8RlNNU3RhdGU+O1xyXG4gICAgcHJpdmF0ZSBjaGFyYWN0ZXJDdHI6IENoYXJhY3RlckN0cjtcclxuICAgIC8vIFRoZSBvbmx5IHdheSBvbmUgY2FuIGNoYW5nZSB0aGUgc3RhdGUgb2YgdGhlIEZTTSBpcyBieSBwZXJmb3JtaW5nIGEgdHJhbnNpdGlvblxyXG4gICAgLy8gRG9uJ3QgY2hhbmdlIHRoZSBDdXJyZW50U3RhdGUgZGlyZWN0bHlcclxuICAgIHByaXZhdGUgY3VycmVudFN0YXRlSUQ6IFN0YXRlSUQ7XHJcbiAgICBwdWJsaWMgZ2V0IEN1cnJlbnRTdGF0ZUlEKCk6IFN0YXRlSUQgeyB7IHJldHVybiB0aGlzLmN1cnJlbnRTdGF0ZUlEOyB9IH1cclxuICAgIHByaXZhdGUgY3VycmVudFN0YXRlOiBGU01TdGF0ZTtcclxuICAgIHB1YmxpYyBnZXQgQ3VycmVudFN0YXRlKCk6IEZTTVN0YXRlIHsgeyByZXR1cm4gdGhpcy5jdXJyZW50U3RhdGU7IH0gfVxyXG5cclxuICAgIGNvbnN0cnVjdG9yKGNoYXJhY3RlckN0cjogQ2hhcmFjdGVyQ3RyKSB7XHJcbiAgICAgICAgdGhpcy5jaGFyYWN0ZXJDdHIgPSBjaGFyYWN0ZXJDdHI7XHJcbiAgICAgICAgdGhpcy5zdGF0ZXMgPSBuZXcgQXJyYXk8RlNNU3RhdGU+KCk7XHJcbiAgICB9XHJcblxyXG4gICAgLy8vIDxzdW1tYXJ5PlxyXG4gICAgLy8vIFRoaXMgbWV0aG9kIHBsYWNlcyBuZXcgc3RhdGVzIGluc2lkZSB0aGUgRlNNLFxyXG4gICAgLy8vIG9yIHByaW50cyBhbiBFUlJPUiBtZXNzYWdlIGlmIHRoZSBzdGF0ZSB3YXMgYWxyZWFkeSBpbnNpZGUgdGhlIExpc3QuXHJcbiAgICAvLy8gRmlyc3Qgc3RhdGUgYWRkZWQgaXMgYWxzbyB0aGUgaW5pdGlhbCBzdGF0ZS5cclxuICAgIC8vLyA8L3N1bW1hcnk+XHJcbiAgICBwdWJsaWMgQWRkU3RhdGUoczogRlNNU3RhdGUpOiB2b2lkIHtcclxuICAgICAgICAvLyBDaGVjayBmb3IgTnVsbCByZWZlcmVuY2UgYmVmb3JlIGRlbGV0aW5nXHJcbiAgICAgICAgaWYgKHMgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRlNNIEVSUk9SOiBOdWxsIHJlZmVyZW5jZSBpcyBub3QgYWxsb3dlZFwiKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIEZpcnN0IFN0YXRlIGluc2VydGVkIGlzIGFsc28gdGhlIEluaXRpYWwgc3RhdGUsXHJcbiAgICAgICAgLy8gICB0aGUgc3RhdGUgdGhlIG1hY2hpbmUgaXMgaW4gd2hlbiB0aGUgc2ltdWxhdGlvbiBiZWdpbnNcclxuICAgICAgICBpZiAodGhpcy5zdGF0ZXMubGVuZ3RoID09IDApIHtcclxuICAgICAgICAgICAgcy5TZXRDdHIodGhpcy5jaGFyYWN0ZXJDdHIpO1xyXG4gICAgICAgICAgICB0aGlzLnN0YXRlcy5wdXNoKHMpO1xyXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRTdGF0ZSA9IHM7XHJcbiAgICAgICAgICAgIHRoaXMuY3VycmVudFN0YXRlSUQgPSBzLklEO1xyXG4gICAgICAgICAgICB0aGlzLmN1cnJlbnRTdGF0ZS5Eb0JlZm9yZUVudGVyaW5nKCk7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIEFkZCB0aGUgc3RhdGUgdG8gdGhlIExpc3QgaWYgaXQncyBub3QgaW5zaWRlIGl0XHJcbiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHRoaXMuc3RhdGVzLmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICBjb25zdCBzdGF0ZSA9IHRoaXMuc3RhdGVzW2luZGV4XTtcclxuICAgICAgICAgICAgaWYgKHN0YXRlLklEID09IHMuSUQpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGU00gRVJST1I6IEltcG9zc2libGUgdG8gYWRkIHN0YXRlIFwiICsgcy5JRCArIFwiIGJlY2F1c2Ugc3RhdGUgaGFzIGFscmVhZHkgYmVlbiBhZGRlZFwiKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBzLlNldEN0cih0aGlzLmNoYXJhY3RlckN0cik7XHJcbiAgICAgICAgdGhpcy5zdGF0ZXMucHVzaChzKTtcclxuICAgIH1cclxuXHJcbiAgICAvLy8gPHN1bW1hcnk+XHJcbiAgICAvLy8gVGhpcyBtZXRob2QgZGVsZXRlIGEgc3RhdGUgZnJvbSB0aGUgRlNNIExpc3QgaWYgaXQgZXhpc3RzLCBcclxuICAgIC8vLyAgIG9yIHByaW50cyBhbiBFUlJPUiBtZXNzYWdlIGlmIHRoZSBzdGF0ZSB3YXMgbm90IG9uIHRoZSBMaXN0LlxyXG4gICAgLy8vIDwvc3VtbWFyeT5cclxuICAgIHB1YmxpYyBEZWxldGVTdGF0ZShpZDogU3RhdGVJRCk6IHZvaWQge1xyXG4gICAgICAgIC8vIENoZWNrIGZvciBOdWxsU3RhdGUgYmVmb3JlIGRlbGV0aW5nXHJcbiAgICAgICAgaWYgKGlkID09IFN0YXRlSUQuTnVsbFN0YXRlSUQpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkZTTSBFUlJPUjogTnVsbFN0YXRlSUQgaXMgbm90IGFsbG93ZWQgZm9yIGEgcmVhbCBzdGF0ZVwiKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgLy8gU2VhcmNoIHRoZSBMaXN0IGFuZCBkZWxldGUgdGhlIHN0YXRlIGlmIGl0J3MgaW5zaWRlIGl0XHJcbiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IHRoaXMuc3RhdGVzLmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICBjb25zdCBzdGF0ZSA9IHRoaXMuc3RhdGVzW2luZGV4XTtcclxuICAgICAgICAgICAgaWYgKHN0YXRlLklEID09IGlkKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnN0YXRlcy5zcGxpY2UoaW5kZXgsIDEpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGU00gRVJST1I6IEltcG9zc2libGUgdG8gZGVsZXRlIHN0YXRlIFwiICsgaWQgKyBcIi4gSXQgd2FzIG5vdCBvbiB0aGUgbGlzdCBvZiBzdGF0ZXNcIik7XHJcbiAgICB9XHJcblxyXG4gICAgLy8vIDxzdW1tYXJ5PlxyXG4gICAgLy8vIFRoaXMgbWV0aG9kIHRyaWVzIHRvIGNoYW5nZSB0aGUgc3RhdGUgdGhlIEZTTSBpcyBpbiBiYXNlZCBvblxyXG4gICAgLy8vIHRoZSBjdXJyZW50IHN0YXRlIGFuZCB0aGUgdHJhbnNpdGlvbiBwYXNzZWQuIElmIGN1cnJlbnQgc3RhdGVcclxuICAgIC8vLyAgZG9lc24ndCBoYXZlIGEgdGFyZ2V0IHN0YXRlIGZvciB0aGUgdHJhbnNpdGlvbiBwYXNzZWQsIFxyXG4gICAgLy8vIGFuIEVSUk9SIG1lc3NhZ2UgaXMgcHJpbnRlZC5cclxuICAgIC8vLyA8L3N1bW1hcnk+XHJcbiAgICBwdWJsaWMgUGVyZm9ybVRyYW5zaXRpb24odHJhbnM6IFRyYW5zaXRpb24pIHtcclxuICAgICAgICAvLyBDaGVjayBmb3IgTnVsbFRyYW5zaXRpb24gYmVmb3JlIGNoYW5naW5nIHRoZSBjdXJyZW50IHN0YXRlXHJcbiAgICAgICAgaWYgKHRyYW5zID09IFRyYW5zaXRpb24uTnVsbFRyYW5zaXRpb24pIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkZTTSBFUlJPUjogTnVsbFRyYW5zaXRpb24gaXMgbm90IGFsbG93ZWQgZm9yIGEgcmVhbCB0cmFuc2l0aW9uXCIpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBDaGVjayBpZiB0aGUgY3VycmVudFN0YXRlIGhhcyB0aGUgdHJhbnNpdGlvbiBwYXNzZWQgYXMgYXJndW1lbnRcclxuICAgICAgICBsZXQgaWQ6IFN0YXRlSUQgPSB0aGlzLmN1cnJlbnRTdGF0ZS5HZXRPdXRwdXRTdGF0ZSh0cmFucyk7XHJcbiAgICAgICAgaWYgKGlkID09IFN0YXRlSUQuTnVsbFN0YXRlSUQpIHtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIkZTTSBFUlJPUjogU3RhdGUgXCIgKyB0aGlzLmN1cnJlbnRTdGF0ZUlEICsgXCIgZG9lcyBub3QgaGF2ZSBhIHRhcmdldCBzdGF0ZSBcIiArIFwiIGZvciB0cmFuc2l0aW9uIFwiICsgdHJhbnMpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBVcGRhdGUgdGhlIGN1cnJlbnRTdGF0ZUlEIGFuZCBjdXJyZW50U3RhdGVcdFx0XHJcbiAgICAgICAgdGhpcy5jdXJyZW50U3RhdGVJRCA9IGlkO1xyXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLnN0YXRlcy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgY29uc3Qgc3RhdGUgPSB0aGlzLnN0YXRlc1tpbmRleF07XHJcbiAgICAgICAgICAgIGlmIChzdGF0ZS5JRCA9PSB0aGlzLmN1cnJlbnRTdGF0ZUlEKSB7XHJcbiAgICAgICAgICAgICAgICAvLyBEbyB0aGUgcG9zdCBwcm9jZXNzaW5nIG9mIHRoZSBzdGF0ZSBiZWZvcmUgc2V0dGluZyB0aGUgbmV3IG9uZVxyXG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50U3RhdGUuRG9CZWZvcmVMZWF2aW5nKCk7XHJcblxyXG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50U3RhdGUgPSBzdGF0ZTtcclxuXHJcbiAgICAgICAgICAgICAgICAvLyBSZXNldCB0aGUgc3RhdGUgdG8gaXRzIGRlc2lyZWQgY29uZGl0aW9uIGJlZm9yZSBpdCBjYW4gcmVhc29uIG9yIGFjdFxyXG4gICAgICAgICAgICAgICAgdGhpcy5jdXJyZW50U3RhdGUuRG9CZWZvcmVFbnRlcmluZygpO1xyXG4gICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9IC8vIFBlcmZvcm1UcmFuc2l0aW9uKClcclxuXHJcbn0gLy9jbGFzcyBGU01TeXN0ZW0iLCIvLy8gPHN1bW1hcnk+XHJcbi8vLyBQbGFjZSB0aGUgbGFiZWxzIGZvciB0aGUgVHJhbnNpdGlvbnMgaW4gdGhpcyBlbnVtLlxyXG4vLy8gRG9uJ3QgY2hhbmdlIHRoZSBmaXJzdCBsYWJlbCwgTnVsbFRyYW5zaXRpb24gYXMgRlNNU3lzdGVtIGNsYXNzIHVzZXMgaXQuXHJcbi8vLyA8L3N1bW1hcnk+XHJcbmV4cG9ydCBlbnVtIFRyYW5zaXRpb24ge1xyXG4gICAgTnVsbFRyYW5zaXRpb24sIC8vIFVzZSB0aGlzIHRyYW5zaXRpb24gdG8gcmVwcmVzZW50IGEgbm9uLWV4aXN0aW5nIHRyYW5zaXRpb24gaW4geW91ciBzeXN0ZW0sXHJcbiAgICBUUmV4MlB0ZXIsXHJcbiAgICBQdGVyMlRSZXgsXHJcbiAgICBLaW5nS29uZzIsXHJcbiAgICBUcmV4Mktpbmdrb25nLFxyXG4gICAgS2luZ2tvbmcyVHJleFxyXG5cclxufVxyXG5cclxuLy8vIDxzdW1tYXJ5PlxyXG4vLy8gUGxhY2UgdGhlIGxhYmVscyBmb3IgdGhlIFN0YXRlcyBpbiB0aGlzIGVudW0uXHJcbi8vLyBEb24ndCBjaGFuZ2UgdGhlIGZpcnN0IGxhYmVsLCBOdWxsVHJhbnNpdGlvbiBhcyBGU01TeXN0ZW0gY2xhc3MgdXNlcyBpdC5cclxuLy8vIDwvc3VtbWFyeT5cclxuZXhwb3J0IGVudW0gU3RhdGVJRCB7XHJcbiAgICBOdWxsU3RhdGVJRCwgLy8gVXNlIHRoaXMgSUQgdG8gcmVwcmVzZW50IGEgbm9uLWV4aXN0aW5nIFN0YXRlIGluIHlvdXIgc3lzdGVtXHRcclxuICAgIFRSZXgsXHJcbiAgICBQdGVyLFxyXG4gICAgS2luZ0tvbmdcclxufVxyXG4iLCJpbXBvcnQgeyBUcmFuc2l0aW9uLCBTdGF0ZUlEIH0gZnJvbSBcIi4vRnNtRW51bVwiO1xyXG5pbXBvcnQgQ2hhcmFjdGVyQ3RyIGZyb20gXCIuLi9DaGFyYWN0ZXIvQ2hhcmFjdGVyQ3RyXCI7XHJcblxyXG4vLy8gPHN1bW1hcnk+XHJcbi8vLyBUaGlzIGNsYXNzIHJlcHJlc2VudHMgdGhlIFN0YXRlcyBpbiB0aGUgRmluaXRlIFN0YXRlIFN5c3RlbS5cclxuLy8vIEVhY2ggc3RhdGUgaGFzIGEgRGljdGlvbmFyeSB3aXRoIHBhaXJzICh0cmFuc2l0aW9uLXN0YXRlKSBzaG93aW5nXHJcbi8vLyB3aGljaCBzdGF0ZSB0aGUgRlNNIHNob3VsZCBiZSBpZiBhIHRyYW5zaXRpb24gaXMgZmlyZWQgd2hpbGUgdGhpcyBzdGF0ZVxyXG4vLy8gaXMgdGhlIGN1cnJlbnQgc3RhdGUuXHJcbi8vLyBNZXRob2QgUmVhc29uIGlzIHVzZWQgdG8gZGV0ZXJtaW5lIHdoaWNoIHRyYW5zaXRpb24gc2hvdWxkIGJlIGZpcmVkIC5cclxuLy8vIE1ldGhvZCBBY3QgaGFzIHRoZSBjb2RlIHRvIHBlcmZvcm0gdGhlIGFjdGlvbnMgdGhlIE5QQyBpcyBzdXBwb3NlZCBkbyBpZiBpdCdzIG9uIHRoaXMgc3RhdGUuXHJcbi8vLyA8L3N1bW1hcnk+XHJcbmV4cG9ydCBkZWZhdWx0IGFic3RyYWN0IGNsYXNzIEZTTVN0YXRlIGV4dGVuZHMgTGF5YS5TY3JpcHQzRCB7XHJcbiAgICBwcm90ZWN0ZWQgY2hhcmFjdGVyQ3RyOiBDaGFyYWN0ZXJDdHI7XHJcbiAgICBwcm90ZWN0ZWQgbWFwOiBEaWN0aW9uYXJ5ID0gbmV3IERpY3Rpb25hcnkoKTtcclxuICAgIHByb3RlY3RlZCBzdGF0ZUlEOiBTdGF0ZUlEO1xyXG4gICAgcHVibGljIGdldCBJRCgpOiBTdGF0ZUlEIHsgeyByZXR1cm4gdGhpcy5zdGF0ZUlEOyB9IH1cclxuXHJcbiAgICBwdWJsaWMgU2V0Q3RyKGNoYXJhY3RlckN0cjogQ2hhcmFjdGVyQ3RyKSB7IHRoaXMuY2hhcmFjdGVyQ3RyID0gY2hhcmFjdGVyQ3RyIH1cclxuXHJcbiAgICBwdWJsaWMgQWRkVHJhbnNpdGlvbih0cmFuczogVHJhbnNpdGlvbiwgaWQ6IFN0YXRlSUQpOiB2b2lkIHtcclxuICAgICAgICAvLyBDaGVjayBpZiBhbnlvbmUgb2YgdGhlIGFyZ3MgaXMgaW52YWxpZFxyXG4gICAgICAgIGlmICh0cmFucyA9PSBUcmFuc2l0aW9uLk51bGxUcmFuc2l0aW9uKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGU01TdGF0ZSBFUlJPUjogTnVsbFRyYW5zaXRpb24gaXMgbm90IGFsbG93ZWQgZm9yIGEgcmVhbCB0cmFuc2l0aW9uXCIpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoaWQgPT0gU3RhdGVJRC5OdWxsU3RhdGVJRCkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKFwiRlNNU3RhdGUgRVJST1I6IE51bGxTdGF0ZUlEIGlzIG5vdCBhbGxvd2VkIGZvciBhIHJlYWwgSURcIik7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIFNpbmNlIHRoaXMgaXMgYSBEZXRlcm1pbmlzdGljIEZTTSxcclxuICAgICAgICAvLyAgIGNoZWNrIGlmIHRoZSBjdXJyZW50IHRyYW5zaXRpb24gd2FzIGFscmVhZHkgaW5zaWRlIHRoZSBtYXBcclxuICAgICAgICBpZiAodGhpcy5tYXAuQ29udGFpbnNLZXkodHJhbnMpKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGU01TdGF0ZSBFUlJPUjogU3RhdGUgXCIgKyB0aGlzLnN0YXRlSUQgKyBcIiBhbHJlYWR5IGhhcyB0cmFuc2l0aW9uIFwiICsgdHJhbnMgKyBcIkltcG9zc2libGUgdG8gYXNzaWduIHRvIGFub3RoZXIgc3RhdGVcIik7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMubWFwLkFkZCh0cmFucywgaWQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vLyA8c3VtbWFyeT5cclxuICAgIC8vLyBUaGlzIG1ldGhvZCBkZWxldGVzIGEgcGFpciB0cmFuc2l0aW9uLXN0YXRlIGZyb20gdGhpcyBzdGF0ZSdzIG1hcC5cclxuICAgIC8vLyBJZiB0aGUgdHJhbnNpdGlvbiB3YXMgbm90IGluc2lkZSB0aGUgc3RhdGUncyBtYXAsIGFuIEVSUk9SIG1lc3NhZ2UgaXMgcHJpbnRlZC5cclxuICAgIC8vLyA8L3N1bW1hcnk+XHJcbiAgICBwdWJsaWMgRGVsZXRlVHJhbnNpdGlvbih0cmFuczogVHJhbnNpdGlvbikge1xyXG4gICAgICAgIC8vIENoZWNrIGZvciBOdWxsVHJhbnNpdGlvblxyXG4gICAgICAgIGlmICh0cmFucyA9PSBUcmFuc2l0aW9uLk51bGxUcmFuc2l0aW9uKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoXCJGU01TdGF0ZSBFUlJPUjogTnVsbFRyYW5zaXRpb24gaXMgbm90IGFsbG93ZWRcIik7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC8vIENoZWNrIGlmIHRoZSBwYWlyIGlzIGluc2lkZSB0aGUgbWFwIGJlZm9yZSBkZWxldGluZ1xyXG4gICAgICAgIGlmICh0aGlzLm1hcC5Db250YWluc0tleSh0cmFucykpIHtcclxuICAgICAgICAgICAgdGhpcy5tYXAuUmVtb3ZlKHRyYW5zKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zb2xlLmVycm9yKFwiRlNNU3RhdGUgRVJST1I6IFRyYW5zaXRpb24gXCIgKyB0cmFucyArIFwiIHBhc3NlZCB0byBcIiArIHRoaXMuc3RhdGVJRCArIFwiIHdhcyBub3Qgb24gdGhlIHN0YXRlJ3MgdHJhbnNpdGlvbiBsaXN0XCIpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vLyA8c3VtbWFyeT5cclxuICAgIC8vLyBUaGlzIG1ldGhvZCByZXR1cm5zIHRoZSBuZXcgc3RhdGUgdGhlIEZTTSBzaG91bGQgYmUgaWZcclxuICAgIC8vLyAgICB0aGlzIHN0YXRlIHJlY2VpdmVzIGEgdHJhbnNpdGlvbiBhbmQgXHJcbiAgICAvLy8gPC9zdW1tYXJ5PlxyXG4gICAgcHVibGljIEdldE91dHB1dFN0YXRlKHRyYW5zOiBUcmFuc2l0aW9uKTogU3RhdGVJRCB7XHJcbiAgICAgICAgLy8gQ2hlY2sgaWYgdGhlIG1hcCBoYXMgdGhpcyB0cmFuc2l0aW9uXHJcbiAgICAgICAgaWYgKHRoaXMubWFwLkNvbnRhaW5zS2V5KHRyYW5zKSkge1xyXG4gICAgICAgICAgICByZXR1cm4gdGhpcy5tYXAuR2V0KHRyYW5zKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIFN0YXRlSUQuTnVsbFN0YXRlSUQ7XHJcbiAgICB9XHJcblxyXG4gICAgLy8vIDxzdW1tYXJ5PlxyXG4gICAgLy8vIFRoaXMgbWV0aG9kIGlzIHVzZWQgdG8gc2V0IHVwIHRoZSBTdGF0ZSBjb25kaXRpb24gYmVmb3JlIGVudGVyaW5nIGl0LlxyXG4gICAgLy8vIEl0IGlzIGNhbGxlZCBhdXRvbWF0aWNhbGx5IGJ5IHRoZSBGU01TeXN0ZW0gY2xhc3MgYmVmb3JlIGFzc2lnbmluZyBpdFxyXG4gICAgLy8vIHRvIHRoZSBjdXJyZW50IHN0YXRlLlxyXG4gICAgLy8vIDwvc3VtbWFyeT5cclxuICAgIHB1YmxpYyBhYnN0cmFjdCBEb0JlZm9yZUVudGVyaW5nKGFueT8pO1xyXG5cclxuICAgIC8vLyA8c3VtbWFyeT5cclxuICAgIC8vLyBUaGlzIG1ldGhvZCBpcyB1c2VkIHRvIG1ha2UgYW55dGhpbmcgbmVjZXNzYXJ5LCBhcyByZXNldGluZyB2YXJpYWJsZXNcclxuICAgIC8vLyBiZWZvcmUgdGhlIEZTTVN5c3RlbSBjaGFuZ2VzIHRvIGFub3RoZXIgb25lLiBJdCBpcyBjYWxsZWQgYXV0b21hdGljYWxseVxyXG4gICAgLy8vIGJ5IHRoZSBGU01TeXN0ZW0gYmVmb3JlIGNoYW5naW5nIHRvIGEgbmV3IHN0YXRlLlxyXG4gICAgLy8vIDwvc3VtbWFyeT5cclxuICAgIHB1YmxpYyBhYnN0cmFjdCBEb0JlZm9yZUxlYXZpbmcoYW55Pyk7XHJcblxyXG4gICAgLy8vIDxzdW1tYXJ5PlxyXG4gICAgLy8vIFRoaXMgbWV0aG9kIGRlY2lkZXMgaWYgdGhlIHN0YXRlIHNob3VsZCB0cmFuc2l0aW9uIHRvIGFub3RoZXIgb24gaXRzIGxpc3RcclxuICAgIC8vLyBOUEMgaXMgYSByZWZlcmVuY2UgdG8gdGhlIG9iamVjdCB0aGF0IGlzIGNvbnRyb2xsZWQgYnkgdGhpcyBjbGFzc1xyXG4gICAgLy8vIDwvc3VtbWFyeT5cclxuICAgIHB1YmxpYyBhYnN0cmFjdCBSZWFzb24oYW55Pyk7XHJcblxyXG4gICAgLy8vIDxzdW1tYXJ5PlxyXG4gICAgLy8vIFRoaXMgbWV0aG9kIGNvbnRyb2xzIHRoZSBiZWhhdmlvciBvZiB0aGUgTlBDIGluIHRoZSBnYW1lIFdvcmxkLlxyXG4gICAgLy8vIEV2ZXJ5IGFjdGlvbiwgbW92ZW1lbnQgb3IgY29tbXVuaWNhdGlvbiB0aGUgTlBDIGRvZXMgc2hvdWxkIGJlIHBsYWNlZCBoZXJlXHJcbiAgICAvLy8gTlBDIGlzIGEgcmVmZXJlbmNlIHRvIHRoZSBvYmplY3QgdGhhdCBpcyBjb250cm9sbGVkIGJ5IHRoaXMgY2xhc3NcclxuICAgIC8vLyA8L3N1bW1hcnk+XHJcbiAgICBwdWJsaWMgYWJzdHJhY3QgQWN0KGFueT8pO1xyXG5cclxufSAvLyBjbGFzcyBGU01TdGF0ZVxyXG5cclxuY2xhc3MgRGljdGlvbmFyeSB7XHJcbiAgICBwcml2YXRlIF9vYmogPSB7fTtcclxuICAgIENvbnRhaW5zS2V5KGtleTogYW55KSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX29ialtrZXldICE9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgQWRkKGtleTogYW55LCB2YWx1ZTogYW55KSB7XHJcbiAgICAgICAgdGhpcy5fb2JqW2tleV0gPSB2YWx1ZTtcclxuICAgIH1cclxuXHJcbiAgICBSZW1vdmUoa2V5OiBhbnkpIHtcclxuICAgICAgICBkZWxldGUgdGhpcy5fb2JqW2tleV07XHJcbiAgICB9XHJcblxyXG4gICAgR2V0KGtleSkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9vYmpba2V5XTtcclxuICAgIH1cclxufSIsImV4cG9ydCBjbGFzcyBTY2VuZVNldHRpbmcge1xyXG4gICAgLyog6YGT6Lev5pyA5aSn5YGP56e7ICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IE1heFJvYWRPZmZzZXQ6IG51bWJlciA9IDMuMjU7XHJcblxyXG4gICAgLyog6Zq+5bqm6K6+572uLOinkuiJsiAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBEaWZmaWN1bHR5OiBudW1iZXIgPSAwO1xyXG5cclxuICAgIC8qIOmHjeeUn+aXtumXtCAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBSZXNwd2FuVGltZTogbnVtYmVyID0gMTAwMDtcclxuXHJcbn1cclxuXHJcbi8qKlxyXG4gKiDmkYTlg4/mnLrorr7nva5cclxuICogXHJcbiAqIEBleHBvcnRcclxuICogQGNsYXNzIENhbWVyYVNldHRpbmdzXHJcbiAqL1xyXG5leHBvcnQgY2xhc3MgQ2FtZXJhU2V0dGluZyB7XHJcbiAgICAvKiDlnLDpnaLmkYTlg4/mnLrop4bop5LlgY/np7sgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgR291bmRPZmZzZXQ6IExheWEuVmVjdG9yMyA9IG5ldyBMYXlhLlZlY3RvcjMoMCwgMjAsIDEwKTtcclxuXHJcbiAgICAvKiDnmq7ogqTmkYTlg4/mnLrop4bop5LlgY/np7sgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgU2tpblZpZXdPZmZzZXQ6IExheWEuVmVjdG9yMyA9IG5ldyBMYXlhLlZlY3RvcjMoLTQsIDUsIDQpO1xyXG5cclxuICAgIC8qIOm7mOiupOinhuinkiAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBGaWVsZE9mVmlldzogbnVtYmVyID0gNjBcclxuXHJcbiAgICAvKiDmkYTlg4/mnLrkvJrku6XnjqnlrrbnmoTkuK3lv4PngrnliqDkuIrkuIDkuKrliY3lkI7nmoTlgY/np7vkvZzkuLrmnIDnu4jnmoTop4bop5LkuK3lv4MqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBGcm9udEJhY2tPZmZzZXQ6IG51bWJlciA9IDA7XHJcblxyXG4gICAgLyog5YmN5ZCO5YGP56e75b2SMOaXtueahOmAn+W6piAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBGcm9udEJhY2tPZmZzZXRNb3ZlU3BkOiBudW1iZXIgPSAxMDtcclxuXHJcbiAgICAvKiDmkYTlg4/mnLrlt6blj7PlgY/np7vnp7vliqjpgJ/luqYgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgTGVmdFJpZ2h0TW92ZVNwZDogbnVtYmVyID0gMTAwO1xyXG5cclxuICAgIC8qIOaRhOWDj+acuuW3puWPs+WBj+enu+avlOeOhyAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBMZWZ0UmlnaHRSYXRlOiBudW1iZXIgPSAwLjU7XHJcblxyXG4gICAgLyog5pGE5YOP5py65oqW5Yqo6aKR546HICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IFNoYWtlRnJlcXVlbmN5OiBudW1iZXIgPSAxMDtcclxuXHJcbiAgICAvKiDmkYTlg4/mnLrmipbliqjluYXluqYgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgU2hha2VTdHJlbmd0aDogbnVtYmVyID0gMC4yO1xyXG5cclxuICAgIC8qIOaRhOWDj+acuuWIh+aNoueJqeS9k+mAn+W6piAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBDaGFuZ2VPYmpUaW1lOiBudW1iZXIgPSAxMDtcclxufVxyXG5cclxuLyoqXHJcbiAqIOeOqeWutui3s+i3g+mrmOW6plxyXG4gKiBcclxuICogQGV4cG9ydFxyXG4gKiBAY2xhc3MgQ2hhcmFjdGVyU2V0dGluZ1xyXG4gKi9cclxuZXhwb3J0IGNsYXNzIENoYXJhY3RlclNldHRpbmcge1xyXG4gICAgLyog6KeS6Imy5Zyo6YGT6Lev5LiK55qE5q2j5bi46YCf5bqmICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IE5vcm1hbFNwZWVkOiBudW1iZXIgPSA5O1xyXG4gICAgLyog5aSn5aSn5Y235pyA5ZCO5Yay5Yi66YCf5bqmICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IEVuZFJvbGxlclNwZWVkOiBudW1iZXIgPSAyNTtcclxuICAgIC8qIOW8gOWni+acieWkmuWwkeWNtyAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBTdGFydFBpZWNlOiBudW1iZXIgPSA0MDtcclxuICAgIC8qIOinkuiJsuWcqOmBk+i3r+S4iuWkhOS6juWKoOmAn+eKtuaAgeiOt+W+l+eahOmAn+eOhyAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBBY2NlbGVyYXRlU3BlZWQ6IG51bWJlciA9IDAuNTtcclxufVxyXG5cclxuZXhwb3J0IGNsYXNzIFNwcmlhbFJvbGxlckNvbmZpZ3VyZSB7XHJcbiAgICAvKiDlsI/noo7niYfplb/luqYgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgUGllY2VMZW5ndGg6IG51bWJlciA9IDAuMjU7XHJcbiAgICAvKiDlsI/noo7niYfpq5jluqYgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgUGllY2VXaWR0aDogbnVtYmVyID0gMS41O1xyXG4gICAgLyog5bCP56KO54mH5Y6a5bqmICovXHJcbiAgICBwdWJsaWMgc3RhdGljIHJlYWRvbmx5IFBpZWNlVGhpY2tuZXNzOiBudW1iZXIgPSAwLjE7XHJcbiAgICAvKiDonrrml4vnur/mv4DmtLvniYfmlbAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgQWN0aXZlUGllY2UgPSA0NTtcclxuICAgIC8qIOWkseWOu+ieuuaXi+WNt+i3neemuyAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBFbXB0eUxvc2VEaXMgPSAwLjc7XHJcbiAgICAvKiDnu4jngrnlpLHljrvonrrml4vljbfot53nprsgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgRW5kUm9sbExvc2VEaXMgPSAwLjY7XHJcblxyXG5cclxuICAgIC8vI3JlZ2lvbiDkuIvpnaLnmoTmmK/onrrml4vnlJ/miJDmoLjlv4Plj4LmlbBcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgU2l6ZU9mUGllY2UgPSAzMDA7XHJcbiAgICAvKiDonrrml4vljbfmnIDlpKfnmoTljYrlvoQgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgTWF4UmFkaXVzID0gODtcclxuICAgIC8qIOieuuaXi+WNt+WIneWni+ebuOS9je+8jOS4gOiIrOS4jeeUqOaUuSAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBJbml0aWFsUGhhc2UgPSA0NTtcclxuICAgIC8qIOieuuaXi+WNt+WciOaVsCAqL1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBDeWNsZXMgPSAxNTtcclxuICAgIC8vI2VuZHJlZ2lvblxyXG59IiwiXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvb2xNYW5hZ2VyICBleHRlbmRzIExheWEuU3ByaXRlM0Qge1xyXG5cclxuICAgIHN0YXRpYyBfaW5zdGFuY2U6YW55O1xyXG4gICAgcHJpdmF0ZSBub2RlOkxheWEuTm9kZTsgLy8zROeJqeS9k+eItuiKgueCuVxyXG4gICAgcHVibGljIG1fT2JqZWN0UG9vbERpYzp7W2tleTpudW1iZXJdOiBMYXlhLlNwcml0ZTNEfT17fVxyXG4gICAgY29uc3RydWN0b3IoKSB7c3VwZXIoKTtcclxuICAgICAgICAgdGhpcy5ub2RlPW5ldyBMYXlhLk5vZGUoKTsgXHJcbiAgICAgICAgIHRoaXMuIG5vZGUubmFtZT1cIk5vZGVcIjsgXHJcbiAgICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGQodGhpcy5ub2RlKTtcclxuICAgICAgICB9XHJcbiAgICBzdGF0aWMgZ2V0SW5zdGFuY2UoKSB7XHJcbiAgICByZXR1cm4gdGhpcy5faW5zdGFuY2UgfHwgKHRoaXMuX2luc3RhbmNlID0gbmV3IFBvb2xNYW5hZ2VyKCkgKVxyXG4gICAgfVxyXG4gICAgXHJcbiAgICAvL+WIneWni+WMllxyXG4gICAgLy/liqDovb3liLDlhoXlrZjkuK3liJvlu7rlh7rmnaXkuYvlkI7mt7vliqDliLDov5nph4zpnaJcclxuICAgIHB1YmxpYyBJbml0UG9vbChrZXk6bnVtYmVyLE1lc2hTcHJpdGU6IExheWEuU3ByaXRlM0QpXHJcbiAgICB7XHJcbiAgICAgICAgLy/liJ3lp4vljJZpZOWvueW6lOWvueixoeaxoO+8jCDnrKzkuIDmrKHliJ3lp4vljJbliJnlv4Xpobvkv53or4HmsaDkuK3mnIDlsJHlrZjlnKgx5LiqXHJcbiAgICAgICAgaWYgKHRoaXMubV9PYmplY3RQb29sRGljW2tleV0pe1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwi5Yid5aeL5YyW5pyJ6K+v77yM6K+l5YC85bey57uP5pyJ5a+55bqU55qEIOWvueixoeaxoOS6hlwiKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICB0aGlzLm1fT2JqZWN0UG9vbERpY1trZXldPShNZXNoU3ByaXRlKTtcclxuICAgICAgICBsZXQgY2hpbGROb2RlPW5ldyBMYXlhLk5vZGUoKTtcclxuICAgICAgICBjaGlsZE5vZGUubmFtZT1rZXkudG9TdHJpbmcoKTtcclxuICAgICAgICB0aGlzLm5vZGUuYWRkQ2hpbGQoY2hpbGROb2RlKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHByaXZhdGUgY291bnRlcj0wXHJcbiAgICAvL+aMieeFp+e8luWPt+WPluWHuuWvueW6lOWvueixoeaxoOS4reeahOS4gOS4queJqeS9k1xyXG4gICAgcHVibGljICBEZXF1ZXVlSXRlbShrZXk6bnVtYmVyKTogTGF5YS5TcHJpdGUzRCB7XHJcbiAgICBpZih0aGlzLm1fT2JqZWN0UG9vbERpY1trZXldKVxyXG4gICAge1xyXG4gICAgICAgIGxldCBjaGlsZE5vZGU9dGhpcy5ub2RlLmdldENoaWxkQnlOYW1lKGtleS50b1N0cmluZygpKVxyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLeWvueixoeaxoFwiLHRoaXMuY291bnRlcikvL3RoaXMuR2V0UG9vbExlbmdodCgxKSlcclxuICAgICAgICBpZihjaGlsZE5vZGUubnVtQ2hpbGRyZW49PTApe1xyXG4gICAgICAgICAgICBsZXQgdGVtcG9iaiA6TGF5YS5TcHJpdGUzRCA9IHRoaXMubV9PYmplY3RQb29sRGljW2tleV0uY2xvbmUoKSBhcyAgTGF5YS5TcHJpdGUzRDs7XHJcbiAgICAgICAgICAgICB0ZW1wb2JqLm5hbWU9a2V5LnRvU3RyaW5nKCk7XHJcbiAgICAgICAgICAgICB0aGlzLmNvdW50ZXIrKztcclxuICAgICAgICAgICAgIHJldHVybiB0ZW1wb2JqO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNle1xyXG4gICAgICAgICAgICBsZXQgdGVtcG9iaj1jaGlsZE5vZGUuZ2V0Q2hpbGRBdCgwKWFzICBMYXlhLlNwcml0ZTNEOyA7XHJcbiAgICAgICAgICAgIHRlbXBvYmoucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgICAgICB0ZW1wb2JqLmFjdGl2ZT10cnVlO1xyXG4gICAgICAgICAgICByZXR1cm4gdGVtcG9iaiA7XHJcbiAgICAgICAgfVxyXG4gICAgfWVsc2VcclxuICAgIHtcclxuICAgICAgICAvL+WvueixoeaxoOS4reS4jeWtmOWcqOivpSBrZXkg5a+55bqU55qE5rGgXHJcbiAgICAgICAgY29uc29sZS5sb2coXCLojrflj5blr7nosaHplJnor6/vvIzmsqHmnIkg6K+l5YC85omA5a+55bqU55qE5a+56LGh5rGgXCIpO1xyXG4gICAgICAgIC8vIGxldCB0ZW1wb2JqID0gTGF5YS5TcHJpdGUzRC5pbnN0YW50aWF0ZSgoUHJlZmFiTWdyLnByZUJhbGwgYXMgTGF5YS5TcHJpdGUzRCkpXHJcbiAgICAgICAgLy8gdGVtcG9iai5uYW1lPWtleS50b1N0cmluZygpO1xyXG4gICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG5cclxufVxyXG5cclxuLy/lr7nosaHlm57msaDvvIzlr7nosaHnmoTnirbmgIHkv6Hmga/vvIzlsL3lj6/og73lnKjlm57msaDliY3orr7nva7miJDpu5jorqTnirbmgIFcclxuLy8g5q+U5aaC6K+054mp5L2T5LiK5re75Yqg55qE5LiA5Lqb6ISa5pys77yM5Y+v5Lul5Zyo5Zue5rGg5YmN5Y675o6J5oiW6ICFIOWQjumdouWGjeWvueiEmuacrOi/m+ihjOWIpOaWrVxyXG4vL+mcgOimgeiusOS9j+ivpeeJqeS9k+WvueixoeaxoOaJgOWvueW6lOeahOaMh+WumueahOe8luWPt++8jOWQpuWImeS4gOaXpua3u+WKoOmUmeivr++8jOaXoOazleS/ruaUuVxyXG5wdWJsaWMgIEVucXVldWVJdGVtKGtleTpudW1iZXIsTWVzaFNwcml0ZTpMYXlhLlNwcml0ZTNEKTp2b2lke1xyXG4gICAgaWYodGhpcy5tX09iamVjdFBvb2xEaWNba2V5XSlcclxuICAgIHtcclxuICAgICAgICAvL+WvueixoeaxoOS4reWtmOWcqOivpSBrZXkg5a+55bqU55qE5rGgXHJcbiAgICAgICAgbGV0IGNoaWxkTm9kZT10aGlzLm5vZGUuZ2V0Q2hpbGRCeU5hbWUoa2V5LnRvU3RyaW5nKCkpXHJcblxyXG4gICAgICAgIE1lc2hTcHJpdGUuYWN0aXZlPWZhbHNlO1xyXG4gICAgICAgIE1lc2hTcHJpdGUucmVtb3ZlU2VsZigpO1xyXG4gICAgICAgIGNoaWxkTm9kZS5hZGRDaGlsZChNZXNoU3ByaXRlKTtcclxuICAgIH1lbHNlXHJcbiAgICB7XHJcbiAgICAgICAgLy/lr7nosaHmsaDkuK3kuI3lrZjlnKjor6Uga2V5IOWvueW6lOeahOaxoFxyXG4gICAgICAgIGNvbnNvbGUubG9nKFwi6I635Y+W5a+56LGh6ZSZ6K+v77yM5rKh5pyJIOivpeWAvOaJgOWvueW6lOeahOWvueixoeaxoFwiKTtcclxuICAgICAgICByZXR1cm47XHJcbiAgICB9XHJcbn1cclxuXHJcbi8v5riF55CG5a+56LGh5rGgIOagueaNrue8luWPt+a4heeQhuaMh+WumueahOWvueixoeaxoFxyXG5wdWJsaWMgQ2xlYXJQb29sKGtleTpudW1iZXIpOnZvaWR7XHJcbiAgICBpZih0aGlzLm1fT2JqZWN0UG9vbERpY1trZXldKVxyXG4gICAge1xyXG4gICAgICAgIC8v5a+56LGh5rGg5Lit5a2Y5Zyo6K+lIGtleSDlr7nlupTnmoTmsaBcclxuICAgICAgICBsZXQgUXVldWVQb29sPXRoaXMubV9PYmplY3RQb29sRGljW2tleV07XHJcbiAgICAgICAgdGhpcy5tX09iamVjdFBvb2xEaWNba2V5XS5kZXN0cm95KCk7XHJcbiAgICAgICAgZGVsZXRlIHRoaXMubV9PYmplY3RQb29sRGljW2tleV07XHJcblxyXG4gICAgICAgIGxldCBjaGlsZE5vZGU9dGhpcy5ub2RlLmdldENoaWxkQnlOYW1lKGtleS50b1N0cmluZygpKVxyXG4gICAgICAgIGNoaWxkTm9kZS5kZXN0cm95Q2hpbGRyZW4oKTtcclxuICAgICAgICBjaGlsZE5vZGUuZGVzdHJveSgpO1xyXG4gICAgfWVsc2VcclxuICAgIHtcclxuICAgICAgICAvL+WvueixoeaxoOS4reS4jeWtmOWcqOivpSBrZXkg5a+55bqU55qE5rGgXHJcbiAgICAgICAgY29uc29sZS5sb2coXCLojrflj5blr7nosaHplJnor6/vvIzmsqHmnIkg6K+l5YC85omA5a+55bqU55qE5a+56LGh5rGgXCIpO1xyXG4gICAgICAgIHJldHVybiA7XHJcbiAgICB9XHJcbn1cclxuLy/ojrflj5blr7nosaHmsaDplb/luqYg5qC55o2u57yW5Y+36I635Y+W5oyH5a6a55qE5a+56LGh5rGg55qE6ZW/5bqmXHJcbnB1YmxpYyBHZXRQb29sTGVuZ2h0KGtleTpudW1iZXIpOm51bWJlcntcclxuICAgIGlmKHRoaXMubV9PYmplY3RQb29sRGljW2tleV0pXHJcbiAgICB7XHJcbiAgICAgICAgLy/lr7nosaHmsaDkuK3lrZjlnKjor6Uga2V5IOWvueW6lOeahOaxoFxyXG4gICAgICAgIGxldCBjaGlsZE5vZGU9dGhpcy5ub2RlLmdldENoaWxkQnlOYW1lKGtleS50b1N0cmluZygpKVxyXG4gICAgICAgIHJldHVybiBjaGlsZE5vZGUubnVtQ2hpbGRyZW47XHJcbiAgICB9ZWxzZVxyXG4gICAge1xyXG4gICAgICAgIC8v5a+56LGh5rGg5Lit5LiN5a2Y5Zyo6K+lIGtleSDlr7nlupTnmoTmsaBcclxuICAgICAgICBjb25zb2xlLmxvZyhcIuiOt+WPluWvueixoemUmeivr++8jOayoeaciSDor6XlgLzmiYDlr7nlupTnmoTlr7nosaHmsaBcIik7XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbn1cclxufSIsImltcG9ydCBFdmVudE1ncl9jc2pjIGZyb20gXCIuLi8uLi9FdmVudC9FdmVudE1nclwiO1xyXG5pbXBvcnQgeyBFdmVudERlZl9jc2pjIH0gZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50RGVmXCI7XHJcbmltcG9ydCB7IElucHV0VHlwZSB9IGZyb20gXCIuL0VudW1zXCI7XHJcblxyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFJvY2tlciBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuXHJcbiAgICBwcm90ZWN0ZWQgX3JvY2tldFR5cGUgPSAxOy8v5pGH5p2G57G75Z6LLDHlm7rlrprvvIwy5Lul5q+P5qyh5oyJ5LiL5Li65Lit5b+DXHJcbiAgICBwcm90ZWN0ZWQgX3JvY2tldFNob3cgPSAxOy8v5pGH5p2G5pi+56S657G75Z6LLDHkuIDnm7TmmL7npLoy5oyJ5LiL5pe25pi+56S65oqs6LW35pe26ZqQ6JePXHJcblxyXG4gICAgcHJvdGVjdGVkIF9yb2NrZXJab25lOiBMYXlhLlNwcml0ZTtcclxuICAgIHByb3RlY3RlZCBfbW92ZVNwOiBMYXlhLlNwcml0ZTtcclxuICAgIHByb3RlY3RlZCBfYmdTcDogTGF5YS5TcHJpdGU7XHJcbiAgICBwcm90ZWN0ZWQgX21vdmVSYWRpdXM6IG51bWJlciA9IDEwMDtcclxuICAgIHByb3RlY3RlZCBfb3duZXJTcHJpdGU6IExheWEuU3ByaXRlO1xyXG4gICAgcHJvdGVjdGVkIF9vcmlnaW5Qb2ludDogTGF5YS5Qb2ludDtcclxuICAgIHByaXZhdGUgbV9pc0NsaWNrOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBwcml2YXRlIGtleUxpc3Q6IEFycmF5PGFueT4gPSBbXTtcclxuICAgIHByaXZhdGUga2V5RG93bjogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cclxuXHJcblxyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICB0aGlzLl9vd25lclNwcml0ZSA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5fcm9ja2VyWm9uZSA9IHRoaXMub3duZXIucGFyZW50IGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuX21vdmVTcCA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJCdG5cIikgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5fYmdTcCA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgaWYgKHRoaXMuX3JvY2tldFNob3cgPT0gMikge1xyXG4gICAgICAgICAgICB0aGlzLl9vd25lclNwcml0ZS52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uU3RhcnQoKSB7XHJcbiAgICAgICAgdGhpcy5fb3JpZ2luUG9pbnQgPSBuZXcgTGF5YS5Qb2ludCh0aGlzLl9vd25lclNwcml0ZS54LCB0aGlzLl9vd25lclNwcml0ZS55KTtcclxuICAgIH1cclxuXHJcbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9yb2NrZXJab25lLm9uKExheWEuRXZlbnQuTU9VU0VfRE9XTiwgdGhpcywgdGhpcy5vblJva2VyWm9uZUNsaWNrRG93bilcclxuICAgICAgICB0aGlzLl9tb3ZlU3Aub24oTGF5YS5FdmVudC5NT1VTRV9VUCwgdGhpcywgdGhpcy5vbk1vdmVTcENsaWNrVXApXHJcblxyXG4gICAgICAgIHRoaXMuX21vdmVTcC54ID0gdGhpcy5fYmdTcC53aWR0aCAvIDI7XHJcbiAgICAgICAgdGhpcy5fbW92ZVNwLnkgPSB0aGlzLl9iZ1NwLmhlaWdodCAvIDI7XHJcblxyXG4gICAgICAgIExheWEuc3RhZ2Uub24oTGF5YS5FdmVudC5LRVlfVVAsIHRoaXMsIHRoaXMub25rZXl1cCk7XHJcbiAgICAgICAgTGF5YS5zdGFnZS5vbihMYXlhLkV2ZW50LktFWV9ET1dOLCB0aGlzLCB0aGlzLm9ua2V5ZG93bik7XHJcbiAgICB9XHJcblxyXG4gICAgb25EaXNhYmxlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX3JvY2tlclpvbmUub2ZmKExheWEuRXZlbnQuTU9VU0VfRE9XTiwgdGhpcywgdGhpcy5vblJva2VyWm9uZUNsaWNrRG93bilcclxuICAgICAgICB0aGlzLl9tb3ZlU3Aub2ZmKExheWEuRXZlbnQuTU9VU0VfVVAsIHRoaXMsIHRoaXMub25Nb3ZlU3BDbGlja1VwKVxyXG4gICAgICAgIHRoaXMuX3JvY2tlclpvbmUub2ZmKExheWEuRXZlbnQuTU9VU0VfTU9WRSwgdGhpcywgdGhpcy5vbk1vdmVTcENsaWNrTW92ZSk7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9JbnB1dF9jc2pjLCB7IElucHV0VHlwZTogSW5wdXRUeXBlLlJvY2tlckF4aXMsIFZhbHVlOiBudWxsIH0pO1xyXG4gICAgICAgIHRoaXMuX21vdmVTcC54ID0gdGhpcy5fYmdTcC53aWR0aCAvIDI7XHJcbiAgICAgICAgdGhpcy5fbW92ZVNwLnkgPSB0aGlzLl9iZ1NwLmhlaWdodCAvIDI7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIG9uUm9rZXJab25lQ2xpY2tEb3duKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9yb2NrZXRUeXBlID09IDIpIHtcclxuICAgICAgICAgICAgdmFyIHBvaW50ID0gdGhpcy5fcm9ja2VyWm9uZS5sb2NhbFRvR2xvYmFsKG5ldyBMYXlhLlBvaW50KExheWEuc3RhZ2UubW91c2VYLCBMYXlhLnN0YWdlLm1vdXNlWSkpO1xyXG4gICAgICAgICAgICB0aGlzLl9vd25lclNwcml0ZS54ID0gcG9pbnQueFxyXG4gICAgICAgICAgICB0aGlzLl9vd25lclNwcml0ZS55ID0gcG9pbnQueTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fcm9ja2VyWm9uZS5vbihMYXlhLkV2ZW50Lk1PVVNFX01PVkUsIHRoaXMsIHRoaXMub25Nb3ZlU3BDbGlja01vdmUpO1xyXG4gICAgICAgIHRoaXMuX3JvY2tlclpvbmUub24oTGF5YS5FdmVudC5NT1VTRV9VUCwgdGhpcywgdGhpcy5vbk1vdmVTcENsaWNrVXApO1xyXG4gICAgICAgIHRoaXMuX3JvY2tlclpvbmUub24oTGF5YS5FdmVudC5NT1VTRV9PVVQsIHRoaXMsIHRoaXMub25Nb3ZlU3BDbGlja1VwKTtcclxuICAgICAgICB0aGlzLm1faXNDbGljayA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5fb3duZXJTcHJpdGUudmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgLy8gRXZlbnRNZ3IuaW5zdGFuY2UuZGlzcGF0Y2goRXZlbnREZWYuR2FtZUlucHV0KTtcclxuICAgICAgICAvLyBFdmVudE1nci5pbnN0YW5jZS5kaXNwYXRjaChFdmVudERlZi5HYW1lX0d1aWRlU2hvdywge3Jlc3VsdDogZmFsc2V9KTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgb25Nb3ZlU3BDbGlja1VwKCkge1xyXG4gICAgICAgIHRoaXMuX3JvY2tlclpvbmUub2ZmKExheWEuRXZlbnQuTU9VU0VfTU9WRSwgdGhpcywgdGhpcy5vbk1vdmVTcENsaWNrTW92ZSk7XHJcbiAgICAgICAgdGhpcy5fcm9ja2VyWm9uZS5vZmYoTGF5YS5FdmVudC5NT1VTRV9VUCwgdGhpcywgdGhpcy5vbk1vdmVTcENsaWNrVXApO1xyXG4gICAgICAgIHRoaXMuX3JvY2tlclpvbmUub2ZmKExheWEuRXZlbnQuTU9VU0VfT1VULCB0aGlzLCB0aGlzLm9uTW92ZVNwQ2xpY2tVcCk7XHJcblxyXG4gICAgICAgIHZhciBvcmlnaW5YID0gdGhpcy5fYmdTcC53aWR0aCAvIDI7XHJcbiAgICAgICAgdmFyIG9yaWdpblkgPSB0aGlzLl9iZ1NwLmhlaWdodCAvIDI7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLl9tb3ZlU3AsIHsgeDogb3JpZ2luWCwgeTogb3JpZ2luWSB9LCAxMDAsIExheWEuRWFzZS5saW5lYXJOb25lKTtcclxuXHJcbiAgICAgICAgdGhpcy5fb3duZXJTcHJpdGUueCA9IHRoaXMuX29yaWdpblBvaW50Lng7XHJcbiAgICAgICAgdGhpcy5fb3duZXJTcHJpdGUueSA9IHRoaXMuX29yaWdpblBvaW50Lnk7XHJcblxyXG4gICAgICAgIHRoaXMubV9pc0NsaWNrID0gZmFsc2U7XHJcbiAgICAgICAgaWYgKHRoaXMuX3JvY2tldFNob3cgPT0gMikge1xyXG4gICAgICAgICAgICB0aGlzLl9vd25lclNwcml0ZS52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkdhbWVfSW5wdXRfY3NqYywgeyBJbnB1dFR5cGU6IElucHV0VHlwZS5Sb2NrZXJBeGlzLCBWYWx1ZTogbnVsbCB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgb25Nb3ZlU3BDbGlja01vdmUoKSB7XHJcbiAgICAgICAgdmFyIHBhcmVudFZpZXcgPSB0aGlzLm93bmVyLnBhcmVudCBhcyBMYXlhLlZpZXc7XHJcbiAgICAgICAgdmFyIGJnU3RhZ2VQb2ludCA9IHBhcmVudFZpZXcubG9jYWxUb0dsb2JhbChuZXcgTGF5YS5Qb2ludCh0aGlzLl9iZ1NwLngsIHRoaXMuX2JnU3AueSksIHRydWUpO1xyXG4gICAgICAgIHZhciB4eDogbnVtYmVyID0gTGF5YS5zdGFnZS5tb3VzZVggLSBiZ1N0YWdlUG9pbnQueDtcclxuICAgICAgICB2YXIgeXk6IG51bWJlciA9IExheWEuc3RhZ2UubW91c2VZIC0gYmdTdGFnZVBvaW50Lnk7XHJcblxyXG4gICAgICAgIHZhciBvYmw6IG51bWJlciA9IE1hdGguc3FydChNYXRoLnBvdyh4eCwgMikgKyBNYXRoLnBvdyh5eSwgMikpO1xyXG4gICAgICAgIHZhciByYWQ6IG51bWJlciA9IHl5IDwgMCA/IE1hdGguYWNvcyh4eCAvIG9ibCkgOiAoTWF0aC5QSSAqIDIgLSBNYXRoLmFjb3MoeHggLyBvYmwpKTtcclxuICAgICAgICB2YXIgYW5nbGU6IG51bWJlciA9IDE4MCAvIE1hdGguUEkgKiByYWQ7XHJcblxyXG4gICAgICAgIGlmIChvYmwgPiB0aGlzLl9tb3ZlUmFkaXVzKSB7XHJcbiAgICAgICAgICAgIHZhciB4OiBudW1iZXIgPSAodGhpcy5fbW92ZVJhZGl1cyAqIHh4KSAvIG9ibCArIGJnU3RhZ2VQb2ludC54O1xyXG4gICAgICAgICAgICB2YXIgeTogbnVtYmVyID0gKHRoaXMuX21vdmVSYWRpdXMgKiB5eSkgLyBvYmwgKyBiZ1N0YWdlUG9pbnQueTtcclxuICAgICAgICAgICAgdmFyIG1vdmVTcExvY2FsUG9pbnQgPSB0aGlzLl9iZ1NwLmdsb2JhbFRvTG9jYWwobmV3IExheWEuUG9pbnQoeCwgeSksIHRydWUpO1xyXG4gICAgICAgICAgICB0aGlzLl9tb3ZlU3AucG9zKG1vdmVTcExvY2FsUG9pbnQueCwgbW92ZVNwTG9jYWxQb2ludC55KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHZhciBwb3MgPSB0aGlzLl9iZ1NwLmdsb2JhbFRvTG9jYWwobmV3IExheWEuUG9pbnQoTGF5YS5zdGFnZS5tb3VzZVgsIExheWEuc3RhZ2UubW91c2VZKSwgdHJ1ZSk7XHJcbiAgICAgICAgICAgIHRoaXMuX21vdmVTcC5wb3MocG9zLngsIHBvcy55KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldFJvY2tlclZsYXVlKCk6IExheWEuUG9pbnQge1xyXG4gICAgICAgIHZhciBvdXRYID0gKHRoaXMuX21vdmVTcC54IC0gdGhpcy5fYmdTcC53aWR0aCAvIDIpIC8gdGhpcy5fbW92ZVJhZGl1cztcclxuICAgICAgICB2YXIgb3V0WSA9ICh0aGlzLl9tb3ZlU3AueSAtIHRoaXMuX2JnU3AuaGVpZ2h0IC8gMikgLyB0aGlzLl9tb3ZlUmFkaXVzO1xyXG4gICAgICAgIHZhciBkaXIgPSBuZXcgTGF5YS5Qb2ludChvdXRYLCBvdXRZKTtcclxuICAgICAgICAvLyBkaXIubm9ybWFsaXplKCk7XHJcbiAgICAgICAgcmV0dXJuIGRpcjtcclxuICAgIH1cclxuXHJcbiAgICBvblVwZGF0ZSgpIHtcclxuICAgICAgICBpZiAodGhpcy5tX2lzQ2xpY2spIHtcclxuICAgICAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9JbnB1dF9jc2pjLCB7IElucHV0VHlwZTogSW5wdXRUeXBlLlJvY2tlckF4aXMsIFZhbHVlOiB0aGlzLmdldFJvY2tlclZsYXVlKCkgfSk7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCk7XHJcbiAgICAgICAgICAgIC8vIEV2ZW50TWdyLmluc3RhbmNlLmRpc3BhdGNoKEV2ZW50RGVmLkdhbWVfTW92ZUlucHV0LCB0aGlzLmdldFJvY2tlclZsYXVlKCkpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5rZXlMaXN0Lmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgdGhpcy5rZXlEb3duID0gdHJ1ZTtcclxuICAgICAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9JbnB1dF9jc2pjLCB7IElucHV0VHlwZTogSW5wdXRUeXBlLlJvY2tlckF4aXMsIFZhbHVlOiBuZXcgTGF5YS5Qb2ludCgwLCAtMSkgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5rZXlEb3duID09IHRydWUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMua2V5RG93biA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9JbnB1dF9jc2pjLCB7IElucHV0VHlwZTogSW5wdXRUeXBlLlJvY2tlckF4aXMsIFZhbHVlOiBudWxsIH0pO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgb25rZXl1cChlKSB7XHJcbiAgICAgICAgZm9yIChsZXQgaTogbnVtYmVyID0gMDsgaSA8IHRoaXMua2V5TGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5rZXlMaXN0W2ldID09IGUua2V5Q29kZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5rZXlMaXN0LnNwbGljZShpLCAxKTtcclxuICAgICAgICAgICAgICAgIGJyZWFrO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9ua2V5ZG93bihlKSB7XHJcbiAgICAgICAgaWYgKHRoaXMua2V5TGlzdC5pbmRleE9mKGUua2V5Q29kZSkgPCAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMua2V5TGlzdC5wdXNoKGUua2V5Q29kZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IEV2ZW50TWdyX2NzamMgZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XHJcbmltcG9ydCB7IEV2ZW50RGVmX2NzamMgfSBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnREZWZcIjtcclxuaW1wb3J0IENoYXJhY3RlckN0ciBmcm9tIFwiLi9DaGFyYWN0ZXIvQ2hhcmFjdGVyQ3RyXCI7XHJcbmltcG9ydCBDYW1lcmFDdHIgZnJvbSBcIi4vQ2FtZXJhQ3RyXCI7XHJcbmltcG9ydCBEZXN0cnVjdGlibGVPYmogZnJvbSBcIi4vQ2hhcmFjdGVyL0Rlc3RydWN0aWJsZU9ialwiO1xyXG5pbXBvcnQgRW5lbXkgZnJvbSBcIi4vQ2hhcmFjdGVyL0VuZW15XCI7XHJcbmltcG9ydCBVc2VyX2NzamMgZnJvbSBcIi4uLy4uL1VzZXIvVXNlclwiO1xyXG5pbXBvcnQgQ2FtZXJhMlVJIGZyb20gXCIuL0NhbWVyYTJVSVwiO1xyXG5pbXBvcnQgeyBTdGF0ZUlEIH0gZnJvbSBcIi4vRnNtL0ZzbUVudW1cIjtcclxuaW1wb3J0IEJ1bGxldCBmcm9tIFwiLi9DaGFyYWN0ZXIvQnVsbGV0XCI7XHJcbmltcG9ydCBCb3NzUm9ib3QgZnJvbSBcIi4vQ2hhcmFjdGVyL0Jvc3NSb2JvdFwiO1xyXG5pbXBvcnQgeyBQbGF5ZXJUeXBlLCBDb2xsaXNpb25Hcm91cCB9IGZyb20gXCIuL0VudW1zXCI7XHJcbmltcG9ydCBEZXN0cnVjdGlibGVPYmpCdWlsZHMgZnJvbSBcIi4vQ2hhcmFjdGVyL0Rlc3RydWN0aWJsZU9iakJ1aWxkc1wiO1xyXG5pbXBvcnQgUG9vbE1hbmFnZXIgZnJvbSBcIi4vR2FtZVRvb2xzL1Bvb2xNYW5hZ2VyXCI7XHJcblxyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2NlbmVNZ3JfY3NjaiBleHRlbmRzIExheWEuU2NyaXB0M0Qge1xyXG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlO1xyXG4gICAgc3RhdGljIGdldCBJbnN0YW5jZSgpOiBTY2VuZU1ncl9jc2NqIHsgcmV0dXJuIHRoaXMuX2luc3RhbmNlIH1cclxuICAgIGdldCBDdXJyZW50U2NlbmUoKTogTGF5YS5TY2VuZTNEIHsgcmV0dXJuIHRoaXMub3duZXIgYXMgTGF5YS5TY2VuZTNEOyB9XHJcbiAgICBnZXQgUmVwbGFjZU9iaigpOiBMYXlhLlNwcml0ZTNEIHsgcmV0dXJuIHRoaXMuX3JlcGxhY2VPYmo7IH1cclxuICAgIGdldCBQbGF5ZXIoKTogQ2hhcmFjdGVyQ3RyIHsgcmV0dXJuIHRoaXMuX3BsYXllckN0cjsgfVxyXG4gICAgZ2V0IEJvc3MoKTogQ2hhcmFjdGVyQ3RyIHsgcmV0dXJuIHRoaXMuX2Jvc3M7IH1cclxuICAgIGdldCBCb3NzU3ByaXRlM0QoKTogTGF5YS5TcHJpdGUzRCB7IHJldHVybiB0aGlzLl9ib3NzLm93bmVyIGFzIExheWEuU3ByaXRlM0Q7IH1cclxuXHJcbiAgICBnZXQgUmVzdFRpbWVyKCk6IG51bWJlciB7IHJldHVybiBNYXRoLmZsb29yKHRoaXMuX3Jlc3RUaW1lcik7IH1cclxuICAgIGdldCBFbmVteUxpc3QoKTogQXJyYXk8RW5lbXk+IHsgcmV0dXJuIHRoaXMuX2VuZW15TGlzdDsgfVxyXG4gICAgZ2V0IEVuZW15TG9jTGlzdCgpOiBBcnJheTxhbnk+IHsgcmV0dXJuIHRoaXMuX2VuZW15TG9jTGlzdDsgfVxyXG4gICAgZ2V0IEVuZW1Db3VudCgpOiBudW1iZXIgeyByZXR1cm4gdGhpcy5fZW5lbXlDb3VudDsgfVxyXG4gICAgZ2V0IEVuZW15S2lsbENvdW50KCk6IG51bWJlciB7IHJldHVybiB0aGlzLl9lbmVteUtpbGxDb3VudDsgfVxyXG4gICAgZ2V0IENhbWVyYUN0cigpOiBDYW1lcmFDdHIgeyByZXR1cm4gdGhpcy5fY2FtZXJhQ3RyOyB9XHJcbiAgICBnZXQgRmlyZUVmZmVjdHMoKTogQXJyYXk8TGF5YS5TcHJpdGUzRD4geyByZXR1cm4gdGhpcy5fZmlyZUVmZmVjdHM7IH1cclxuICAgIGdldCBDdXJyTG9ja0VuZW15KCk6IExheWEuU3ByaXRlM0QgeyByZXR1cm4gdGhpcy5fY3VyckxvY2tFbmVteTsgfVxyXG4gICAgZ2V0IEN1cnJMb2NrRW5lbXlQb3MoKTogTGF5YS5WZWN0b3IzIHsgcmV0dXJuIHRoaXMuX2N1cnJMb2NrRW5lbXlQb3M7IH1cclxuICAgIGdldCBTdGF0ZUlkKCk6IFN0YXRlSUQgeyByZXR1cm4gdGhpcy5QbGF5ZXIuU3RhdGVJZCB9XHJcbiAgICBnZXQgUHJlZmFiKCk6TGF5YS5TcHJpdGUzRHtyZXR1cm4gdGhpcy5fcHJlZmFiTWFpbn1cclxuICAgIGdldCBHYW1lT3ZlcigpOiBudW1iZXIgeyByZXR1cm4gdGhpcy5fZ2FtZU92ZXI7IH1cclxuICAgIHNldCBHYW1lT3Zlcih2KSAgeyB0aGlzLl9nYW1lT3ZlciA9IHY7IH1cclxuICAgIGdldCBCb3NzVmlzaWJsZSgpIHsgcmV0dXJuIHRoaXMuX2Jvc3NJc1ZpdmlibGU7IH1cclxuICAgIHNldCBCb3NzVmlzaWJsZSh2KSB7ICB0aGlzLl9ib3NzSXNWaXZpYmxlPXY7IH1cclxuXHJcbiAgICBnZXQgUGxheWVyS2luZCgpOiBudW1iZXIgeyByZXR1cm4gdGhpcy5fcGxheWVyS2luZH1cclxuICAgIHNldCBQbGF5ZXJLaW5kKGtpbmQpIHsgdGhpcy5fcGxheWVyS2luZCA9IGtpbmR9XHJcblxyXG4gICAgZ2V0IEJvc3NLaW5kKCk6IG51bWJlciB7IHJldHVybiB0aGlzLl9ib3NzS2luZH1cclxuICAgIHNldCBCb3NzS2luZChraW5kKSB7IHRoaXMuX2Jvc3NLaW5kID0ga2luZH1cclxuXHJcblxyXG4gICAgU2NvbGU6IG51bWJlciA9IDA7XHJcbiAgICBwcml2YXRlIF9wbGF5ZXJDdHI6IENoYXJhY3RlckN0cjtcclxuICAgIHB1YmxpYyBDYW1lcmE6IExheWEuU3ByaXRlM0Q7XHJcbiAgICBwcml2YXRlIF9yZXBsYWNlT2JqOiBMYXlhLlNwcml0ZTNEO1xyXG4gICAgcHJpdmF0ZSBfZW5lbXlMaXN0OiBBcnJheTxFbmVteT4gPSBbXTtcclxuICAgIHByaXZhdGUgX2VuZW15QWxsTGlzdDogQXJyYXk8TGF5YS5TcHJpdGUzRD4gPSBbXTtcclxuICAgIHByaXZhdGUgX3Jlc3RUaW1lcjogbnVtYmVyID0gMDtcclxuICAgIHByaXZhdGUgX2dhbWVQbGF5aW5nOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBwcml2YXRlIF9lbmVteVByZWZhYjogTGF5YS5TcHJpdGUzRDtcclxuICAgIHByaXZhdGUgX2VuZW15TG9jTGlzdDogQXJyYXk8YW55PiA9IFtdO1xyXG4gICAgcHJpdmF0ZSBfZW5lbXlDb3VudDogbnVtYmVyID0gMDtcclxuICAgIHByaXZhdGUgX2VuZW15S2lsbENvdW50OiBudW1iZXIgPSAwO1xyXG4gICAgcHJpdmF0ZSBfZ2FtZU92ZXI6IG51bWJlciA9IDA7XHJcbiAgICBwcml2YXRlIF9wbGF5ZXJMb2M6IExheWEuU3ByaXRlM0Q7XHJcbiAgICBwcml2YXRlIF9jYW1lcmFDdHI6IENhbWVyYUN0cjtcclxuICAgIHByaXZhdGUgX2ZpcmVFZmZlY3RzOiBBcnJheTxMYXlhLlNwcml0ZTNEPiA9IFtdO1xyXG4gICAgcHJpdmF0ZSBfY3VyckxvY2tFbmVteTogTGF5YS5TcHJpdGUzRDtcclxuICAgIHByaXZhdGUgX2N1cnJMb2NrRW5lbXlQb3M6IExheWEuVmVjdG9yMztcclxuICAgIHByaXZhdGUgX3N0YXRlSWQ6IFN0YXRlSUQ7XHJcbiAgICBwcml2YXRlIF9ib3NzSXNWaXZpYmxlOmJvb2xlYW5cclxuXHJcbiAgICAvKipcclxuICAgICAqICDpooTliLbkvZNcclxuICAgICAqL1xyXG4gICAgcHJpdmF0ZSBfcHJlZmFiTWFpbjpMYXlhLlNwcml0ZTNEXHJcblxyXG4gICAgcHJpdmF0ZSBfcGxheWVyS2luZDpQbGF5ZXJUeXBlID0gUGxheWVyVHlwZS5UUmV4O1xyXG4gICAgcHJpdmF0ZSBfYm9zc0tpbmQ6UGxheWVyVHlwZSA9IFBsYXllclR5cGUuVFJleDtcclxuXHJcbiAgICBwcml2YXRlIF9ib3NzOkJvc3NSb2JvdDtcclxuXHJcbiAgICBvbkF3YWtlKCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLS0tLS0t6L+b5YWl5ri45oiPXCIpXHJcbiAgICAgICAgU2NlbmVNZ3JfY3Njai5faW5zdGFuY2UgPSB0aGlzO1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkdhbWVfR2FtZVNjZW5lTG9hZENvbXBlbGV0ZV9jc2pjKTtcclxuXHJcblxyXG4gICAgICAgIHRoaXMuQ2FtZXJhID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIk1haW4gQ2FtZXJhXCIpIGFzIExheWEuU3ByaXRlM0Q7XHJcbiAgICAgICAgdGhpcy5fY2FtZXJhQ3RyID0gdGhpcy5DYW1lcmEuYWRkQ29tcG9uZW50KENhbWVyYUN0cikgYXMgQ2FtZXJhQ3RyO1xyXG4gICAgICAgIHRoaXMuX3ByZWZhYk1haW4gPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiUHJlZmFiXCIpIGFzIExheWEuU3ByaXRlM0Q7XHJcblxyXG4gICAgICAgIHRoaXMuX3Jlc3RUaW1lciA9IDE1MDtcclxuICAgICAgICB0aGlzLkluaXRHYW1lT2JqZWN0cygpO1xyXG4gICAgICAgIHRoaXMucHJlZmFiTWdyKClcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOmihOWItuS9k+euoeeQhlxyXG4gICAgICovXHJcbiAgICBwcmVmYWJNZ3IoKVxyXG4gICAge1xyXG4gICAgICAgIHRoaXMuX3ByZWZhYk1haW4uYWN0aXZlID0gZmFsc2VcclxuICAgICAgICAvL+efs+WktFxyXG4gICAgICAgIFBvb2xNYW5hZ2VyLmdldEluc3RhbmNlKCkuSW5pdFBvb2woMCx0aGlzLl9wcmVmYWJNYWluLmdldENoaWxkQXQoMCkpOyBcclxuICAgICAgICBjb25zb2xlLmxvZyhcIi0qLS0tLS0tLS0tLS0tLS0tLS0tLS0t5a+56LGh5rGg6I635Y+WXCIsdGhpcy5fcHJlZmFiTWFpbi5nZXRDaGlsZEF0KDApKVxyXG5cclxuICAgIH1cclxuXHJcbiAgICBvbkVuYWJsZSgpIHtcclxuICAgICAgICB0aGlzLmFkZEV2ZW50KCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25EaXNhYmxlKCkge1xyXG4gICAgICAgIHRoaXMuUmVtb3ZlRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRFdmVudCgpIHtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlZ0V2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5HYW1lX0lucHV0X2NzamMsIHRoaXMsIHRoaXMuSW5wdXRfY3NqYyk7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5yZWdFdmVudF9jc2pjKEV2ZW50RGVmX2NzamMuRW5lbXlEZWFkLCB0aGlzLCB0aGlzLk9uRW5lbXlEZWFkKTtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlZ0V2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5TZWxlY3RIZXJvLCB0aGlzLCB0aGlzLk9uU2VsZWN0SGVybyk7XHJcblxyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxuICAgIFJlbW92ZUV2ZW50KCkge1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMucmVtb3ZlRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLkdhbWVfSW5wdXRfY3NqYywgdGhpcywgdGhpcy5JbnB1dF9jc2pjKTtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlbW92ZUV2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5FbmVteURlYWQsIHRoaXMsIHRoaXMuT25FbmVteURlYWQpO1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMucmVtb3ZlRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLlNlbGVjdEhlcm8sIHRoaXMsIHRoaXMuT25TZWxlY3RIZXJvKTtcclxuXHJcblxyXG4gICAgfVxyXG5cclxuICAgIE9uU2VsZWN0SGVybygpXHJcbiAgICB7XHJcbiAgICAgICAgbGV0IHBsYXllciA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJQbGF5ZXJcIikgYXMgTGF5YS5TcHJpdGUzRDtcclxuICAgICAgICBsZXQgYm9zcyA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJCb3NzXCIpIGFzIExheWEuU3ByaXRlM0Q7XHJcbiAgICAgICAgYm9zcyA9IHBsYXllci5jbG9uZSgpYXMgTGF5YS5TcHJpdGUzRFxyXG4gICAgICAgIHRoaXMub3duZXIuYWRkQ2hpbGQoYm9zcylcclxuICAgICAgICBib3NzLnRyYW5zZm9ybS5sb2NhbFBvc2l0aW9uWSs9NVxyXG4gICAgICAgIGJvc3MudHJhbnNmb3JtLnBvc2l0aW9uID0gbmV3IExheWEuVmVjdG9yMygwLDAsMClcclxuICAgICAgICBib3NzLm5hbWUgPSBcImJvc3NcIlxyXG4gICAgICAgIHRoaXMuX3BsYXllckN0ciA9IHBsYXllci5hZGRDb21wb25lbnQoQ2hhcmFjdGVyQ3RyKTtcclxuICAgICAgICB0aGlzLl9ib3NzID0gYm9zcy5hZGRDb21wb25lbnQoQm9zc1JvYm90KTtcclxuICAgICAgICB0aGlzLl9wbGF5ZXJMb2MgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiUGxheWVyTG9jXCIpIGFzIExheWEuU3ByaXRlM0Q7XHJcbiAgICAgICAgaWYgKFVzZXJfY3NqYy5nZXRMZXZlTnVtX2NzamMoKSA+PSAxKSB7XHJcbiAgICAgICAgICAgIGxldCBpbmRleCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHRoaXMuX3BsYXllckxvYy5udW1DaGlsZHJlbik7XHJcbiAgICAgICAgICAgIGxldCBsb2MgPSB0aGlzLl9wbGF5ZXJMb2MuZ2V0Q2hpbGRBdChpbmRleCkgYXMgTGF5YS5TcHJpdGUzRDtcclxuICAgICAgICAgICAgdGhpcy5fcGxheWVyQ3RyLkZvbGxvd09iai50cmFuc2Zvcm0ud29ybGRNYXRyaXggPSBsb2MudHJhbnNmb3JtLndvcmxkTWF0cml4LmNsb25lKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuQm9zc1Nwcml0ZTNELmFjdGl2ZSA9IGZhbHNlXHJcbiAgICAgICAgdGhpcy5fYm9zc0lzVml2aWJsZSA9IGZhbHNlXHJcblxyXG4gICAgICAgIC8vIHRoaXMuQm9zc1Nwcml0ZTNELnRyYW5zZm9ybS5sb2NhbFBvc2l0aW9uWT01Ly8gPSB0cnVlXHJcblxyXG5cclxuICAgIH1cclxuXHJcbiAgICBPbkVuZW15RGVhZCgpIHtcclxuICAgICAgICB0aGlzLl9lbmVteUtpbGxDb3VudCsrO1xyXG4gICAgICAgIC8vIHRoaXMuX2VuZW15Q291bnQgPSAxXHJcbiAgICAgICAgaWYgKHRoaXMuX2VuZW15S2lsbENvdW50ID49IHRoaXMuX2VuZW15Q291bnQpIHtcclxuICAgICAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuQm9zc1Zpc2libGUpO1xyXG4gICAgICAgICAgICB0aGlzLm9uQm9zc1Zpc2libGUoKVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICogYm9zc+WHuueOsFxyXG4gICAgICovXHJcbiAgICBvbkJvc3NWaXNpYmxlKClcclxuICAgIHtcclxuICAgICAgICB0aGlzLkJvc3NTcHJpdGUzRC5hY3RpdmUgPSB0cnVlXHJcbiAgICAgICAgdGhpcy5fYm9zc0lzVml2aWJsZSA9IHRydWVcclxuICAgICAgICAvLyB0aGlzLkJvc3NTcHJpdGUzRC50cmFuc2Zvcm0ubG9jYWxQb3NpdGlvblk9MFxyXG4gICAgfVxyXG5cclxuICAgIFBhdXNlR2FtZSgpIHtcclxuICAgICAgICB0aGlzLl9nYW1lUGxheWluZyA9IGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIFN0YXJ0R2FtZSgpIHtcclxuICAgICAgICB0aGlzLl9nYW1lUGxheWluZyA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgb25VcGRhdGUoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2dhbWVPdmVyICE9IDAgfHwgIXRoaXMuX2dhbWVQbGF5aW5nKSByZXR1cm47XHJcbiAgICAgICAgdGhpcy5fcmVzdFRpbWVyIC09IE1hdGgubWluKDUwLCBMYXlhLnRpbWVyLmRlbHRhKSAvIDEwMDA7XHJcbiAgICAgICAgaWYgKHRoaXMuX3Jlc3RUaW1lciA8PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3Jlc3RUaW1lciA9IDA7XHJcbiAgICAgICAgICAgIHRoaXMuR2FtZU92ZXIgPSAtMTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5DYUVuZW15TG9jKCk7XHJcbiAgICB9XHJcblxyXG4gICAgQ2FFbmVteUxvYygpIHtcclxuICAgICAgICB0aGlzLl9lbmVteUxvY0xpc3QgPSBbXTtcclxuICAgICAgICBsZXQgY2VudCA9IG5ldyBMYXlhLlBvaW50KExheWEuc3RhZ2Uud2lkdGggLyAyLCBMYXlhLnN0YWdlLmhlaWdodCAvIDIpO1xyXG4gICAgICAgIGxldCBjbG9zZURpcyA9IC0xO1xyXG4gICAgICAgIHRoaXMuX2N1cnJMb2NrRW5lbXlQb3MgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuX2N1cnJMb2NrRW5lbXkgPSBudWxsO1xyXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLkVuZW15TGlzdC5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgY29uc3QgZW5lbXkgPSB0aGlzLkVuZW15TGlzdFtpbmRleF07XHJcbiAgICAgICAgICAgIGlmIChlbmVteS5BbGl2ZSkge1xyXG4gICAgICAgICAgICAgICAgbGV0IHBvcyA9IGVuZW15LlNwcml0ZTNELnRyYW5zZm9ybS5wb3NpdGlvbi5jbG9uZSgpO1xyXG4gICAgICAgICAgICAgICAgcG9zLnkgKz0gMjtcclxuICAgICAgICAgICAgICAgIHBvcyA9IENhbWVyYTJVSS5Xb3JsZFRvU2NyZWVuMih0aGlzLkNhbWVyYSwgcG9zKVxyXG4gICAgICAgICAgICAgICAgbGV0IGluUmFuZ2UgPVxyXG4gICAgICAgICAgICAgICAgICAgIChwb3MueCA+IExheWEuc3RhZ2Uud2lkdGggKiAwLjI1KSAmJiAocG9zLnggPCBMYXlhLnN0YWdlLndpZHRoICogMC43NSkgLyogJiZcclxuICAgICAgICAgICAgICAgICAgICAocG9zLnkgPiBjZW50LnkgKiAwLjI1KSAmJiAocG9zLnkgPCBjZW50LnkgKiAwLjc1KSAqL1xyXG4gICAgICAgICAgICAgICAgaWYgKHBvcy56IDw9IDAgJiYgaW5SYW5nZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBkaXMgPSBNYXRoLnBvdygocG9zLnggLSBjZW50LngpLCAyKSArIE1hdGgucG93KChwb3MueSAtIGNlbnQueSksIDIpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChjbG9zZURpcyA9PSAtMSB8fCBjbG9zZURpcyA+IGRpcykge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjbG9zZURpcyA9IGRpcztcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VyckxvY2tFbmVteVBvcyA9IHBvcztcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5fY3VyckxvY2tFbmVteSA9IGVuZW15LlNwcml0ZTNEO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGxldCBkaXMgPSBMYXlhLlZlY3RvcjMuZGlzdGFuY2UodGhpcy5fcGxheWVyQ3RyLkZvbGxvd09iai50cmFuc2Zvcm0ucG9zaXRpb24sIGVuZW15LlNwcml0ZTNELnRyYW5zZm9ybS5wb3NpdGlvbik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9lbmVteUxvY0xpc3QucHVzaCh7IFBvc3Rpb246IHBvcywgRGlzdGFuY2U6IGRpcyB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOeOqeWutui+k+WFpVxyXG4gICAgICogXHJcbiAgICAgKiBAcGFyYW0ge0xheWEuUG9pbnR9IHBvaW50IFxyXG4gICAgICogQG1lbWJlcm9mIHJ5d19TY2VuZU1hbmFnZXJcclxuICAgICAqL1xyXG4gICAgcHVibGljIElucHV0X2NzamMocG9pbnQ6IExheWEuUG9pbnQpIHtcclxuICAgICAgICBpZiAodGhpcy5fZ2FtZU92ZXIgKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHBvaW50ID09IG51bGwpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLlgZzmraLovpPlhaVcIik7XHJcbiAgICAgICAgICAgIC8vIHRoaXMuX3BsYXllci5JbnB1dChwb2ludCk7XHJcbiAgICAgICAgICAgIC8vIHRoaXMuX3BsYXllckN0ci5QbGF5ZXJJZGxlKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAvLyB0aGlzLl9wbGF5ZXJDdHIuUGxheWVyTW92ZShwb2ludCk7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKGDovpPlhaXlgLwke3BvaW50fWApO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl9wbGF5ZXJDdHIuSW5wdXQocG9pbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIEluaXRHYW1lT2JqZWN0cygpIHtcclxuICAgICAgICBsZXQgYm91bmRhcnk6IExheWEuU3ByaXRlM0QgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQm91bmRhcnlcIikgYXMgTGF5YS5TcHJpdGUzRDtcclxuICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgYm91bmRhcnkubnVtQ2hpbGRyZW47IGluZGV4KyspIHtcclxuICAgICAgICAgICAgY29uc3QgZ3JvdW5kID0gYm91bmRhcnkuZ2V0Q2hpbGRBdChpbmRleCkuZ2V0Q29tcG9uZW50KExheWEuUGh5c2ljc0NvbXBvbmVudCk7XHJcbiAgICAgICAgICAgIGlmIChncm91bmQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuU2V0R3JvdW5kKGdyb3VuZCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IGJ1aWxkaW5ncyA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJCdWlsZGluZ3NcIikgYXMgTGF5YS5TcHJpdGUzRDtcclxuICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgYnVpbGRpbmdzLm51bUNoaWxkcmVuOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGJ1aWxkQ29sID0gYnVpbGRpbmdzLmdldENoaWxkQXQoaW5kZXgpLmdldENvbXBvbmVudChMYXlhLlBoeXNpY3NDb21wb25lbnQpO1xyXG4gICAgICAgICAgICBpZiAoYnVpbGRDb2wpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuU2V0Q2xpbWIoYnVpbGRDb2wpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCByb2FkT2JqID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlJvYWRPYmpcIikgYXMgTGF5YS5TcHJpdGUzRDtcclxuICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgcm9hZE9iai5udW1DaGlsZHJlbjsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICBjb25zdCBvYmogPSByb2FkT2JqLmdldENoaWxkQXQoaW5kZXgpO1xyXG4gICAgICAgICAgICBpZiAob2JqLmdldENvbXBvbmVudChMYXlhLlBoeXNpY3NDb21wb25lbnQpICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIG9iai5hZGRDb21wb25lbnQoRGVzdHJ1Y3RpYmxlT2JqKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByb2FkT2JqID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkJ1aWxkaW5nc1wiKSBhcyBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCByb2FkT2JqLm51bUNoaWxkcmVuOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IG9iaiA9IHJvYWRPYmouZ2V0Q2hpbGRBdChpbmRleCk7XHJcbiAgICAgICAgICAgIGlmIChvYmouZ2V0Q29tcG9uZW50KExheWEuUGh5c2ljc0NvbXBvbmVudCkgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgb2JqLmFkZENvbXBvbmVudChEZXN0cnVjdGlibGVPYmpCdWlsZHMpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX3JlcGxhY2VPYmogPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiUmVwbGFjZU9ialwiKSBhcyBMYXlhLlNwcml0ZTNEO1xyXG5cclxuICAgICAgICBsZXQgZnJlZU9iaiA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJGcmVlT2JqXCIpIGFzIExheWEuU3ByaXRlM0Q7XHJcbiAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IGZyZWVPYmoubnVtQ2hpbGRyZW47IGluZGV4KyspIHtcclxuICAgICAgICAgICAgY29uc3Qgb2JqQ29sID0gZnJlZU9iai5nZXRDaGlsZEF0KGluZGV4KS5nZXRDb21wb25lbnQoTGF5YS5QaHlzaWNzQ29tcG9uZW50KSBhcyBMYXlhLlBoeXNpY3NDb21wb25lbnQ7XHJcbiAgICAgICAgICAgIGlmIChvYmpDb2wpIHtcclxuICAgICAgICAgICAgICAgIG9iakNvbC5jb2xsaXNpb25Hcm91cCA9IENvbGxpc2lvbkdyb3VwLk9ic3RhY2xlO1xyXG4gICAgICAgICAgICAgICAgb2JqQ29sLmNhbkNvbGxpZGVXaXRoID0gQ29sbGlzaW9uR3JvdXAuTm9uZSB8IENvbGxpc2lvbkdyb3VwLkNoYXJhY3RlciB8IENvbGxpc2lvbkdyb3VwLkdyb3VuZCB8IENvbGxpc2lvbkdyb3VwLk9ic3RhY2xlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLkNyZWF0RW5lbXkoKTtcclxuICAgICBcclxuICAgIH1cclxuXHJcbiAgICBDcmVhdEVuZW15KCkge1xyXG4gICAgICAgIHRoaXMuX2VuZW15UHJlZmFiID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkVuZW15c1wiKS5nZXRDaGlsZEF0KDApIGFzIExheWEuU3ByaXRlM0Q7XHJcbiAgICAgICAgbGV0IGVuZW15QWxsID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkVuZW15QWxsTGlzdFwiKSBhcyBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgIGxldCBlbmVteUV4ID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkVuZW15RXhMaXN0XCIpIGFzIExheWEuU3ByaXRlM0Q7XHJcbiAgICAgICAgdGhpcy5fZW5lbXlDb3VudCA9IDE7XHJcbiAgICAgICAgaWYgKFVzZXJfY3NqYy5nZXRMZXZlTnVtX2NzamMoKSA9PSAxKSB7XHJcbiAgICAgICAgICAgIGlmIChNYXRoLnJhbmRvbSgpID4gMC41KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9lbmVteUNvdW50ID0gMjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChVc2VyX2NzamMuZ2V0TGV2ZU51bV9jc2pjKCkgPiAxICYmIFVzZXJfY3NqYy5nZXRMZXZlTnVtX2NzamMoKSA8IDMpIHtcclxuICAgICAgICAgICAgdGhpcy5fZW5lbXlDb3VudCA9IDMgKyBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiAzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2VuZW15Q291bnQgPSA0ICsgTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHdoaWxlICh0aGlzLl9lbmVteUxpc3QubGVuZ3RoIDwgdGhpcy5fZW5lbXlDb3VudCkge1xyXG4gICAgICAgICAgICBsZXQgZW5lbXlGYWtlID0gZW5lbXlBbGwuZ2V0Q2hpbGRBdChNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBlbmVteUFsbC5udW1DaGlsZHJlbikpIGFzIExheWEuU3ByaXRlM0Q7XHJcbiAgICAgICAgICAgIGxldCBlU3AgPSBMYXlhLlNwcml0ZTNELmluc3RhbnRpYXRlKHRoaXMuX2VuZW15UHJlZmFiLCB0aGlzLl9lbmVteVByZWZhYi5wYXJlbnQpO1xyXG4gICAgICAgICAgICBlU3AudHJhbnNmb3JtLndvcmxkTWF0cml4ID0gZW5lbXlGYWtlLnRyYW5zZm9ybS53b3JsZE1hdHJpeDtcclxuICAgICAgICAgICAgbGV0IGUgPSBlU3AuYWRkQ29tcG9uZW50KEVuZW15KTtcclxuICAgICAgICAgICAgdGhpcy5fZW5lbXlMaXN0LnB1c2goZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCByZCA9IE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDEpICsgMTtcclxuICAgICAgICB3aGlsZSAodGhpcy5fZW5lbXlMaXN0Lmxlbmd0aCA8IHRoaXMuX2VuZW15Q291bnQgKyByZCkge1xyXG4gICAgICAgICAgICBsZXQgZW5lbXlGYWtlID0gZW5lbXlFeC5nZXRDaGlsZEF0KE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGVuZW15RXgubnVtQ2hpbGRyZW4pKSBhcyBMYXlhLlNwcml0ZTNEO1xyXG4gICAgICAgICAgICBsZXQgZVNwID0gTGF5YS5TcHJpdGUzRC5pbnN0YW50aWF0ZSh0aGlzLl9lbmVteVByZWZhYiwgdGhpcy5fZW5lbXlQcmVmYWIucGFyZW50KTtcclxuICAgICAgICAgICAgZVNwLnRyYW5zZm9ybS53b3JsZE1hdHJpeCA9IGVuZW15RmFrZS50cmFuc2Zvcm0ud29ybGRNYXRyaXg7XHJcbiAgICAgICAgICAgIGxldCBlID0gZVNwLmFkZENvbXBvbmVudChFbmVteSk7XHJcbiAgICAgICAgICAgIHRoaXMuX2VuZW15TGlzdC5wdXNoKGUpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl9yZXN0VGltZXIgPSA2MCArICh0aGlzLl9lbmVteUxpc3QubGVuZ3RoKSAqIDMwO1xyXG4gICAgICAgIHRoaXMuX2VuZW15UHJlZmFiLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICB0aGlzLl9lbmVteVByZWZhYi5kZXN0cm95KCk7XHJcbiAgICB9XHJcblxyXG4gICAgU2V0R3JvdW5kKGdyb3VuZDogTGF5YS5QaHlzaWNzQ29tcG9uZW50KSB7XHJcbiAgICAgICAgZ3JvdW5kLmNvbGxpc2lvbkdyb3VwID0gQ29sbGlzaW9uR3JvdXAuT2JzdGFjbGU7XHJcbiAgICAgICAgZ3JvdW5kLmNhbkNvbGxpZGVXaXRoID0gQ29sbGlzaW9uR3JvdXAuTm9uZSB8IENvbGxpc2lvbkdyb3VwLkNoYXJhY3RlciB8IENvbGxpc2lvbkdyb3VwLk9ic3RhY2xlO1xyXG4gICAgfVxyXG5cclxuICAgIFNldENsaW1iKGJ1bGlkaW5nOiBMYXlhLlBoeXNpY3NDb21wb25lbnQpIHtcclxuICAgICAgICBidWxpZGluZy5jb2xsaXNpb25Hcm91cCA9IENvbGxpc2lvbkdyb3VwLkdyb3VuZDtcclxuICAgICAgICBidWxpZGluZy5jYW5Db2xsaWRlV2l0aCA9IENvbGxpc2lvbkdyb3VwLk5vbmUgfCBDb2xsaXNpb25Hcm91cC5DaGFyYWN0ZXIgfCBDb2xsaXNpb25Hcm91cC5PYnN0YWNsZTtcclxuICAgIH1cclxufSIsImltcG9ydCBVdGlsaXQgZnJvbSBcIi4uL1V0aWxpdFwiO1xyXG5pbXBvcnQgVmlld01ncl9jc2pjLCB7IFZpZXdEZWZfY3NqYyB9IGZyb20gXCIuLi9NZ3IvVmlld01nclwiO1xyXG5pbXBvcnQgVXNlcl9jc2pjIGZyb20gXCIuLi9Vc2VyL1VzZXJcIjtcclxuaW1wb3J0IEV2ZW50TWdyX2NzamMgZnJvbSBcIi4uL0V2ZW50L0V2ZW50TWdyXCI7XHJcbmltcG9ydCB7IEV2ZW50RGVmX2NzamMgfSBmcm9tIFwiLi4vRXZlbnQvRXZlbnREZWZcIjtcclxuaW1wb3J0IFdYQVBJX2NzamMgZnJvbSBcIi4uL1BsYXRmb3JtQXBpL1dYQVBJXCI7XHJcbmltcG9ydCBDYWNoZWRXWEJhbm5lckFkX2NzamMgZnJvbSBcIi4uL1BsYXRmb3JtQXBpL0NhY2hlZFdYQmFubmVyQWRcIjtcclxuaW1wb3J0IFNraW5NZ3JfY3NqYyBmcm9tIFwiLi4vTWdyL1NraW5NZ3JcIjtcclxuaW1wb3J0IFNjZW5lTWdyX2NzamMgZnJvbSBcIi4vR2FtZUNvcmUvU2NlbmVNZ3JcIjtcclxuaW1wb3J0IFNvdW5kTWdyX2NzamMgZnJvbSBcIi4uL01nci9Tb3VuZE1nclwiO1xyXG5pbXBvcnQgVG1BYlRlc3RNZ3JfY3NqYyBmcm9tIFwiLi4vVG1BUEkvVG1BQlRlc3RNZ3JcIjtcclxuaW1wb3J0IEV4YW1pbmVNZ3IgZnJvbSBcIi4uL0NvbW1vbUFQSS9FeGFtaW5lTWdyXCI7XHJcbmltcG9ydCBUbUFQSSBmcm9tIFwiLi4vVG1BUEkvVG1BUElcIjtcclxuXHJcblxyXG4vL+a4uOaIj+euoeeQhuWZqO+8jOa4uOaIj+S7o+eggeeahOWFpeWPo1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lTWdyX2NzamMgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcblxyXG4gICAgcHJpdmF0ZSBzdGF0aWMgX2luc3RhbmNlOiBHYW1lTWdyX2NzamMgPSBudWxsO1xyXG4gICAgcHVibGljIHN0YXRpYyBnZXRJbnN0YW5jZSgpOiBHYW1lTWdyX2NzamMgeyByZXR1cm4gR2FtZU1ncl9jc2pjLl9pbnN0YW5jZTsgfVxyXG5cclxuICAgIHB1YmxpYyBGaXJzdEFkOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICAgICAgR2FtZU1ncl9jc2pjLl9pbnN0YW5jZSA9IHRoaXM7XHJcbiAgICB9XHJcblxyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgV1hBUElfY3NqYy5TZXRTaGFyZU1lbnVfY3NqYyhcIlwiLCBcIlwiLFxyXG4gICAgICAgICAgICAgICAgKCkgPT4ge1xyXG5cclxuICAgICAgICAgICAgICAgIH0sXHJcbiAgICAgICAgICAgICAgICAoKSA9PiB7XHJcblxyXG4gICAgICAgICAgICAgICAgfSxcclxuICAgICAgICAgICAgICAgICgpID0+IHtcclxuXHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1snd3gnXS5vblNob3coKHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYOeoi+W6j+i/lOWbnizlj4LmlbDkuLoke3Jlc30s5Zy65pmv5YC8JHtyZXMuc2NlbmV9YCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMuZ2V0Vmlld19jc2pjKFZpZXdEZWZfY3NqYy5NYWluR2FtZVZpZXcpICE9IG51bGxcclxuICAgICAgICAgICAgICAgICAgICB8fCBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5nZXRWaWV3X2NzamMoVmlld0RlZl9jc2pjLkluR2FtZVZpZXcpICE9IG51bGxcclxuICAgICAgICAgICAgICAgICAgICAvLyB8fCBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5nZXRWaWV3X2NzamMoVmlld0RlZl9jc2pjLlN1cGVyU3RhcnRDbGljazEpICE9IG51bGxcclxuICAgICAgICAgICAgICAgICAgICAvLyB8fCBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5nZXRWaWV3X2NzamMoVmlld0RlZl9jc2pjLlN1cGVyU3RhcnRDbGljazIpICE9IG51bGxcclxuICAgICAgICAgICAgICAgICAgICAvLyB8fCBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5nZXRWaWV3X2NzamMoVmlld0RlZl9jc2pjLlNpZ25JblZpZXcpICE9IG51bGxcclxuICAgICAgICAgICAgICAgICAgICAvLyB8fCBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5nZXRWaWV3X2NzamMoVmlld0RlZl9jc2pjLkdldFNraW5WaWV3KSAhPSBudWxsXHJcbiAgICAgICAgICAgICAgICAgICAgLy8gfHwgVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMuZ2V0Vmlld19jc2pjKFZpZXdEZWZfY3NqYy5TdXBlclN0YXJ0VmlldykgIT0gbnVsbFxyXG4gICAgICAgICAgICAgICAgKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgU291bmRNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLnBsYXlCR01fY3NqYyhcIkJnbTJcIik7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvKiBsZXQgYWJ0ZXN0ID0gVG1BYlRlc3RNZ3JfY3NqYy5JbnN0YW5jZV9jc2pjLkdldEFCVGVzdEJ5R3JvdXBJZF9jc2pjKDg4KTtcclxuICAgICAgICAgICAgICAgIGlmIChhYnRlc3QuZ3JvdXBJZCA9PSAxMDAxNzIpIHsgKi9cclxuICAgICAgICAgICAgICAgIC8qIGxldCBzY2VuZUdvb2QgPSByZXMuc2NlbmUgPT0gMTAzNyB8fCByZXMuc2NlbmUgPT0gMTAzOCB8fCByZXMuc2NlbmUgPT0gMTA4OTtcclxuICAgICAgICAgICAgICAgIGxldCB2aWV3R29vZCA9IFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLmdldFZpZXdfY3NqYyhWaWV3RGVmX2NzamMuSW5HYW1lVmlldykgPT0gbnVsbFxyXG4gICAgICAgICAgICAgICAgICAgICYmIFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLmdldFZpZXdfY3NqYyhWaWV3RGVmX2NzamMuU3VwZXJTdGFydENsaWNrKSA9PSBudWxsO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYOWIhuS6q+Wksei0peaJk+W8gOWvvOWHuizlnLrmma/lgLw6JHtyZXMuc2NlbmV9YCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoc2NlbmVHb29kICYmIHZpZXdHb29kKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYgKFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLmdldFZpZXdfY3NqYyhWaWV3RGVmX2NzamMuRXhwb3J0MkFkVmlldykgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5vcGVuVmlld19jc2pjKFZpZXdEZWZfY3NqYy5FeHBvcnQyQWRWaWV3KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9ICovXHJcbiAgICAgICAgICAgICAgICAvKiB9ICovXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIFd1ZGlhbk1nci5VcGRhdGVJcEJsb2NrU3RhdGUoKTtcclxuICAgICAgICBMYXlhLlNvdW5kTWFuYWdlci51c2VBdWRpb011c2ljID0gZmFsc2U7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5yZWdFdmVudF9jc2pjKEV2ZW50RGVmX2NzamMuQURfT25TaGFyZUFkRmFpbF9jc2pjLCB0aGlzLCB0aGlzLkFEU2hhcmVGYWlsKTtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlZ0V2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5BRF9PblNoYXJlQWRTdWNjZXNzX2NzamMsIHRoaXMsIHRoaXMuU2hhcmVBZFN1Y2Nlc3MpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uU3RhcnQoKSB7XHJcbiAgICAgICAgdGhpcy5wcmVDcmVhdGVHYW1lX2NzamMoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHByZUNyZWF0ZUdhbWVfY3NqYygpOiB2b2lkIHtcclxuICAgICAgICAvL3RvZG/vvJrov5nph4zmt7vliqDliJ3lp4vljJbkuLvlnLrmma/nmoTku6PnoIHjgIJFdmVudE1nci5kaXNwYXRjaChFdmVudERlZi5BcHBfQ2xvc2VGaXJzdExvYWRpbmdWaWV3KTsg5re75Yqg5Yiw5L2g55qE5YWz5Y2h5Yqg6L295a6M5oiQ55qE5Zue6LCD5Lit77yM5YWz6Zet5Yqg6L2955WM6Z2iXHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5yZWdPbmNlRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLkdhbWVfR2FtZVNjZW5lTG9hZENvbXBlbGV0ZV9jc2pjLCB0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLm9wZW5WaWV3X2NzamMoVmlld0RlZl9jc2pjLk1haW5HYW1lVmlldyk7XHJcbiAgICAgICAgICAgIC8vIFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLm9wZW5WaWV3X2NzamMoVmlld0RlZl9jc2pjLkhFeHBvcnQxQWRWaWV3KTtcclxuICAgICAgICAgICAgLy8gVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMub3BlblZpZXdfY3NqYyhWaWV3RGVmX2NzamMuTWFpbkdhbWVWaWV3LCB7IFNob3dTa2luOiBmYWxzZSB9KTtcclxuICAgICAgICAgICAgLy8gaWYgKEV4YW1pbmVNZ3IuQ2FuU2hvd0FkX1d4KSB7XHJcbiAgICAgICAgICAgIC8vICAgICBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5vcGVuVmlld19jc2pjKFZpZXdEZWZfY3NqYy5FeHBvcnQyQWRWaWV3KTtcclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgIH0pXHJcbiAgICAgICAgdGhpcy5DcmVhdEdhbWVTY2VuZSgpO1xyXG4gICAgICAgIHRoaXMuQ3JlYXRPcGVuQ29udGV4dCgpO1xyXG4gICAgfVxyXG5cclxuICAgIC8vI3JlZ2lvbiDoh6rlt7HnmoTku6PnoIFcclxuXHJcbiAgICAvKiDlvZPliY3lnLrmma/nmoTlvJXnlKggKi9cclxuICAgIHB1YmxpYyBHYW1lTG9zZTogbnVtYmVyID0gMDtcclxuXHJcbiAgICBwcml2YXRlIF9jdXJyZW50U2NlbmU6IExheWEuU2NlbmUzRDtcclxuICAgIHB1YmxpYyBnZXQgQ3VycmVudFNjZW5lKCk6IExheWEuU2NlbmUzRCB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2N1cnJlbnRTY2VuZTtcclxuICAgIH1cclxuXHJcbiAgICAvKiDlvZPliY3nrYnnuqcgKi9cclxuXHJcbiAgICBwdWJsaWMgZ2V0IEN1cnJlbnRMZXZlbCgpOiBudW1iZXIge1xyXG4gICAgICAgIHJldHVybiBVc2VyX2NzamMuZ2V0TGV2ZU51bV9jc2pjKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliqDovb3kuIvkuIDlhbPmuLjmiI/lnLrmma9cclxuICAgICAqIFxyXG4gICAgICogQG1lbWJlcm9mIEdhbWVNYW5hZ2VyXHJcbiAgICAgKi9cclxuICAgIENyZWF0TmV4dEdhbWVTY2VuZSgpIHtcclxuICAgICAgICBsZXQgbGV2ID0gVXNlcl9jc2pjLmdldExldmVOdW1fY3NqYygpO1xyXG4gICAgICAgIGxldisrO1xyXG4gICAgICAgIFVzZXJfY3NqYy5zZXRMZXZlTnVtX2NzamMobGV2KTtcclxuICAgICAgICBVc2VyX2NzamMuU2F2ZUdhbWVEYXRhX2NzamMoKTtcclxuICAgICAgICB0aGlzLkNyZWF0R2FtZVNjZW5lKCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDliqDovb3muLjmiI/lnLrmma9cclxuICAgICAqIFxyXG4gICAgICogQG1lbWJlcm9mIEdhbWVNYW5hZ2VyXHJcbiAgICAgKi9cclxuICAgIENyZWF0R2FtZVNjZW5lKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9jdXJyZW50U2NlbmUpIHtcclxuICAgICAgICAgICAgbGV0IGRpcmVjdGlvbkxpZ2h0OiBMYXlhLkRpcmVjdGlvbkxpZ2h0ID0gdGhpcy5fY3VycmVudFNjZW5lLmdldENoaWxkQnlOYW1lKFwiRGlyZWN0aW9uYWwgTGlnaHRcIikgYXMgTGF5YS5EaXJlY3Rpb25MaWdodFxyXG4gICAgICAgICAgICBkaXJlY3Rpb25MaWdodC5zaGFkb3cgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5fY3VycmVudFNjZW5lLnJlbW92ZVNlbGYoKTtcclxuICAgICAgICAgICAgdGhpcy5fY3VycmVudFNjZW5lLmRlc3Ryb3koKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgbGV0IHVybDogc3RyaW5nID0gXCJcIjtcclxuICAgICAgICBsZXQgdHVyZUxldiA9IFwiMVwiO1xyXG4gICAgICAgIHVybCA9IFwic3ViUmVzL0xheWFTY2VuZV8xL0NvbnZlbnRpb25hbC9cIiArIHR1cmVMZXYgKyBcIi5sc1wiO1xyXG4gICAgICAgIC8qIGxldCBhYnRlc3QgPSBUbUFiVGVzdE1ncl9jc2pjLkluc3RhbmNlX2NzamMuR2V0QUJUZXN0QnlHcm91cElkX2NzamMoODYpOyAqL1xyXG4gICAgICAgIC8vIC8qIGlmIChhYnRlc3QuZ3JvdXBJZCA9PSAxMDAxNjYpICAqL3tcclxuICAgICAgICAvLyAgICAgY29uc29sZS5sb2coXCLotZvpgZPliqDplb9cIik7XHJcbiAgICAgICAgLy8gICAgIGlmICh0dXJlTGV2IDw9IDQpIHtcclxuICAgICAgICAvLyAgICAgICAgIHVybCA9IFwic3ViUmVzL0xheWFTY2VuZV9NYWluL0NvbnZlbnRpb25hbC9cIiArIHR1cmVMZXYgKyBcIi0xLmxzXCI7XHJcbiAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAvLyAgICAgZWxzZSB7XHJcbiAgICAgICAgLy8gICAgICAgICB1cmwgPSBcInN1YlJlcy9MYXlhU2NlbmVfTWFpbi9Db252ZW50aW9uYWwvXCIgKyB0dXJlTGV2ICsgXCIubHNcIjtcclxuICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgIC8vIH1cclxuICAgICAgICAvKiBlbHNlIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLotZvpgZPkuI3liqDplb9cIik7XHJcbiAgICAgICAgfSAqL1xyXG4gICAgICAgIExheWEuU2NlbmUzRC5sb2FkKHVybCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCB0aGlzLkxvYWRDb21wbGV0ZSkpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Yqg6L295a6M5oiQ5LmL5ZCO6ZyA6KaB5omn6KGM55qE5pa55rOV77yM5YyF5ous5LqGXHJcbiAgICAgKiAx77ya5Yid5aeL5YyW6LWb6YGTXHJcbiAgICAgKiAy77ya5Yid5aeL5YyW546p5a625o6n5Yi26ISa5pysXHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7TGF5YS5TY2VuZTNEfSBzY2VuZSBcclxuICAgICAqIEBtZW1iZXJvZiBHYW1lTWFuYWdlclxyXG4gICAgICovXHJcbiAgICBMb2FkQ29tcGxldGUoc2NlbmU6IExheWEuU2NlbmUzRCkge1xyXG4gICAgICAgIHRoaXMuX2N1cnJlbnRTY2VuZSA9IHNjZW5lO1xyXG4gICAgICAgIExheWEuc3RhZ2UuYWRkQ2hpbGRBdCh0aGlzLl9jdXJyZW50U2NlbmUsIDApO1xyXG4gICAgICAgIHRoaXMuX2N1cnJlbnRTY2VuZS5hZGRDb21wb25lbnQoU2NlbmVNZ3JfY3NqYyk7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9PbkxldmVsU3RhcnRfY3NqYyk7XHJcbiAgICB9XHJcbiAgICAvLyNlbmRyZWdpb25cclxuXHJcbiAgICBBRFNoYXJlRmFpbCgpIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIkFkU2hhcmVGYWlsXCIpO1xyXG4gICAgICAgIC8qIGxldCBhYnRlc3QgPSBUbUFiVGVzdE1ncl9jc2pjLkluc3RhbmNlX2NzamMuR2V0QUJUZXN0QnlHcm91cElkX2NzamMoODMpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWIhuS6q+Wksei0peaJk+W8gOWvvOWHulwiKTtcclxuICAgICAgICAgICAgaWYgKEV4YW1pbmVNZ3IuQ2FuU2hvd0FkX1d4ICYmXHJcbiAgICAgICAgICAgICAgICBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5nZXRWaWV3X2NzamMoVmlld0RlZl9jc2pjLkV4cG9ydDJBZFZpZXcpID09IG51bGwgJiZcclxuICAgICAgICAgICAgICAgIFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLmdldFZpZXdfY3NqYyhWaWV3RGVmX2NzamMuRXhwb3J0MUFkVmlldykgPT0gbnVsbFxyXG4gICAgICAgICAgICApIHtcclxuICAgICAgICAgICAgICAgIFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLm9wZW5WaWV3X2NzamMoVmlld0RlZl9jc2pjLkV4cG9ydDJBZFZpZXcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgLyogZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5YiG5Lqr5aSx6LSl5LiN5omT5byA5a+85Ye6XCIpO1xyXG4gICAgICAgIH0gKi9cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIF9teV9vcGVuO1xyXG4gICAgQ3JlYXRPcGVuQ29udGV4dCgpIHtcclxuICAgICAgICB0aGlzLl9teV9vcGVuID0gbmV3IExheWEuV1hPcGVuRGF0YVZpZXdlcigpO1xyXG4gICAgICAgIHRoaXMuX215X29wZW4ud2lkdGggPSBMYXlhLnN0YWdlLndpZHRoO1xyXG4gICAgICAgIHRoaXMuX215X29wZW4uaGVpZ2h0ID0gTGF5YS5zdGFnZS5oZWlnaHQ7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IENvbnRleHQoKTogTGF5YS5XWE9wZW5EYXRhVmlld2VyIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fbXlfb3BlbjtcclxuICAgIH1cclxuXHJcbiAgICBTaGFyZUFkU3VjY2VzcyhzdHlsZSkge1xyXG4gICAgICAgIC8v6aaW6aG15a+85Ye6XHJcbiAgICAgICAgaWYgKFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLmdldFZpZXdfY3NqYyhWaWV3RGVmX2NzamMuTWFpbkdhbWVWaWV3KSkge1xyXG4gICAgICAgICAgICBUbUFQSS5TZW5kRXZlbnQoXCJFeHBvcnRBZFwiLCB7IFZpZXc6IDEsIFN0eWxlOiBzdHlsZSB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy/muLjmiI/pobXlr7zlh7pcclxuICAgICAgICBlbHNlIGlmIChWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5nZXRWaWV3X2NzamMoVmlld0RlZl9jc2pjLkluR2FtZVZpZXcpKSB7XHJcbiAgICAgICAgICAgIFRtQVBJLlNlbmRFdmVudChcIkV4cG9ydEFkXCIsIHsgVmlldzogMiwgU3R5bGU6IHN0eWxlIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5nZXRWaWV3X2NzamMoVmlld0RlZl9jc2pjLkhFeHBvcnQxQWRWaWV3KSkge1xyXG4gICAgICAgICAgICBUbUFQSS5TZW5kRXZlbnQoXCJFeHBvcnRBZFwiLCB7IFZpZXc6IDMsIFN0eWxlOiBzdHlsZSB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAoVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMuZ2V0Vmlld19jc2pjKFZpZXdEZWZfY3NqYy5HYW1lT3ZlcldpblZpZXcpIHx8XHJcbiAgICAgICAgICAgIFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLmdldFZpZXdfY3NqYyhWaWV3RGVmX2NzamMuR2FtZU92ZXJGYWlsVmlldylcclxuICAgICAgICApIHtcclxuICAgICAgICAgICAgVG1BUEkuU2VuZEV2ZW50KFwiRXhwb3J0QWRcIiwgeyBWaWV3OiA0LCBTdHlsZTogc3R5bGUgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLmdldFZpZXdfY3NqYyhWaWV3RGVmX2NzamMuRnJpZW5kRXhwb3J0VmlldykpIHtcclxuICAgICAgICAgICAgVG1BUEkuU2VuZEV2ZW50KFwiRXhwb3J0QWRcIiwgeyBWaWV3OiA1LCBTdHlsZTogc3R5bGUgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLmdldFZpZXdfY3NqYyhWaWV3RGVmX2NzamMuSEV4cG9ydDJBZFZpZXcpKSB7XHJcbiAgICAgICAgICAgIFRtQVBJLlNlbmRFdmVudChcIkV4cG9ydEFkXCIsIHsgVmlldzogNiwgU3R5bGU6IHN0eWxlIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufVxyXG4iLCJpbXBvcnQgRXZlbnRNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcclxuaW1wb3J0IHsgRXZlbnREZWZfY3NqYyB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xyXG5pbXBvcnQgeyBJbnB1dFR5cGUsIFBsYXllclR5cGUgfSBmcm9tIFwiLi4vR2FtZUNvcmUvRW51bXNcIjtcclxuaW1wb3J0IFNjZW5lTWdyX2NzY2ogZnJvbSBcIi4uL0dhbWVDb3JlL1NjZW5lTWdyXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdG5QYW5lbCBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIC8v5oGQ6b6ZdWlcclxuICAgIHByaXZhdGUgX3RSZXhQYW5sZTogTGF5YS5VSUNvbXBvbmVudDtcclxuICAgIHByaXZhdGUgX1JUcmFuc0J0bjogTGF5YS5VSUNvbXBvbmVudDtcclxuICAgIHByaXZhdGUgX2F0dGFja0J0bjogTGF5YS5VSUNvbXBvbmVudDtcclxuICAgIHByaXZhdGUgX2p1bXBCdG46IExheWEuVUlDb21wb25lbnQ7XHJcbiAgICBwcml2YXRlIF9maXJlQnRuOiBMYXlhLlVJQ29tcG9uZW50O1xyXG5cclxuXHJcbiAgICAvL+mHkeWImnVpXHJcbiAgICBwcml2YXRlIF9raW5nS29uZ1BhbmxlOiBMYXlhLlVJQ29tcG9uZW50O1xyXG4gICAgcHJpdmF0ZSBfa2luZ0tvbmdBdGtCdG46IExheWEuVUlDb21wb25lbnQ7XHJcbiAgICBwcml2YXRlIF9raW5nS29uZ0p1bXBCdG46IExheWEuVUlDb21wb25lbnQ7XHJcbiAgICBwcml2YXRlIF9raW5nS29uZ0ZpcmVCdG5CdG46IExheWEuVUlDb21wb25lbnQ7XHJcblxyXG4gICAgXHJcbiAgICBcclxuICAgIC8vIHByaXZhdGUgX2F0dGFja0J0bjogTGF5YS5VSUNvbXBvbmVudDtcclxuICAgIC8vIHByaXZhdGUgX2p1bXBCdG46IExheWEuVUlDb21wb25lbnQ7XHJcblxyXG4gICAgLy/nv7zpvpl1aVxyXG4gICAgLy8gcHJpdmF0ZSBfcHRlclBhbmVsOiBMYXlhLlVJQ29tcG9uZW50O1xyXG4gICAgLy8gcHJpdmF0ZSBfZnJvbnRCdG46IExheWEuVUlDb21wb25lbnQ7XHJcbiAgICAvLyBwcml2YXRlIF9iYWNrQnRuOiBMYXlhLlVJQ29tcG9uZW50O1xyXG4gICAgLy8gcHJpdmF0ZSBfdXBCdG46IExheWEuVUlDb21wb25lbnQ7XHJcbiAgICAvLyBwcml2YXRlIF9sZWZ0QnRuOiBMYXlhLlVJQ29tcG9uZW50O1xyXG4gICAgLy8gcHJpdmF0ZSBfcmlnaHRCdG46IExheWEuVUlDb21wb25lbnQ7XHJcbiAgICAvLyBwcml2YXRlIF9kb3duQnRuOiBMYXlhLlVJQ29tcG9uZW50O1xyXG4gICAgLy8gcHJpdmF0ZSBfZmlyZUJhbGxCdG46IExheWEuVUlDb21wb25lbnQ7XHJcbiAgICAvLyBwcml2YXRlIF9DVHJhbnNCdG46IExheWEuVUlDb21wb25lbnQ7XHJcblxyXG5cclxuICAgIHByaXZhdGUgX2xlZnQ6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIHByaXZhdGUgX3JpZ2h0OiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBwcml2YXRlIF9mcm9udDogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgcHJpdmF0ZSBfYmFjazogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgcHJpdmF0ZSBfdXA6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIHByaXZhdGUgX2Rvd246IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIHByaXZhdGUgX2ZpcmU6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIG9uQXdha2UoKSB7XHJcbiAgICAgICAgdGhpcy5fdFJleFBhbmxlID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlRSZXhQYW5lbFwiKSBhcyBMYXlhLlVJQ29tcG9uZW50O1xyXG5cclxuICAgICAgICB0aGlzLl9SVHJhbnNCdG4gPSB0aGlzLl90UmV4UGFubGUuZ2V0Q2hpbGRCeU5hbWUoXCJUcmFuc0J0blwiKSBhcyBMYXlhLlVJQ29tcG9uZW50O1xyXG4gICAgICAgIHRoaXMuX2F0dGFja0J0biA9IHRoaXMuX3RSZXhQYW5sZS5nZXRDaGlsZEJ5TmFtZShcIkF0dGFja0J0blwiKSBhcyBMYXlhLlVJQ29tcG9uZW50O1xyXG4gICAgICAgIHRoaXMuX2p1bXBCdG4gPSB0aGlzLl90UmV4UGFubGUuZ2V0Q2hpbGRCeU5hbWUoXCJKdW1wQnRuXCIpIGFzIExheWEuVUlDb21wb25lbnQ7XHJcbiAgICAgICAgdGhpcy5fZmlyZUJ0biA9IHRoaXMuX3RSZXhQYW5sZS5nZXRDaGlsZEJ5TmFtZShcIkZpcmVCdG5cIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcclxuXHJcbiAgICAgICAgLy/ph5HliJrmiJjmlpd1aVxyXG4gICAgICAgIHRoaXMuX2tpbmdLb25nUGFubGUgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiS2luZ2tvbmdQYW5lbFwiKSBhcyBMYXlhLlVJQ29tcG9uZW50O1xyXG5cclxuICAgICAgICB0aGlzLl9raW5nS29uZ0F0a0J0biA9IHRoaXMuX2tpbmdLb25nUGFubGUuZ2V0Q2hpbGRCeU5hbWUoXCJBdHRhY2tCdG5cIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcclxuICAgICAgICB0aGlzLl9raW5nS29uZ0p1bXBCdG4gPSB0aGlzLl9raW5nS29uZ1BhbmxlLmdldENoaWxkQnlOYW1lKFwiSnVtcEJ0blwiKSBhcyBMYXlhLlVJQ29tcG9uZW50O1xyXG4gICAgICAgIHRoaXMuX2tpbmdLb25nRmlyZUJ0bkJ0biA9IHRoaXMuX2tpbmdLb25nUGFubGUuZ2V0Q2hpbGRCeU5hbWUoXCJGaXJlQnRuXCIpIGFzIExheWEuVUlDb21wb25lbnQ7XHJcbiAgICAgICAgXHJcbiAgICAgICAgLy8gdGhpcy5fanVtcEJ0biA9IHRoaXMuX3RSZXhQYW5sZS5nZXRDaGlsZEJ5TmFtZShcIkp1bXBCdG5cIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcclxuICAgICAgICAvLyB0aGlzLl9maXJlQnRuID0gdGhpcy5fdFJleFBhbmxlLmdldENoaWxkQnlOYW1lKFwiRmlyZUJ0blwiKSBhcyBMYXlhLlVJQ29tcG9uZW50O1xyXG5cclxuXHJcbiAgICAgICAgLy8gLy/nv7zpvpnmiJjmlpd1aVxyXG4gICAgICAgIC8vIHRoaXMuX3B0ZXJQYW5lbCA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJQdGVyUGFuZWxcIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcclxuICAgICAgICAvLyB0aGlzLl9mcm9udEJ0biA9IHRoaXMuX3B0ZXJQYW5lbC5nZXRDaGlsZEJ5TmFtZShcIkZyb250QnRuXCIpIGFzIExheWEuVUlDb21wb25lbnQ7XHJcbiAgICAgICAgLy8gdGhpcy5fYmFja0J0biA9IHRoaXMuX3B0ZXJQYW5lbC5nZXRDaGlsZEJ5TmFtZShcIkJhY2tCdG5cIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcclxuICAgICAgICAvLyB0aGlzLl9yaWdodEJ0biA9IHRoaXMuX3B0ZXJQYW5lbC5nZXRDaGlsZEJ5TmFtZShcIlJpZ2h0QnRuXCIpIGFzIExheWEuVUlDb21wb25lbnQ7XHJcbiAgICAgICAgLy8gdGhpcy5fbGVmdEJ0biA9IHRoaXMuX3B0ZXJQYW5lbC5nZXRDaGlsZEJ5TmFtZShcIkxlZnRCdG5cIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcclxuICAgICAgICAvLyB0aGlzLl91cEJ0biA9IHRoaXMuX3B0ZXJQYW5lbC5nZXRDaGlsZEJ5TmFtZShcIlVwQnRuXCIpIGFzIExheWEuVUlDb21wb25lbnQ7XHJcbiAgICAgICAgLy8gdGhpcy5fZG93bkJ0biA9IHRoaXMuX3B0ZXJQYW5lbC5nZXRDaGlsZEJ5TmFtZShcIkRvd25CdG5cIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcclxuICAgICAgICAvLyB0aGlzLl9DVHJhbnNCdG4gPSB0aGlzLl9wdGVyUGFuZWwuZ2V0Q2hpbGRCeU5hbWUoXCJUcmFuc0J0blwiKSBhcyBMYXlhLlVJQ29tcG9uZW50O1xyXG4gICAgICAgIC8vIHRoaXMuX2ZpcmVCYWxsQnRuID0gdGhpcy5fcHRlclBhbmVsLmdldENoaWxkQnlOYW1lKFwiRmlyZUJhbGxCdG5cIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcclxuXHJcblxyXG4gICAgICAgIHRoaXMuVHJhbnNmb3JtUGFubGUoZmFsc2UpO1xyXG4gICAgfVxyXG4gICAgb25FbmFibGUoKSB7XHJcbiAgICAgICAgdGhpcy5hZGRFdmVudCgpO1xyXG4gICAgfVxyXG4gICAgb25EaXNhYmxlKCkge1xyXG4gICAgICAgIHRoaXMucmVtb3ZlRXZlbnQoKTtcclxuICAgIH1cclxuXHJcbiAgICBvblVwZGF0ZSgpIHtcclxuICAgICAgICAvLyBpZiAodGhpcy5fcHRlclBhbmVsLnZpc2libGUpIHtcclxuICAgICAgICAvLyAgICAgbGV0IHBvaW50ID0gbmV3IExheWEuUG9pbnQoMCwgMCk7XHJcbiAgICAgICAgLy8gICAgIGlmICh0aGlzLl9sZWZ0KSB7XHJcbiAgICAgICAgLy8gICAgICAgICBwb2ludC54ID0gMTtcclxuICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgIC8vICAgICBlbHNlIGlmICh0aGlzLl9yaWdodCkge1xyXG4gICAgICAgIC8vICAgICAgICAgcG9pbnQueCA9IC0xO1xyXG4gICAgICAgIC8vICAgICB9XHJcbiAgICAgICAgLy8gICAgIGVsc2Uge1xyXG4gICAgICAgIC8vICAgICAgICAgcG9pbnQueCA9IDA7XHJcbiAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAvLyAgICAgaWYgKHRoaXMuX2Zyb250KSB7XHJcbiAgICAgICAgLy8gICAgICAgICBwb2ludC55ID0gMTtcclxuICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgIC8vICAgICBlbHNlIGlmICh0aGlzLl9iYWNrKSB7XHJcbiAgICAgICAgLy8gICAgICAgICBwb2ludC55ID0gLTE7XHJcbiAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAvLyAgICAgZWxzZSB7XHJcbiAgICAgICAgLy8gICAgICAgICBwb2ludC55ID0gMDtcclxuICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgIC8vICAgICBpZiAocG9pbnQueCA9PSAwICYmIHBvaW50LnkgPT0gMCkge1xyXG4gICAgICAgIC8vICAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9JbnB1dF9jc2pjLCB7IElucHV0VHlwZTogSW5wdXRUeXBlLlJvY2tlckF4aXMsIFZhbHVlOiBudWxsIH0pXHJcbiAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAvLyAgICAgZWxzZSB7XHJcbiAgICAgICAgLy8gICAgICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5HYW1lX0lucHV0X2NzamMsIHsgSW5wdXRUeXBlOiBJbnB1dFR5cGUuUm9ja2VyQXhpcywgVmFsdWU6IHBvaW50IH0pXHJcbiAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAvLyAgICAgaWYgKHRoaXMuX3VwKSB7XHJcbiAgICAgICAgLy8gICAgICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5HYW1lX0lucHV0X2NzamMsIHsgSW5wdXRUeXBlOiBJbnB1dFR5cGUuVVAgfSlcclxuICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgIC8vICAgICBlbHNlIGlmICh0aGlzLl9kb3duKSB7XHJcbiAgICAgICAgLy8gICAgICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5HYW1lX0lucHV0X2NzamMsIHsgSW5wdXRUeXBlOiBJbnB1dFR5cGUuRG93biB9KVxyXG4gICAgICAgIC8vICAgICB9XHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIC8vIGVsc2UgXHJcbiAgICAgICAgaWYgKHRoaXMuX3RSZXhQYW5sZS52aXNpYmxlKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9maXJlKSB7XHJcbiAgICAgICAgICAgICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5HYW1lX0lucHV0X2NzamMsIHsgSW5wdXRUeXBlOiBJbnB1dFR5cGUuRmlyZSB9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYodGhpcy5fa2luZ0tvbmdQYW5sZS52aXNpYmxlKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGFkZEV2ZW50KCkge1xyXG4gICAgICAgIHRoaXMuX1JUcmFuc0J0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLk9uVHJhbnNCdG4pXHJcbiAgICAgICAgdGhpcy5fYXR0YWNrQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuT25BdHRhY2tCdG4pXHJcbiAgICAgICAgdGhpcy5fanVtcEJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLk9uSnVtcEJ0bilcclxuICAgICAgICB0aGlzLl9maXJlQnRuLm9uKExheWEuRXZlbnQuTU9VU0VfRE9XTiwgdGhpcywgdGhpcy5PbkZpcmVCdG4sIFt0cnVlXSlcclxuICAgICAgICB0aGlzLl9maXJlQnRuLm9uKExheWEuRXZlbnQuTU9VU0VfVVAsIHRoaXMsIHRoaXMuT25GaXJlQnRuLCBbZmFsc2VdKVxyXG5cclxuICAgICAgICB0aGlzLl9raW5nS29uZ0F0a0J0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLk9uQXR0YWNrQnRuKVxyXG4gICAgICAgIHRoaXMuX2tpbmdLb25nSnVtcEJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLk9uSnVtcEJ0bilcclxuICAgICAgICB0aGlzLl9raW5nS29uZ0ZpcmVCdG5CdG4ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5PblRocm93U3RvbmVCdG4pXHJcblxyXG4gICAgICAgIC8vIHRoaXMuX0NUcmFuc0J0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLk9uVHJhbnNCdG4pXHJcbiAgICAgICAgLy8gdGhpcy5fZnJvbnRCdG4ub24oTGF5YS5FdmVudC5NT1VTRV9ET1dOLCB0aGlzLCB0aGlzLk9uRnJvbnQsIFt0cnVlXSk7XHJcbiAgICAgICAgLy8gdGhpcy5fZnJvbnRCdG4ub24oTGF5YS5FdmVudC5NT1VTRV9VUCwgdGhpcywgdGhpcy5PbkZyb250LCBbZmFsc2VdKTtcclxuICAgICAgICAvLyB0aGlzLl9iYWNrQnRuLm9uKExheWEuRXZlbnQuTU9VU0VfRE9XTiwgdGhpcywgdGhpcy5PbkJhY2ssIFt0cnVlXSk7XHJcbiAgICAgICAgLy8gdGhpcy5fYmFja0J0bi5vbihMYXlhLkV2ZW50Lk1PVVNFX1VQLCB0aGlzLCB0aGlzLk9uQmFjaywgW2ZhbHNlXSk7XHJcbiAgICAgICAgLy8gdGhpcy5fbGVmdEJ0bi5vbihMYXlhLkV2ZW50Lk1PVVNFX0RPV04sIHRoaXMsIHRoaXMuT25MZWZ0LCBbdHJ1ZV0pO1xyXG4gICAgICAgIC8vIHRoaXMuX2xlZnRCdG4ub24oTGF5YS5FdmVudC5NT1VTRV9VUCwgdGhpcywgdGhpcy5PbkxlZnQsIFtmYWxzZV0pO1xyXG4gICAgICAgIC8vIHRoaXMuX3JpZ2h0QnRuLm9uKExheWEuRXZlbnQuTU9VU0VfRE9XTiwgdGhpcywgdGhpcy5PblJpZ2h0LCBbdHJ1ZV0pO1xyXG4gICAgICAgIC8vIHRoaXMuX3JpZ2h0QnRuLm9uKExheWEuRXZlbnQuTU9VU0VfVVAsIHRoaXMsIHRoaXMuT25SaWdodCwgW2ZhbHNlXSk7XHJcbiAgICAgICAgLy8gdGhpcy5fdXBCdG4ub24oTGF5YS5FdmVudC5NT1VTRV9ET1dOLCB0aGlzLCB0aGlzLk9uVXAsIFt0cnVlXSk7XHJcbiAgICAgICAgLy8gdGhpcy5fdXBCdG4ub24oTGF5YS5FdmVudC5NT1VTRV9VUCwgdGhpcywgdGhpcy5PblVwLCBbZmFsc2VdKTtcclxuICAgICAgICAvLyB0aGlzLl9kb3duQnRuLm9uKExheWEuRXZlbnQuTU9VU0VfRE9XTiwgdGhpcywgdGhpcy5PbkRvd24sIFt0cnVlXSk7XHJcbiAgICAgICAgLy8gdGhpcy5fZG93bkJ0bi5vbihMYXlhLkV2ZW50Lk1PVVNFX1VQLCB0aGlzLCB0aGlzLk9uRG93biwgW2ZhbHNlXSk7XHJcbiAgICAgICAgLy8gdGhpcy5fZmlyZUJhbGxCdG4ub24oTGF5YS5FdmVudC5NT1VTRV9ET1dOLCB0aGlzLCB0aGlzLk9uRmlyZUJhbGxCdG4pO1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMucmVnRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLlRyYW5zZm9ybUV2ZW50LCB0aGlzLCB0aGlzLlRyYW5zZm9ybVBhbmxlKTtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlZ0V2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5DaGFyYWN0ZXJGYWxsaW5nLCB0aGlzLCB0aGlzLkZhbGxpbmcpO1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMucmVnRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLkNoYXJhY3RlckNsaW1iaW5nLCB0aGlzLCB0aGlzLkNsaW1iaW5nKTtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlZ0V2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5DaGFyYWN0ZXJOb3JtYWwsIHRoaXMsIHRoaXMuTm9ybWFsKTtcclxuICAgIH1cclxuXHJcbiAgICByZW1vdmVFdmVudCgpIHtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlbW92ZUV2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5UcmFuc2Zvcm1FdmVudCwgdGhpcywgdGhpcy5UcmFuc2Zvcm1QYW5sZSk7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5yZW1vdmVFdmVudF9jc2pjKEV2ZW50RGVmX2NzamMuQ2hhcmFjdGVyRmFsbGluZywgdGhpcywgdGhpcy5GYWxsaW5nKTtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlbW92ZUV2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5DaGFyYWN0ZXJDbGltYmluZywgdGhpcywgdGhpcy5DbGltYmluZyk7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5yZW1vdmVFdmVudF9jc2pjKEV2ZW50RGVmX2NzamMuQ2hhcmFjdGVyTm9ybWFsLCB0aGlzLCB0aGlzLk5vcm1hbCk7XHJcbiAgICB9XHJcblxyXG4gICAgVHJhbnNmb3JtUGFubGUoaXNDYXI6IGJvb2xlYW4pIHtcclxuICAgICAgICB0aGlzLl90UmV4UGFubGUudmlzaWJsZSA9IFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuUGxheWVyS2luZCA9PSBQbGF5ZXJUeXBlLlRSZXhcclxuICAgICAgICB0aGlzLl9raW5nS29uZ1BhbmxlLnZpc2libGUgPSBTY2VuZU1ncl9jc2NqLkluc3RhbmNlLlBsYXllcktpbmQgPT0gUGxheWVyVHlwZS5LaW5na29uZ1xyXG4gICAgICAgIC8vIHRoaXMuTm9ybWFsKCk7XHJcblxyXG5cclxuICAgICAgICAvLyBpZiAoU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5QbGF5ZXJLaW5kID09IFBsYXllclR5cGUuVFJleCkge1xyXG4gICAgICAgIC8vICAgICAvLyB0aGlzLl9wdGVyUGFuZWwudmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgLy8gICAgIHRoaXMuX3RSZXhQYW5sZS52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIC8vIGVsc2Uge1xyXG4gICAgICAgIC8vICAgICAvLyB0aGlzLl9wdGVyUGFuZWwudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIC8vICAgICB0aGlzLl90UmV4UGFubGUudmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIC8vIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkdhbWVfSW5wdXRfY3NqYywgeyBJbnB1dFR5cGU6IElucHV0VHlwZS5Sb2NrZXJBeGlzLCBWYWx1ZTogbnVsbCB9KVxyXG4gICAgfVxyXG5cclxuICAgIE9uVHJhbnNCdG4oKSB7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9JbnB1dF9jc2pjLCB7IElucHV0VHlwZTogSW5wdXRUeXBlLlRyYW5zZm9ybSB9KVxyXG4gICAgfVxyXG5cclxuICAgIE9uQXR0YWNrQnRuKCkge1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkdhbWVfSW5wdXRfY3NqYywgeyBJbnB1dFR5cGU6IElucHV0VHlwZS5BdHRhY2sgfSlcclxuICAgIH1cclxuXHJcbiAgICBPbkp1bXBCdG4oKSB7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9JbnB1dF9jc2pjLCB7IElucHV0VHlwZTogSW5wdXRUeXBlLkp1bXAgfSlcclxuICAgIH1cclxuXHJcbiAgICBPblRocm93U3RvbmVCdG4oKSB7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9JbnB1dF9jc2pjLCB7IElucHV0VHlwZTogSW5wdXRUeXBlLlRocm93U3RvbmUgfSlcclxuICAgIH1cclxuXHJcbiAgICBPbkZpcmVCdG4oaXNEb3duOiBib29sZWFuKSB7XHJcbiAgICAgICAgdGhpcy5fZmlyZSA9IGlzRG93bjtcclxuICAgIH1cclxuXHJcbiAgICBPbkZpcmVCYWxsQnRuKGlzRG93bjogYm9vbGVhbikge1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkdhbWVfSW5wdXRfY3NqYywgeyBJbnB1dFR5cGU6IElucHV0VHlwZS5GaXJlQmFsbCB9KVxyXG4gICAgfVxyXG5cclxuICAgIE9uRnJvbnQoaXNEb3duOiBib29sZWFuKSB7XHJcbiAgICAgICAgdGhpcy5fZnJvbnQgPSBpc0Rvd247XHJcbiAgICAgICAgaWYgKGlzRG93bikge1xyXG4gICAgICAgICAgICB0aGlzLl9iYWNrID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIE9uQmFjayhpc0Rvd246IGJvb2xlYW4pIHtcclxuICAgICAgICB0aGlzLl9iYWNrID0gaXNEb3duO1xyXG4gICAgICAgIGlmIChpc0Rvd24pIHtcclxuICAgICAgICAgICAgdGhpcy5fZnJvbnQgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgT25MZWZ0KGlzRG93bjogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMuX2xlZnQgPSBpc0Rvd247XHJcbiAgICAgICAgaWYgKGlzRG93bikge1xyXG4gICAgICAgICAgICB0aGlzLl9yaWdodCA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBPblJpZ2h0KGlzRG93bjogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMuX3JpZ2h0ID0gaXNEb3duO1xyXG4gICAgICAgIGlmIChpc0Rvd24pIHtcclxuICAgICAgICAgICAgdGhpcy5fbGVmdCA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBPblVwKGlzRG93bjogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMuX3VwID0gaXNEb3duO1xyXG4gICAgICAgIGlmIChpc0Rvd24pIHtcclxuICAgICAgICAgICAgdGhpcy5fZG93biA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBPbkRvd24oaXNEb3duOiBib29sZWFuKSB7XHJcbiAgICAgICAgdGhpcy5fZG93biA9IGlzRG93bjtcclxuICAgICAgICBpZiAoaXNEb3duKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3VwID0gZmFsc2U7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIEZhbGxpbmcoKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9hdHRhY2tCdG4uZ3JheSkgdGhpcy5fYXR0YWNrQnRuLmdyYXkgPSB0cnVlO1xyXG4gICAgICAgIGlmICghdGhpcy5fUlRyYW5zQnRuLmdyYXkpIHRoaXMuX1JUcmFuc0J0bi5ncmF5ID0gdHJ1ZTtcclxuICAgICAgICBpZiAoIXRoaXMuX2p1bXBCdG4uZ3JheSkgdGhpcy5fanVtcEJ0bi5ncmF5ID0gdHJ1ZTtcclxuICAgICAgICBpZiAoIXRoaXMuX2ZpcmVCdG4uZ3JheSkgdGhpcy5fZmlyZUJ0bi5ncmF5ID0gdHJ1ZTtcclxuICAgICAgICBcclxuICAgICAgICBpZiAoIXRoaXMuX2tpbmdLb25nQXRrQnRuLmdyYXkpIHRoaXMuX2tpbmdLb25nQXRrQnRuLmdyYXkgPSB0cnVlO1xyXG4gICAgICAgIGlmICghdGhpcy5fa2luZ0tvbmdGaXJlQnRuQnRuLmdyYXkpIHRoaXMuX2tpbmdLb25nRmlyZUJ0bkJ0bi5ncmF5ID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICBDbGltYmluZygpIHtcclxuICAgICAgICBpZiAoIXRoaXMuX2F0dGFja0J0bi5ncmF5KSB0aGlzLl9hdHRhY2tCdG4uZ3JheSA9IHRydWU7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9SVHJhbnNCdG4uZ3JheSkgdGhpcy5fUlRyYW5zQnRuLmdyYXkgPSB0cnVlO1xyXG4gICAgICAgIGlmICghdGhpcy5fZmlyZUJ0bi5ncmF5KSB0aGlzLl9maXJlQnRuLmdyYXkgPSB0cnVlO1xyXG4gICAgICAgIGlmICh0aGlzLl9qdW1wQnRuLmdyYXkpIHRoaXMuX2p1bXBCdG4uZ3JheSA9IGZhbHNlO1xyXG5cclxuICAgICAgICBpZiAoIXRoaXMuX2tpbmdLb25nQXRrQnRuLmdyYXkpIHRoaXMuX2tpbmdLb25nQXRrQnRuLmdyYXkgPSB0cnVlO1xyXG4gICAgICAgIGlmICghdGhpcy5fa2luZ0tvbmdGaXJlQnRuQnRuLmdyYXkpIHRoaXMuX2tpbmdLb25nRmlyZUJ0bkJ0bi5ncmF5ID0gdHJ1ZTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgTm9ybWFsKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9hdHRhY2tCdG4uZ3JheSkgdGhpcy5fYXR0YWNrQnRuLmdyYXkgPSBmYWxzZTtcclxuICAgICAgICBpZiAodGhpcy5fUlRyYW5zQnRuLmdyYXkpIHRoaXMuX1JUcmFuc0J0bi5ncmF5ID0gZmFsc2U7XHJcbiAgICAgICAgaWYgKHRoaXMuX2p1bXBCdG4uZ3JheSkgdGhpcy5fanVtcEJ0bi5ncmF5ID0gZmFsc2U7XHJcbiAgICAgICAgaWYgKHRoaXMuX2ZpcmVCdG4uZ3JheSkgdGhpcy5fZmlyZUJ0bi5ncmF5ID0gZmFsc2U7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLl9raW5nS29uZ0F0a0J0bi5ncmF5KSB0aGlzLl9raW5nS29uZ0F0a0J0bi5ncmF5ID0gZmFsc2U7XHJcbiAgICAgICAgaWYgKHRoaXMuX2tpbmdLb25nRmlyZUJ0bkJ0bi5ncmF5KSB0aGlzLl9raW5nS29uZ0ZpcmVCdG5CdG4uZ3JheSA9IGZhbHNlO1xyXG5cclxuICAgIH1cclxufSIsImltcG9ydCBFdmVudE1ncl9jc2pjIGZyb20gXCIuLi8uLi9FdmVudC9FdmVudE1nclwiO1xyXG5pbXBvcnQgeyBFdmVudERlZl9jc2pjIH0gZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50RGVmXCI7XHJcbmltcG9ydCBHYW1lTWdyX2NzamMgZnJvbSBcIi4uL0dhbWVNZ3JcIjtcclxuaW1wb3J0IFNvdW5kTWdyX2NzamMgZnJvbSBcIi4uLy4uL01nci9Tb3VuZE1nclwiO1xyXG5pbXBvcnQgVXNlcl9jc2pjIGZyb20gXCIuLi8uLi9Vc2VyL1VzZXJcIjtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBDb2luU3ViVmlldyBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIHByaXZhdGUgX293bmVyU3A6IExheWEuVUlDb21wb25lbnQ7XHJcbiAgICBwcml2YXRlIF9vcmlnaW5hbFNjYWxlOiBudW1iZXI7XHJcbiAgICBwcml2YXRlIF9jb2luX1NwOiBMYXlhLlNwcml0ZTtcclxuICAgIHByaXZhdGUgX2NvaW5Db3VudF9Gb250Q2xpcDogTGF5YS5Gb250Q2xpcDtcclxuICAgIHByaXZhdGUgX2NvaW5HZXRMaXN0OiBBcnJheTxMYXlhLlNwcml0ZT4gPSBbXTtcclxuICAgIHByaXZhdGUgX2VmZmVjdENvdW50OiBudW1iZXIgPSAwO1xyXG4gICAgcHJpdmF0ZSBfZWZmZWN0VGltZXI6IG51bWJlciA9IC0xO1xyXG4gICAgcHJpdmF0ZSBfZ2V0TG9jOiBMYXlhLlBvaW50O1xyXG4gICAgcHJpdmF0ZSBfZ29sZExpc3Q6IEFycmF5PExheWEuVGV4dD4gPSBbXVxyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICB0aGlzLl9vd25lclNwID0gdGhpcy5vd25lciBhcyBMYXlhLlVJQ29tcG9uZW50O1xyXG4gICAgICAgIHRoaXMuX2NvaW5fU3AgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQ29pblNwXCIpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuX2NvaW5Db3VudF9Gb250Q2xpcCA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJDb2luQ291bnRfRm9udENsaXBcIikgYXMgTGF5YS5Gb250Q2xpcDtcclxuICAgICAgICB0aGlzLl9jb2luQ291bnRfRm9udENsaXAudmFsdWUgPSBVc2VyX2NzamMuZ2V0TW9uZXlfY3NqYygpLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgdGhpcy5fb3JpZ2luYWxTY2FsZSA9IHRoaXMuX2NvaW5Db3VudF9Gb250Q2xpcC5zY2FsZVg7XHJcbiAgICB9XHJcbiAgICBvblN0YXJ0KCkge1xyXG4gICAgICAgIHRoaXMuSW5pdEdldENvaW50TGlzdCgpXHJcbiAgICB9XHJcbiAgICBJbml0R2V0Q29pbnRMaXN0KCkge1xyXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCAxMDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICBsZXQgc3AgPSBuZXcgTGF5YS5TcHJpdGUoKTtcclxuICAgICAgICAgICAgc3AubG9hZEltYWdlKFwic3ViUmVzL2ltYWdlL2NvaW4ucG5nXCIsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgTGF5YS5zdGFnZS5hZGRDaGlsZChzcCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jb2luR2V0TGlzdC5wdXNoKHNwKTtcclxuICAgICAgICAgICAgICAgIHNwLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIHNwLnggPSAwO1xyXG4gICAgICAgICAgICAgICAgc3AueSA9IDA7XHJcbiAgICAgICAgICAgIH0pKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCA0OyBpKyspIHtcclxuICAgICAgICAgICAgbGV0IHRleHQgPSBuZXcgTGF5YS5UZXh0KCk7XHJcbiAgICAgICAgICAgIHRleHQudGV4dCA9IFwiMTAwMFwiO1xyXG4gICAgICAgICAgICB0ZXh0LndpZHRoID0gMTIwO1xyXG4gICAgICAgICAgICB0ZXh0LmhlaWdodCA9IDQwO1xyXG4gICAgICAgICAgICB0ZXh0LnBpdm90WCA9IDYwO1xyXG4gICAgICAgICAgICB0ZXh0LnBpdm90WSA9IDIwO1xyXG4gICAgICAgICAgICB0ZXh0LmFsaWduID0gXCJjZW50ZXJcIjtcclxuICAgICAgICAgICAgdGV4dC52YWxpZ24gPSBcIm1pZGRsZVwiO1xyXG4gICAgICAgICAgICB0ZXh0LmZvbnQgPSBcIk1pY3Jvc29mdCBZYUhlaVwiO1xyXG4gICAgICAgICAgICB0ZXh0LmZvbnRTaXplID0gMzA7XHJcbiAgICAgICAgICAgIHRleHQuYm9sZCA9IHRydWU7XHJcbiAgICAgICAgICAgIHRleHQuY29sb3IgPSBcIiNGRkZGRkZcIjtcclxuICAgICAgICAgICAgdGV4dC5zdHJva2VDb2xvciA9IFwiIzAwMDAwMFwiO1xyXG4gICAgICAgICAgICB0ZXh0LnN0cm9rZSA9IDQ7XHJcbiAgICAgICAgICAgIHRleHQudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICB0aGlzLl9vd25lclNwLmFkZENoaWxkKHRleHQpO1xyXG4gICAgICAgICAgICB0aGlzLl9nb2xkTGlzdC5wdXNoKHRleHQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIG9uRW5hYmxlKCkge1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMucmVnRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLkdhbWVfT25Vc2VyTW9uZXlDaGFuZ2VfY3NqYywgdGhpcywgdGhpcy5Db2luQ2hhbmdlKTtcclxuICAgICAgICAvLyBFdmVudE1ncl9jc2pjLnJlZ0V2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5HYW1lX09uVXNlck1vbmV5Q2hhbmdlX2NzamMsIHRoaXMsIHRoaXMuR2V0SnVtcERpc3RhbmNlKTtcclxuICAgIH1cclxuICAgIG9uRGVzdHJveSgpIHtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlbW92ZUV2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5HYW1lX09uVXNlck1vbmV5Q2hhbmdlX2NzamMsIHRoaXMsIHRoaXMuQ29pbkNoYW5nZSk7XHJcbiAgICAgICAgLy8gRXZlbnRNZ3JfY3NqYy5yZW1vdmVFdmVudF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9HZXRKdW1wRGlzdGFuY2UsIHRoaXMsIHRoaXMuR2V0SnVtcERpc3RhbmNlKTtcclxuICAgIH1cclxuICAgIG9uVXBkYXRlKCkge1xyXG4gICAgICAgIGlmICh0aGlzLl9lZmZlY3RUaW1lciA+PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2VmZmVjdFRpbWVyICs9IExheWEudGltZXIuZGVsdGEgLyAxMDAwO1xyXG4gICAgICAgICAgICBsZXQgYW5nZWwgPSB0aGlzLl9lZmZlY3RUaW1lciAqIDE0NDA7XHJcbiAgICAgICAgICAgIGxldCByYWQgPSBhbmdlbCAqIE1hdGguUEkgLyAxODA7XHJcbiAgICAgICAgICAgIGxldCBzY2FyZSA9IHRoaXMuX29yaWdpbmFsU2NhbGUgKyAwLjA1ICogKE1hdGguc2luKHJhZCkpO1xyXG4gICAgICAgICAgICB0aGlzLl9jb2luQ291bnRfRm9udENsaXAuc2NhbGVYID0gc2NhcmU7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvaW5Db3VudF9Gb250Q2xpcC5zY2FsZVkgPSBzY2FyZTtcclxuICAgICAgICAgICAgbGV0IGN1cmNvaW4gPSBwYXJzZUludCh0aGlzLl9jb2luQ291bnRfRm9udENsaXAudmFsdWUpO1xyXG4gICAgICAgICAgICBsZXQgY291bnRSZW1haW4gPSBVc2VyX2NzamMuZ2V0TW9uZXlfY3NqYygpIC0gY3VyY29pbjtcclxuICAgICAgICAgICAgbGV0IHRpbWVSZW1haW4gPSAoKDM2MCAtIGFuZ2VsKSAvIDM2MCkgKiAxMDAwXHJcbiAgICAgICAgICAgIHRpbWVSZW1haW4gPSAoY291bnRSZW1haW4gLyB0aW1lUmVtYWluKSAqIExheWEudGltZXIuZGVsdGE7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvaW5Db3VudF9Gb250Q2xpcC52YWx1ZSA9IChjdXJjb2luICsgTWF0aC5mbG9vcih0aW1lUmVtYWluKSkudG9TdHJpbmcoKTtcclxuICAgICAgICAgICAgaWYgKGFuZ2VsID4gMzYwKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9lZmZlY3RUaW1lciA9IC0xO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY29pbkNvdW50X0ZvbnRDbGlwLnZhbHVlID0gVXNlcl9jc2pjLmdldE1vbmV5X2NzamMoKS50b1N0cmluZygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgQ29pbkNoYW5nZShyZXM6IGFueSkge1xyXG4gICAgICAgIGlmIChyZXMgPT0gbnVsbCkgcmV0dXJuO1xyXG4gICAgICAgIGlmIChyZXMuY3VyciA+IHJlcy5sYXN0KSB7XHJcbiAgICAgICAgICAgIGlmIChyZXMuZ2V0TG9jKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgY291bnQgPSByZXMuY3VyciAtIHJlcy5sYXN0O1xyXG4gICAgICAgICAgICAgICAgaWYgKGNvdW50IDw9IDI1KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZWZmZWN0Q291bnQgPSAxO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSBpZiAoY291bnQgPD0gNTApIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9lZmZlY3RDb3VudCA9IDM7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChjb3VudCA8PSAyMDApIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9lZmZlY3RDb3VudCA9IDU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmIChjb3VudCA8PSA0MDApIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9lZmZlY3RDb3VudCA9IDc7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9lZmZlY3RDb3VudCA9IDEwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fZ2V0TG9jID0gcmVzLmdldExvYztcclxuICAgICAgICAgICAgICAgIHRoaXMuR2V0Q29pblN0ZXAxKGNvdW50KTtcclxuICAgICAgICAgICAgICAgIC8vIHRoaXMuR2V0R29sZENvdW50KGNvdW50KTtcclxuICAgICAgICAgICAgICAgIC8vIExheWEudGltZXIub25jZSg1MDAsIHRoaXMsIHRoaXMuR2V0Q29pblN0ZXAyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2VmZmVjdFRpbWVyID0gMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChyZXMuY3VyciA8IHJlcy5sYXN0KSB7XHJcbiAgICAgICAgICAgIFNvdW5kTWdyX2NzamMuaW5zdGFuY2VfY3NqYy5wbGF5U291bmRfY3NqYyhcImdvbGQyXCIpO1xyXG4gICAgICAgICAgICB0aGlzLl9lZmZlY3RUaW1lciA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgLy8gR2V0SnVtcERpc3RhbmNlKHBvaW50OiBMYXlhLlBvaW50LCBkaXN0YW5jZTogbnVtYmVyKSB7XHJcbiAgICAvLyAgICAgaWYgKHRoaXMuX2dvbGRMaXN0Lmxlbmd0aCA8PSAwKSByZXR1cm47XHJcbiAgICAvLyAgICAgY29uc3QgZ29sZFRleHQgPSB0aGlzLl9nb2xkTGlzdC5wb3AoKTtcclxuICAgIC8vICAgICBwb2ludCA9IHRoaXMuX293bmVyU3AuZ2xvYmFsVG9Mb2NhbChwb2ludCwgdHJ1ZSk7XHJcbiAgICAvLyAgICAgZ29sZFRleHQueCA9IHBvaW50Lng7XHJcbiAgICAvLyAgICAgZ29sZFRleHQueSA9IHBvaW50Lnk7XHJcbiAgICAvLyAgICAgZ29sZFRleHQuZm9udFNpemUgPSA1MDtcclxuICAgIC8vICAgICBnb2xkVGV4dC5ib2xkID0gdHJ1ZTtcclxuICAgIC8vICAgICBnb2xkVGV4dC5jb2xvciA9IFwiI0ZGRkZGRlwiO1xyXG4gICAgLy8gICAgIGdvbGRUZXh0LnN0cm9rZUNvbG9yID0gXCIjMDAwMDAwXCI7XHJcbiAgICAvLyAgICAgZ29sZFRleHQuc3Ryb2tlID0gNDtcclxuICAgIC8vICAgICBnb2xkVGV4dC50ZXh0ID0gXCLpo57ooYzot53nprs6XCIgKyBkaXN0YW5jZS50b0ZpeGVkKDApO1xyXG4gICAgLy8gICAgIGdvbGRUZXh0LnZpc2libGUgPSB0cnVlO1xyXG4gICAgLy8gICAgIExheWEudGltZXIub25jZSgxMDAwLCB0aGlzLCAoKSA9PiB7XHJcbiAgICAvLyAgICAgICAgIGdvbGRUZXh0LnZpc2libGUgPSBmYWxzZTtcclxuICAgIC8vICAgICAgICAgdGhpcy5fZ29sZExpc3QucHVzaChnb2xkVGV4dCk7XHJcbiAgICAvLyAgICAgfSk7XHJcbiAgICAvLyB9XHJcbiAgICBHZXRHb2xkQ291bnQoY291bnQ6IG51bWJlcikge1xyXG4gICAgICAgIGlmICh0aGlzLl9nb2xkTGlzdC5sZW5ndGggPD0gMCkgcmV0dXJuO1xyXG4gICAgICAgIGNvbnN0IGdvbGRUZXh0ID0gdGhpcy5fZ29sZExpc3QucG9wKCk7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coc2NlZW5Qb3MpO1xyXG4gICAgICAgIGxldCBwb2ludCA9IHRoaXMuX293bmVyU3AuZ2xvYmFsVG9Mb2NhbCh0aGlzLl9nZXRMb2MsIHRydWUpO1xyXG4gICAgICAgIGdvbGRUZXh0LnggPSBwb2ludC54O1xyXG4gICAgICAgIGdvbGRUZXh0LnkgPSBwb2ludC55O1xyXG4gICAgICAgIGdvbGRUZXh0LmZvbnRTaXplID0gNDA7XHJcbiAgICAgICAgZ29sZFRleHQuYm9sZCA9IHRydWU7XHJcbiAgICAgICAgZ29sZFRleHQuY29sb3IgPSBcIiNGRkZGRkZcIjtcclxuICAgICAgICBnb2xkVGV4dC5zdHJva2VDb2xvciA9IFwiIzAwMDAwMFwiO1xyXG4gICAgICAgIGdvbGRUZXh0LnN0cm9rZSA9IDQ7XHJcbiAgICAgICAgZ29sZFRleHQudGV4dCA9IFwi6I635b6X6YeR5biBXCIgKyBjb3VudC8qICArIGNvdW50ICovO1xyXG4gICAgICAgIGdvbGRUZXh0LnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgIC8vIExheWEuVHdlZW4udG8oZ29sZFRleHQsIHsgeDogMCwgeTogMCB9LCA1MDAsIG51bGwsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xyXG4gICAgICAgIC8vICAgICBnb2xkVGV4dC52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgLy8gfSksIDMwMCk7XHJcbiAgICAgICAgTGF5YS50aW1lci5vbmNlKDUwMCwgdGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICBnb2xkVGV4dC52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgIHRoaXMuX2dvbGRMaXN0LnB1c2goZ29sZFRleHQpO1xyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG4gICAgR2V0Q29pblN0ZXAxKGNvdW50OiBudW1iZXIpIHtcclxuICAgICAgICBsZXQgcG9pbnQgPSB0aGlzLl9vd25lclNwLmdsb2JhbFRvTG9jYWwodGhpcy5fZ2V0TG9jLCB0cnVlKTtcclxuICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdGhpcy5fZWZmZWN0Q291bnQ7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2NvaW5HZXRMaXN0Lmxlbmd0aCA8PSAwKSB7XHJcbiAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBsZXQgc3AgPSB0aGlzLl9jb2luR2V0TGlzdC5wb3AoKTtcclxuICAgICAgICAgICAgc3AueCA9IHBvaW50Lng7XHJcbiAgICAgICAgICAgIHNwLnkgPSBwb2ludC55XHJcbiAgICAgICAgICAgIHNwLnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgICAgICBzcC56T3JkZXIgPSBzcC5wYXJlbnQubnVtQ2hpbGRyZW4gLSAxO1xyXG4gICAgICAgICAgICAvKiBpZiAoY291bnQgPiA1MCkgKi8ge1xyXG4gICAgICAgICAgICAgICAgbGV0IHJkeCA9IHBvaW50LnggKyAoTWF0aC5yYW5kb20oKSAqIDMwMCkgLSAxNTA7XHJcbiAgICAgICAgICAgICAgICBsZXQgcmR5ID0gcG9pbnQueSArIChNYXRoLnJhbmRvbSgpICogMzAwKSAtIDE1MDtcclxuICAgICAgICAgICAgICAgIGxldCBjb2luUG9pbnQgPSB0aGlzLl9vd25lclNwLmxvY2FsVG9HbG9iYWwobmV3IExheWEuUG9pbnQodGhpcy5fY29pbl9TcC54LCB0aGlzLl9jb2luX1NwLnkpKTtcclxuICAgICAgICAgICAgICAgIExheWEuVHdlZW4udG8oc3AsIHsgeDogY29pblBvaW50LngsIHk6IGNvaW5Qb2ludC55IH0sIDUwMCwgbnVsbCwgTGF5YS5IYW5kbGVyLmNyZWF0ZShzcCwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIFNvdW5kTWdyX2NzamMuaW5zdGFuY2VfY3NqYy5wbGF5U291bmRfY3NqYyhcImdvbGQyXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2VmZmVjdFRpbWVyID0gMDtcclxuICAgICAgICAgICAgICAgICAgICBzcC52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fY29pbkdldExpc3QucHVzaChzcCk7XHJcbiAgICAgICAgICAgICAgICB9KSwgMjAwICsgKDUwICogaW5kZXgpKTtcclxuICAgICAgICAgICAgICAgIC8vIExheWEuVHdlZW4udG8oc3AsIHsgeDogcmR4LCB5OiByZHkgfSwgMjAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIC8vICAgICBsZXQgY29pblBvaW50ID0gdGhpcy5fb3duZXJTcC5sb2NhbFRvR2xvYmFsKG5ldyBMYXlhLlBvaW50KHRoaXMuX2NvaW5fU3AueCwgdGhpcy5fY29pbl9TcC55KSk7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgTGF5YS5Ud2Vlbi50byhzcCwgeyB4OiBjb2luUG9pbnQueCwgeTogY29pblBvaW50LnkgfSwgNTAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHNwLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIFNvdW5kTWdyX2NzamMuaW5zdGFuY2VfY3NqYy5wbGF5U291bmRfY3NqYyhcImdvbGQyXCIpO1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICB0aGlzLl9lZmZlY3RUaW1lciA9IDA7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIHNwLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgdGhpcy5fY29pbkdldExpc3QucHVzaChzcCk7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgfSksIDIwMCArICg1MCAqIGluZGV4KSk7XHJcbiAgICAgICAgICAgICAgICAvLyB9KSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgLy8gZWxzZSB7XHJcbiAgICAgICAgICAgIC8vICAgICBsZXQgcG9pbnQgPSB0aGlzLl9vd25lclNwLmdsb2JhbFRvTG9jYWwodGhpcy5fZ2V0TG9jKTtcclxuICAgICAgICAgICAgLy8gICAgIGxldCBjb2luUG9pbnQgPSAvKiB0aGlzLl9vd25lclNwLmdsb2JhbFRvTG9jYWwoICovbmV3IExheWEuUG9pbnQodGhpcy5fY29pbl9TcC54LCB0aGlzLl9jb2luX1NwLnkpO1xyXG4gICAgICAgICAgICAvLyAgICAgTGF5YS5Ud2Vlbi50byhzcCwgeyB4OiBjb2luUG9pbnQueCwgeTogY29pblBvaW50LnkgfSwgNTAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHNwLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgU291bmRNZ3IuaW5zdGFuY2UucGxheVNvdW5kKFwiZ29sZFwiKTtcclxuICAgICAgICAgICAgLy8gICAgICAgICB0aGlzLl9lZmZlY3RUaW1lciA9IDA7XHJcbiAgICAgICAgICAgIC8vICAgICAgICAgc3AudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAvLyAgICAgICAgIHRoaXMuX2NvaW5HZXRMaXN0LnB1c2goc3ApO1xyXG4gICAgICAgICAgICAvLyAgICAgfSksIDUwMCk7XHJcbiAgICAgICAgICAgIC8vIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBHZXRDb2luU3RlcDIoc3ApIHtcclxuICAgICAgICBsZXQgcG9pbnQgPSB0aGlzLl9vd25lclNwLmdsb2JhbFRvTG9jYWwodGhpcy5fZ2V0TG9jKTtcclxuICAgICAgICBsZXQgY29pblBvaW50ID0gLyogdGhpcy5fb3duZXJTcC5nbG9iYWxUb0xvY2FsKCAqL25ldyBMYXlhLlBvaW50KHRoaXMuX2NvaW5fU3AueCwgdGhpcy5fY29pbl9TcC55KTtcclxuICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgdGhpcy5fZWZmZWN0Q291bnQ7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgbGV0IHNwID0gdGhpcy5fY29pbkdldExpc3RbaW5kZXhdO1xyXG4gICAgICAgICAgICAvLyBsZXQgcmR4ID0gcG9pbnQueCArIE1hdGgucmFuZG9tKCkgKiAxMDA7XHJcbiAgICAgICAgICAgIC8vIGxldCByZHkgPSBwb2ludC55ICsgTWF0aC5yYW5kb20oKSAqIDEwMDtcclxuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byhzcCwgeyB4OiBjb2luUG9pbnQueCwgeTogY29pblBvaW50LnkgfSwgNTAwLCBudWxsLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHNwLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBTb3VuZE1ncl9jc2pjLmluc3RhbmNlX2NzamMucGxheVNvdW5kX2NzamMoXCJnb2xkMlwiKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2VmZmVjdFRpbWVyID0gMDtcclxuICAgICAgICAgICAgICAgIHNwLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2NvaW5HZXRMaXN0LnB1c2goc3ApO1xyXG4gICAgICAgICAgICB9KSwgNTAgKiBpbmRleCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IEV2ZW50TWdyX2NzamMgZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XHJcbmltcG9ydCB7IEV2ZW50RGVmX2NzamMgfSBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnREZWZcIjtcclxuaW1wb3J0IHsgSW5wdXRUeXBlIH0gZnJvbSBcIi4uL0dhbWVDb3JlL0VudW1zXCI7XHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIENvbnRyb2xsZXIgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgfVxyXG4gICAgcHJpdmF0ZSBfaXNNb3VzZURvd247XHJcbiAgICBwcml2YXRlIF9sYXN0WDtcclxuICAgIHByaXZhdGUgX2xhc3RZO1xyXG4gICAgLyoqXHJcbiAgICAgKiDpvKDmoIfmjInkuIvml7ZcclxuICAgICAqIFxyXG4gICAgICogQG1lbWJlcm9mIENvbnRyb2xsZXJcclxuICAgICAqL1xyXG4gICAgb25Nb3VzZURvd24oKSB7XHJcbiAgICAgICAgdGhpcy5faXNNb3VzZURvd24gPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuX2xhc3RYID0gbnVsbDtcclxuICAgICAgICB0aGlzLl9sYXN0WSA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDlvZPpvKDmoIfnp7vlh7rml7ZcclxuICAgICAqIFxyXG4gICAgICogQG1lbWJlcm9mIENvbnRyb2xsZXJcclxuICAgICAqL1xyXG4gICAgb25Nb3VzZU91dCgpIHtcclxuICAgICAgICB0aGlzLl9pc01vdXNlRG93biA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuX2xhc3RYID0gbnVsbDtcclxuICAgICAgICB0aGlzLl9sYXN0WSA9IG51bGw7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDpvKDmoIfmiqzotbdcclxuICAgICAqIFxyXG4gICAgICogQG1lbWJlcm9mIENvbnRyb2xsZXJcclxuICAgICAqL1xyXG4gICAgb25Nb3VzZVVwKCkge1xyXG4gICAgICAgIHRoaXMuX2lzTW91c2VEb3duID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5fbGFzdFggPSBudWxsO1xyXG4gICAgICAgIHRoaXMuX2xhc3RZID0gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOm8oOagh+enu+WKqFxyXG4gICAgICogXHJcbiAgICAgKiBAbWVtYmVyb2YgQ29udHJvbGxlclxyXG4gICAgICovXHJcbiAgICBvbk1vdXNlTW92ZSgpIHtcclxuICAgICAgICBpZiAodGhpcy5faXNNb3VzZURvd24pIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2xhc3RYID09IG51bGwpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2xhc3RYID0gTGF5YS5zdGFnZS5tb3VzZVg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgeCA9IExheWEuc3RhZ2UubW91c2VYIC0gdGhpcy5fbGFzdFg7XHJcbiAgICAgICAgICAgICAgICAvLyBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5HYW1lX0lucHV0X2NzamMsIHsgSW5wdXRUeXBlOiBJbnB1dFR5cGUuQ2FtZXJhQXhpcywgVmFsdWU6IG5ldyBMYXlhLlBvaW50KHgsIHkpIH0pO1xyXG4gICAgICAgICAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuQ2FtZXJhX0V2ZW50X2NzamMsIHsgQ2FtZXJhUm90YXRlWTogLXggKiAwLjMgfSk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9sYXN0WCA9IExheWEuc3RhZ2UubW91c2VYO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICBpZiAodGhpcy5fbGFzdFkgPT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fbGFzdFkgPSBMYXlhLnN0YWdlLm1vdXNlWTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGxldCB5ID0gTGF5YS5zdGFnZS5tb3VzZVkgLSB0aGlzLl9sYXN0WTtcclxuICAgICAgICAgICAgICAgIC8vIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkdhbWVfSW5wdXRfY3NqYywgeyBJbnB1dFR5cGU6IElucHV0VHlwZS5DYW1lcmFBeGlzLCBWYWx1ZTogbmV3IExheWEuUG9pbnQoeCwgeSkgfSk7XHJcbiAgICAgICAgICAgICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5DYW1lcmFfRXZlbnRfY3NqYywgeyBDYW1lcmFSb3RhdGVYOiB5ICogMC4zIH0pO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fbGFzdFkgPSBMYXlhLnN0YWdlLm1vdXNlWTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsImltcG9ydCBFeGFtaW5lTWdyIGZyb20gXCIuLi8uLi9Db21tb21BUEkvRXhhbWluZU1nclwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRXhhbWluZUNoZWNrIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xyXG4gICAgcHJpdmF0ZSBfb3duZXI6IExheWEuU3ByaXRlO1xyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICB0aGlzLl9vd25lciA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICB9XHJcblxyXG4gICAgb25TdGFydCgpIHtcclxuICAgICAgICBpZiAoIUV4YW1pbmVNZ3IuQ2FuRG9TY3pfV3gpIHtcclxuICAgICAgICAgICAgdGhpcy5fb3duZXIudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsImltcG9ydCBTY2VuZU1ncl9jc2NqIGZyb20gXCIuLi9HYW1lQ29yZS9TY2VuZU1nclwiO1xyXG5pbXBvcnQgRXZlbnRNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcclxuaW1wb3J0IHsgRXZlbnREZWZfY3NqYyB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xyXG5pbXBvcnQgeyBTdGF0ZUlEIH0gZnJvbSBcIi4uL0dhbWVDb3JlL0ZzbS9Gc21FbnVtXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lU3RlcCBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIHByaXZhdGUgX293bmVyU3A6IExheWEuVUlDb21wb25lbnQ7XHJcbiAgICBwcml2YXRlIF9lbmVteUxpc3Q6IEFycmF5PExheWEuU3ByaXRlPiA9IFtdO1xyXG4gICAgcHJpdmF0ZSBfdGVzdExpc3Q6IEFycmF5PExheWEuVGV4dD4gPSBbXTtcclxuICAgIHByaXZhdGUgX2dhbWVUaW1lcjogTGF5YS5Gb250Q2xpcDtcclxuICAgIHByaXZhdGUgX2VuZW15RGVhZDogTGF5YS5VSUNvbXBvbmVudDtcclxuICAgIHByaXZhdGUgX2VuZW15Q291bnQ6IExheWEuRm9udENsaXA7XHJcbiAgICBwcml2YXRlIF9sb2NrOiBMYXlhLkltYWdlO1xyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICB0aGlzLl9vd25lclNwID0gdGhpcy5vd25lciBhcyBMYXlhLlVJQ29tcG9uZW50O1xyXG4gICAgICAgIHRoaXMuX2dhbWVUaW1lciA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJHYW1lVGltZXJcIikgYXMgTGF5YS5Gb250Q2xpcDtcclxuICAgICAgICB0aGlzLl9lbmVteURlYWQgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiRW5lbXlEZWFkXCIpIGFzIExheWEuVUlDb21wb25lbnQ7XHJcbiAgICAgICAgdGhpcy5fZW5lbXlDb3VudCA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJFbmVteUNvdW50XCIpIGFzIExheWEuRm9udENsaXA7XHJcbiAgICAgICAgdGhpcy5fbG9jayA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJMb2NrXCIpIGFzIExheWEuSW1hZ2U7XHJcbiAgICAgICAgdGhpcy5fZW5lbXlEZWFkLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLkluaXRHZXRDb2ludExpc3QoKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkVuYWJsZSgpIHtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlZ0V2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5FbmVteURlYWQsIHRoaXMsIHRoaXMuRW5lbXlEZWFkRXZlbnQpO1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMucmVnRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLkVuZW15TG9jaywgdGhpcywgdGhpcy5FbmVteURlYWRFdmVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25EZXN0cm95KCkge1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMucmVtb3ZlRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLkVuZW15RGVhZCwgdGhpcywgdGhpcy5FbmVteURlYWRFdmVudCk7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5yZW1vdmVFdmVudF9jc2pjKEV2ZW50RGVmX2NzamMuRW5lbXlMb2NrLCB0aGlzLCB0aGlzLkVuZW15RGVhZEV2ZW50KTtcclxuICAgIH1cclxuXHJcbiAgICBJbml0R2V0Q29pbnRMaXN0KCkge1xyXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCAxMDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICBsZXQgc3AgPSBuZXcgTGF5YS5TcHJpdGUoKTtcclxuICAgICAgICAgICAgc3AubG9hZEltYWdlKFwic3ViUmVzL2ltYWdlL2JpYW9qaS5wbmdcIiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9vd25lclNwLmFkZENoaWxkKHNwKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2VuZW15TGlzdC5wdXNoKHNwKTtcclxuICAgICAgICAgICAgICAgIHNwLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIHNwLnggPSAwO1xyXG4gICAgICAgICAgICAgICAgc3AueSA9IDA7XHJcbiAgICAgICAgICAgICAgICBzcC5waXZvdFggPSAyNTtcclxuICAgICAgICAgICAgICAgIHNwLnBpdm90WSA9IDI1O1xyXG4gICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgNDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGxldCB0ZXh0ID0gbmV3IExheWEuVGV4dCgpO1xyXG4gICAgICAgICAgICB0ZXh0LnRleHQgPSBcIjEwMDBcIjtcclxuICAgICAgICAgICAgdGV4dC53aWR0aCA9IDEyMDtcclxuICAgICAgICAgICAgdGV4dC5oZWlnaHQgPSA0MDtcclxuICAgICAgICAgICAgdGV4dC5waXZvdFggPSA2MDtcclxuICAgICAgICAgICAgdGV4dC5waXZvdFkgPSAyMDtcclxuICAgICAgICAgICAgdGV4dC5hbGlnbiA9IFwiY2VudGVyXCI7XHJcbiAgICAgICAgICAgIHRleHQudmFsaWduID0gXCJtaWRkbGVcIjtcclxuICAgICAgICAgICAgdGV4dC5mb250ID0gXCJNaWNyb3NvZnQgWWFIZWlcIjtcclxuICAgICAgICAgICAgdGV4dC5mb250U2l6ZSA9IDMwO1xyXG4gICAgICAgICAgICB0ZXh0LmJvbGQgPSB0cnVlO1xyXG4gICAgICAgICAgICB0ZXh0LmNvbG9yID0gXCIjRkZGRkZGXCI7XHJcbiAgICAgICAgICAgIHRleHQuc3Ryb2tlQ29sb3IgPSBcIiMwMDAwMDBcIjtcclxuICAgICAgICAgICAgdGV4dC5zdHJva2UgPSA0O1xyXG4gICAgICAgICAgICB0ZXh0LnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgdGhpcy5fb3duZXJTcC5hZGRDaGlsZCh0ZXh0KTtcclxuICAgICAgICAgICAgdGhpcy5fdGVzdExpc3QucHVzaCh0ZXh0KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBvblVwZGF0ZSgpIHtcclxuICAgICAgICBsZXQgbGlzdCA9IFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuRW5lbXlMb2NMaXN0O1xyXG4gICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCB0aGlzLl9lbmVteUxpc3QubGVuZ3RoOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IGVuZW15U3AgPSB0aGlzLl9lbmVteUxpc3RbaW5kZXhdO1xyXG4gICAgICAgICAgICBsZXQgb2JqID0gbGlzdFtpbmRleF07XHJcbiAgICAgICAgICAgIGlmIChvYmogPT0gbnVsbCB8fCAoU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5QbGF5ZXIuU3RhdGVJZCA9PSBTdGF0ZUlELlB0ZXIgJiYgb2JqLlBvc3Rpb24gPT0gU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5DdXJyTG9ja0VuZW15UG9zKSkge1xyXG4gICAgICAgICAgICAgICAgaWYgKGVuZW15U3AudmlzaWJsZSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGVuZW15U3AudmlzaWJsZSA9IGZhbHNlXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgcG9pbnQgPSBuZXcgTGF5YS5Qb2ludCgpO1xyXG4gICAgICAgICAgICAgICAgbGV0IGxvYyA9IG9iai5Qb3N0aW9uO1xyXG4gICAgICAgICAgICAgICAgbGV0IGRpcyA9IG9iai5EaXN0YW5jZTtcclxuICAgICAgICAgICAgICAgIGlmIChsb2MueiA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICBwb2ludC5zZXRUbyhMYXlhLnN0YWdlLndpZHRoIC8gMiwgTGF5YS5zdGFnZS5oZWlnaHQpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcG9pbnQuc2V0VG8obG9jLngsIGxvYy55KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChwb2ludC54IDwgMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHBvaW50LnggPSAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSBpZiAocG9pbnQueCA+IExheWEuc3RhZ2Uud2lkdGgpIHtcclxuICAgICAgICAgICAgICAgICAgICBwb2ludC54ID0gTGF5YS5zdGFnZS53aWR0aDtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHRoaXMuX293bmVyU3AuZ2xvYmFsVG9Mb2NhbChwb2ludCk7XHJcbiAgICAgICAgICAgICAgICBlbmVteVNwLnggPSBwb2ludC54O1xyXG4gICAgICAgICAgICAgICAgZW5lbXlTcC55ID0gcG9pbnQueTtcclxuICAgICAgICAgICAgICAgIGlmICghZW5lbXlTcC52aXNpYmxlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgZW5lbXlTcC52aXNpYmxlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVuZW15U3Auc2NhbGVYID0gTWF0aC5taW4oMSwgTWF0aC5tYXgoMC43LCAoZGlzIC8gNTApKSk7XHJcbiAgICAgICAgICAgICAgICBlbmVteVNwLnNjYWxlWSA9IGVuZW15U3Auc2NhbGVYO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCB0aW1lID0gU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5SZXN0VGltZXI7XHJcbiAgICAgICAgbGV0IG1pbiA9IE1hdGguZmxvb3IodGltZSAvIDYwKTtcclxuICAgICAgICBsZXQgc2VjID0gKHRpbWUgJSA2MCk7XHJcbiAgICAgICAgbGV0IG1pbnNjciA9IFwiXCI7XHJcbiAgICAgICAgbGV0IHNlY3NjciA9IFwiXCI7XHJcbiAgICAgICAgaWYgKG1pbiA8IDEwKSB7XHJcbiAgICAgICAgICAgIG1pbnNjciA9IFwiMFwiICsgbWluO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgbWluc2NyID0gbWluLnRvU3RyaW5nKCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChzZWMgPCAxMCkge1xyXG4gICAgICAgICAgICBzZWNzY3IgPSBcIjBcIiArIHNlYztcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHNlY3NjciA9IHNlYy50b1N0cmluZygpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLl9nYW1lVGltZXIudmFsdWUgPSBtaW5zY3IgKyBcIjpcIiArIHNlY3NjcjtcclxuICAgICAgICB0aGlzLl9lbmVteUNvdW50LnZhbHVlID0gU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5FbmVteUtpbGxDb3VudCArIFwiL1wiICsgU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5FbmVtQ291bnQ7XHJcbiAgICAgICAgaWYgKFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuQ3VyckxvY2tFbmVteVBvcyAhPSBudWxsICYmIFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuUGxheWVyLlN0YXRlSWQgPT0gU3RhdGVJRC5QdGVyKSB7XHJcbiAgICAgICAgICAgIGlmICghdGhpcy5fbG9jay52aXNpYmxlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9sb2NrLnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGxldCBwb2ludCA9IG5ldyBMYXlhLlBvaW50KCk7XHJcbiAgICAgICAgICAgIHBvaW50LnNldFRvKFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuQ3VyckxvY2tFbmVteVBvcy54LCBTY2VuZU1ncl9jc2NqLkluc3RhbmNlLkN1cnJMb2NrRW5lbXlQb3MueSk7XHJcbiAgICAgICAgICAgIHRoaXMuX293bmVyU3AuZ2xvYmFsVG9Mb2NhbChwb2ludCk7XHJcbiAgICAgICAgICAgIHRoaXMuX2xvY2sueCA9IHBvaW50Lng7XHJcbiAgICAgICAgICAgIHRoaXMuX2xvY2sueSA9IHBvaW50Lnk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fbG9jay52aXNpYmxlKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9sb2NrLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBFbmVteURlYWRFdmVudCgpIHtcclxuICAgICAgICBMYXlhLnRpbWVyLm9uY2UoNTAwLCB0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2VuZW15RGVhZC52aXNpYmxlID0gdHJ1ZTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIExheWEudGltZXIub25jZSgyMDAwLCB0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2VuZW15RGVhZC52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBFbmVteUxvY2sobG9jOiBMYXlhLlZlY3RvcjMpIHtcclxuXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgVmlld0Jhc2VfY3NqYyBmcm9tIFwiLi4vLi4vVmlldy9WaWV3QmFzZVwiO1xyXG5pbXBvcnQgVmlld01ncl9jc2pjLCB7IFZpZXdEZWZfY3NqYyB9IGZyb20gXCIuLi8uLi9NZ3IvVmlld01nclwiO1xyXG5pbXBvcnQgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjIGZyb20gXCIuLi8uLi9QbGF0Zm9ybUFwaS9DYWNoZWRXWEJhbm5lckFkXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBLZEJhbm5lclZpZXcgZXh0ZW5kcyBWaWV3QmFzZV9jc2pjIHtcclxuICAgIHByb3RlY3RlZCBfbmVlZFNob3dBbmk6IGJvb2xlYW4gPSB0cnVlO1xyXG4gICAgcHJvdGVjdGVkIF9jb3VudFRpbWVyOiBudW1iZXIgPSAwOy8v5pWI5p6c6K6h5pe25ZmoXHJcbiAgICBwcm90ZWN0ZWQgX3RyZWFzdXJlX2NzamM6IExheWEuSW1hZ2U7Ly/lrp3nrrFcclxuICAgIHByb3RlY3RlZCBfY2xpY2tCdG5fY3NqYzogTGF5YS5CdXR0b247Ly/ngrnlh7vmjInpkq5cclxuICAgIHByb3RlY3RlZCBfcHJvZ3Jlc3NfY3NqYzogTGF5YS5JbWFnZTsvL+W9k+WJjei/m+W6plxyXG4gICAgcHJvdGVjdGVkIF9wcm9ncmVzc0Jhcl9jc2pjOiBMYXlhLkltYWdlOy8vXHJcbiAgICBwcm90ZWN0ZWQgX3Byb2dyZXNzV2lkdGhfY3NqYzogbnVtYmVyID0gMDsvL+i/m+W6puadoeWuveW6plxyXG4gICAgcHJvdGVjdGVkIF9jbGlja1RpbWVfY3NqYzogbnVtYmVyID0gMDsvL+eUqOadpeS/neWtmOeUqOaIt+W9k+WJjeeCueWHu+asoeaVsFxyXG4gICAgcHJvdGVjdGVkIF90b3RhbENsaWNrVGltZV9jc2pjOiBudW1iZXIgPSAwOy8v55So5LqO6K6h566X5a6i5oi35oC75YWx54K55Ye75LqG5aSa5bCR5qyh5oyJ6ZKuXHJcbiAgICBwcm90ZWN0ZWQgX3RvdGFsQ2xpY2tUaW1lcl9jc2pjOiBudW1iZXIgPSAzMDsvL+eUqOaIt+S4gOebtOayoeS4reWll+i3r++8jOmCo+S5iOeCueWHu+S6hui/meS5iOWkmuasoemDvei/mOaYr+iuqeS7lue7p+e7reeOqeS4i+WOu++8jOS4jeimgeWNoeatu+eoi+W6j1xyXG4gICAgcHJvdGVjdGVkIF9uZWVkQ2xpY2tUaW1lX2NzamM6IG51bWJlciA9IDE1Oy8v5LiA5YWx54K55aSa5bCR5qyh6IO95aSf6I635b6X5aWW5Yqx77yM55So5LqO5pi+56S66L+b5bqm5p2hXHJcbiAgICBwcm90ZWN0ZWQgX2Jhbm5lckNsaWNrVGltZV9jc2pjOiBudW1iZXIgPSBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiA1KSArIDI7Ly/ngrnlpJrlsJHmrKHlvIDlp4vmmL7npLpiYW5uZXJy5aWX6Lev55So5oi3ICBcclxuICAgIHByb3RlY3RlZCBfYmFubmVyQ2xpY2tlZF9jc2pjOiBib29sZWFuID0gZmFsc2U7Ly9CYW5uZXLmmK/lkKblt7Lnu4/ngrnlh7s7XHJcbiAgICBvbkF3YWtlKCkge1xyXG4gICAgICAgIHRoaXMuX3RyZWFzdXJlX2NzamMgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiVHJlYXN1cmVcIikgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICB0aGlzLl9wcm9ncmVzc19jc2pjID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlByb2dyZXNzXCIpIGFzIExheWEuSW1hZ2U7XHJcbiAgICAgICAgdGhpcy5fcHJvZ3Jlc3NCYXJfY3NqYyA9IHRoaXMuX3Byb2dyZXNzX2NzamMuZ2V0Q2hpbGRCeU5hbWUoXCJCYXJcIikgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICB0aGlzLl9wcm9ncmVzc1dpZHRoX2NzamMgPSB0aGlzLl9wcm9ncmVzc0Jhcl9jc2pjLndpZHRoO1xyXG4gICAgICAgIHRoaXMuX3Byb2dyZXNzQmFyX2NzamMud2lkdGggPSAwO1xyXG4gICAgICAgIHRoaXMuX2NsaWNrQnRuX2NzamMgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQ2xpY2tCdG5cIikgYXMgTGF5YS5CdXR0b247XHJcbiAgICB9XHJcbiAgICBvblNob3coKXtcclxuICAgICAgICBzdXBlci5vblNob3coKVxyXG4gICAgICAgIGNvbnNvbGUubG9nKFwiLS0tLS0tLS0tLS0tLS0tLei/m+WFpeeLgueCuVwiKVxyXG4gICAgfVxyXG5cclxuICAgIG9uVXBkYXRlKCkge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiLSotLS0tLS0tLS0tLS0tLS0tLS0tLS0t54uC54K55YaF6YOoXCIpXHJcbiAgICAgICAgaWYgKHRoaXMuX25lZWRTaG93QW5pKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NvdW50VGltZXIgKz0gTGF5YS50aW1lci5kZWx0YSAvIDEwMDA7XHJcbiAgICAgICAgICAgIGxldCBhbmdsZSA9IHRoaXMuX2NvdW50VGltZXIgKiAzLjE0IC8gMTgwICogNzIwO1xyXG4gICAgICAgICAgICB0aGlzLl90cmVhc3VyZV9jc2pjLnJvdGF0aW9uID0gTWF0aC5zaW4oYW5nbGUpICogMTVcclxuICAgICAgICAgICAgbGV0IHByb2dyZXNzID0gdGhpcy5fY2xpY2tUaW1lX2NzamMgLyB0aGlzLl9uZWVkQ2xpY2tUaW1lX2NzamM7XHJcbiAgICAgICAgICAgIGxldCBzcGQgPSAyICsgKHByb2dyZXNzICogMik7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9wcm9ncmVzc0Jhcl9jc2pjLndpZHRoID49IHNwZCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcHJvZ3Jlc3NCYXJfY3NqYy53aWR0aCAtPSBzcGQ7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKCh0aGlzLl9wcm9ncmVzc0Jhcl9jc2pjLndpZHRoIC8gdGhpcy5fcHJvZ3Jlc3NXaWR0aF9jc2pjKSArIDAuMSA8IHByb2dyZXNzKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jbGlja1RpbWVfY3NqYy0tO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl90cmVhc3VyZV9jc2pjLnJvdGF0aW9uID0gMDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYWRkRXZlbnQoKSB7XHJcbiAgICAgICAgdGhpcy5fY2xpY2tCdG5fY3NqYy5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLk9uQ2xpY2tCdG4pO1xyXG4gICAgfVxyXG5cclxuICAgIE9uQ2xpY2tCdG4oKSB7XHJcbiAgICAgICAgdGhpcy5fdG90YWxDbGlja1RpbWVfY3NqYysrO1xyXG4gICAgICAgIHRoaXMuX2NsaWNrVGltZV9jc2pjKys7XHJcbiAgICAgICAgaWYgKHRoaXMuX2NsaWNrVGltZV9jc2pjID4gdGhpcy5fbmVlZENsaWNrVGltZV9jc2pjKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2NsaWNrVGltZV9jc2pjID0gdGhpcy5fbmVlZENsaWNrVGltZV9jc2pjO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5fY2xpY2tUaW1lX2NzamMgPj0gdGhpcy5fYmFubmVyQ2xpY2tUaW1lX2NzamMpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2NsaWNrVGltZV9jc2pjID49IHRoaXMuX25lZWRDbGlja1RpbWVfY3NqYykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY2xpY2tUaW1lX2NzamMgPSB0aGlzLl9uZWVkQ2xpY2tUaW1lX2NzamMgLSAxO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9iYW5uZXJDbGlja2VkX2NzamMpIHtcclxuICAgICAgICAgICAgICAgIGxldCBwcm9ncmVzcyA9IHRoaXMuX2NsaWNrVGltZV9jc2pjIC8gdGhpcy5fbmVlZENsaWNrVGltZV9jc2pjO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcHJvZ3Jlc3NCYXJfY3NqYy53aWR0aCA9IHByb2dyZXNzICogdGhpcy5fcHJvZ3Jlc3NXaWR0aF9jc2pjO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuX2Jhbm5lckNsaWNrZWRfY3NqYyA9IHRydWU7XHJcbiAgICAgICAgICAgIHRoaXMuU2hvd0Jhbm5lcigpO1xyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMTUwMCwgdGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5CYW5uZXJDbGlja2VkKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmICh0aGlzLl90b3RhbENsaWNrVGltZV9jc2pjID4gdGhpcy5fdG90YWxDbGlja1RpbWVyX2NzamMpIHtcclxuICAgICAgICAgICAgdGhpcy5TaG93QmFubmVyKCk7XHJcbiAgICAgICAgICAgIHRoaXMuQmFubmVyQ2xpY2tlZCgpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBsZXQgcHJvZ3Jlc3MgPSB0aGlzLl9jbGlja1RpbWVfY3NqYyAvIHRoaXMuX25lZWRDbGlja1RpbWVfY3NqYztcclxuICAgICAgICB0aGlzLl9wcm9ncmVzc0Jhcl9jc2pjLndpZHRoID0gcHJvZ3Jlc3MgKiB0aGlzLl9wcm9ncmVzc1dpZHRoX2NzamM7XHJcbiAgICB9XHJcblxyXG4gICAgQmFubmVyQ2xpY2tlZCgpIHtcclxuICAgICAgICB0aGlzLl9uZWVkU2hvd0FuaSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuX2Jhbm5lckNsaWNrZWRfY3NqYyA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5fY2xpY2tUaW1lX2NzamMgPSB0aGlzLl9uZWVkQ2xpY2tUaW1lX2NzamM7XHJcbiAgICAgICAgdGhpcy5fcHJvZ3Jlc3NCYXJfY3NqYy53aWR0aCA9IHRoaXMuX3Byb2dyZXNzV2lkdGhfY3NqYztcclxuICAgICAgICB0aGlzLl9jbGlja0J0bl9jc2pjLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLmNsb3NlVmlldygpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uT3BlbkV2ZW50ID0gKCkgPT4ge1xyXG4gICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5oaWRlX2NzamMoKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkNsb3NlRXZlbnQgPSAoKSA9PiB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0tLS0t54uC54K557uT5p2fXCIpXHJcbiAgICAgICAgVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMub3BlblZpZXdfY3NqYyhWaWV3RGVmX2NzamMuSW5HYW1lVmlldyk7XHJcbiAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLmhpZGVfY3NqYygpO1xyXG4gICAgfVxyXG5cclxuICAgIFNob3dCYW5uZXIoKSB7XHJcbiAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLmNoYW5nZVNob3dfY3NqYygxKTtcclxuICAgIH1cclxufSIsImltcG9ydCBWaWV3QmFzZV9jc2pjIGZyb20gXCIuLi8uLi9WaWV3L1ZpZXdCYXNlXCI7XHJcbmltcG9ydCBRcEdhbWVTd2l0Y2ggZnJvbSBcIi4uLy4uL1FwQVBJL1FwR2FtZVN3aXRjaFwiO1xyXG5pbXBvcnQgU2NlbmVNZ3JfY3NjaiBmcm9tIFwiLi4vR2FtZUNvcmUvU2NlbmVNZ3JcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFR1dG9yaWFsVmlldyBleHRlbmRzIFZpZXdCYXNlX2NzamMge1xyXG4gICAgcHJpdmF0ZSBfc2tpcEJ0bjogTGF5YS5JbWFnZTtcclxuICAgIHByaXZhdGUgX2Rpc3BsYXk6IExheWEuSW1hZ2U7XHJcbiAgICBwcml2YXRlIF9uZXh0QnRuOiBMYXlhLkltYWdlO1xyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICB0aGlzLl9za2lwQnRuID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlNraXBCdG5cIikgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICB0aGlzLl9kaXNwbGF5ID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlR1dG9yaWFsXCIpLmdldENoaWxkQnlOYW1lKFwiRGlzcGxheVwiKSBhcyBMYXlhLkltYWdlO1xyXG4gICAgICAgIHRoaXMuX25leHRCdG4gPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiTmV4dEJ0blwiKSBhcyBMYXlhLkltYWdlO1xyXG4gICAgICAgIHRoaXMuX2Rpc3BsYXkuc2tpbiA9IFwic3ViUmVzL2ltYWdlLzAuanBnXCI7XHJcbiAgICB9XHJcblxyXG4gICAgT25Ta2lwQnRuKCkge1xyXG4gICAgICAgIHRoaXMuY2xvc2VWaWV3KCk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkRXZlbnQoKSB7XHJcbiAgICAgICAgdGhpcy5fc2tpcEJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLk9uU2tpcEJ0bik7XHJcbiAgICAgICAgdGhpcy5fbmV4dEJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLk9uTmV4dEJ0bik7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBfaW5kZXggPSAwO1xyXG4gICAgT25OZXh0QnRuKCkge1xyXG4gICAgICAgIHRoaXMuX2luZGV4Kys7XHJcbiAgICAgICAgaWYgKHRoaXMuX2luZGV4ID4gMikge1xyXG4gICAgICAgICAgICB0aGlzLl9pbmRleCA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX2Rpc3BsYXkuc2tpbiA9IFwic3ViUmVzL2ltYWdlL1wiICsgdGhpcy5faW5kZXggKyBcIi5qcGdcIjtcclxuICAgIH1cclxuXHJcbiAgICBvbkNsb3NlRXZlbnQgPSAoKSA9PiB7XHJcbiAgICAgICAgU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5TdGFydEdhbWUoKTtcclxuICAgIH1cclxufSIsIlxyXG5pbXBvcnQgSVZpZXdTdGF0ZUxpc3RlbmVyX2NzamMgZnJvbSBcIi4uLy4uL1ZpZXcvSVZpZXdTdGF0ZUxpc3RlbmVyXCI7XHJcbmltcG9ydCBUbUFQSSBmcm9tIFwiLi4vVG1BUElcIjtcclxuaW1wb3J0IFRtQXBwQ29uZmlnIGZyb20gXCIuLi9UbUFwcENvbmZpZ1wiO1xyXG5pbXBvcnQgRXZlbnRNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcclxuaW1wb3J0IHsgRXZlbnREZWZfY3NqYyB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xyXG5pbXBvcnQgV1hBUElfY3NqYyBmcm9tIFwiLi4vLi4vUGxhdGZvcm1BcGkvV1hBUElcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRtQmFubmVyQWRWaWV3IGV4dGVuZHMgTGF5YS5TY3JpcHQgaW1wbGVtZW50cyBJVmlld1N0YXRlTGlzdGVuZXJfY3NqYyB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpXHJcbiAgICB9XHJcbiAgICAvKiogQHByb3Age25hbWU6QWRMb2NhdGlvbklELCB0aXBzOlwi5bm/5ZGK5L2NSURcIiwgdHlwZTpOdW1iZXIsIGRlZmF1bHQ6U2hhcmVBZC5Mb29wQWRMb2NhdGlvbklEfSovXHJcbiAgICBwdWJsaWMgQWRMb2NhdGlvbklEOiBudW1iZXIgPSBUbUFQSS5CYW5uZXJBZExvY2F0aW9uSWQ7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOlJlZnJlc2hUaW1lLCB0aXBzOlwi5Yi35paw6YCf5bqmLOWNleS9jeS4uuenklwiLCB0eXBlOk51bWJlciwgZGVmYXVsdDoxMH0qL1xyXG4gICAgcHVibGljIFJlZnJlc2hUaW1lOiBudW1iZXIgPSAxMDtcclxuXHJcbiAgICBwcm90ZWN0ZWQgX293bmVyU3A6IExheWEuU3ByaXRlO1xyXG5cclxuICAgIHByb3RlY3RlZCBfZGF0YTogYW55ID0gbnVsbDtcclxuICAgIHByb3RlY3RlZCBfcG9zaXRpb25JZCA9IDA7XHJcbiAgICBwcm90ZWN0ZWQgX2NyZWF0aXZlSWQgPSAwO1xyXG4gICAgcHJvdGVjdGVkIF9hcHBJZCA9IFwiXCI7XHJcbiAgICBwdWJsaWMgV1hCYW5uZXJXaWR0aDogbnVtYmVyO1xyXG4gICAgcHJvdGVjdGVkIF93eEJhbm5lcjogYW55ID0gbnVsbDtcclxuICAgIG9uQXdha2UoKSB7XHJcbiAgICAgICAgdGhpcy5fb3duZXJTcCA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICB9XHJcbiAgICBvbkRpc2FibGUoKSB7XHJcbiAgICAgICAgdGhpcy5jbGVhckJhbm5lcld4KCk7XHJcbiAgICB9XHJcbiAgICByZWZyZXNoQWQoKSB7XHJcbiAgICAgICAgaWYgKFRtQXBwQ29uZmlnLkN1cnJlbnRDb25maWcud3hCYW5uZXIgJiYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lIHx8IExheWEuQnJvd3Nlci5vblFRTWluaUdhbWUpKSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwiQmFubmVy57uE5Lu25pi+56S6QmFubmVyV3hcIik7XHJcbiAgICAgICAgICAgIHRoaXMucmVmcmVzaEJhbm5lcld4KCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIkJhbm5lcue7hOS7tuaYvuekukJhbm5lckFkXCIpO1xyXG4gICAgICAgICAgICB0aGlzLnJlZnJlc2hCYW5uZXJBZCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICByZWZyZXNoQmFubmVyQWQoKSB7XHJcbiAgICAgICAgVG1BUEkuVHJ5R2V0QWR2cyh0aGlzLkFkTG9jYXRpb25JRCwgKGNvbmZpZykgPT4ge1xyXG4gICAgICAgICAgICBpZiAoY29uZmlnICE9IG51bGwgJiYgY29uZmlnLklzT3BlbiAhPSBudWxsICYmICFjb25maWcuSXNPcGVuKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuW5v+WRiuS9je+8mlwiLCB0aGlzLkFkTG9jYXRpb25JRCwgXCIg54q25oCB5Li65YWz6ZetLOmakOiXj+aOp+S7tlwiKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX293bmVyU3AudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKGNvbmZpZyA9PSBudWxsIHx8IGNvbmZpZy50eXBlICE9IDExKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuW5v+WRiuS9je+8mlwiLCB0aGlzLkFkTG9jYXRpb25JRCwgXCIg5pWw5o2u5L2N56m65oiW6ICF57G75Z6L6ZSZ6K+vXCIpO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLm93bmVyICYmICF0aGlzLm93bmVyLmRlc3Ryb3llZCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZGF0YSA9IGNvbmZpZy5jcmVhdGl2ZXNbMF07XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jcmVhdGl2ZUlkID0gdGhpcy5fZGF0YS5jcmVhdGl2ZUlkO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fcG9zaXRpb25JZCA9IHRoaXMuX2RhdGEucG9zaXRpb25JZDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2FwcElkID0gY29uZmlnLmFwcElkO1xyXG4gICAgICAgICAgICAgICAgTGF5YS5sb2FkZXIubG9hZCh0aGlzLl9kYXRhLnNob3dfY29uZmlnLmltYWdlLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9vd25lclNwLmxvYWRJbWFnZSh0aGlzLl9kYXRhLnNob3dfY29uZmlnLmltYWdlKTtcclxuICAgICAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UodGhpcy5SZWZyZXNoVGltZSAqIDEwMDAsIHRoaXMsIHRoaXMucmVmcmVzaEJhbm5lckFkKTtcclxuICAgICAgICAgICAgICAgIH0pKTtcclxuICAgICAgICAgICAgICAgIC8vIHRoaXMuX293bmVyU3AubG9hZEltYWdlKHRoaXMuX2RhdGEuc2hvd19jb25maWcuaW1hZ2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIGlmICghdGhpcy5fb3duZXJTcC5kZXN0cm95ZWQpIHtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgdGhpcy5fb3duZXJTcC53aWR0aCA9IDc1MDtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgdGhpcy5fb3duZXJTcC5oZWlnaHQgPSAyNjA7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy8gICAgIExheWEudGltZXIub25jZSh0aGlzLlJlZnJlc2hUaW1lICogMTAwMCwgdGhpcywgdGhpcy5yZWZyZXNoQmFubmVyQWQpO1xyXG4gICAgICAgICAgICAgICAgLy8gfSkpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIG9uQ2xpY2soKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2RhdGEpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazmuLjmiI/vvJogXCIgKyB0aGlzLl9hcHBJZCk7XHJcbiAgICAgICAgICAgIFRtQVBJLk5hdmlnYXRlQW5kUmVwb3J0KHRoaXMuX3Bvc2l0aW9uSWQsIHRoaXMuX2NyZWF0aXZlSWQsIHRoaXMuX2FwcElkLCAoZmxhZywgbGlzdCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKCFmbGFnKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuQURfT25TaGFyZUFkRmFpbF9jc2pjKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChsaXN0ICE9IG51bGwpIHtcclxuXHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgcmVmcmVzaEJhbm5lcld4KCkge1xyXG4gICAgICAgIGlmICghTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUgfHwgISh0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlKS52aXNpYmxlKVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgdGhpcy5jbGVhckJhbm5lcld4KCk7XHJcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIHZhciBzeXNJbmZvID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLmdldFN5c3RlbUluZm9TeW5jKCk7XHJcbiAgICAgICAgdmFyIHN3ID0gc3lzSW5mby5zY3JlZW5XaWR0aDtcclxuICAgICAgICB2YXIgc2ggPSBzeXNJbmZvLnNjcmVlbkhlaWdodDtcclxuICAgICAgICB2YXIgcG9zID0gdGhpcy5fb3duZXJTcC5sb2NhbFRvR2xvYmFsKG5ldyBMYXlhLlBvaW50KDAsIDApKVxyXG5cclxuICAgICAgICB2YXIgbGVmdCA9IHBvcy54IC8gTGF5YS5zdGFnZS53aWR0aCAqIHN3O1xyXG4gICAgICAgIHZhciB0b3AgPSBwb3MueSAvIExheWEuc3RhZ2UuaGVpZ2h0ICogc2g7XHJcbiAgICAgICAgdmFyIHdpZHRoID0gdGhpcy5XWEJhbm5lcldpZHRoID8gdGhpcy5XWEJhbm5lcldpZHRoIC8gTGF5YS5zdGFnZS53aWR0aCAqIHN3IDogc3c7XHJcblxyXG4gICAgICAgIHRoaXMuX3d4QmFubmVyID0gTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLmNyZWF0ZUJhbm5lckFkKFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBhZFVuaXRJZDogV1hBUElfY3NqYy5iYW5uZXJBZFVuaXRJZF9jc2pjLFxyXG4gICAgICAgICAgICAgICAgYWRJbnRlcnZhbHM6IDMwLFxyXG4gICAgICAgICAgICAgICAgc3R5bGU6XHJcbiAgICAgICAgICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBsZWZ0OiBsZWZ0LFxyXG4gICAgICAgICAgICAgICAgICAgICAgICB0b3A6IHRvcCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IHdpZHRoLFxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICBzZWxmLl93eEJhbm5lci5vbkxvYWQoKHJlcykgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIldYQmFubmVy5bm/5ZGKIOWKoOi9veWujOaIkFwiKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIHRoaXMuX3d4QmFubmVyLm9uRXJyb3IoKGVycikgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIldYQmFubmVy5bm/5ZGKIOWKoOi9veWksei0pVwiKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coZXJyKTtcclxuICAgICAgICAgICAgdGhpcy5yZWZyZXNoQmFubmVyQWQoKTtcclxuICAgICAgICAgICAgdGhpcy5jbGVhckJhbm5lcld4KCk7XHJcbiAgICAgICAgfSlcclxuICAgICAgICB0aGlzLl93eEJhbm5lci5vblJlc2l6ZShyZXMgPT4ge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhzZWxmLl93eEJhbm5lci5zdHlsZS5yZWFsV2lkdGgsIHNlbGYuX3d4QmFubmVyLnN0eWxlLnJlYWxIZWlnaHQpXHJcbiAgICAgICAgfSlcclxuICAgICAgICBzZWxmLl93eEJhbm5lci5zaG93KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGNsZWFyQmFubmVyV3goKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX3d4QmFubmVyKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3d4QmFubmVyLmRlc3Ryb3koKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5fd3hCYW5uZXIgPSBudWxsO1xyXG4gICAgICAgIExheWEudGltZXIuY2xlYXIodGhpcywgdGhpcy5yZWZyZXNoQmFubmVyQWQpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvblZpZXdTaG93KCkge1xyXG4gICAgICAgIHRoaXMucmVmcmVzaEFkKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIG9uVmlld0hpZGUoKSB7XHJcbiAgICAgICAgdGhpcy5jbGVhckJhbm5lcld4KCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgRXZlbnRNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcclxuaW1wb3J0IHsgRXZlbnREZWZfY3NqYyB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xyXG5pbXBvcnQgVG1BUEkgZnJvbSBcIi4uL1RtQVBJXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUbUxpc3RBZEJveCBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIHByb3RlY3RlZCBfZGlzcGxheVNwOiBMYXlhLlNwcml0ZTtcclxuICAgIHByb3RlY3RlZCBfZGlzVGV4dDogTGF5YS5UZXh0O1xyXG4gICAgcHJvdGVjdGVkIF9kYXRhOiBhbnkgPSBudWxsO1xyXG4gICAgLy8gcHJvdGVjdGVkIF9vcmlnaW5XOiBudW1iZXIgPSAyMDA7XHJcbiAgICAvLyBwcm90ZWN0ZWQgX29yaWdpbkg6IG51bWJlciA9IDIwMDtcclxuICAgIHByb3RlY3RlZCBfZm9udFNpemUgPSAyNTtcclxuICAgIHByb3RlY3RlZCBfcG9zaXRpb25JZCA9IDA7XHJcbiAgICBwcm90ZWN0ZWQgX2NyZWF0aXZlSWQgPSAwO1xyXG4gICAgcHJvdGVjdGVkIF9hcHBJZCA9IFwiXCI7XHJcbiAgICBwcm90ZWN0ZWQgX3BhcmVudEFkVmlldzogTGF5YS5VSUNvbXBvbmVudDtcclxuICAgIG9uQXdha2UoKSB7XHJcbiAgICAgICAgdGhpcy5fZGlzcGxheVNwID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkRpc3BsYXlcIikgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgLy8gdGhpcy5fb3JpZ2luVyA9IHRoaXMuX2Rpc3BsYXlTcC53aWR0aDtcclxuICAgICAgICAvLyB0aGlzLl9vcmlnaW5IID0gdGhpcy5fZGlzcGxheVNwLmhlaWdodDtcclxuICAgICAgICB0aGlzLl9kaXNUZXh0ID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlRpdGxlVGV4dFwiKSBhcyBMYXlhLlRleHQ7XHJcbiAgICAgICAgdGhpcy5fZGlzVGV4dC50ZXh0ID0gXCJcIjtcclxuICAgICAgICB0aGlzLl9mb250U2l6ZSA9IHRoaXMuX2Rpc1RleHQuZm9udFNpemU7XHJcbiAgICB9XHJcblxyXG4gICAgLy8gb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAvLyAgICAgdGhpcy5fZGlzcGxheVNwLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuQ2xpY2tlZCk7XHJcbiAgICAvLyB9XHJcblxyXG4gICAgLy8gb25EaXNhYmxlKCk6IHZvaWQge1xyXG4gICAgLy8gICAgIHRoaXMuX2Rpc3BsYXlTcC5vZmYoTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbkNsaWNrKTtcclxuICAgIC8vIH1cclxuXHJcbiAgICBwdWJsaWMgc2V0RGF0YShkYXRhLCBwYXJlbnQpIHtcclxuICAgICAgICBpZiAoZGF0YSkge1xyXG4gICAgICAgICAgICB0aGlzLl9jcmVhdGl2ZUlkID0gZGF0YS5jcmVhdGl2ZUlkO1xyXG4gICAgICAgICAgICB0aGlzLl9wb3NpdGlvbklkID0gZGF0YS5wb3NpdGlvbklkO1xyXG4gICAgICAgICAgICB0aGlzLl9hcHBJZCA9IGRhdGEuYXBwSWQ7XHJcbiAgICAgICAgICAgIHRoaXMuX2Rpc3BsYXlTcC5sb2FkSW1hZ2UoZGF0YS5zaG93X2NvbmZpZy5pbWFnZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAvLyBpZiAoIXRoaXMuX2Rpc3BsYXlTcC5kZXN0cm95ZWQpIHtcclxuICAgICAgICAgICAgICAgIC8vICAgICB0aGlzLl9kaXNwbGF5U3Aud2lkdGggPSB0aGlzLl9vcmlnaW5XO1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIHRoaXMuX2Rpc3BsYXlTcC5oZWlnaHQgPSB0aGlzLl9vcmlnaW5IO1xyXG4gICAgICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgICAgIHZhciBzdHIgPSBTdHJpbmcoZGF0YS5zaG93X2NvbmZpZy50aXRsZSk7XHJcbiAgICAgICAgICAgIC8vIHZhciBudW0gPSBzdHIubGVuZ3RoO1xyXG4gICAgICAgICAgICAvLyBudW0gPSBNYXRoLm1heCg1LG51bSk7XHJcbiAgICAgICAgICAgIC8vIHZhciBmb250U2l6ZSA9IE1hdGguZmxvb3IoKDUgLyBudW0pICogdGhpcy5fZm9udFNpemUpO1xyXG4gICAgICAgICAgICAvLyB0aGlzLl9kaXNUZXh0LmZvbnRTaXplID0gZm9udFNpemU7XHJcbiAgICAgICAgICAgIHRoaXMuX2Rpc1RleHQudGV4dCA9IHN0cjtcclxuICAgICAgICAgICAgdGhpcy5fZGF0YSA9IGRhdGE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuX3BhcmVudEFkVmlldyA9IHBhcmVudDtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5o6n5Lu26KKr54K55Ye75LqL5Lu2XHJcbiAgICAgKiBcclxuICAgICAqIEBwcm90ZWN0ZWRcclxuICAgICAqIEBtZW1iZXJvZiBUbUxpc3RBZEJveFxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgb25DbGljaygpIHtcclxuICAgICAgICBpZiAodGhpcy5fZGF0YSkge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIui3s+i9rOa4uOaIj++8miBcIiArIHRoaXMuX2FwcElkKTtcclxuICAgICAgICAgICAgVG1BUEkuTmF2aWdhdGVBbmRSZXBvcnQodGhpcy5fcG9zaXRpb25JZCwgdGhpcy5fY3JlYXRpdmVJZCwgdGhpcy5fYXBwSWQsIChmbGFnLCBsaXN0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIWZsYWcpIHtcclxuICAgICAgICAgICAgICAgICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5BRF9PblNoYXJlQWRGYWlsX2NzamMpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fcGFyZW50QWRWaWV3LmV2ZW50KFwiQWRSZWZyZXNoXCIpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy8gaWYgKGxpc3QgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIHRoaXMuX3BhcmVudEFkVmlldy5ldmVudChcIlJlZnJlc2hcIik7XHJcbiAgICAgICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIC8vIHByb3RlY3RlZCBvblNwQ2xpY2soKSB7XHJcbiAgICAvLyAgICAgdmFyIGRhdGEgPSB0aGlzLl9kYXRhO1xyXG4gICAgLy8gICAgIGlmIChkYXRhKSB7XHJcbiAgICAvLyAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5ri45oiP77yaIFwiICsgZGF0YS50aXRsZSk7XHJcbiAgICAvLyAgICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xyXG4gICAgLy8gICAgICAgICAgICAgV1hBUEkubmF2aWdhdGVUb01pbmlQcm9ncmFtKGRhdGEuYXBwaWQsIGRhdGEudXJsLCAocmVzKSA9PiB7XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazmiJDlip9cIilcclxuICAgIC8vICAgICAgICAgICAgICAgICBBTEQuYWxkU2VuZFJlcG9ydEFkQ2xpY2tTdWNjZXNzKGRhdGEpO1xyXG4gICAgLy8gICAgICAgICAgICAgfSwgKHJlcykgPT4ge1xyXG4gICAgLy8gICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5aSx6LSlXCIpXHJcbiAgICAvLyAgICAgICAgICAgICAgICAgRXZlbnRNZ3IuZGlzcGF0Y2goRXZlbnREZWYuQURfT25TaGFyZUFkRmFpbCk7XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgaWYgKHJlcy5lcnJNc2cgPT0gXCJuYXZpZ2F0ZVRvTWluaVByb2dyYW06ZmFpbCBjYW5jZWxcIikge1xyXG4gICAgLy8gICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIueUqOaIt+WPlua2iOi3s+i9rFwiKTtcclxuICAgIC8vICAgICAgICAgICAgICAgICAgICAgQUxELmFsZFNlbmRSZXBvcnRBZENsaWNrRmFpbChkYXRhKTtcclxuICAgIC8vICAgICAgICAgICAgICAgICB9XHJcbiAgICAvLyAgICAgICAgICAgICB9LCAocmVzKSA9PiB7XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazlrozmiJBcIilcclxuICAgIC8vICAgICAgICAgICAgIH0pO1xyXG4gICAgLy8gICAgICAgICB9XHJcbiAgICAvLyAgICAgICAgIGVsc2UgaWYgKExheWEuQnJvd3Nlci5vblFHTWluaUdhbWUpIHtcclxuICAgIC8vICAgICAgICAgICAgIE9QUE9BUEkubmF2aWdhdGVUb01pbmlQcm9ncmFtKGRhdGEuYXBwaWQsIGRhdGEudGl0bGUsIGRhdGEudXJsLCAocmVzKSA9PiB7XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazmiJDlip9cIilcclxuICAgIC8vICAgICAgICAgICAgIH0sIChyZXMpID0+IHtcclxuICAgIC8vICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIui3s+i9rOWksei0pVwiKVxyXG4gICAgLy8gICAgICAgICAgICAgICAgIEV2ZW50TWdyLmRpc3BhdGNoKEV2ZW50RGVmLkFEX09uU2hhcmVBZEZhaWwpO1xyXG4gICAgLy8gICAgICAgICAgICAgfSwgKHJlcykgPT4ge1xyXG4gICAgLy8gICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5a6M5oiQXCIpXHJcbiAgICAvLyAgICAgICAgICAgICB9KTtcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgICAgICBlbHNlIGlmIChMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKSAvL3Fx5bCP5ri45oiPXHJcbiAgICAvLyAgICAgICAgIHtcclxuICAgIC8vICAgICAgICAgICAgIFFRTWluaUdhbWVBUEkubmF2aWdhdGVUb01pbmlQcm9ncmFtKGRhdGEuYXBwaWQsIGRhdGEudXJsLCAocmVzKSA9PiB7XHJcbiAgICAvLyAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLot7PovazmiJDlip9cIilcclxuICAgIC8vICAgICAgICAgICAgIH0sIChyZXMpID0+IHtcclxuICAgIC8vICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIui3s+i9rOWksei0pVwiKVxyXG4gICAgLy8gICAgICAgICAgICAgICAgIEV2ZW50TWdyLmRpc3BhdGNoKEV2ZW50RGVmLkFEX09uU2hhcmVBZEZhaWwpO1xyXG4gICAgLy8gICAgICAgICAgICAgfSwgKHJlcykgPT4ge1xyXG4gICAgLy8gICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6Lez6L2s5a6M5oiQXCIpXHJcbiAgICAvLyAgICAgICAgICAgICB9KTtcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgIH1cclxuICAgIC8vIH1cclxufSIsImltcG9ydCBUbUxpc3RBZEJveCBmcm9tIFwiLi9UbUxpc3RBZEJveFwiO1xyXG5pbXBvcnQgVG1BUEkgZnJvbSBcIi4uL1RtQVBJXCI7XHJcblxyXG4vKipcclxuICog55So5LqO5pi+56S65rua5Yqo5bm/5ZGK5YiX6KGo55qE57G7XHJcbiAqIFxyXG4gKiBAZXhwb3J0XHJcbiAqIEBjbGFzcyBMaXN0QWRWaWV3XHJcbiAqIEBleHRlbmRzIHtMYXlhLlNjcmlwdH1cclxuICovXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIExpc3RBZFZpZXcgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOlNjcm9sbERpcmVjdGlvbix0aXBzOlwi5rua5Yqo5pa55ZCRLOawtOW5s+aIluerluebtFwiLHR5cGU6T3B0aW9uLG9wdGlvbjpcIkhvcml6b250YWwsVmVydGljYWxcIixkZWZhdWx0OlwiSG9yaXpvbnRhbFwifSovXHJcbiAgICBwdWJsaWMgU2Nyb2xsRGlyZWN0aW9uOiBTdHJpbmcgPSBcIkhvcml6b250YWxcIjtcclxuXHJcbiAgICAvKiogQHByb3Age25hbWU6QWRMb2NhdGlvbklELCB0aXBzOlwi5bm/5ZGK5L2NSURcIiwgdHlwZTpOdW1iZXIsIGRlZmF1bHQ6U2hhcmVBZC5Mb29wQWRMb2NhdGlvbklEfSovXHJcbiAgICBwdWJsaWMgQWRMb2NhdGlvbklEOiBudW1iZXIgPSBUbUFQSS5MaXN0SWNvQWRMb2NhdGlvbklkO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpTY3JvbGxTcGVlZCwgdGlwczpcIua7muWKqOmAn+W6plwiLCB0eXBlOk51bWJlciwgZGVmYXVsdDoxMDB9Ki9cclxuICAgIHB1YmxpYyBTY3JvbGxTcGVlZDogbnVtYmVyID0gMTAwO1xyXG5cclxuICAgIHByb3RlY3RlZCBfb3duZXJTcDogTGF5YS5TcHJpdGU7XHJcbiAgICBwcm90ZWN0ZWQgX2xpc3Q6IExheWEuTGlzdDtcclxuICAgIHByb3RlY3RlZCBfc2Nyb2xsRm9yd2FyZCA9IHRydWU7XHJcblxyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICB0aGlzLl9vd25lclNwID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLl9saXN0ID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkxpc3RcIikgYXMgTGF5YS5MaXN0O1xyXG4gICAgICAgIHRoaXMuX2xpc3QuZWxhc3RpY0VuYWJsZWQgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuX2xpc3QucmVuZGVySGFuZGxlciA9IExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgdGhpcy5vbkxpc3RSZW5kZXIsIG51bGwsIGZhbHNlKVxyXG4gICAgICAgIGlmICh0aGlzLlNjcm9sbERpcmVjdGlvbiA9PSBcIkhvcml6b250YWxcIikge1xyXG4gICAgICAgICAgICB0aGlzLl9saXN0LmhTY3JvbGxCYXJTa2luID0gXCJcIjtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2xpc3QudlNjcm9sbEJhclNraW4gPSBcIlwiO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLm93bmVyLm9uKFwiQWRSZWZyZXNoXCIsIHRoaXMsIHRoaXMuUmVmcmVzaEFkTGlzdCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5SZWZyZXNoQWRMaXN0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgUmVmcmVzaEFkTGlzdCgpIHtcclxuICAgICAgICBUbUFQSS5UcnlHZXRBZHZzKHRoaXMuQWRMb2NhdGlvbklELCAoY29uZmlnKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChjb25maWcgIT0gbnVsbCAmJiBjb25maWcuSXNPcGVuICE9IG51bGwgJiYgIWNvbmZpZy5Jc09wZW4pIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5bm/5ZGK5L2N77yaXCIsIHRoaXMuQWRMb2NhdGlvbklELCBcIiDnirbmgIHkuLrlhbPpl60s6ZqQ6JeP5o6n5Lu2XCIpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fb3duZXJTcC52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoY29uZmlnID09IG51bGwgfHwgY29uZmlnLnR5cGUgIT0gNykge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLlub/lkYrkvY3vvJpcIiwgdGhpcy5BZExvY2F0aW9uSUQsIFwiIOaVsOaNruS9jeepuuaIluiAheexu+Wei+mUmeivr1wiKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2xpc3QuYXJyYXkgPSBudWxsO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLm93bmVyICYmICF0aGlzLm93bmVyLmRlc3Ryb3llZCkge1xyXG4gICAgICAgICAgICAgICAgbGV0IGRhdGFzID0gY29uZmlnLmNyZWF0aXZlcztcclxuICAgICAgICAgICAgICAgIHRoaXMuX2xpc3QuYXJyYXkgPSBkYXRhcztcclxuICAgICAgICAgICAgICAgIC8vIGlmIChkYXRhcyAmJiBkYXRhcy5sZW5ndGggPiAwICYmIGRhdGFzLmxlbmd0aCA8IDUwKSB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgKHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGUpLnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIHZhciB0ZW1wID0gW11cclxuICAgICAgICAgICAgICAgIC8vICAgICB2YXIgY291bnRlciA9IDA7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCA1MDsgKytpKSB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIGlmIChjb3VudGVyID49IGRhdGFzLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICAgICAgY291bnRlciA9IDA7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgdGVtcC5wdXNoKGRhdGFzW2NvdW50ZXJdKTtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgKytjb3VudGVyO1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAgICAgICAgIC8vICAgICB0aGlzLl9saXN0LmFycmF5ID0gdGVtcDtcclxuICAgICAgICAgICAgICAgIC8vIH1cclxuICAgICAgICAgICAgICAgIC8vIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIHRoaXMuX2xpc3QuYXJyYXkgPSBkYXRhcztcclxuICAgICAgICAgICAgICAgIC8vICAgICAodGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZSkudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICAvLyBvblVwZGF0ZSgpIHtcclxuICAgIC8vICAgICBsZXQgc2Nyb2xsVmFsdWUgPSB0aGlzLlNjcm9sbFNwZWVkICogTGF5YS50aW1lci5kZWx0YSAvIDEwMDA7XHJcbiAgICAvLyAgICAgaWYgKHRoaXMuX3Njcm9sbEZvcndhcmQpIHtcclxuICAgIC8vICAgICAgICAgdGhpcy5fbGlzdC5zY3JvbGxCYXIudmFsdWUgKz0gc2Nyb2xsVmFsdWU7XHJcbiAgICAvLyAgICAgICAgIGlmICh0aGlzLl9saXN0LnNjcm9sbEJhci52YWx1ZSA+PSB0aGlzLl9saXN0LnNjcm9sbEJhci5tYXgpIHtcclxuICAgIC8vICAgICAgICAgICAgIHRoaXMuX3Njcm9sbEZvcndhcmQgPSBmYWxzZTtcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgIH1cclxuICAgIC8vICAgICBlbHNlIHtcclxuICAgIC8vICAgICAgICAgdGhpcy5fbGlzdC5zY3JvbGxCYXIudmFsdWUgLT0gc2Nyb2xsVmFsdWU7XHJcbiAgICAvLyAgICAgICAgIGlmICh0aGlzLl9saXN0LnNjcm9sbEJhci52YWx1ZSA8PSAwKSB7XHJcbiAgICAvLyAgICAgICAgICAgICB0aGlzLl9zY3JvbGxGb3J3YXJkID0gdHJ1ZTtcclxuICAgIC8vICAgICAgICAgfVxyXG4gICAgLy8gICAgIH1cclxuICAgIC8vIH1cclxuXHJcbiAgICBvblVwZGF0ZSgpIHtcclxuICAgICAgICBsZXQgc2Nyb2xsVmFsdWUgPSB0aGlzLlNjcm9sbFNwZWVkICogTGF5YS50aW1lci5kZWx0YSAvIDEwMDA7XHJcbiAgICAgICAgdGhpcy5fbGlzdC5zY3JvbGxCYXIudmFsdWUgKz0gc2Nyb2xsVmFsdWU7XHJcbiAgICAgICAgaWYgKHRoaXMuX2xpc3Quc2Nyb2xsQmFyLnZhbHVlID49IHRoaXMuX2xpc3Quc2Nyb2xsQmFyLm1heCkge1xyXG4gICAgICAgICAgICB0aGlzLl9saXN0LnNjcm9sbEJhci52YWx1ZSA9IDA7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuX2xpc3Quc2Nyb2xsQmFyLnZhbHVlIDwgMCkge1xyXG4gICAgICAgICAgICB0aGlzLl9saXN0LnNjcm9sbEJhci52YWx1ZSA9IHRoaXMuX2xpc3Quc2Nyb2xsQmFyLm1heDtcclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBvbkxpc3RSZW5kZXIoY2VsbDogTGF5YS5Cb3gsIGluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX2xpc3QuYXJyYXlbaW5kZXhdO1xyXG4gICAgICAgIHZhciBsaXN0QWRCb3g6IFRtTGlzdEFkQm94ID0gY2VsbC5nZXRDb21wb25lbnQoVG1MaXN0QWRCb3gpO1xyXG4gICAgICAgIGxpc3RBZEJveC5zZXREYXRhKGRhdGEsIHRoaXMub3duZXIpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IFRtQVBJIGZyb20gXCIuLi9UbUFQSVwiO1xyXG5pbXBvcnQgVG1MaXN0QWRCb3ggZnJvbSBcIi4vVG1MaXN0QWRCb3hcIjtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUbVNoYWtlQWRWaWV3IGV4dGVuZHMgTGF5YS5TY3JpcHQge1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpBZExvY2F0aW9uSUQsIHRpcHM6XCLlub/lkYrkvY1JRFwiLCB0eXBlOk51bWJlciwgZGVmYXVsdDpTaGFyZUFkLkxvb3BBZExvY2F0aW9uSUR9Ki9cclxuICAgIHB1YmxpYyBBZExvY2F0aW9uSUQ6IG51bWJlciA9IFRtQVBJLkxpc3RJY29BZExvY2F0aW9uSWQ7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOlNoYWtlVGltZSwgdGlwczpcIumXquWKqOmAn+W6plwiLCB0eXBlOk51bWJlciwgZGVmYXVsdDoxMDAwfSovXHJcbiAgICBwdWJsaWMgU2hha2VUaW1lOiBudW1iZXIgPSAxMDAwO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpDaGFuZUFkVGltZSwgdGlwczpcIuabtOaNouW5v+WRiumAn+W6plwiLCB0eXBlOk51bWJlciwgZGVmYXVsdDoxMDAwfSovXHJcbiAgICBwdWJsaWMgQ2hhbmVBZFRpbWU6IG51bWJlciA9IDYwMDA7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOlJvdGFBbmdlbCwgdGlwczpcIuaZg+WKqOinkuW6plwiLCB0eXBlOk51bWJlciwgZGVmYXVsdDoxMH0qL1xyXG4gICAgcHVibGljIFJvdGFBbmdlbDogbnVtYmVyID0gMTA7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOlNjYWxlLCB0aXBzOlwi5pmD5Yqo57yp5pS+XCIsIHR5cGU6TnVtYmVyLCBkZWZhdWx0OjAuMX0qL1xyXG4gICAgcHVibGljIFNjYWxlOiBudW1iZXIgPSAwLjE7XHJcblxyXG4gICAgcHJvdGVjdGVkIF9vd25lclNwOiBMYXlhLlNwcml0ZTtcclxuICAgIHByb3RlY3RlZCBfbGlzdDogTGF5YS5MaXN0O1xyXG4gICAgcHJvdGVjdGVkIF9jZWxsczogQXJyYXk8TGF5YS5VSUNvbXBvbmVudD47XHJcbiAgICBwcm90ZWN0ZWQgX3NoYWtlVGltZXI6IG51bWJlciA9IDA7XHJcbiAgICBwcm90ZWN0ZWQgX2NoYW5nZUFkVGltZXI6IG51bWJlciA9IDA7O1xyXG4gICAgcHJvdGVjdGVkIF9zaGFrZUluZGV4OiBudW1iZXIgPSAwO1xyXG5cclxuICAgIG9uQXdha2UoKSB7XHJcbiAgICAgICAgdGhpcy5fb3duZXJTcCA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5fbGlzdCA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJMaXN0XCIpIGFzIExheWEuTGlzdDtcclxuICAgICAgICB0aGlzLl9saXN0LnJlbmRlckhhbmRsZXIgPSBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIHRoaXMub25MaXN0UmVuZGVyLCBudWxsLCBmYWxzZSlcclxuICAgICAgICB0aGlzLl9jZWxscyA9IHRoaXMuX2xpc3QuY2VsbHM7XHJcbiAgICB9XHJcblxyXG4gICAgb25FbmFibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5SZWZyZXNoQWRMaXN0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25VcGRhdGUoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2NoYW5nZUFkVGltZXIgPD0gdGhpcy5DaGFuZUFkVGltZSkge1xyXG4gICAgICAgICAgICB0aGlzLl9jaGFuZ2VBZFRpbWVyICs9IExheWEudGltZXIuZGVsdGE7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0aGlzLl9zaGFrZVRpbWVyIDw9IHRoaXMuU2hha2VUaW1lKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NoYWtlVGltZXIgKz0gTGF5YS50aW1lci5kZWx0YTtcclxuICAgICAgICAgICAgbGV0IGJveCA9IHRoaXMuX2NlbGxzW3RoaXMuX3NoYWtlSW5kZXhdO1xyXG4gICAgICAgICAgICBsZXQgcGVyaW9kID0gdGhpcy5fc2hha2VUaW1lciAvIHRoaXMuU2hha2VUaW1lO1xyXG4gICAgICAgICAgICBsZXQgYW5pUGVyaW9kID0gMDtcclxuICAgICAgICAgICAgaWYgKHBlcmlvZCA+PSAwICYmIHBlcmlvZCA8IDAuMikge1xyXG4gICAgICAgICAgICAgICAgYW5pUGVyaW9kID0gKHBlcmlvZCAvIDAuMik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAocGVyaW9kID49IDAuMiAmJiBwZXJpb2QgPCAwLjQpIHtcclxuICAgICAgICAgICAgICAgIGFuaVBlcmlvZCA9IDEgLSAoKHBlcmlvZCAtIDAuMikgLyAwLjIpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKHBlcmlvZCA+PSAwLjQgJiYgcGVyaW9kIDwgMC42KSB7XHJcbiAgICAgICAgICAgICAgICBhbmlQZXJpb2QgPSAtMSAqICgocGVyaW9kIC0gMC40KSAvIDAuMik7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAocGVyaW9kID49IDAuNiAmJiBwZXJpb2QgPCAwLjgpIHtcclxuICAgICAgICAgICAgICAgIGFuaVBlcmlvZCA9IC0xICsgKChwZXJpb2QgLSAwLjYpIC8gMC4yKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGFuaVBlcmlvZCA9IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgYm94LnJvdGF0aW9uID0gYW5pUGVyaW9kICogdGhpcy5Sb3RhQW5nZWw7XHJcbiAgICAgICAgICAgIGJveC5zY2FsZVggPSAxIC0gKGFuaVBlcmlvZCAqIHRoaXMuU2NhbGUpO1xyXG4gICAgICAgICAgICBib3guc2NhbGVZID0gYm94LnNjYWxlWDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NoYWtlVGltZXIgPSAwO1xyXG4gICAgICAgICAgICB0aGlzLl9zaGFrZUluZGV4Kys7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9zaGFrZUluZGV4ID4gdGhpcy5fY2VsbHMubGVuZ3RoIC0gMSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fc2hha2VJbmRleCA9IDA7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgaWYgKHRoaXMuX2NoYW5nZUFkVGltZXIgPiB0aGlzLkNoYW5lQWRUaW1lKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jaGFuZ2VBZFRpbWVyID0gMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuUmVmcmVzaEFkTGlzdCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBvbkxpc3RSZW5kZXIoY2VsbDogTGF5YS5Cb3gsIGluZGV4OiBudW1iZXIpOiB2b2lkIHtcclxuICAgICAgICB2YXIgZGF0YSA9IHRoaXMuX2xpc3QuYXJyYXlbaW5kZXhdO1xyXG4gICAgICAgIHZhciBsb29wQWRCb3g6IFRtTGlzdEFkQm94ID0gY2VsbC5nZXRDb21wb25lbnQoVG1MaXN0QWRCb3gpO1xyXG4gICAgICAgIGxvb3BBZEJveC5zZXREYXRhKGRhdGEsIHRoaXMub3duZXIpO1xyXG4gICAgfVxyXG5cclxuICAgIFJlZnJlc2hBZExpc3QoKSB7XHJcbiAgICAgICAgVG1BUEkuVHJ5R2V0QWR2cyh0aGlzLkFkTG9jYXRpb25JRCwgKGNvbmZpZykgPT4ge1xyXG4gICAgICAgICAgICBpZiAoY29uZmlnICE9IG51bGwgJiYgY29uZmlnLklzT3BlbiAhPSBudWxsICYmICFjb25maWcuSXNPcGVuKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuW5v+WRiuS9je+8mlwiLCB0aGlzLkFkTG9jYXRpb25JRCwgXCIg54q25oCB5Li65YWz6ZetLOmakOiXj+aOp+S7tlwiKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX293bmVyU3AudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGVsc2UgaWYgKGNvbmZpZyA9PSBudWxsIHx8IGNvbmZpZy50eXBlICE9IDcpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5bm/5ZGK5L2N77yaXCIsIHRoaXMuQWRMb2NhdGlvbklELCBcIiDmlbDmja7kvY3nqbrmiJbogIXnsbvlnovplJnor69cIik7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9saXN0LmFycmF5ID0gbnVsbDtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodGhpcy5vd25lciAmJiAhdGhpcy5vd25lci5kZXN0cm95ZWQpIHtcclxuICAgICAgICAgICAgICAgIGxldCBkYXRhcyA9IGNvbmZpZy5jcmVhdGl2ZXM7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9saXN0LmFycmF5ID0gZGF0YXM7XHJcbiAgICAgICAgICAgICAgICAvLyBpZiAoZGF0YXMgJiYgZGF0YXMubGVuZ3RoID4gMCAmJiBkYXRhcy5sZW5ndGggPCA1MCkge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICh0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlKS52aXNpYmxlID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgIC8vICAgICB2YXIgdGVtcCA9IFtdXHJcbiAgICAgICAgICAgICAgICAvLyAgICAgdmFyIGNvdW50ZXIgPSAwO1xyXG4gICAgICAgICAgICAgICAgLy8gICAgIGZvciAodmFyIGkgPSAwOyBpIDwgNTA7ICsraSkge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICBpZiAoY291bnRlciA+PSBkYXRhcy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgICAgIC8vICAgICAgICAgICAgIGNvdW50ZXIgPSAwO1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgIHRlbXAucHVzaChkYXRhc1tjb3VudGVyXSk7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgICAgICsrY291bnRlcjtcclxuICAgICAgICAgICAgICAgIC8vICAgICB9XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgdGhpcy5fbGlzdC5hcnJheSA9IHRlbXA7XHJcbiAgICAgICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgICAgICAvLyBlbHNlIHtcclxuICAgICAgICAgICAgICAgIC8vICAgICB0aGlzLl9saXN0LmFycmF5ID0gZGF0YXM7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgKHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGUpLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgIC8vIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgRXZlbnRNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcclxuaW1wb3J0IHsgRXZlbnREZWZfY3NqYyB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xyXG5pbXBvcnQgVXRpbGl0IGZyb20gXCIuLi8uLi9VdGlsaXRcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRtU2lkZVBvcEFkVmlldyBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIHByb3RlY3RlZCBfb3duZXJTcDogTGF5YS5TcHJpdGU7XHJcbiAgICBwcm90ZWN0ZWQgX2JnOiBMYXlhLlNwcml0ZTtcclxuICAgIHByb3RlY3RlZCBfcG9wQnRuOiBMYXlhLlNwcml0ZTtcclxuICAgIHByb3RlY3RlZCBfcG9wT3V0X0ltZzogTGF5YS5TcHJpdGU7XHJcbiAgICBwcm90ZWN0ZWQgX3BvcEluX0ltZzogTGF5YS5TcHJpdGU7XHJcblxyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICB0aGlzLl9vd25lclNwID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLl9iZyA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJCR1wiKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLl9wb3BCdG4gPSB0aGlzLl9iZy5nZXRDaGlsZEJ5TmFtZShcIlBvcEFEQnRuXCIpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuX3BvcE91dF9JbWcgPSB0aGlzLl9wb3BCdG4uZ2V0Q2hpbGRCeU5hbWUoXCJQb3BPdXRcIikgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5fcG9wSW5fSW1nID0gdGhpcy5fcG9wQnRuLmdldENoaWxkQnlOYW1lKFwiUG9wSW5cIikgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5fcG9wT3V0X0ltZy52aXNpYmxlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLl9wb3BJbl9JbWcudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgfVxyXG5cclxuICAgIG9uRW5hYmxlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX3BvcEJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uUG9wQnRuQ2xpY2spO1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMucmVnRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLkFEX09uU2hhcmVBZEZhaWxfY3NqYywgdGhpcywgdGhpcy5vblNoYXJlQWRGYWlsKTtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlZ0V2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5BRF9TaWRlUG9wVmlld1N3aXRjaF9jc2pjLCB0aGlzLCAocmVzKSA9PiB7IHRoaXMuX293bmVyU3AudmlzaWJsZSA9IHJlcyB9KTtcclxuICAgIH1cclxuXHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fcG9wQnRuLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uUG9wQnRuQ2xpY2spO1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMucmVtb3ZlRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLkFEX09uU2hhcmVBZEZhaWxfY3NqYywgdGhpcywgdGhpcy5vblNoYXJlQWRGYWlsKTtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlZ0V2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5BRF9TaWRlUG9wVmlld1N3aXRjaF9jc2pjLCB0aGlzLCAocmVzKSA9PiB7IHRoaXMuX293bmVyU3AudmlzaWJsZSA9IHJlcyB9KTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgcHJvdGVjdGVkIG9uUG9wQnRuQ2xpY2soKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX2JnLnggPiAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMucG9wRG93bigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5wb3BVcCgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgcG9wRG93bigpIHtcclxuICAgICAgICBMYXlhLlR3ZWVuLnRvKHRoaXMuX2JnLFxyXG4gICAgICAgICAgICB7IHg6IDAgfSxcclxuICAgICAgICAgICAgMjUwLFxyXG4gICAgICAgICAgICBMYXlhLkVhc2UuY2lyY0luLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsICgpID0+IHtcclxuXHJcbiAgICAgICAgICAgIH0pLCBudWxsLCB0cnVlKVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBwb3BVcCgpIHtcclxuICAgICAgICBVdGlsaXQuZm9yRWFjaENoaWxkKHRoaXMub3duZXIsIChvd25lcjpMYXlhLk5vZGUpID0+IHtcclxuICAgICAgICAgICAgb3duZXIuZXZlbnQoXCJBZFJlZnJlc2hcIik7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLl9iZyxcclxuICAgICAgICAgICAgeyB4OiB0aGlzLl9iZy53aWR0aCB9LFxyXG4gICAgICAgICAgICAyNTAsXHJcbiAgICAgICAgICAgIExheWEuRWFzZS5jaXJjSW4sIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xyXG5cclxuICAgICAgICAgICAgfSksIG51bGwsIHRydWUpXHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIG9uU2hhcmVBZEZhaWwoKSB7XHJcbiAgICAgICAgdGhpcy5wb3BVcCgpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IFRtQVBJIGZyb20gXCIuLi9UbUFQSVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG1TaW5nbGVBZFZpZXcgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcbiAgICBjb25zdHJ1Y3RvcigpIHtcclxuICAgICAgICBzdXBlcigpO1xyXG4gICAgfVxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOkFkTG9jYXRpb25JRCwgdGlwczpcIuW5v+WRiuS9jUlEXCIsIHR5cGU6TnVtYmVyLCBkZWZhdWx0OlNoYXJlQWQuTG9vcEFkTG9jYXRpb25JRH0qL1xyXG4gICAgcHVibGljIEFkTG9jYXRpb25JRDogbnVtYmVyID0gVG1BUEkuU2luZ2xlQWRMb2NhdGlvbklkO1xyXG5cclxuICAgIC8qKiBAcHJvcCB7bmFtZTpSZWZyZXNoVGltZSwgdGlwczpcIuWIt+aWsOmAn+W6pizljZXkvY3kuLrnp5JcIiwgdHlwZTpOdW1iZXIsIGRlZmF1bHQ6MH0qL1xyXG4gICAgcHVibGljIFJlZnJlc2hUaW1lOiBudW1iZXIgPSAwO1xyXG5cclxuICAgIHByb3RlY3RlZCBfb3duZXJTcDogTGF5YS5TcHJpdGVcclxuICAgIHByb3RlY3RlZCBfZGlzcGxheVNwOiBMYXlhLlNwcml0ZTtcclxuICAgIHByb3RlY3RlZCBfZGF0YTogYW55ID0gbnVsbDtcclxuICAgIHByb3RlY3RlZCBfcG9zaXRpb25JZDogbnVtYmVyID0gMDtcclxuICAgIHByb3RlY3RlZCBfY3JlYXRpdmVJZDogbnVtYmVyID0gMDtcclxuICAgIHByb3RlY3RlZCBfYXBwSWQ6IHN0cmluZyA9IFwiXCI7XHJcbiAgICBwcm90ZWN0ZWQgX2lzQW5pOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBwcm90ZWN0ZWQgX2FuaUltYWdlSW5kZXg6IG51bWJlciA9IDA7XHJcbiAgICBwcm90ZWN0ZWQgX2FuaUltYWdlQXJyYXk6IEFycmF5PHN0cmluZz4gPSBbXTtcclxuICAgIHByb3RlY3RlZCBfZnBzVGltZXI6IG51bWJlciA9IDA7XHJcbiAgICBwcm90ZWN0ZWQgX2Zwc1RpbWU6IG51bWJlciA9IDA7XHJcbiAgICBvbkF3YWtlKCkge1xyXG4gICAgICAgIHRoaXMuX293bmVyU3AgPSB0aGlzLm93bmVyIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuX2Rpc3BsYXlTcCA9IHRoaXMuX293bmVyU3AuZ2V0Q2hpbGRCeU5hbWUoXCJEaXNwbGF5XCIpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgfVxyXG4gICAgb25FbmFibGUoKSB7XHJcbiAgICAgICAgdGhpcy5yZWZyZXNoQWQoKTtcclxuICAgIH1cclxuICAgIHJlZnJlc2hBZCgpIHtcclxuICAgICAgICBUbUFQSS5UcnlHZXRBZHZzKHRoaXMuQWRMb2NhdGlvbklELCAoY29uZmlnKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChjb25maWcgIT0gbnVsbCAmJiBjb25maWcuSXNPcGVuICE9IG51bGwgJiYgIWNvbmZpZy5Jc09wZW4pIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5bm/5ZGK5L2N77yaXCIsIHRoaXMuQWRMb2NhdGlvbklELCBcIiDnirbmgIHkuLrlhbPpl60s6ZqQ6JeP5o6n5Lu2XCIpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fb3duZXJTcC52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSBpZiAoY29uZmlnID09IG51bGwgfHwgY29uZmlnLnR5cGUgIT0gMSkge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLlub/lkYrkvY3vvJpcIiwgdGhpcy5BZExvY2F0aW9uSUQsIFwiIOaVsOaNruS9jeepuuaIluiAheexu+Wei+mUmeivr1wiKTtcclxuICAgICAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAodGhpcy5vd25lciAmJiAhdGhpcy5vd25lci5kZXN0cm95ZWQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2RhdGEgPSBjb25maWcuY3JlYXRpdmVzWzBdO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY3JlYXRpdmVJZCA9IHRoaXMuX2RhdGEuY3JlYXRpdmVJZDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3Bvc2l0aW9uSWQgPSB0aGlzLl9kYXRhLnBvc2l0aW9uSWQ7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9hcHBJZCA9IGNvbmZpZy5hcHBJZDtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLl9kYXRhLnNob3dfY29uZmlnLmZwcyAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCJTaW5nbGVBZOaYvuekuuW6j+WIl+W4p1wiKTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9hbmlJbWFnZUFycmF5ID0gdGhpcy5fZGF0YS5zaG93X2NvbmZpZy5pbWFnZXM7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5fZnBzVGltZSA9IHRoaXMuX2RhdGEuc2hvd19jb25maWcuZnBzICogMTAwMDtcclxuICAgICAgICAgICAgICAgICAgICBMYXlhLmxvYWRlci5sb2FkKHRoaXMuX2FuaUltYWdlQXJyYXksIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAoIXJlcykgcmV0dXJuO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5SZWZyZXNoVGltZSA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZSh0aGlzLlJlZnJlc2hUaW1lICogMTAwMCwgdGhpcywgdGhpcy5yZWZyZXNoQWQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2FuaUltYWdlSW5kZXggPSAwO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9mcHNUaW1lciA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX2lzQW5pID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIlNpbmdsZUFk5pi+56S65Y2V54us5rWu5YqoXCIpO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2FuaUltYWdlQXJyYXkgPSBbXTtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9mcHNUaW1lID0gMDtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9mcHNUaW1lciA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5faXNBbmkgPSBmYWxzZTtcclxuICAgICAgICAgICAgICAgICAgICBMYXlhLmxvYWRlci5sb2FkKHRoaXMuX2RhdGEuc2hvd19jb25maWcuaW1hZ2UsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLl9kaXNwbGF5U3AubG9hZEltYWdlKHRoaXMuX2RhdGEuc2hvd19jb25maWcuaW1hZ2UpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5SZWZyZXNoVGltZSA+IDApIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZSh0aGlzLlJlZnJlc2hUaW1lICogMTAwMCwgdGhpcywgdGhpcy5yZWZyZXNoQWQpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgfSkpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgLy8gdGhpcy5fb3duZXJTcC5sb2FkSW1hZ2UodGhpcy5fZGF0YS5zaG93X2NvbmZpZy5pbWFnZSwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgaWYgKCF0aGlzLl9vd25lclNwLmRlc3Ryb3llZCkge1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICB0aGlzLl9vd25lclNwLndpZHRoID0gNzUwO1xyXG4gICAgICAgICAgICAgICAgLy8gICAgICAgICB0aGlzLl9vd25lclNwLmhlaWdodCA9IDI2MDtcclxuICAgICAgICAgICAgICAgIC8vICAgICB9XHJcbiAgICAgICAgICAgICAgICAvLyAgICAgTGF5YS50aW1lci5vbmNlKHRoaXMuUmVmcmVzaFRpbWUgKiAxMDAwLCB0aGlzLCB0aGlzLnJlZnJlc2hCYW5uZXJBZCk7XHJcbiAgICAgICAgICAgICAgICAvLyB9KSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBvblVwZGF0ZSgpIHtcclxuICAgICAgICBpZiAodGhpcy5faXNBbmkpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2Zwc1RpbWVyIDwgdGhpcy5fZnBzVGltZSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZnBzVGltZXIgKz0gTGF5YS50aW1lci5kZWx0YTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2Zwc1RpbWVyID0gMDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2Rpc3BsYXlTcC5sb2FkSW1hZ2UodGhpcy5fYW5pSW1hZ2VBcnJheVt0aGlzLl9hbmlJbWFnZUluZGV4XSk7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5fYW5pSW1hZ2VJbmRleCA+IHRoaXMuX2FuaUltYWdlQXJyYXkubGVuZ3RoIC0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2FuaUltYWdlSW5kZXgrKztcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2FuaUltYWdlSW5kZXggPSAwO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IEV2ZW50TWdyX2NzamMgZnJvbSBcIi4uL0V2ZW50L0V2ZW50TWdyXCI7XHJcbmltcG9ydCBBTERfY3NqYyBmcm9tIFwiLi4vQUxEXCJcclxuaW1wb3J0IFRtQXBwQ29uZmlnIGZyb20gXCIuL1RtQXBwQ29uZmlnXCI7XHJcbmltcG9ydCBHYW1lU2V0dGluZ3NfY3NqYyBmcm9tIFwiLi4vR2FtZVNldHRpbmdzXCI7XHJcbi8qKlxyXG4gKiDlpKnluZVzZGvns7vnu59BUElcclxuICogXHJcbiAqIEBleHBvcnRcclxuICogQGNsYXNzIFRtQVBJXHJcbiAqL1xyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBUbUFQSSB7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBVc2VTREs6IGJvb2xlYW4gPSBmYWxzZTtcclxuXHJcbiAgICAvL+W9k+WJjUFwcOeJiOacrFxyXG4gICAgcHVibGljIHN0YXRpYyBBcHBWZXJzaW9uID0gR2FtZVNldHRpbmdzX2NzamMuVmVyc2lvbnNfY3NqYztcclxuXHJcbiAgICAvL+i9ruaSreW5v+WRiuS9jVxyXG4gICAgcHVibGljIHN0YXRpYyBMaXN0SWNvQWRMb2NhdGlvbklkID0gMTA3NTc5OTtcclxuXHJcbiAgICAvL+WNleS4quW5v+WRiuS9jVxyXG4gICAgcHVibGljIHN0YXRpYyBTaW5nbGVBZExvY2F0aW9uSWQgPSAxMDc1OTAwO1xyXG5cclxuICAgIC8vQmFubmVy5bm/5ZGK5L2NXHJcbiAgICBwdWJsaWMgc3RhdGljIEJhbm5lckFkTG9jYXRpb25JZCA9IDEwNzYwMDE7XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBfaXBob25lSWdub3JlQXBwSWRzID1cclxuICAgICAgICBbXHJcbiAgICAgICAgICAgIFwid3gyZDJhY2NlM2M0NWY0ZGRmXCIsXHJcbiAgICAgICAgICAgIFwid3hlYjkzYzEyOThlYzdjNjJiXCJcclxuICAgICAgICBdXHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBVc2VySW5mb3JtYXRpb246IG9iamVjdCA9IG51bGw7XHJcbiAgICAvKipcclxuICAgICAqIOWkqeW5lVNES+WIneWni+WMllxyXG4gICAgICogXHJcbiAgICAgKiBAc3RhdGljXHJcbiAgICAgKiBAbWVtYmVyb2YgVG1BUElcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBJbml0KCkge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSAmJiB0aGlzLlVzZVNESykge1xyXG4gICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0udG1TREsuaW5pdCh7XHJcbiAgICAgICAgICAgICAgICBoaWRlUmVxdWVzdExvZzogdHJ1ZSxcclxuICAgICAgICAgICAgICAgIGFwcFZlcnNpb246IHRoaXMuQXBwVmVyc2lvblxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDnmbvlvZXmjqXlj6NcclxuICAgICAqIFxyXG4gICAgICogQHN0YXRpY1xyXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gZnVuYyBcclxuICAgICAqIEBtZW1iZXJvZiBUbUFQSVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIExvZ2luKGZ1bmM6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lICYmIHRoaXMuVXNlU0RLKSB7XHJcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS50bVNESy5sb2dpbigpLnRoZW4ocmVzID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi55m76ZmG5oiQ5YqfXCIsIHJlcylcclxuICAgICAgICAgICAgICAgIGlmIChmdW5jICE9IG51bGwpIHtcclxuICAgICAgICAgICAgICAgICAgICBmdW5jKHJlcyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIE5vTG9naW5Jbml0KG9wZW5JZCkge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSAmJiB0aGlzLlVzZVNESykge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhvcGVuSWQpO1xyXG4gICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0udG1TREsuc2VuZFVzZXJJbmZvKHsgb3BlbklkOiBvcGVuSWQsIGdlbmRlcjogMSB9KTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLkvKDlhaXlpKnluZVPcGVuSWQ6IFwiLCBvcGVuSWQpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWwneivleW+l+WIsOW5v+WRiu+8jOS8muWFiOajgOafpeW5v+WRiuS9jeaYr+WQpuaJk+W8gOWGjeecn+ato+aLieWPluW5v+WRilxyXG4gICAgICogXHJcbiAgICAgKiBAc3RhdGljXHJcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBmdW5jIFxyXG4gICAgICogQG1lbWJlcm9mIFRtQVBJXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgVHJ5R2V0QWR2cyhwb3NpdGlvbklkOiBudW1iZXIsIGNvbXBsZXRlSGFuZGxlcjogRnVuY3Rpb24pIHtcclxuICAgICAgICBpZiAoIVRtQXBwQ29uZmlnLkN1cnJlbnRDb25maWcuYWRTd2l0Y2gpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLlub/lkYrmgLvlvIDlhbPkuLrlhbPpl63nirbmgIFcIilcclxuICAgICAgICAgICAgY29tcGxldGVIYW5kbGVyKHsgSXNPcGVuOiBmYWxzZSB9KTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUgJiYgdGhpcy5Vc2VTREspIHtcclxuICAgICAgICAgICAgTGF5YS5Ccm93c2VyLndpbmRvd1tcInd4XCJdLnRtU0RLLmNoZWNrRmxvd0lzT3Blbih7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbklkOiBwb3NpdGlvbklkXHJcbiAgICAgICAgICAgIH0pLnRoZW4oKHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlcy5pc09wZW4pIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLkdldEFkdnMocG9zaXRpb25JZCwgY29tcGxldGVIYW5kbGVyKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlSGFuZGxlcih7IElzT3BlbjogZmFsc2UgfSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKSB7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIue8lui+keWZqOS4i+iwg+eUqOW5v+WRiuS9jSzov5Tlm57mtYvor5Xlub/lkYo6XCIsIHBvc2l0aW9uSWQpO1xyXG4gICAgICAgICAgICBsZXQgQWRkRGF0ZTogYW55ID0ge1xyXG4gICAgICAgICAgICAgICAgY3JlYXRpdmVzOiBbXSxcclxuICAgICAgICAgICAgICAgIGlzT3BlbjogdHJ1ZVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHN3aXRjaCAocG9zaXRpb25JZCkge1xyXG4gICAgICAgICAgICAgICAgY2FzZSB0aGlzLkxpc3RJY29BZExvY2F0aW9uSWQ6XHJcbiAgICAgICAgICAgICAgICAgICAgZm9yIChsZXQgaW5kZXggPSAwOyBpbmRleCA8IDIwOyBpbmRleCsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGxldCBjcmVhdGl2ZVRlbXAgPSB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGl2ZUlkOiAxMDAwMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uSWQ6IHBvc2l0aW9uSWQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBhcHBJZDogXCJJY2/mtYvor5Xlub/lkYpcIixcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNob3dfY29uZmlnOiB7IGltYWdlOiBcInJlcy9UbVRlc3RBZC9UZXN0SWNvQWQtXCIgKyAoaW5kZXggJSA1ICsgMSkgKyBcIi5qcGdcIiwgdGl0bGU6IFwiMVwiIH1cclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgICAgICBBZGREYXRlLmNyZWF0aXZlcy5wdXNoKGNyZWF0aXZlVGVtcCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIEFkZERhdGUudHlwZSA9IDc7XHJcbiAgICAgICAgICAgICAgICAgICAgYnJlYWs7XHJcbiAgICAgICAgICAgICAgICBjYXNlIHRoaXMuQmFubmVyQWRMb2NhdGlvbklkOlxyXG4gICAgICAgICAgICAgICAgICAgIGxldCBjcmVhdGl2ZWJhbm5lciA9IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY3JlYXRpdmVJZDogMTAwMDAsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHBvc2l0aW9uSWQ6IHBvc2l0aW9uSWQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNob3dfY29uZmlnOiB7IGltYWdlOiBcInJlcy9UbVRlc3RBZC9UZXN0QmFubmVyQWQtXCIgKyAoTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogMikgKyAxKSArIFwiLmpwZ1wiLCB0aXRsZTogXCIxXCIgfVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBBZGREYXRlLmFwcElkID0gXCJCYW5uZXLlvq7kv6HmtYvor5Xlub/lkYpcIjtcclxuICAgICAgICAgICAgICAgICAgICBBZGREYXRlLmNyZWF0aXZlcy5wdXNoKGNyZWF0aXZlYmFubmVyKTtcclxuICAgICAgICAgICAgICAgICAgICBBZGREYXRlLnR5cGUgPSAxMTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgICAgIGNhc2UgdGhpcy5TaW5nbGVBZExvY2F0aW9uSWQ6XHJcbiAgICAgICAgICAgICAgICAgICAgbGV0IGNyZWF0aXZlU2luZ2xlID0ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjcmVhdGl2ZUlkOiAxMDAwMCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgcG9zaXRpb25JZDogcG9zaXRpb25JZCxcclxuICAgICAgICAgICAgICAgICAgICAgICAgYXBwSWQ6IFwiU2luZ2xl5b6u5L+h5rWL6K+V5bm/5ZGKXCIsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNob3dfY29uZmlnOiB7IGltYWdlOiBcInJlcy9UbVRlc3RBZC9UZXN0Rmxvd0FkLVwiICsgKE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIDIpICsgMSkgKyBcIi5qcGdcIiwgdGl0bGU6IFwiMVwiIH1cclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICAgICAgQWRkRGF0ZS5jcmVhdGl2ZXMucHVzaChjcmVhdGl2ZVNpbmdsZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgQWRkRGF0ZS50eXBlID0gMTtcclxuICAgICAgICAgICAgICAgICAgICBicmVhaztcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBjb21wbGV0ZUhhbmRsZXIoQWRkRGF0ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5ouJ5Y+W5bm/5ZGK55qE5pa55rOVLOS4jeimgeebtOaOpeiwg+eUqFxyXG4gICAgICogXHJcbiAgICAgKiBAc3RhdGljXHJcbiAgICAgKiBAcGFyYW0ge3N0cmluZ30gbG9jYXRpb25JZCBcclxuICAgICAqIEBwYXJhbSB7RnVuY3Rpb259IGNvbXBsZXRlSGFuZGxlciBcclxuICAgICAqIEBtZW1iZXJvZiBUbUFQSVxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIHN0YXRpYyBHZXRBZHZzKHBvc2l0aW9uSWQ6IG51bWJlciwgY29tcGxldGVIYW5kbGVyOiBGdW5jdGlvbikge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSAmJiB0aGlzLlVzZVNESykge1xyXG4gICAgICAgICAgICBMYXlhLkJyb3dzZXIud2luZG93W1wid3hcIl0udG1TREsuZ2V0Rmxvd0NvbmZpZyh7XHJcbiAgICAgICAgICAgICAgICBwb3NpdGlvbklkOiBwb3NpdGlvbklkXHJcbiAgICAgICAgICAgIH0pLnRoZW4oKGNvbmZpZykgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2cocG9zaXRpb25JZCwgJ+ivpeW5v+WRiuS9jeaYr+WQpuW8gOWQrzonLCBjb25maWcpO1xyXG4gICAgICAgICAgICAgICAgY29tcGxldGVIYW5kbGVyKGNvbmZpZyk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChMYXlhLkJyb3dzZXIub25RUU1pbmlHYW1lKSB7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6Lez6L2s5ZKM6Ieq5Yqo5LiK5oql5pWw5o2u55qE6ZuG5oiQ5YyW5bCB6KOFXHJcbiAgICAgKiBcclxuICAgICAqIEBzdGF0aWNcclxuICAgICAqIEBwYXJhbSB7YW55fSBwb3NpdGlvbklkIFxyXG4gICAgICogQHBhcmFtIHthbnl9IGNyZWF0aXZlSWQgXHJcbiAgICAgKiBAbWVtYmVyb2YgVG1BUElcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBOYXZpZ2F0ZUFuZFJlcG9ydChwb3NpdGlvbklkLCBjcmVhdGl2ZUlkLCBhcHBpZCwgY29tcGxldGVGdW5jPzogRnVuY3Rpb24pIHtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUgJiYgdGhpcy5Vc2VTREspIHtcclxuICAgICAgICAgICAgdGhpcy5GbG93TmF2aWdhdGUocG9zaXRpb25JZCwgY3JlYXRpdmVJZCwgKGZsYWcsIHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coZmxhZywgcmVzKVxyXG4gICAgICAgICAgICAgICAgaWYgKGZsYWcpIHtcclxuICAgICAgICAgICAgICAgICAgICBBTERfY3NqYy5hbGRTZW5kUmVwb3J0QWRDbGlja1N1Y2Nlc3NfY3NqYyhhcHBpZCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzLm5hdmlnYXRlTWVzc2FnZS5lcnJNc2cgPT0gXCJuYXZpZ2F0ZVRvTWluaVByb2dyYW06ZmFpbCBjYW5jZWxcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIueUqOaIt+WPlua2iOi3s+i9rFwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgQUxEX2NzamMuYWxkU2VuZFJlcG9ydEFkQ2xpY2tGYWlsX2NzamMoYXBwaWQpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmIChjb21wbGV0ZUZ1bmMpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb21wbGV0ZUZ1bmMoZmxhZywgcmVzKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAoY29tcGxldGVGdW5jKSB7XHJcbiAgICAgICAgICAgICAgICBjb21wbGV0ZUZ1bmModHJ1ZSwgbnVsbCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDot7PovazliLDlhbbku5blsI/muLjmiI9cclxuICAgICAqIFxyXG4gICAgICogQG1lbWJlcm9mIFRtQVBJXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgRmxvd05hdmlnYXRlKHBvc2l0aW9uSWQsIGNyZWF0aXZlSWQsIGNvbXBsZXRlRnVuYz86IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lICYmIHRoaXMuVXNlU0RLKSB7XHJcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS50bVNESy5mbG93TmF2aWdhdGUoe1xyXG4gICAgICAgICAgICAgICAgcG9zaXRpb25JZDogcG9zaXRpb25JZCwgLy8g5bm/5ZGK5L2NaWQsIOivt+WFiOS9v+eUqOivpWlk6I635Y+W5o6o5bm/5Yib5oSP5YiX6KGoXHJcbiAgICAgICAgICAgICAgICBjcmVhdGl2ZUlkOiBjcmVhdGl2ZUlkLCAgLy8g5Lyg5YWl6I635Y+W5Yiw55qEY3JlYXRpdmVJZFxyXG4gICAgICAgICAgICB9KS50aGVuKChuZXdMaXN0KSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn6LCD55So6Lez6L2s5Ye95pWw5oiQ5YqfJylcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfoh6rliqjliLfmlrDliJfooajvvJonLCBuZXdMaXN0KS8v6L+U5Zue5pyA5paw5YiX6KGoIFxyXG4gICAgICAgICAgICAgICAgaWYgKGNvbXBsZXRlRnVuYykge1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChuZXdMaXN0Lm5hdmlnYXRlTWVzc2FnZS5lcnJNc2cgPT0gXCJuYXZpZ2F0ZVRvTWluaVByb2dyYW06b2tcIikge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wbGV0ZUZ1bmModHJ1ZSwgbmV3TGlzdCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb21wbGV0ZUZ1bmMoZmFsc2UsIG5ld0xpc3QpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSkuY2F0Y2goKGVycm9yKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZygn6LCD55So6Lez6L2s5Ye95pWw5aSx6LSlJywgZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgaWYgKGNvbXBsZXRlRnVuYykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbXBsZXRlRnVuYyhmYWxzZSwgZXJyb3IpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKGNvbXBsZXRlRnVuYykge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coJ+WcqOaooeaLn+WZqOS4reiwg+eUqOi3s+i9rOWHveaVsCzov5Tlm57omZrlgYfmiJDlip/nu5PmnpwnKTtcclxuICAgICAgICAgICAgICAgIGNvbXBsZXRlRnVuYyh0cnVlLCBudWxsKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOW+l+WIsOmFjee9ruihqFxyXG4gICAgICogXHJcbiAgICAgKiBAc3RhdGljXHJcbiAgICAgKiBAbWVtYmVyb2YgVG1BUElcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBnZXRBcHBKU09OQ29uZmlnKGtleTogc3RyaW5nLCBjb21wbGV0ZUZ1bmM6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lICYmIHRoaXMuVXNlU0RLKSB7XHJcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS50bVNESy5nZXRBcHBKU09OQ29uZmlnKGtleSkudGhlbigocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoY29tcGxldGVGdW5jKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29tcGxldGVGdW5jKHJlcyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKGNvbXBsZXRlRnVuYykge1xyXG4gICAgICAgICAgICAgICAgY29tcGxldGVGdW5jKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5Y+R6YCB5LqL5Lu2XHJcbiAgICAgKiBcclxuICAgICAqIEBzdGF0aWNcclxuICAgICAqIEBwYXJhbSB7c3RyaW5nfSBldmVudElkIFxyXG4gICAgICogQHBhcmFtIHsqfSBbcmVzXSBcclxuICAgICAqIEBtZW1iZXJvZiBUbUFQSVxyXG4gICAgICovXHJcbiAgICBwdWJsaWMgc3RhdGljIFNlbmRFdmVudChldmVudElkOiBzdHJpbmcsIHJlcz86IGFueSkge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSAmJiB0aGlzLlVzZVNESykge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWPkemAgeS6i+S7tjpcIiwgZXZlbnRJZCwgXCLlj4LmlbA6XCIsIHJlcyk7XHJcbiAgICAgICAgICAgIExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS50bVNESy5zZW5kRXZlbnQoZXZlbnRJZCwgcmVzKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5Zyo57yW6L6R5Zmo5LiL5Y+R6YCBVG3kuovku7ZcIiwgZXZlbnRJZCwgcmVzKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgVG1BUEkgZnJvbSBcIi4vVG1BUElcIjtcclxuXHJcbi8qKlxyXG4gKiDkv53lrZhhcHBDb25maWfmlbDlgLznmoTnsbtcclxuICogXHJcbiAqIEBleHBvcnRcclxuICogQGNsYXNzIFRtQXBwQ29uZmlnT3B0aW9uc1xyXG4gKi9cclxuZXhwb3J0IGNsYXNzIFRtQXBwQ29uZmlnT3B0aW9ucyB7XHJcbiAgICAvKipcclxuICAgICAqIOWIneWni+WMlmFwcENvbmZpZ09wdGlvbuWtl+auteWAvFxyXG4gICAgICog5aaC5p6c6KGo5Lit5rKh5pyJ77yM5YiZ6K6+572u5Li65Yid5aeL55qE6buY6K6k5YC8XHJcbiAgICAgKiBcclxuICAgICAqIEBwYXJhbSB7Kn0gcmVzIFxyXG4gICAgICogQG1lbWJlcm9mIFRtQXBwQ29uZmlnT3B0aW9uc1xyXG4gICAgICovXHJcbiAgICBwdWJsaWMgaW5pdE9wdGlvbnMocmVzOiBhbnkpIHtcclxuICAgICAgICAvL+exu+Wei+WIpOaWre+8jOWmguaenOaYr+avlOi+g+eugOWNleeahG51bWJlcu+8jGJvb2xlYW7vvIxzdHJpbmcsZnVuY3Rpb27lsLHnlKhUeXBlb2ZcclxuICAgICAgICAvL+WmguaenOaYr0FycmF55bCx55SoIGluc3RhbmNlb2ZcclxuICAgICAgICBpZiAocmVzID09IG51bGwpIHJldHVybjtcclxuICAgICAgICBpZiAodHlwZW9mIHJlcy5hZFN3aXRjaCA9PSBcImJvb2xlYW5cIikgdGhpcy5hZFN3aXRjaCA9IHJlcy5hZFN3aXRjaDtcclxuICAgICAgICBpZiAodHlwZW9mIHJlcy53eEJhbm5lciA9PSBcImJvb2xlYW5cIikgdGhpcy53eEJhbm5lciA9IHJlcy53eEJhbm5lcjtcclxuICAgICAgICBpZiAodHlwZW9mIHJlcy53dWRpYW4gPT0gXCJib29sZWFuXCIpIHRoaXMud3VkaWFuID0gcmVzLnd1ZGlhbjtcclxuICAgICAgICBpZiAodHlwZW9mIHJlcy5leGFtaW5lQmxvY2sgPT0gXCJib29sZWFuXCIpIHRoaXMuZXhhbWluZUJsb2NrID0gcmVzLmV4YW1pbmVCbG9jaztcclxuICAgICAgICBpZiAocmVzLmV4YW1pbmVTY2VuZUxpc3QgaW5zdGFuY2VvZiBBcnJheSkgdGhpcy5leGFtaW5lU2NlbmVMaXN0ID0gcmVzLmV4YW1pbmVTY2VuZUxpc3Q7XHJcbiAgICAgICAgaWYgKHJlcy53eFd1RGlhbkJhbm5lcnMgaW5zdGFuY2VvZiBBcnJheSkgdGhpcy53eFd1RGlhbkJhbm5lcnMgPSByZXMud3hXdURpYW5CYW5uZXJzO1xyXG4gICAgICAgIGlmICh0eXBlb2YgcmVzLmJ0blNob3dUaW1lciA9PSBcIm51bWJlclwiKSB0aGlzLmJ0blNob3dUaW1lciA9IHJlcy5idG5TaG93VGltZXI7XHJcbiAgICAgICAgaWYgKHR5cGVvZiByZXMuYnRuTW92ZVRpbWVyID09IFwibnVtYmVyXCIpIHRoaXMuYnRuTW92ZVRpbWVyID0gcmVzLmJ0bk1vdmVUaW1lcjtcclxuICAgICAgICBpZiAodHlwZW9mIHJlcy5iYW5uZXJNb3ZlVGltZXIgPT0gXCJib29sZWFuXCIpIHRoaXMuYmFubmVyTW92ZVRpbWVyID0gcmVzLmJhbm5lck1vdmVUaW1lcjtcclxuICAgICAgICBpZiAodHlwZW9mIHJlcy5iYW5uZXJDcmVhdGVGYWlsTnVtID09IFwiYm9vbGVhblwiKSB0aGlzLmJhbm5lckNyZWF0ZUZhaWxOdW0gPSByZXMuYmFubmVyQ3JlYXRlRmFpbE51bTtcclxuICAgICAgICBpZiAodHlwZW9mIHJlcy5iYW5uZXJUb2RheUJhbm5lck1heCA9PSBcImJvb2xlYW5cIikgdGhpcy5iYW5uZXJUb2RheUJhbm5lck1heCA9IHJlcy5iYW5uZXJUb2RheUJhbm5lck1heDtcclxuICAgICAgICBpZiAodHlwZW9mIHJlcy5tYWlMaWFuZ0Jsb2NrID09IFwiYm9vbGVhblwiKSB0aGlzLm1haUxpYW5nQmxvY2sgPSByZXMubWFpTGlhbmdCbG9jaztcclxuICAgICAgICBpZiAocmVzLm1haUxpYW5nU2NlbmVMaXN0IGluc3RhbmNlb2YgQXJyYXkpIHRoaXMubWFpTGlhbmdTY2VuZUxpc3QgPSByZXMubWFpTGlhbmdTY2VuZUxpc3Q7XHJcblxyXG4gICAgICAgIC8v5LiL6Z2i5piv6Ieq5a6a5LmJ55qE5a2X5q61XHJcblxyXG5cclxuICAgIH1cclxuXHJcbiAgICAvL+aJgOacieWvvOWHuuW5v+WRiueahOW8gOWFsyx0cnVl5Li65pyJ5a+85Ye65bm/5ZGKXHJcbiAgICBwdWJsaWMgYWRTd2l0Y2g6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIC8v5piv5ZCm5omT5byA5b6u5L+hYmFubmVyLHRydWXkuLrmnInlvq7kv6FiYW5uZXJcclxuICAgIHB1YmxpYyB3eEJhbm5lcjogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgLy/or6/ngrnni4Lngrnlip/og73mgLvlvIDlhbNcclxuICAgIHB1YmxpYyB3dWRpYW46IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIC8v5a6h5qC45bGP6JS95Yqf6IO95oC75byA5YWzLOWuoeaguOWxj+iUveeahOaEj+S5ieaYr+iuqeWuoeaguOS6uuWRmOeci+S4jeWIsOafkOS6m+aVj+aEn+eahOWKn+iDvSx0cnVl5Li65omT5byA5bGP6JS95Yqf6IO9XHJcbiAgICBwdWJsaWMgZXhhbWluZUJsb2NrOiBib29sZWFuID0gdHJ1ZTtcclxuICAgIC8v5a6h5qC45bGP6JS955qE5Zy65pmv5YC877yM6YCa6L+H6L+Z5Lqb5Zy65pmv5YC86L+b5p2l55qE5a6h5qC45Lq65ZGY55yL5LiN5Yiw5p+Q5Lqb5pWP5oSf55qE5Yqf6IO9XHJcbiAgICBwdWJsaWMgZXhhbWluZVNjZW5lTGlzdDogQXJyYXk8bnVtYmVyPiA9IFtcclxuICAgICAgICAxMDA1LCAxMDA2LCAxMDExLCAxMDEyLCAxMDEzLCAxMDE0LCAxMDE3LCAxMDE5LFxyXG4gICAgICAgIDEwMjAsIDEwMjMsIDEwMjQsIDEwMjUsIDEwMzAsIDEwMzEsIDEwMzIsIDEwMzYsXHJcbiAgICAgICAgMTA0MiwgMTA0NywgMTA0OCwgMTA0OSwgMTA1MywgMTEwMiwgMTEyOV07XHJcbiAgICAvL+W+ruS/oWJhbm5lcuWIl+ihqFxyXG4gICAgcHVibGljIHd4V3VEaWFuQmFubmVyczogQXJyYXk8c3RyaW5nPiA9IFtdO1xyXG4gICAgLy/mjInpkq7lu7bov5/lh7rnjrDnmoTml7bpl7RcclxuICAgIHB1YmxpYyBidG5TaG93VGltZXI6IG51bWJlciA9IDA7XHJcbiAgICAvL+aMiemSruS4iuenu+eahOaXtumXtFxyXG4gICAgcHVibGljIGJ0bk1vdmVUaW1lcjogbnVtYmVyID0gMDtcclxuICAgIC8vQmFubmVy5LiK56e755qE5pe26Ze0XHJcbiAgICBwdWJsaWMgYmFubmVyTW92ZVRpbWVyOiBudW1iZXIgPSAwO1xyXG4gICAgLy9CYW5uZXLlpLHotKXliJvlu7rnmoTkuKrmlbBcclxuICAgIHB1YmxpYyBiYW5uZXJDcmVhdGVGYWlsTnVtOiBudW1iZXIgPSAzO1xyXG4gICAgLy9CYW5uZXLmr4/lpKnmnIDlpKfliJvlu7rmrKHmlbBcclxuICAgIHB1YmxpYyBiYW5uZXJUb2RheUJhbm5lck1heDogbnVtYmVyID0gMTA7XHJcbiAgICAvL+S5sOmHj+WKn+iDveeahOaAu+W8gOWFs++8jOS4uuS6huiuqemAmui/h+S5sOmHj+i/m+adpeeahOWuoeaguOS6uuWRmOeci+S4jeingeW5v+WRilxyXG4gICAgcHVibGljIG1haUxpYW5nQmxvY2s6IGJvb2xlYW4gPSB0cnVlO1xyXG4gICAgLy/kubDph4/lip/og73nmoTnmoTlnLrmma/lgLzvvIzkuLrkuoborqnpgJrov4fkubDph4/ov5vmnaXnmoTlrqHmoLjkurrlkZjnnIvkuI3op4Hlub/lkYpcclxuICAgIHB1YmxpYyBtYWlMaWFuZ1NjZW5lTGlzdDogQXJyYXk8bnVtYmVyPiA9IFtcclxuICAgICAgICAxMDExLCAxMDEyLCAxMDEzLCAxMDE3LCAxMDI1LCAxMDMxLCAxMDMyLCAxMDQ3LFxyXG4gICAgICAgIDEwNDgsIDEwNDksIDEwNzJcclxuICAgIF1cclxuXHJcbiAgICAvL+S4i+mdouaYr+iHquWumuS5ieeahOWtl+autVxyXG5cclxuXHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRtQXBwQ29uZmlnIHtcclxuICAgIC8v5pys5Zyw54mI5pys55qEYXBwQ29uZmln5a2Y5YKo5L2N572uXHJcbiAgICBwdWJsaWMgc3RhdGljIExvY2FsQ29uZmlnUGF0aCA9IFwicmVzL2pzb24vQXBwQ29uZmlnT3B0aW9uLmpzb25cIlxyXG4gICAgLy/lvZPliY3nmoRhcHBDb25maWflr7nosaFcclxuICAgIHByaXZhdGUgc3RhdGljIF9jdXJyZW50Q29uZmlnOiBUbUFwcENvbmZpZ09wdGlvbnMgPSBuZXcgVG1BcHBDb25maWdPcHRpb25zKCk7XHJcbiAgICBwdWJsaWMgc3RhdGljIGdldCBDdXJyZW50Q29uZmlnKCk6IFRtQXBwQ29uZmlnT3B0aW9ucyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2N1cnJlbnRDb25maWc7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqXHJcbiAgICAgKiDosIPnlKjlnKjnur/niYjmnKznmoRhcHBDb25maWdcclxuICAgICAqIFxyXG4gICAgICogQHN0YXRpY1xyXG4gICAgICogQHBhcmFtIHtGdW5jdGlvbn0gY29tcGxldGVGdW5jIFxyXG4gICAgICogQG1lbWJlcm9mIFRtQXBwQ29uZmlnXHJcbiAgICAgKi9cclxuICAgIHB1YmxpYyBzdGF0aWMgVXBkYXRlQ29uZmlnKGNvbXBsZXRlRnVuYzogRnVuY3Rpb24pIHtcclxuICAgICAgICBjb25zb2xlLmxvZyhcIuiwg+eUqOWcqOe6v+eJiOacrOeahGFwcENvbmZpZ1wiKTtcclxuICAgICAgICBUbUFQSS5nZXRBcHBKU09OQ29uZmlnKFwiQXBwQ29uZmlnXCIsIChyZXMpID0+IHtcclxuICAgICAgICAgICAgdGhpcy5fY3VycmVudENvbmZpZy5pbml0T3B0aW9ucyhyZXMpO1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyh0aGlzLl9jdXJyZW50Q29uZmlnKTtcclxuICAgICAgICAgICAgaWYgKGNvbXBsZXRlRnVuYykge1xyXG4gICAgICAgICAgICAgICAgY29tcGxldGVGdW5jKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOiwg+eUqOacrOWcsOa1i+ivleeJiOacrOeahGFwcENvbmZpZ1xyXG4gICAgICogXHJcbiAgICAgKiBAc3RhdGljXHJcbiAgICAgKiBAcGFyYW0ge0Z1bmN0aW9ufSBjb21wbGV0ZUZ1bmMgXHJcbiAgICAgKiBAbWVtYmVyb2YgVG1BcHBDb25maWdcclxuICAgICAqL1xyXG4gICAgcHVibGljIHN0YXRpYyBVcGRhdGVMb2NhbENvbmZpZyhjb21wbGV0ZUZ1bmM6IEZ1bmN0aW9uKSB7XHJcbiAgICAgICAgY29uc29sZS5sb2coXCLosIPnlKjmnKzlnLDniYjmnKznmoRhcHBDb25maWdcIik7XHJcbiAgICAgICAgTGF5YS5sb2FkZXIubG9hZCh0aGlzLkxvY2FsQ29uZmlnUGF0aCwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAocmVzKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuX2N1cnJlbnRDb25maWcuaW5pdE9wdGlvbnMocmVzKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2codGhpcy5fY3VycmVudENvbmZpZyk7XHJcbiAgICAgICAgICAgIGlmIChjb21wbGV0ZUZ1bmMpIHtcclxuICAgICAgICAgICAgICAgIGNvbXBsZXRlRnVuYygpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSkpO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IEV2ZW50TWdyX2NzamMgZnJvbSBcIi4uL0V2ZW50L0V2ZW50TWdyXCI7XHJcbmltcG9ydCB7IEV2ZW50RGVmX2NzamMgfSBmcm9tIFwiLi4vRXZlbnQvRXZlbnREZWZcIjtcclxuaW1wb3J0IFN0b3JhZ2VNZ3JfY3NqYywgeyBTdG9yYWdlUmVxX2NzamMgfSBmcm9tIFwiLi4vTWdyL1N0b3JhZ2VNZ3JcIjtcclxuaW1wb3J0IEh0dHBVbml0X2NzamMgZnJvbSBcIi4uL05ldC9IdHRwVW5pdFwiO1xyXG5cclxuLy/muLjmiI/mlbDmja4s5Li65L+d5oyB54mI5pys5YW85a6577yM5bu66K6u5LiN6KaB5Yig6Zmk5ZKM5L+u5pS55a2X5q615ZCNXHJcbmV4cG9ydCBjbGFzcyBVc2VyR2FtZURhdGEge1xyXG4gICAgcHVibGljIGxldmVsTnVtOiBudW1iZXIgPSAxOy8v5b2T5YmN5YWz5Y2hXHJcbiAgICBwdWJsaWMgbW9uZXlOdW06IG51bWJlciA9IDA7Ly/ph5HluIHmlbDph49cclxuICAgIHB1YmxpYyBjcnlzdGFsTnVtOiBudW1iZXIgPSAwOy8v6ZK755+z5pWw6YePICAgIFxyXG4gICAgcHVibGljIFBpZWNlOiBudW1iZXIgPSAxO1xyXG4gICAgcHVibGljIFNwZWVkOiBudW1iZXIgPSAxO1xyXG4gICAgcHVibGljIEZvb3Q6IG51bWJlciA9IDE7XHJcbn1cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJfY3NqYyBleHRlbmRzIExheWEuU2NyaXB0IHtcclxuICAgIHB1YmxpYyBzdGF0aWMgY29kZV9jc2pjOiBzdHJpbmcgPSBcIlwiO1xyXG4gICAgcHVibGljIHN0YXRpYyBvcGVuSWRfY3NqYzogc3RyaW5nID0gXCJcIjtcclxuICAgIHB1YmxpYyBzdGF0aWMgdG9rZW5fY3NqYzogc3RyaW5nID0gbnVsbDtcclxuICAgIHB1YmxpYyBzdGF0aWMgbmlja05hbWVfY3NqYzogc3RyaW5nID0gXCJcIjtcclxuICAgIHB1YmxpYyBzdGF0aWMgZ2VuZGVyX2NzamM6IG51bWJlciA9IDA7XHJcbiAgICBwdWJsaWMgc3RhdGljIGNpdHlfY3NqYzogc3RyaW5nID0gXCLlub/lt57luIJcIjtcclxuICAgIHByaXZhdGUgc3RhdGljIF91c2VMb2NhbFN0b3JhZ2VfY3NqYzogYm9vbGVhbiA9IGZhbHNlOy8v5piv5ZCm5L2/55So5pys5Zyw5YKo5a2Y5pWw5o2uXHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXQgaXNMb2dpbigpIHtcclxuICAgICAgICByZXR1cm4gKFVzZXJfY3NqYy5jb2RlX2NzamMgIT0gXCJcIikgfHwgKFVzZXJfY3NqYy50b2tlbl9jc2pjICE9IFwiXCIpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc3RhdGljIHJlYWRvbmx5IF9nYW1lRGF0YTogVXNlckdhbWVEYXRhID0gbmV3IFVzZXJHYW1lRGF0YSgpO1xyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0U2F2ZURhdGFfY3NqYygpOiBzdHJpbmcge1xyXG4gICAgICAgIHJldHVybiBKU09OLnN0cmluZ2lmeShVc2VyX2NzamMuX2dhbWVEYXRhKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIHRlc3RJbml0VXNlcl9jc2pjKCkge1xyXG4gICAgICAgIFVzZXJfY3NqYy5fZ2FtZURhdGEubGV2ZWxOdW0gPSAxO1xyXG4gICAgICAgIFVzZXJfY3NqYy5fZ2FtZURhdGEubW9uZXlOdW0gPSAxMDAwMDAwMDtcclxuICAgICAgICBVc2VyX2NzamMuX2dhbWVEYXRhLmNyeXN0YWxOdW0gPSAxMDAwMDAwMDtcclxuICAgICAgICBVc2VyX2NzamMuX2dhbWVEYXRhLlBpZWNlID0gMTA7XHJcbiAgICAgICAgVXNlcl9jc2pjLl9nYW1lRGF0YS5TcGVlZCA9IDEwO1xyXG4gICAgICAgIFVzZXJfY3NqYy5fZ2FtZURhdGEuRm9vdCA9IDEwO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgaW5pdGlVc2VyX2NzamMocmVtb3RlRGF0YSkge1xyXG4gICAgICAgIGlmIChyZW1vdGVEYXRhICYmIDAgIT0gcmVtb3RlRGF0YSkge1xyXG4gICAgICAgICAgICBVc2VyX2NzamMuX3VzZUxvY2FsU3RvcmFnZV9jc2pjID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi6I635b6X5Zyo57q/5a2Y5qGjXCIpO1xyXG4gICAgICAgICAgICBVc2VyX2NzamMuU2V0VXNlckRhdGFfY3NqYyhyZW1vdGVEYXRhKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIC8vdG9kb++8muWkhOeQhuayoeacieiOt+WPluWIsOeOqeWutuaVsOaNrueahOaDheWGtSzliJnnm7TmjqXosIPnlKjmnKzlnLDmlbDmja5cclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLojrflvpfmnKzlnLDlrZjmoaNcIik7XHJcbiAgICAgICAgICAgIFVzZXJfY3NqYy5fdXNlTG9jYWxTdG9yYWdlX2NzamMgPSB0cnVlO1xyXG4gICAgICAgICAgICB2YXIgZGF0YVN0ciA9IFN0b3JhZ2VNZ3JfY3NqYy5nZXRTdG9yYWdlX2NzamMoXCJVc2VyR2FtZURhdGFcIik7XHJcbiAgICAgICAgICAgIGlmIChkYXRhU3RyICE9IG51bGwgJiYgZGF0YVN0ciAhPSBcIlwiKSB7XHJcbiAgICAgICAgICAgICAgICB2YXIgbG9jYWxkYXRhID0gSlNPTi5wYXJzZShkYXRhU3RyKTtcclxuICAgICAgICAgICAgICAgIFVzZXJfY3NqYy5TZXRVc2VyRGF0YV9jc2pjKGxvY2FsZGF0YSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlNhdmVHYW1lRGF0YV9jc2pjKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBTZXRVc2VyRGF0YV9jc2pjKGRhdGE6IGFueSkge1xyXG4gICAgICAgIGlmIChkYXRhLmxldmVsTnVtKSBVc2VyX2NzamMuX2dhbWVEYXRhLmxldmVsTnVtID0gZGF0YS5sZXZlbE51bTtcclxuICAgICAgICBpZiAoZGF0YS5tb25leU51bSkgVXNlcl9jc2pjLl9nYW1lRGF0YS5tb25leU51bSA9IGRhdGEubW9uZXlOdW07XHJcbiAgICAgICAgaWYgKGRhdGEuY3J5c3RhbE51bSkgVXNlcl9jc2pjLl9nYW1lRGF0YS5jcnlzdGFsTnVtID0gZGF0YS5jcnlzdGFsTnVtO1xyXG4gICAgICAgIGlmIChkYXRhLlBpZWNlKSBVc2VyX2NzamMuX2dhbWVEYXRhLlBpZWNlID0gZGF0YS5QaWVjZTtcclxuICAgICAgICBpZiAoZGF0YS5TcGVlZCkgVXNlcl9jc2pjLl9nYW1lRGF0YS5TcGVlZCA9IGRhdGEuU3BlZWQ7XHJcbiAgICAgICAgaWYgKGRhdGEuRm9vdCkgVXNlcl9jc2pjLl9nYW1lRGF0YS5Gb290ID0gZGF0YS5Gb290O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgU2F2ZUdhbWVEYXRhX2NzamMoKSB7XHJcbiAgICAgICAgaWYgKFVzZXJfY3NqYy5fdXNlTG9jYWxTdG9yYWdlX2NzamMpIHtcclxuICAgICAgICAgICAgVXNlcl9jc2pjLlNhdmVMb2NhbEdhbWVEYXRlX2NzamMoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIEh0dHBVbml0X2NzamMuc2F2ZUdhbWVEYXRhX2NzamMoVXNlcl9jc2pjLmdldFNhdmVEYXRhX2NzamMoKSxcclxuICAgICAgICAgICAgICAgIChyZXMpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAocmVzLmNvZGUgPT0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWtmOaho+aIkOWKn1wiKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLlrZjmoaPlpLHotKVcIilcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9LFxyXG4gICAgICAgICAgICAgICAgKHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi5a2Y5qGj5aSx6LSlXCIpXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIFNhdmVMb2NhbEdhbWVEYXRlX2NzamMoKSB7XHJcbiAgICAgICAgdmFyIHN0b3JhZ2UgPSBuZXcgU3RvcmFnZVJlcV9jc2pjKCk7XHJcbiAgICAgICAgc3RvcmFnZS5rZXkgPSBcIlVzZXJHYW1lRGF0YVwiO1xyXG4gICAgICAgIHN0b3JhZ2UuZGF0YSA9IFVzZXJfY3NqYy5fZ2FtZURhdGE7XHJcbiAgICAgICAgU3RvcmFnZU1ncl9jc2pjLnNldFN0b3JhZ2VfY3NqYyhzdG9yYWdlKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBzZXRMZXZlTnVtX2NzamMobGV2ZWxOdW06IG51bWJlcikge1xyXG4gICAgICAgIFVzZXJfY3NqYy5fZ2FtZURhdGEubGV2ZWxOdW0gPSBsZXZlbE51bTtcclxuICAgICAgICB0aGlzLlNhdmVHYW1lRGF0YV9jc2pjKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXRMZXZlTnVtX2NzamMoKTogbnVtYmVyIHtcclxuICAgICAgICByZXR1cm4gVXNlcl9jc2pjLl9nYW1lRGF0YS5sZXZlbE51bTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGFkZE1vbmV5X2NzamMoYWRkOiBudW1iZXIsIGdldGxvYz86IExheWEuUG9pbnQpIHtcclxuICAgICAgICBhZGQgPSBNYXRoLmNlaWwoYWRkKVxyXG4gICAgICAgIHZhciBsYXN0ID0gVXNlcl9jc2pjLl9nYW1lRGF0YS5tb25leU51bVxyXG4gICAgICAgIFVzZXJfY3NqYy5fZ2FtZURhdGEubW9uZXlOdW0gKz0gYWRkO1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkdhbWVfT25Vc2VyTW9uZXlDaGFuZ2VfY3NqYyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgY3VycjogVXNlcl9jc2pjLl9nYW1lRGF0YS5tb25leU51bSxcclxuICAgICAgICAgICAgICAgIGxhc3Q6IGxhc3QsXHJcbiAgICAgICAgICAgICAgICBnZXRMb2M6IGdldGxvY1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIHRoaXMuU2F2ZUdhbWVEYXRhX2NzamMoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIHN1Yk1vbmV5X2NzamMoc3ViOiBudW1iZXIpIHtcclxuICAgICAgICBzdWIgPSBNYXRoLmNlaWwoc3ViKVxyXG4gICAgICAgIHZhciBsYXN0ID0gVXNlcl9jc2pjLl9nYW1lRGF0YS5tb25leU51bVxyXG4gICAgICAgIFVzZXJfY3NqYy5fZ2FtZURhdGEubW9uZXlOdW0gLT0gc3ViO1xyXG4gICAgICAgIGlmIChVc2VyX2NzamMuX2dhbWVEYXRhLm1vbmV5TnVtIDwgMCkge1xyXG4gICAgICAgICAgICBVc2VyX2NzamMuX2dhbWVEYXRhLm1vbmV5TnVtID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9PblVzZXJNb25leUNoYW5nZV9jc2pjLFxyXG4gICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICBjdXJyOiBVc2VyX2NzamMuX2dhbWVEYXRhLm1vbmV5TnVtLFxyXG4gICAgICAgICAgICAgICAgbGFzdDogbGFzdFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIHRoaXMuU2F2ZUdhbWVEYXRhX2NzamMoKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldE1vbmV5X2NzamMoKSB7XHJcbiAgICAgICAgcmV0dXJuIFVzZXJfY3NqYy5fZ2FtZURhdGEubW9uZXlOdW07XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBhZGRDcnlzdGFsX2NzamMoYWRkOiBudW1iZXIsIGdldGxvYz86IExheWEuUG9pbnQpIHtcclxuICAgICAgICBhZGQgPSBNYXRoLmNlaWwoYWRkKVxyXG4gICAgICAgIHZhciBsYXN0ID0gVXNlcl9jc2pjLl9nYW1lRGF0YS5jcnlzdGFsTnVtXHJcbiAgICAgICAgVXNlcl9jc2pjLl9nYW1lRGF0YS5jcnlzdGFsTnVtICs9IGFkZDtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLmRpc3BhdGNoX2NzamMoRXZlbnREZWZfY3NqYy5HYW1lX09uVXNlckNyeXN0YWxDaGFuZ2VfY3NqYyxcclxuICAgICAgICAgICAge1xyXG4gICAgICAgICAgICAgICAgY3VycjogVXNlcl9jc2pjLl9nYW1lRGF0YS5jcnlzdGFsTnVtLFxyXG4gICAgICAgICAgICAgICAgbGFzdDogbGFzdCxcclxuICAgICAgICAgICAgICAgIGdldExvYzogZ2V0bG9jXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgdGhpcy5TYXZlR2FtZURhdGFfY3NqYygpO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgc3ViQ3J5c3RhbF9jc2pjKHN1YjogbnVtYmVyKSB7XHJcbiAgICAgICAgc3ViID0gTWF0aC5jZWlsKHN1YilcclxuICAgICAgICB2YXIgbGFzdCA9IFVzZXJfY3NqYy5fZ2FtZURhdGEuY3J5c3RhbE51bVxyXG4gICAgICAgIFVzZXJfY3NqYy5fZ2FtZURhdGEuY3J5c3RhbE51bSAtPSBzdWI7XHJcbiAgICAgICAgaWYgKFVzZXJfY3NqYy5fZ2FtZURhdGEuY3J5c3RhbE51bSA8IDApIHtcclxuICAgICAgICAgICAgVXNlcl9jc2pjLl9nYW1lRGF0YS5jcnlzdGFsTnVtID0gMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9PblVzZXJDcnlzdGFsQ2hhbmdlX2NzamMsXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIGN1cnI6IFVzZXJfY3NqYy5fZ2FtZURhdGEuY3J5c3RhbE51bSxcclxuICAgICAgICAgICAgICAgIGxhc3Q6IGxhc3RcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB0aGlzLlNhdmVHYW1lRGF0YV9jc2pjKCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXRDcnlzdGFsX2NzamMoKSB7XHJcbiAgICAgICAgcmV0dXJuIFVzZXJfY3NqYy5fZ2FtZURhdGEuY3J5c3RhbE51bTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIEdldFNwZWVkX2NzamMoKSB7XHJcbiAgICAgICAgcmV0dXJuIFVzZXJfY3NqYy5fZ2FtZURhdGEuU3BlZWQ7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBTZXRTcGVlZF9jc2pjKHYpIHtcclxuICAgICAgICBVc2VyX2NzamMuX2dhbWVEYXRhLlNwZWVkID0gdjtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIEdldFBpZWNlX2NzamMoKSB7XHJcbiAgICAgICAgcmV0dXJuIFVzZXJfY3NqYy5fZ2FtZURhdGEuUGllY2U7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBTZXRQaWVjZV9jc2pjKHYpIHtcclxuICAgICAgICBVc2VyX2NzamMuX2dhbWVEYXRhLlBpZWNlID0gdjtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIEdldEZvb3RfY3NqYygpIHtcclxuICAgICAgICByZXR1cm4gVXNlcl9jc2pjLl9nYW1lRGF0YS5Gb290O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgU2V0Rm9vdF9jc2pjKHYpIHtcclxuICAgICAgICBVc2VyX2NzamMuX2dhbWVEYXRhLkZvb3QgPSB2O1xyXG4gICAgfVxyXG59XHJcblxyXG4iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBVdGlsaXRcclxue1xyXG4gICAgcHVibGljIHN0YXRpYyByZWFkb25seSBPcmlnaW5TdGFnZVdpZHRoID0gMTMzNDtcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgT3JpZ2luU3RhZ2VIZWlnaHQgPSA3NTA7XHJcblxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgZ3JheXNjYWxlTWF0OiBBcnJheTxudW1iZXI+ID1cclxuICAgICAgICBbMC4zMDg2LCAwLjYwOTQsIDAuMDgyMCwgMCwgMCxcclxuICAgICAgICAgICAgMC4zMDg2LCAwLjYwOTQsIDAuMDgyMCwgMCwgMCxcclxuICAgICAgICAgICAgMC4zMDg2LCAwLjYwOTQsIDAuMDgyMCwgMCwgMCxcclxuICAgICAgICAgICAgMCwgMCwgMCwgMSwgMF07XHJcbiAgICBcclxuICAgIHB1YmxpYyBzdGF0aWMgcmVhZG9ubHkgZ3JheXNjYWxlRmlsdGVyOiBMYXlhLkNvbG9yRmlsdGVyID0gbmV3IExheWEuQ29sb3JGaWx0ZXIoVXRpbGl0LmdyYXlzY2FsZU1hdCk7XHJcblxyXG5cclxuICAgIHByb3RlY3RlZCBzdGF0aWMgcG9pbkRvd24gOiBMYXlhLlBvaW50ID0gbmV3IExheWEuUG9pbnQoMCwtMSk7XHJcbiAgICBwcm90ZWN0ZWQgc3RhdGljIHBvaW5VcCA6IExheWEuUG9pbnQgPSBuZXcgTGF5YS5Qb2ludCgwLDEpO1xyXG5cclxuICAgIFxyXG4gICAgcHVibGljIHN0YXRpYyBMZXJwKGZvcm0gOiBudW1iZXIsdG8gOiBudW1iZXIsZGVsdGEgOiBudW1iZXIpIDogbnVtYmVyXHJcbiAgICB7XHJcbiAgICAgICAgaWYoZm9ybSA9PSB0bylcclxuICAgICAgICAgICAgcmV0dXJuIHRvO1xyXG4gICAgICAgIGlmKGZvcm0gPiB0bylcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHZhciBuZXh0ID0gZm9ybSAtIGRlbHRhO1xyXG4gICAgICAgICAgICBpZihuZXh0IDw9IHRvKVxyXG4gICAgICAgICAgICAgICAgcmV0dXJuIHRvO1xyXG4gICAgICAgICAgICByZXR1cm4gbmV4dDtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihmb3JtIDwgdG8pXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICB2YXIgbmV4dCA9IGZvcm0gKyBkZWx0YTtcclxuICAgICAgICAgICAgaWYobmV4dCA+PSB0bylcclxuICAgICAgICAgICAgICAgIHJldHVybiB0bztcclxuICAgICAgICAgICAgcmV0dXJuIG5leHQ7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgbGVycEV1bGVyQW5nbGUoZm9ybSA6IG51bWJlcix0byA6IG51bWJlcixkZWx0YSkgOiBudW1iZXJcclxuICAgIHtcclxuICAgICAgICB2YXIgZm9ybSA9IGZvcm0gJSAzNjA7XHJcbiAgICAgICAgZm9ybSA9IGZvcm0gPj0gMCA/IGZvcm0gOiAoMzYwICsgZm9ybSk7XHJcbiAgICAgICAgdmFyIHRvID0gdG8gJSAzNjA7XHJcbiAgICAgICAgdG8gPSB0byA+PSAwID8gdG8gOiAoMzYwICsgdG8pO1xyXG4gICAgICAgIHZhciBkaXMgPSBNYXRoLmFicyh0byAtIGZvcm0pO1xyXG4gICAgICAgIGlmKGRpcyA+IDE4MClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIGlmKGZvcm0gPCB0bylcclxuICAgICAgICAgICAgICAgIHRvID0gdG8gLSAzNjBcclxuICAgICAgICAgICAgZWxzZSBpZihmb3JtID4gdG8pXHJcbiAgICAgICAgICAgICAgICB0byA9IHRvICsgMzYwXHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBuZXh0ID0gVXRpbGl0LkxlcnAoZm9ybSx0byxkZWx0YSk7XHJcbiAgICAgICAgcmV0dXJuIG5leHQ7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXRSb3RhdGlvbkJ5RGlyKHYgOiBMYXlhLlBvaW50KSA6IG51bWJlclxyXG4gICAgeyAgIFxyXG4gICAgICAgIHZhciBkb3RWYWx1ZSA9ICh2LnggKiBVdGlsaXQucG9pbkRvd24ueCkgKyAodi55ICogIFV0aWxpdC5wb2luRG93bi55KTtcclxuICAgICAgICB2YXIgY29zID0gZG90VmFsdWUgLyAodi5kaXN0YW5jZSgwLDApICAqIFV0aWxpdC5wb2luRG93bi5kaXN0YW5jZSgwLDApKTtcclxuICAgICAgICB2YXIgcmFkaWFuID0gTWF0aC5hY29zKGNvcylcclxuICAgICAgICB2YXIgcm90YXRpb24gPSByYWRpYW4gLyAoMiAqIE1hdGguUEkpICAqIDM2MDtcclxuICAgICAgICBpZih2LnggPCAwKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcm90YXRpb24gPSAtcm90YXRpb247XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByb3RhdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldFJvdGF0aW9uQnlEaXJPbjNEU3BhY2UodiA6IExheWEuUG9pbnQpXHJcbiAgICB7XHJcbiAgICAgICAgdmFyIGRvdFZhbHVlID0gKHYueCAqIFV0aWxpdC5wb2luVXAueCkgKyAodi55ICogIFV0aWxpdC5wb2luVXAueSk7XHJcbiAgICAgICAgdmFyIGNvcyA9IGRvdFZhbHVlIC8gKHYuZGlzdGFuY2UoMCwwKSAgKiBVdGlsaXQucG9pblVwLmRpc3RhbmNlKDAsMCkpO1xyXG4gICAgICAgIHZhciByYWRpYW4gPSBNYXRoLmFjb3MoY29zKVxyXG4gICAgICAgIHZhciByb3RhdGlvbiA9IHJhZGlhbiAvICgyICogTWF0aC5QSSkgICogMzYwO1xyXG4gICAgICAgIGlmKHYueCA8IDApXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICByb3RhdGlvbiA9IHJvdGF0aW9uICsgKDE4MCAtIHJvdGF0aW9uKSAqIDI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiByb3RhdGlvbjtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldERpckJ5Um90YXRpb24ocm90YXRpb24gOiBudW1iZXIpIDogTGF5YS5Qb2ludFxyXG4gICAgeyAgIFxyXG4gICAgICAgIHZhciByYWRpYW4gPSAocm90YXRpb24gLSA5MCkgKiBNYXRoLlBJIC8gMTgwOy8vIC05MCDmmK/ovazmjaLliLDlnLrmma/lnZDmoIfns7tcclxuICAgICAgICB2YXIgeCA9IE1hdGguY29zKHJhZGlhbik7XHJcbiAgICAgICAgdmFyIHkgPSBNYXRoLnNpbihyYWRpYW4pO1xyXG4gICAgICAgIHZhciBwb2ludCA9IG5ldyBMYXlhLlBvaW50KHgseSk7XHJcbiAgICAgICAgcG9pbnQubm9ybWFsaXplKCk7XHJcbiAgICAgICAgcmV0dXJuIHBvaW50O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0RGlyRGlyQW5nbGUoZGlyMSA6IExheWEuUG9pbnQsZGlyMiA6IExheWEuUG9pbnQpIDogbnVtYmVyXHJcbiAgICB7ICAgXHJcbiAgICAgICAgdmFyIGRvdFZhbHVlID0gKGRpcjEueCAqIGRpcjIueCkgKyAoZGlyMS55ICogIGRpcjIueSk7XHJcbiAgICAgICAgdmFyIGNvcyA9IGRvdFZhbHVlIC8gKGRpcjEuZGlzdGFuY2UoMCwwKSAgKiBkaXIyLmRpc3RhbmNlKDAsMCkpO1xyXG4gICAgICAgIHZhciByYWRpYW4gPSBNYXRoLmFjb3MoY29zKVxyXG4gICAgICAgIHZhciBhbmdsZSA9IHJhZGlhbiAvICgyICogTWF0aC5QSSkgICogMzYwO1xyXG4gICAgICAgIHJldHVybiBhbmdsZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGdldERpclNjYWxhckxlbmd0aChkaXIgOiBMYXlhLlBvaW50KSA6IG51bWJlclxyXG4gICAge1xyXG4gICAgICAgIHZhciBzbCA9IE1hdGguc3FydChkaXIueCAqIGRpci54ICsgZGlyLnkgKiBkaXIueSk7XHJcbiAgICAgICAgcmV0dXJuIHNsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgc2V0U3BPblBhcmVudENlbnRlcihzcCA6IExheWEuU3ByaXRlKVxyXG4gICAge1xyXG4gICAgICAgIGlmKG51bGwgPT0gc3AucGFyZW50KVxyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgdmFyIHBzcCA9IHNwLnBhcmVudCBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB2YXIgeCAgPSAwO1xyXG4gICAgICAgIHZhciB5ICA9IDA7XHJcbiAgICAgICAgdmFyIHggID0geCAtIHNwLndpZHRoIC8gMiAqIHNwLnNjYWxlWCArIHBzcC53aWR0aCAvIDI7XHJcbiAgICAgICAgdmFyIHkgID0geSAtIHNwLmhlaWdodCAvIDIgICogc3Auc2NhbGVZICArIHBzcC5oZWlnaHQgLyAyO1xyXG4gICAgICAgIHNwLnggPSB4O1xyXG4gICAgICAgIHNwLnkgPSB5O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgZ2V0UG9pbnRUb0xpbmVEaXN0YW5jZSh4IDogbnVtYmVyLHkgOiBudW1iZXIsTGluZVN0YXJ0IDogTGF5YS5Qb2ludCxMaW5lRW5kIDogTGF5YS5Qb2ludCkgOiBudW1iZXJcclxuICAgIHtcclxuICAgICAgICB2YXIgdG9TdGFydERpciA9IG5ldyBMYXlhLlBvaW50KHggIC0gTGluZVN0YXJ0LngseSAtIExpbmVTdGFydC55KTtcclxuICAgICAgICB2YXIgdG9FbmREaXIgPSBuZXcgTGF5YS5Qb2ludCh4ICAtIExpbmVFbmQueCx5IC0gTGluZUVuZC55KTtcclxuICAgICAgICB2YXIgbGluZURpciA9IG5ldyBMYXlhLlBvaW50KExpbmVFbmQueCAtIExpbmVTdGFydC55LExpbmVFbmQueSAtIExpbmVTdGFydC55KVxyXG4gICAgICAgIHZhciBkb3RUb1N0YXJ0RGlyID0gKGxpbmVEaXIueCAqIHRvU3RhcnREaXIueCkgKyAobGluZURpci55ICogdG9TdGFydERpci55KVxyXG4gICAgICAgIGlmKGRvdFRvU3RhcnREaXIgPD0gMClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHJldHVybiB0b1N0YXJ0RGlyLmRpc3RhbmNlKDAsMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBkb3RUb0VuZERpciA9IChsaW5lRGlyLnggKiB0b0VuZERpci54KSArIChsaW5lRGlyLnkgKiB0b0VuZERpci55KVxyXG4gICAgICAgIGlmIChkb3RUb0VuZERpciA8PSAwKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRvRW5kRGlyLmRpc3RhbmNlKDAsMCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciB0b1N0YXJ0RGlzID0gdG9TdGFydERpci5kaXN0YW5jZSgwLDApO1xyXG4gICAgICAgIHZhciBsaW5lRGlyRGlzID0gbGluZURpci5kaXN0YW5jZSgwLDApO1xyXG4gICAgICAgIHZhciBjb3MgPSBkb3RUb1N0YXJ0RGlyIC8gKHRvU3RhcnREaXMgKiBsaW5lRGlyRGlzKTtcclxuICAgICAgICB2YXIgcmFkaWFucyA9IE1hdGguYWNvcyhjb3MpXHJcbiAgICAgICAgdmFyIGRpcyA9IE1hdGguc2luKHJhZGlhbnMpICogdG9TdGFydERpc1xyXG4gICAgICAgIHJldHVybiBkaXM7XHJcbiAgICB9XHJcblxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgaXNJcGhvbmVYKClcclxuICAgIHtcclxuICAgICAgICBpZighTGF5YS5Ccm93c2VyLm9uSVBob25lKVxyXG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgICAgaWYoKExheWEuQnJvd3Nlci53aWR0aCA9PSAyNDM2ICYmIExheWEuQnJvd3Nlci5oZWlnaHQgPT0gMTEyNSkgXHJcbiAgICAgICAgICAgIHx8IChMYXlhLkJyb3dzZXIuaGVpZ2h0ID09IDI0MzYgJiYgTGF5YS5Ccm93c2VyLndpZHRoID09IDExMjUpKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgcmV0dXJuIHRydWVcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlXHJcbiAgICB9IFxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgaXNJcGhvbmUoKVxyXG4gICAge1xyXG4gICAgICAgIHJldHVybiBMYXlhLkJyb3dzZXIub25JUGhvbmVcclxuICAgIH1cclxuXHJcblxyXG4gICAgcHVibGljIHN0YXRpYyBnZXRDaGlsZChub2RlIDogTGF5YS5Ob2RlLG5hbWUgOiBzdHJpbmcpIDogTGF5YS5Ob2RlXHJcbiAgICB7XHJcbiAgICAgICAgZm9yKHZhciBpPTA7aSA8IG5vZGUubnVtQ2hpbGRyZW47KytpKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdmFyIGNoaWxkID0gbm9kZS5nZXRDaGlsZEF0KGkpO1xyXG4gICAgICAgICAgICBpZihjaGlsZC5uYW1lID09IG5hbWUpXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHJldHVybiBjaGlsZDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlXHJcbiAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgIHZhciB0YXJnZXQgPSBVdGlsaXQuZ2V0Q2hpbGQoY2hpbGQsbmFtZSk7XHJcbiAgICAgICAgICAgICAgICBpZih0YXJnZXQpXHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHRhcmdldDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgc3RhdGljIGZvckVhY2hDaGlsZChub2RlIDogTGF5YS5Ob2RlLGVhY2ggOiBGdW5jdGlvbilcclxuICAgIHtcclxuICAgICAgICBmb3IobGV0IGk9MDtpIDwgbm9kZS5udW1DaGlsZHJlbjsrK2kpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBsZXQgY2hpbGQgPSBub2RlLmdldENoaWxkQXQoaSk7XHJcbiAgICAgICAgICAgIGVhY2goY2hpbGQpO1xyXG4gICAgICAgICAgICBVdGlsaXQuZm9yRWFjaENoaWxkKGNoaWxkLGVhY2gpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIEFscGhhQnJlYXRoaW5nQW5pX2NzamMgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcblxyXG4gICAgLyoqIEBwcm9wIHtuYW1lOkJyZWF0aGluZ1NwZWVkX2NzamMsIHRpcHM6XCLlkbzlkLjpgJ/luqZcIiwgdHlwZTpOdW1iZXIsIGRlZmF1bHQ6MC41fSovXHJcbiAgICBwdWJsaWMgQnJlYXRoaW5nU3BlZWRfY3NqYzogbnVtYmVyID0gMC41O1xyXG4gICAgLyoqIEBwcm9wIHtuYW1lOk1pbkFscGhhLCB0aXBzOlwi5pyA5bCP6YCP5piO5YC8XCIsIHR5cGU6TnVtYmVyLCBkZWZhdWx0OjAuNX0qL1xyXG4gICAgcHVibGljIE1pbkFscGhhOiBudW1iZXIgPSAwLjU7XHJcbiAgICBwcm90ZWN0ZWQgX2FkZF9jc2pjOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBwcm90ZWN0ZWQgX293bmVyU3ByaXRlX2NzamM6IExheWEuU3ByaXRlO1xyXG5cclxuICAgIG9uQXdha2UoKSB7XHJcbiAgICAgICAgdGhpcy5fb3duZXJTcHJpdGVfY3NqYyA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICB9XHJcblxyXG4gICAgb25VcGRhdGUoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX293bmVyU3ByaXRlX2NzamMudmlzaWJsZSkge1xyXG4gICAgICAgICAgICB0aGlzLmJnQW5pX2NzamMoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIGJnQW5pX2NzamMoKSB7XHJcbiAgICAgICAgbGV0IHNwZCA9IChMYXlhLnRpbWVyLmRlbHRhIC8gMTAwMCkgKiB0aGlzLkJyZWF0aGluZ1NwZWVkX2NzamM7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9hZGRfY3NqYykge1xyXG4gICAgICAgICAgICB0aGlzLl9vd25lclNwcml0ZV9jc2pjLmFscGhhID0gdGhpcy5fb3duZXJTcHJpdGVfY3NqYy5hbHBoYSAtIHNwZFxyXG4gICAgICAgICAgICBpZiAodGhpcy5fb3duZXJTcHJpdGVfY3NqYy5hbHBoYSA8PSB0aGlzLk1pbkFscGhhKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9hZGRfY3NqYyA9IHRydWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX293bmVyU3ByaXRlX2NzamMuYWxwaGEgPSB0aGlzLl9vd25lclNwcml0ZV9jc2pjLmFscGhhICsgc3BkXHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9vd25lclNwcml0ZV9jc2pjLmFscGhhID49IDEpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2FkZF9jc2pjID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgU291bmRNZ3JfY3NqYyBmcm9tIFwiLi4vTWdyL1NvdW5kTWdyXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdXR0b25BbmltX2NzamMgZXh0ZW5kcyBMYXlhLlNjcmlwdCB7XHJcblxyXG4gICAgcHVibGljIHVzZVNvdW5kX2NzamMgOiBib29sZWFuICA9IHRydWU7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cclxuXHJcbiAgICBvbkF3YWtlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMub3duZXIub24oTGF5YS5FdmVudC5NT1VTRV9ET1dOLCB0aGlzLCB0aGlzLm9uRG93bl9jc2pjKTtcclxuICAgICAgICB0aGlzLm93bmVyLm9uKExheWEuRXZlbnQuTU9VU0VfVVAsIHRoaXMsIHRoaXMub25VcF9jc2pjKTtcclxuICAgICAgICB0aGlzLm93bmVyLm9uKExheWEuRXZlbnQuTU9VU0VfT1VULCB0aGlzLCB0aGlzLm9uVXBfY3NqYyk7XHJcbiAgICB9XHJcblxyXG4gICAgb25EaXNhYmxlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMub3duZXIub2ZmQWxsKCk7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi5jbGVhckFsbCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgb25Eb3duX2NzamMoKTogdm9pZCB7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLm93bmVyLCB7IHNjYWxlWDogMC45LCBzY2FsZVk6IDAuOSB9LCA1MCk7XHJcbiAgICAgICAgaWYodGhpcy51c2VTb3VuZF9jc2pjKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgU291bmRNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLnBsYXlTb3VuZF9jc2pjKFwiYW5uaXVcIik7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgb25VcF9jc2pjKCk6IHZvaWQge1xyXG4gICAgICAgIExheWEuVHdlZW4udG8odGhpcy5vd25lciwgeyBzY2FsZVg6IDEsIHNjYWxlWTogMSB9LCA1MCk7XHJcbiAgICB9XHJcbn0iLCJcclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVW5pdmVyc2FsQm90dG9tWm9uZV9jc2pjIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xyXG5cclxuICAgIHByb3RlY3RlZCBfb3duZXJTcHJpdGVfY3NqYzogTGF5YS5TcHJpdGU7XHJcbiAgICBwcm90ZWN0ZWQgX2F1dG9ab25lX2NzamM6IExheWEuVUlDb21wb25lbnQ7XHJcbiAgICBwcm90ZWN0ZWQgX2xvb3BBRFpvbmVfY3NqYzogTGF5YS5VSUNvbXBvbmVudDtcclxuICAgIHByb3RlY3RlZCBfYmFubmVyQURab25lX2NzamM6IExheWEuVUlDb21wb25lbnQ7XHJcblxyXG4gICAgb25Bd2FrZSgpICB7XHJcbiAgICAgICAgdGhpcy5fb3duZXJTcHJpdGVfY3NqYyA9IHRoaXMub3duZXIgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5fYXV0b1pvbmVfY3NqYyA9IHRoaXMuX293bmVyU3ByaXRlX2NzamMuZ2V0Q2hpbGRCeU5hbWUoXCJBdXRvWm9uZVwiKSBhcyBMYXlhLlVJQ29tcG9uZW50O1xyXG4gICAgICAgIHRoaXMuX2xvb3BBRFpvbmVfY3NqYyA9IHRoaXMuX293bmVyU3ByaXRlX2NzamMuZ2V0Q2hpbGRCeU5hbWUoXCJMb29wQURcIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcclxuICAgICAgICB0aGlzLl9iYW5uZXJBRFpvbmVfY3NqYyA9IHRoaXMuX293bmVyU3ByaXRlX2NzamMuZ2V0Q2hpbGRCeU5hbWUoXCJCYW5uZXJBRFwiKSBhcyBMYXlhLlVJQ29tcG9uZW50O1xyXG4gICAgfVxyXG5cclxuICAgIG9uRW5hYmxlKCk6IHZvaWQge1xyXG4gICAgICAgIHZhciBhc3BlY3RSYXRpbyA9IExheWEuc3RhZ2Uud2lkdGggLyBMYXlhLnN0YWdlLmhlaWdodDtcclxuICAgICAgICBpZiAoYXNwZWN0UmF0aW8gPCAwLjUpICB7XHJcbiAgICAgICAgICAgIHRoaXMuX2F1dG9ab25lX2NzamMuYm90dG9tID0gdGhpcy5fbG9vcEFEWm9uZV9jc2pjLmhlaWdodCArIHRoaXMuX2Jhbm5lckFEWm9uZV9jc2pjLmhlaWdodDtcclxuICAgICAgICAgICAgdGhpcy5fbG9vcEFEWm9uZV9jc2pjLmJvdHRvbSA9IHRoaXMuX2Jhbm5lckFEWm9uZV9jc2pjLmhlaWdodDtcclxuICAgICAgICAgICAgdGhpcy5fYmFubmVyQURab25lX2NzamMudmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgIHtcclxuICAgICAgICAgICAgdGhpcy5fYXV0b1pvbmVfY3NqYy5ib3R0b20gPSB0aGlzLl9sb29wQURab25lX2NzamMuaGVpZ2h0O1xyXG4gICAgICAgICAgICB0aGlzLl9sb29wQURab25lX2NzamMuYm90dG9tID0gMDtcclxuICAgICAgICAgICAgdGhpcy5fYmFubmVyQURab25lX2NzamMudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIG9uVXBkYXRlKCkgIHtcclxuICAgICAgICBpZiAoIXRoaXMuX2Jhbm5lckFEWm9uZV9jc2pjLnZpc2libGUpICB7XHJcbiAgICAgICAgICAgIHRoaXMuX2Jhbm5lckFEWm9uZV9jc2pjLm9uRGlzYWJsZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsImltcG9ydCBWaWV3QmFzZV9jc2pjIGZyb20gXCIuLi9WaWV3QmFzZVwiO1xyXG5pbXBvcnQgVmlld01ncl9jc2pjLCB7IFZpZXdEZWZfY3NqYyB9IGZyb20gXCIuLi8uLi9NZ3IvVmlld01nclwiO1xyXG5pbXBvcnQgV3VkaWFuVmlldyBmcm9tIFwiLi9XdWRpYW5WaWV3XCI7XHJcbmltcG9ydCBRcEdhbWVTd2l0Y2ggZnJvbSBcIi4uLy4uL1FwQVBJL1FwR2FtZVN3aXRjaFwiO1xyXG5pbXBvcnQgVG1BUEkgZnJvbSBcIi4uLy4uL1RtQVBJL1RtQVBJXCI7XHJcbmltcG9ydCBVc2VyX2NzamMgZnJvbSBcIi4uLy4uL1VzZXIvVXNlclwiO1xyXG5pbXBvcnQgeyBBZERhdGFNZ3IsIENvbXBvbmVudFN0eWxlIH0gZnJvbSBcIi4uLy4uL1FwQVBJL0FkRGF0YU1nclwiO1xyXG5pbXBvcnQgRXhhbWluZU1nciBmcm9tIFwiLi4vLi4vQ29tbW9tQVBJL0V4YW1pbmVNZ3JcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEV4cG9ydDFBZFZpZXcgZXh0ZW5kcyBXdWRpYW5WaWV3IHtcclxuICAgIHByb3RlY3RlZCBfc2tpcEJ0bk1vdmUgPSBmYWxzZTtcclxuICAgIHByb3RlY3RlZCBfaGlkZUZpcnN0ID0gdHJ1ZTtcclxuICAgIHByb3RlY3RlZCBfd3VkaWFuVHB5ZSA9IDI7XHJcbiAgICBnZXQgTmVlZFd1ZGlhbigpOiBib29sZWFuIHtcclxuICAgICAgICBsZXQgc3djID0gUXBHYW1lU3dpdGNoLkdhbWVTd2l0Y2guYmFubmVyV3VkaWFuID09IDE7XHJcbiAgICAgICAgbGV0IHd1ZGlhblN3aXRjaCA9IFFwR2FtZVN3aXRjaC5HYW1lU3dpdGNoLnd1ZGlhblN3aXRjaCA9PSAxO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGB3ZOWKn+iDveaAu+W8gOWFs3d1ZGlhblN3aXRjaDogJHt3dWRpYW5Td2l0Y2h977yM5YiG5byA5YWzYmFubmVyV3VkaWFu77yaJHtzd2N9YCk7XHJcbiAgICAgICAgcmV0dXJuIHN3YyAmJiB3dWRpYW5Td2l0Y2g7XHJcbiAgICB9XHJcbiAgICBPblNraXBCdG4oKSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZVZpZXcoKTtcclxuICAgICAgICBpZiAoVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMuZ2V0Vmlld19jc2pjKFZpZXdEZWZfY3NqYy5JbkdhbWVWaWV3KSkge1xyXG4gICAgICAgICAgICBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5vcGVuVmlld19jc2pjKFZpZXdEZWZfY3NqYy5JbkdhbWVWaWV3KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZiAodGhpcy5fZGF0YSA9PSBudWxsKSB7XHJcbiAgICAgICAgICAgIFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLm9wZW5WaWV3X2NzamMoVmlld0RlZl9jc2pjLk1haW5HYW1lVmlldyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKHRoaXMuX2RhdGEuV2luKSB7XHJcbiAgICAgICAgICAgIFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLm9wZW5WaWV3X2NzamMoVmlld0RlZl9jc2pjLkdhbWVPdmVyV2luVmlldyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5vcGVuVmlld19jc2pjKFZpZXdEZWZfY3NqYy5HYW1lT3ZlckZhaWxWaWV3KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBwcm90ZWN0ZWQgX3NraXBCdG46IExheWEuSW1hZ2U7XHJcbiAgICBhZGRFdmVudCgpIHtcclxuICAgICAgICB0aGlzLl9za2lwQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuT25Ta2lwQnRuKTtcclxuICAgIH1cclxuICAgIG9uU3RhcnQoKSB7XHJcbiAgICAgICAgc3VwZXIub25TdGFydCgpO1xyXG4gICAgICAgIGlmIChVc2VyX2NzamMuZ2V0TGV2ZU51bV9jc2pjKCkgPT0gMSkge1xyXG4gICAgICAgICAgICBUbUFQSS5TZW5kRXZlbnQoXCJHYW1lU3RlcFwiLCB7IFN0ZXA6IDQgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHZhciBza2VsZXRvbiA9IG5ldyBMYXlhLlNrZWxldG9uKCk7XHJcbiAgICAgICAgLy/mt7vliqDliLDoiJ7lj7BcclxuICAgICAgICB0aGlzLm93bmVyLmFkZENoaWxkKHNrZWxldG9uKTtcclxuICAgICAgICBza2VsZXRvbi5wb3MoNzAwLCAzNTApO1xyXG4gICAgICAgIC8v6YCa6L+H5Yqg6L2955u05o6l5Yib5bu65Yqo55S7XHJcbiAgICAgICAgc2tlbGV0b24ubG9hZChcInN1YlJlcy9zay9OZXdQcm9qZWN0LnNrXCIsIExheWEuSGFuZGxlci5jcmVhdGUodGhpcywgKHNrKSA9PiB7XHJcbiAgICAgICAgICAgIHNrLnNjYWxlWCA9IDAuNTtcclxuICAgICAgICAgICAgc2suc2NhbGVZID0gMC41O1xyXG4gICAgICAgIH0pKTtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coYOiHquWKqOi3s+WKn+iDveWxj+iUvSR7RXhhbWluZU1nci5DYW5Eb1Njel9XeH0s5byA5YWzJHtRcEdhbWVTd2l0Y2guR2FtZVN3aXRjaC5wb3BBZCA9PSAxfWApO1xyXG4gICAgICAgICAgICBpZiAoRXhhbWluZU1nci5DYW5Eb1Njel9XeCAmJiBRcEdhbWVTd2l0Y2guR2FtZVN3aXRjaC5wb3BBZCA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICBsZXQgYXJyID0gQWREYXRhTWdyLkluc3RhbmNlLkdldERhdGFCeVN0eWxlQW5kQ291bnQoQ29tcG9uZW50U3R5bGUuaF9zbGlkZXIsIDEwKTtcclxuICAgICAgICAgICAgICAgIGlmIChhcnIubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBnYW1lID0gYXJyW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIGFyci5sZW5ndGgpXTtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoZ2FtZSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBBZERhdGFNZ3IuSW5zdGFuY2UuTmF2aWdhdGVUbyhDb21wb25lbnRTdHlsZS5oX3NsaWRlciwgZ2FtZSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsImltcG9ydCBWaWV3QmFzZV9jc2pjIGZyb20gXCIuLi9WaWV3QmFzZVwiO1xyXG5pbXBvcnQgVmlld01ncl9jc2pjLCB7IFZpZXdEZWZfY3NqYyB9IGZyb20gXCIuLi8uLi9NZ3IvVmlld01nclwiO1xyXG5pbXBvcnQgV3VkaWFuVmlldyBmcm9tIFwiLi9XdWRpYW5WaWV3XCI7XHJcbmltcG9ydCBRcEdhbWVTd2l0Y2ggZnJvbSBcIi4uLy4uL1FwQVBJL1FwR2FtZVN3aXRjaFwiO1xyXG5pbXBvcnQgRXZlbnRNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcclxuaW1wb3J0IHsgRXZlbnREZWZfY3NqYyB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xyXG5pbXBvcnQgeyBBZERhdGFNZ3IsIENvbXBvbmVudFN0eWxlIH0gZnJvbSBcIi4uLy4uL1FwQVBJL0FkRGF0YU1nclwiO1xyXG5pbXBvcnQgR2FtZU1ncl9jc2pjIGZyb20gXCIuLi8uLi9TY3JpcHRzL0dhbWVNZ3JcIjtcclxuaW1wb3J0IFVzZXJfY3NqYyBmcm9tIFwiLi4vLi4vVXNlci9Vc2VyXCI7XHJcbmltcG9ydCBUbUFQSSBmcm9tIFwiLi4vLi4vVG1BUEkvVG1BUElcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEV4cG9ydDJBZFZpZXcgZXh0ZW5kcyBXdWRpYW5WaWV3IHtcclxuICAgIHByb3RlY3RlZCBfc2tpcEJ0bk1vdmUgPSBmYWxzZTtcclxuICAgIHByb3RlY3RlZCBfaGlkZUZpcnN0ID0gZmFsc2U7XHJcbiAgICBwcm90ZWN0ZWQgX3d1ZGlhblRweWUgPSAyO1xyXG4gICAgZ2V0IE5lZWRXdWRpYW4oKTogYm9vbGVhbiB7XHJcbiAgICAgICAgbGV0IHN3YyA9IFFwR2FtZVN3aXRjaC5HYW1lU3dpdGNoLmJhbm5lcld1ZGlhbiA9PSAxO1xyXG4gICAgICAgIGxldCB3dWRpYW5Td2l0Y2ggPSBRcEdhbWVTd2l0Y2guR2FtZVN3aXRjaC53dWRpYW5Td2l0Y2ggPT0gMTtcclxuICAgICAgICBjb25zb2xlLmxvZyhgd2Tlip/og73mgLvlvIDlhbN3dWRpYW5Td2l0Y2g6ICR7d3VkaWFuU3dpdGNofe+8jOWIhuW8gOWFs2Jhbm5lcld1ZGlhbu+8miR7c3djfWApO1xyXG4gICAgICAgIHJldHVybiBzd2MgJiYgd3VkaWFuU3dpdGNoO1xyXG4gICAgfVxyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICBzdXBlci5vbkF3YWtlKCk7XHJcbiAgICAgICAgR2FtZU1ncl9jc2pjLmdldEluc3RhbmNlKCkuQ3JlYXROZXh0R2FtZVNjZW5lKCk7XHJcbiAgICB9XHJcbiAgICBwcm90ZWN0ZWQgX3NraXBCdG46IExheWEuSW1hZ2U7XHJcbiAgICBhZGRFdmVudCgpIHtcclxuICAgICAgICB0aGlzLl9za2lwQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuT25Ta2lwQnRuKTtcclxuICAgIH1cclxuICAgIE9uU2tpcEJ0bigpIHtcclxuICAgICAgICB0aGlzLmNsb3NlVmlldygpO1xyXG4gICAgICAgIFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLm9wZW5WaWV3X2NzamMoVmlld0RlZl9jc2pjLk1haW5HYW1lVmlldyk7XHJcbiAgICB9XHJcblxyXG4gICAgb25TdGFydCgpIHtcclxuICAgICAgICB2YXIgc2tlbGV0b24gPSBuZXcgTGF5YS5Ta2VsZXRvbigpO1xyXG4gICAgICAgIC8v5re75Yqg5Yiw6Iie5Y+wXHJcbiAgICAgICAgdGhpcy5vd25lci5hZGRDaGlsZChza2VsZXRvbik7XHJcbiAgICAgICAgc2tlbGV0b24ucG9zKDcwMCwgMzUwKTtcclxuICAgICAgICAvL+mAmui/h+WKoOi9veebtOaOpeWIm+W7uuWKqOeUu1xyXG4gICAgICAgIHNrZWxldG9uLmxvYWQoXCJzdWJSZXMvc2svTmV3UHJvamVjdC5za1wiLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHRoaXMsIChzaykgPT4ge1xyXG4gICAgICAgICAgICBzay5zY2FsZVggPSAwLjU7XHJcbiAgICAgICAgICAgIHNrLnNjYWxlWSA9IDAuNTtcclxuICAgICAgICB9KSk7XHJcbiAgICAgICAgaWYgKFVzZXJfY3NqYy5nZXRMZXZlTnVtX2NzamMoKSA8PSAyKSB7XHJcbiAgICAgICAgICAgIFRtQVBJLlNlbmRFdmVudChcIkdhbWVTdGVwXCIsIHsgU3RlcDogNiB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgVmlld0Jhc2VfY3NqYyBmcm9tIFwiLi4vVmlld0Jhc2VcIjtcclxuaW1wb3J0IFZpZXdNZ3JfY3NqYywgeyBWaWV3RGVmX2NzamMgfSBmcm9tIFwiLi4vLi4vTWdyL1ZpZXdNZ3JcIjtcclxuaW1wb3J0IFd1ZGlhblZpZXcgZnJvbSBcIi4vV3VkaWFuVmlld1wiO1xyXG5pbXBvcnQgUXBHYW1lU3dpdGNoIGZyb20gXCIuLi8uLi9RcEFQSS9RcEdhbWVTd2l0Y2hcIjtcclxuaW1wb3J0IEV2ZW50TWdyX2NzamMgZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XHJcbmltcG9ydCB7IEV2ZW50RGVmX2NzamMgfSBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnREZWZcIjtcclxuaW1wb3J0IHsgQWREYXRhTWdyLCBDb21wb25lbnRTdHlsZSB9IGZyb20gXCIuLi8uLi9RcEFQSS9BZERhdGFNZ3JcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEV4cG9ydDNBZFZpZXcgZXh0ZW5kcyBXdWRpYW5WaWV3IHtcclxuICAgIHByb3RlY3RlZCBfc2tpcEJ0bk1vdmUgPSB0cnVlO1xyXG4gICAgcHJvdGVjdGVkIF9oaWRlRmlyc3QgPSB0cnVlO1xyXG4gICAgcHJvdGVjdGVkIF93dWRpYW5UcHllID0gMjtcclxuICAgIHByb3RlY3RlZCBfYnRuMTogTGF5YS5JbWFnZTtcclxuICAgIHByb3RlY3RlZCBfYnRuMjogTGF5YS5JbWFnZTtcclxuICAgIHByb3RlY3RlZCBfc2tpcEJ0bjogTGF5YS5JbWFnZTtcclxuICAgIHByb3RlY3RlZCBfZ2FtZTE6IGFueTtcclxuICAgIHByb3RlY3RlZCBfZ2FtZTI6IGFueTtcclxuICAgIG9uQXdha2UoKSB7XHJcbiAgICAgICAgc3VwZXIub25Bd2FrZSgpO1xyXG4gICAgICAgIHRoaXMuX2J0bjEgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQkdcIikuZ2V0Q2hpbGRCeU5hbWUoXCJCdG4xXCIpIGFzIExheWEuSW1hZ2U7XHJcbiAgICAgICAgdGhpcy5fYnRuMiA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJCR1wiKS5nZXRDaGlsZEJ5TmFtZShcIkJ0bjJcIikgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICBpZiAoTGF5YS5Ccm93c2VyLm9uTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgbGV0IGFyciA9IEFkRGF0YU1nci5JbnN0YW5jZS5HZXREYXRhQnlTdHlsZUFuZENvdW50KENvbXBvbmVudFN0eWxlLmhfc2xpZGVyLCAxMCk7XHJcbiAgICAgICAgICAgIGlmIChhcnIubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZ2FtZTEgPSBhcnJbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogYXJyLmxlbmd0aCldO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fZ2FtZTIgPSBhcnJbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogYXJyLmxlbmd0aCldO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGdldCBOZWVkV3VkaWFuKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGxldCBzd2MgPSBRcEdhbWVTd2l0Y2guR2FtZVN3aXRjaC5iYW5uZXJXdWRpYW4gPT0gMTtcclxuICAgICAgICBsZXQgd3VkaWFuU3dpdGNoID0gUXBHYW1lU3dpdGNoLkdhbWVTd2l0Y2gud3VkaWFuU3dpdGNoID09IDE7XHJcbiAgICAgICAgY29uc29sZS5sb2coYHdk5Yqf6IO95oC75byA5YWzd3VkaWFuU3dpdGNoOiAke3d1ZGlhblN3aXRjaH3vvIzliIblvIDlhbNiYW5uZXJXdWRpYW7vvJoke3N3Y31gKTtcclxuICAgICAgICByZXR1cm4gc3djICYmIHd1ZGlhblN3aXRjaDtcclxuICAgIH1cclxuXHJcbiAgICBhZGRFdmVudCgpIHtcclxuICAgICAgICB0aGlzLl9za2lwQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuY2xvc2VWaWV3KTtcclxuICAgICAgICB0aGlzLl9idG4xLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuR2FtZTEpO1xyXG4gICAgICAgIHRoaXMuX2J0bjIub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5HYW1lMik7XHJcbiAgICB9XHJcblxyXG4gICAgT25Ta2lwQnRuKCkge1xyXG4gICAgICAgIHRoaXMuY2xvc2VWaWV3KCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25DbG9zZUV2ZW50ID0gKCkgPT4ge1xyXG4gICAgICAgIFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLm9wZW5WaWV3X2NzamMoVmlld0RlZl9jc2pjLkV4cG9ydDFBZFZpZXcpO1xyXG4gICAgfVxyXG5cclxuICAgIEdhbWUxKCkge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fZ2FtZTEpIHtcclxuICAgICAgICAgICAgICAgIEFkRGF0YU1nci5JbnN0YW5jZS5OYXZpZ2F0ZVRvKENvbXBvbmVudFN0eWxlLmhfc2xpZGVyLCB0aGlzLl9nYW1lMSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgR2FtZTIoKSB7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vbk1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9nYW1lMikge1xyXG4gICAgICAgICAgICAgICAgQWREYXRhTWdyLkluc3RhbmNlLk5hdmlnYXRlVG8oQ29tcG9uZW50U3R5bGUuaF9zbGlkZXIsIHRoaXMuX2dhbWUyKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsImltcG9ydCBHYW1lTWdyX2NzamMgZnJvbSBcIi4uLy4uL1NjcmlwdHMvR2FtZU1nclwiO1xyXG5pbXBvcnQgUXBHYW1lU3dpdGNoIGZyb20gXCIuLi8uLi9RcEFQSS9RcEdhbWVTd2l0Y2hcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZpcnN0Vmlld0FkIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xyXG4gICAgb25TdGFydCgpIHtcclxuICAgICAgICBpZiAoKEdhbWVNZ3JfY3NqYy5nZXRJbnN0YW5jZSgpLkZpcnN0QWQgPT0gZmFsc2UgJiYgUXBHYW1lU3dpdGNoLmN1c3RvbWtleS5pbmRleEFkICE9IDIpIHx8IFFwR2FtZVN3aXRjaC5jdXN0b21rZXkuaW5kZXhBZCA9PSAwKSB7XHJcbiAgICAgICAgICAgICh0aGlzLm93bmVyIGFzIExheWEuVUlDb21wb25lbnQpLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgVmlld0Jhc2VfY3NqYyBmcm9tIFwiLi4vVmlld0Jhc2VcIjtcclxuaW1wb3J0IFZpZXdNZ3JfY3NqYywgeyBWaWV3RGVmX2NzamMgfSBmcm9tIFwiLi4vLi4vTWdyL1ZpZXdNZ3JcIjtcclxuaW1wb3J0IFd1ZGlhblZpZXcgZnJvbSBcIi4vV3VkaWFuVmlld1wiO1xyXG5pbXBvcnQgUXBHYW1lU3dpdGNoIGZyb20gXCIuLi8uLi9RcEFQSS9RcEdhbWVTd2l0Y2hcIjtcclxuaW1wb3J0IFRtQVBJIGZyb20gXCIuLi8uLi9UbUFQSS9UbUFQSVwiO1xyXG5pbXBvcnQgVXNlcl9jc2pjIGZyb20gXCIuLi8uLi9Vc2VyL1VzZXJcIjtcclxuaW1wb3J0IHsgQWREYXRhTWdyLCBDb21wb25lbnRTdHlsZSB9IGZyb20gXCIuLi8uLi9RcEFQSS9BZERhdGFNZ3JcIjtcclxuaW1wb3J0IEdhbWVNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vU2NyaXB0cy9HYW1lTWdyXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGcmllbmRFeHBvcnQgZXh0ZW5kcyBXdWRpYW5WaWV3IHtcclxuICAgIHByb3RlY3RlZCBfc2tpcEJ0bk1vdmUgPSBmYWxzZTtcclxuICAgIHByb3RlY3RlZCBfaGlkZUZpcnN0ID0gdHJ1ZTtcclxuICAgIHByb3RlY3RlZCBfd3VkaWFuVHB5ZSA9IDI7XHJcbiAgICBnZXQgTmVlZFd1ZGlhbigpOiBib29sZWFuIHtcclxuICAgICAgICBsZXQgc3djID0gUXBHYW1lU3dpdGNoLkdhbWVTd2l0Y2guYmFubmVyV3VkaWFuID09IDE7XHJcbiAgICAgICAgbGV0IHd1ZGlhblN3aXRjaCA9IFFwR2FtZVN3aXRjaC5HYW1lU3dpdGNoLnd1ZGlhblN3aXRjaCA9PSAxO1xyXG4gICAgICAgIGNvbnNvbGUubG9nKGB3ZOWKn+iDveaAu+W8gOWFs3d1ZGlhblN3aXRjaDogJHt3dWRpYW5Td2l0Y2h977yM5YiG5byA5YWzYmFubmVyV3VkaWFu77yaJHtzd2N9YCk7XHJcbiAgICAgICAgcmV0dXJuIHN3YyAmJiB3dWRpYW5Td2l0Y2g7XHJcbiAgICB9XHJcbiAgICBPblNraXBCdG4oKSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZVZpZXcoKTtcclxuICAgIH1cclxuICAgIHByb3RlY3RlZCBfc2tpcEJ0bjogTGF5YS5JbWFnZTtcclxuICAgIGFkZEV2ZW50KCkge1xyXG4gICAgICAgIHRoaXMuX3NraXBCdG4ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5PblNraXBCdG4pO1xyXG4gICAgfVxyXG4gICAgb25TdGFydCgpIHtcclxuICAgICAgICBzdXBlci5vblN0YXJ0KCk7XHJcbiAgICAgICAgaWYgKFVzZXJfY3NqYy5nZXRMZXZlTnVtX2NzamMoKSA9PSAxKSB7XHJcbiAgICAgICAgICAgIFRtQVBJLlNlbmRFdmVudChcIkdhbWVTdGVwXCIsIHsgU3RlcDogNSB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5vd25lci5hZGRDaGlsZChHYW1lTWdyX2NzamMuZ2V0SW5zdGFuY2UoKS5Db250ZXh0KTtcclxuICAgICAgICBHYW1lTWdyX2NzamMuZ2V0SW5zdGFuY2UoKS5Db250ZXh0LnBvc3RNc2coeyBjbWQ6IFwiT3BlbkV4cG9ydFwiLCBkYXRhOiB7IHdpZHRoOiBMYXlhLnN0YWdlLndpZHRoLCBoZWlnaHQ6IExheWEuc3RhZ2UuaGVpZ2h0IH0gfSk7XHJcbiAgICB9XHJcbiAgICBvbkNsb3NlKCkge1xyXG4gICAgICAgIHN1cGVyLm9uQ2xvc2UoKTtcclxuICAgICAgICBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5vcGVuVmlld19jc2pjKFZpZXdEZWZfY3NqYy5IRXhwb3J0MkFkVmlldyk7XHJcbiAgICB9XHJcbiAgICBvbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgR2FtZU1ncl9jc2pjLmdldEluc3RhbmNlKCkuQ29udGV4dC5yZW1vdmVTZWxmKCk7XHJcbiAgICAgICAgc3VwZXIub25EZXN0cm95KCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgV3VkaWFuVmlldyBmcm9tIFwiLi9XdWRpYW5WaWV3XCI7XHJcbmltcG9ydCBRcEdhbWVTd2l0Y2ggZnJvbSBcIi4uLy4uL1FwQVBJL1FwR2FtZVN3aXRjaFwiO1xyXG5pbXBvcnQgRXZlbnRNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcclxuaW1wb3J0IFZpZXdNZ3JfY3NqYywgeyBWaWV3RGVmX2NzamMgfSBmcm9tIFwiLi4vLi4vTWdyL1ZpZXdNZ3JcIjtcclxuaW1wb3J0IFVzZXJfY3NqYyBmcm9tIFwiLi4vLi4vVXNlci9Vc2VyXCI7XHJcbmltcG9ydCBHYW1lT3ZlcldpblZpZXcgZnJvbSBcIi4vR2FtZU92ZXJXaW5WSWV3XCI7XHJcbmltcG9ydCBUbUFQSSBmcm9tIFwiLi4vLi4vVG1BUEkvVG1BUElcIjtcclxuaW1wb3J0IEV4YW1pbmVNZ3IgZnJvbSBcIi4uLy4uL0NvbW1vbUFQSS9FeGFtaW5lTWdyXCI7XHJcbmltcG9ydCBHYW1lTWdyX2NzamMgZnJvbSBcIi4uLy4uL1NjcmlwdHMvR2FtZU1nclwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZU92ZXJGYWlsVmlldyBleHRlbmRzIEdhbWVPdmVyV2luVmlldyB7XHJcbiAgICBHZXRSZXdhcmQoKSB7XHJcbiAgICAgICAgaWYgKCFFeGFtaW5lTWdyLkNhbkRvU2N6X1d4KSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2VWaWV3KCk7XHJcbiAgICAgICAgICAgIEdhbWVNZ3JfY3NqYy5nZXRJbnN0YW5jZSgpLkNyZWF0R2FtZVNjZW5lKCk7XHJcbiAgICAgICAgICAgIFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLm9wZW5WaWV3X2NzamMoVmlld0RlZl9jc2pjLk1haW5HYW1lVmlldyk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9za2lwQnRuLm1vdXNlRW5hYmxlZCA9IGZhbHNlO1xyXG4gICAgICAgICAgICBsZXQgcCA9IG5ldyBMYXlhLlBvaW50KDEwMCwgMTAwKTtcclxuICAgICAgICAgICAgdGhpcy5fbW9uZXkubG9jYWxUb0dsb2JhbChwLCBmYWxzZSk7XHJcbiAgICAgICAgICAgIFVzZXJfY3NqYy5hZGRNb25leV9jc2pjKDEwMCwgcCk7XHJcbiAgICAgICAgICAgIExheWEudGltZXIub25jZSgxNTAwLCB0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNsb3NlVmlldygpO1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coYOWlveWPi+eDreeOqSR7RXhhbWluZU1nci5DYW5Eb1Njel9XeH0s5byA5YWzJHtRcEdhbWVTd2l0Y2guR2FtZVN3aXRjaC5pbmRleFBhbmVsID09IDF9YCk7XHJcbiAgICAgICAgICAgICAgICBpZiAoRXhhbWluZU1nci5DYW5Eb1Njel9XeCAmJiBRcEdhbWVTd2l0Y2guR2FtZVN3aXRjaC5pbmRleFBhbmVsID09IDEpIHtcclxuICAgICAgICAgICAgICAgICAgICBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5vcGVuVmlld19jc2pjKFZpZXdEZWZfY3NqYy5GcmllbmRFeHBvcnRWaWV3KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLm9wZW5WaWV3X2NzamMoVmlld0RlZl9jc2pjLkhFeHBvcnQyQWRWaWV3KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBTZW5kR2FtZVJlc3VsdCgpIHtcclxuICAgICAgICBUbUFQSS5TZW5kRXZlbnQoXCJHYW1lUmVzdWx0XCIsIHsgTGV2ZWw6IFVzZXJfY3NqYy5nZXRMZXZlTnVtX2NzamMoKSwgUmVzdWx0OiAwIH0pO1xyXG4gICAgfVxyXG59IiwiaW1wb3J0IFd1ZGlhblZpZXcgZnJvbSBcIi4vV3VkaWFuVmlld1wiO1xyXG5pbXBvcnQgUXBHYW1lU3dpdGNoIGZyb20gXCIuLi8uLi9RcEFQSS9RcEdhbWVTd2l0Y2hcIjtcclxuaW1wb3J0IEV2ZW50TWdyX2NzamMgZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XHJcbmltcG9ydCBWaWV3TWdyX2NzamMsIHsgVmlld0RlZl9jc2pjIH0gZnJvbSBcIi4uLy4uL01nci9WaWV3TWdyXCI7XHJcbmltcG9ydCBVc2VyX2NzamMgZnJvbSBcIi4uLy4uL1VzZXIvVXNlclwiO1xyXG5pbXBvcnQgU2NlbmVNZ3JfY3NjaiBmcm9tIFwiLi4vLi4vU2NyaXB0cy9HYW1lQ29yZS9TY2VuZU1nclwiO1xyXG5pbXBvcnQgVG1BUEkgZnJvbSBcIi4uLy4uL1RtQVBJL1RtQVBJXCI7XHJcbmltcG9ydCBFeGFtaW5lTWdyIGZyb20gXCIuLi8uLi9Db21tb21BUEkvRXhhbWluZU1nclwiXHJcbmltcG9ydCBHYW1lTWdyX2NzamMgZnJvbSBcIi4uLy4uL1NjcmlwdHMvR2FtZU1nclwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2FtZU92ZXJXaW5WaWV3IGV4dGVuZHMgV3VkaWFuVmlldyB7XHJcbiAgICBwcm90ZWN0ZWQgX3NraXBCdG5Nb3ZlID0gZmFsc2U7XHJcbiAgICBwcm90ZWN0ZWQgX2hpZGVGaXJzdCA9IHRydWU7XHJcbiAgICBwcm90ZWN0ZWQgX3d1ZGlhblRweWUgPSAyO1xyXG4gICAgcHJvdGVjdGVkIF9lbmVteUNvdW50OiBMYXlhLkZvbnRDbGlwO1xyXG5cclxuICAgIGdldCBOZWVkV3VkaWFuKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIGxldCBzd2MgPSBRcEdhbWVTd2l0Y2guR2FtZVN3aXRjaC5iYW5uZXJXdWRpYW4gPT0gMTtcclxuICAgICAgICBsZXQgd3VkaWFuU3dpdGNoID0gUXBHYW1lU3dpdGNoLkdhbWVTd2l0Y2gud3VkaWFuU3dpdGNoID09IDE7XHJcbiAgICAgICAgY29uc29sZS5sb2coYHdk5Yqf6IO95oC75byA5YWzd3VkaWFuU3dpdGNoOiAke3d1ZGlhblN3aXRjaH3vvIzliIblvIDlhbNiYW5uZXJXdWRpYW7vvJoke3N3Y31gKTtcclxuICAgICAgICByZXR1cm4gc3djICYmIHd1ZGlhblN3aXRjaDtcclxuICAgIH1cclxuXHJcbiAgICBPblNraXBCdG4oKSB7XHJcbiAgICAgICAgdGhpcy5HZXRSZXdhcmQoKTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRFdmVudCgpIHtcclxuICAgICAgICB0aGlzLl9za2lwQnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuT25Ta2lwQnRuKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkF3YWtlKCkge1xyXG4gICAgICAgIHN1cGVyLm9uQXdha2UoKTtcclxuICAgICAgICB0aGlzLl9tb25leSA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJNb25leVwiKSBhcyBMYXlhLlVJQ29tcG9uZW50O1xyXG4gICAgICAgIHRoaXMuX2VuZW15Q291bnQgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiRGVzdG9yeVwiKS5nZXRDaGlsZEJ5TmFtZShcIkVuZW15Q291bnRcIikgYXMgTGF5YS5Gb250Q2xpcDtcclxuICAgICAgICB0aGlzLl9lbmVteUNvdW50LnZhbHVlID0gKFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuRW5lbXlLaWxsQ291bnQpICsgXCIvXCIgKyBTY2VuZU1ncl9jc2NqLkluc3RhbmNlLkVuZW1Db3VudDtcclxuICAgICAgICB0aGlzLlNlbmRHYW1lUmVzdWx0KCk7XHJcbiAgICAgICAgaWYgKCFFeGFtaW5lTWdyLkNhbkRvU2N6X1d4KSB7XHJcbiAgICAgICAgICAgIHRoaXMuX21vbmV5LnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgR2V0UmV3YXJkKCkge1xyXG4gICAgICAgIGlmICghRXhhbWluZU1nci5DYW5Eb1Njel9XeCkge1xyXG4gICAgICAgICAgICB0aGlzLmNsb3NlVmlldygpO1xyXG4gICAgICAgICAgICBHYW1lTWdyX2NzamMuZ2V0SW5zdGFuY2UoKS5DcmVhdE5leHRHYW1lU2NlbmUoKTtcclxuICAgICAgICAgICAgVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMub3BlblZpZXdfY3NqYyhWaWV3RGVmX2NzamMuTWFpbkdhbWVWaWV3KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuX3NraXBCdG4ubW91c2VFbmFibGVkID0gZmFsc2U7XHJcbiAgICAgICAgICAgIGxldCBwID0gbmV3IExheWEuUG9pbnQoMTAwLCAxMDApO1xyXG4gICAgICAgICAgICB0aGlzLl9tb25leS5sb2NhbFRvR2xvYmFsKHAsIGZhbHNlKTtcclxuICAgICAgICAgICAgVXNlcl9jc2pjLmFkZE1vbmV5X2NzamMoNTAwLCBwKTtcclxuICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKDE1MDAsIHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2xvc2VWaWV3KCk7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhg5aW95Y+L54Ot546pJHtFeGFtaW5lTWdyLkNhbkRvU2N6X1d4fSzlvIDlhbMke1FwR2FtZVN3aXRjaC5HYW1lU3dpdGNoLmluZGV4UGFuZWwgPT0gMX1gKTtcclxuICAgICAgICAgICAgICAgIGlmIChFeGFtaW5lTWdyLkNhbkRvU2N6X1d4ICYmIFFwR2FtZVN3aXRjaC5HYW1lU3dpdGNoLmluZGV4UGFuZWwgPT0gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLm9wZW5WaWV3X2NzamMoVmlld0RlZl9jc2pjLkZyaWVuZEV4cG9ydFZpZXcpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMub3BlblZpZXdfY3NqYyhWaWV3RGVmX2NzamMuSEV4cG9ydDJBZFZpZXcpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgX21vbmV5OiBMYXlhLlVJQ29tcG9uZW50O1xyXG5cclxuICAgIFNlbmRHYW1lUmVzdWx0KCkge1xyXG4gICAgICAgIFRtQVBJLlNlbmRFdmVudChcIkdhbWVSZXN1bHRcIiwgeyBMZXZlbDogVXNlcl9jc2pjLmdldExldmVOdW1fY3NqYygpLCBSZXN1bHQ6IDEgfSk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgV3VkaWFuVmlldyBmcm9tIFwiLi9XdWRpYW5WaWV3XCI7XHJcbmltcG9ydCBRcEdhbWVTd2l0Y2ggZnJvbSBcIi4uLy4uL1FwQVBJL1FwR2FtZVN3aXRjaFwiO1xyXG5pbXBvcnQgRXZlbnRNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcclxuaW1wb3J0IFZpZXdNZ3JfY3NqYywgeyBWaWV3RGVmX2NzamMgfSBmcm9tIFwiLi4vLi4vTWdyL1ZpZXdNZ3JcIjtcclxuaW1wb3J0IFVzZXJfY3NqYyBmcm9tIFwiLi4vLi4vVXNlci9Vc2VyXCI7XHJcbmltcG9ydCBTY2VuZU1ncl9jc2NqIGZyb20gXCIuLi8uLi9TY3JpcHRzL0dhbWVDb3JlL1NjZW5lTWdyXCI7XHJcbmltcG9ydCBUbUFQSSBmcm9tIFwiLi4vLi4vVG1BUEkvVG1BUElcIjtcclxuaW1wb3J0IEV4YW1pbmVNZ3IgZnJvbSBcIi4uLy4uL0NvbW1vbUFQSS9FeGFtaW5lTWdyXCJcclxuaW1wb3J0IEdhbWVNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vU2NyaXB0cy9HYW1lTWdyXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBHYW1lT3ZlcldpblZpZXcgZXh0ZW5kcyBXdWRpYW5WaWV3IHtcclxuICAgIHByb3RlY3RlZCBfc2tpcEJ0bk1vdmUgPSBmYWxzZTtcclxuICAgIHByb3RlY3RlZCBfaGlkZUZpcnN0ID0gdHJ1ZTtcclxuICAgIHByb3RlY3RlZCBfd3VkaWFuVHB5ZSA9IDI7XHJcbiAgICBwcm90ZWN0ZWQgX2VuZW15Q291bnQ6IExheWEuRm9udENsaXA7XHJcblxyXG4gICAgZ2V0IE5lZWRXdWRpYW4oKTogYm9vbGVhbiB7XHJcbiAgICAgICAgbGV0IHN3YyA9IFFwR2FtZVN3aXRjaC5HYW1lU3dpdGNoLmJhbm5lcld1ZGlhbiA9PSAxO1xyXG4gICAgICAgIGxldCB3dWRpYW5Td2l0Y2ggPSBRcEdhbWVTd2l0Y2guR2FtZVN3aXRjaC53dWRpYW5Td2l0Y2ggPT0gMTtcclxuICAgICAgICBjb25zb2xlLmxvZyhgd2Tlip/og73mgLvlvIDlhbN3dWRpYW5Td2l0Y2g6ICR7d3VkaWFuU3dpdGNofe+8jOWIhuW8gOWFs2Jhbm5lcld1ZGlhbu+8miR7c3djfWApO1xyXG4gICAgICAgIHJldHVybiBzd2MgJiYgd3VkaWFuU3dpdGNoO1xyXG4gICAgfVxyXG5cclxuICAgIE9uU2tpcEJ0bigpIHtcclxuICAgICAgICB0aGlzLkdldFJld2FyZCgpO1xyXG4gICAgfVxyXG5cclxuICAgIGFkZEV2ZW50KCkge1xyXG4gICAgICAgIHRoaXMuX3NraXBCdG4ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5PblNraXBCdG4pO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQXdha2UoKSB7XHJcbiAgICAgICAgc3VwZXIub25Bd2FrZSgpO1xyXG4gICAgICAgIHRoaXMuX21vbmV5ID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIk1vbmV5XCIpIGFzIExheWEuVUlDb21wb25lbnQ7XHJcbiAgICAgICAgdGhpcy5fZW5lbXlDb3VudCA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJEZXN0b3J5XCIpLmdldENoaWxkQnlOYW1lKFwiRW5lbXlDb3VudFwiKSBhcyBMYXlhLkZvbnRDbGlwO1xyXG4gICAgICAgIHRoaXMuX2VuZW15Q291bnQudmFsdWUgPSAoU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5FbmVteUtpbGxDb3VudCkgKyBcIi9cIiArIFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuRW5lbUNvdW50O1xyXG4gICAgICAgIHRoaXMuU2VuZEdhbWVSZXN1bHQoKTtcclxuICAgICAgICBpZiAoIUV4YW1pbmVNZ3IuQ2FuRG9TY3pfV3gpIHtcclxuICAgICAgICAgICAgdGhpcy5fbW9uZXkudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBHZXRSZXdhcmQoKSB7XHJcbiAgICAgICAgaWYgKCFFeGFtaW5lTWdyLkNhbkRvU2N6X1d4KSB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2VWaWV3KCk7XHJcbiAgICAgICAgICAgIEdhbWVNZ3JfY3NqYy5nZXRJbnN0YW5jZSgpLkNyZWF0TmV4dEdhbWVTY2VuZSgpO1xyXG4gICAgICAgICAgICBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5vcGVuVmlld19jc2pjKFZpZXdEZWZfY3NqYy5NYWluR2FtZVZpZXcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdGhpcy5fc2tpcEJ0bi5tb3VzZUVuYWJsZWQgPSBmYWxzZTtcclxuICAgICAgICAgICAgbGV0IHAgPSBuZXcgTGF5YS5Qb2ludCgxMDAsIDEwMCk7XHJcbiAgICAgICAgICAgIHRoaXMuX21vbmV5LmxvY2FsVG9HbG9iYWwocCwgZmFsc2UpO1xyXG4gICAgICAgICAgICBVc2VyX2NzamMuYWRkTW9uZXlfY3NqYyg1MDAsIHApO1xyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMTUwMCwgdGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jbG9zZVZpZXcoKTtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGDlpb3lj4vng63njqkke0V4YW1pbmVNZ3IuQ2FuRG9TY3pfV3h9LOW8gOWFsyR7UXBHYW1lU3dpdGNoLkdhbWVTd2l0Y2guaW5kZXhQYW5lbCA9PSAxfWApO1xyXG4gICAgICAgICAgICAgICAgaWYgKEV4YW1pbmVNZ3IuQ2FuRG9TY3pfV3ggJiYgUXBHYW1lU3dpdGNoLkdhbWVTd2l0Y2guaW5kZXhQYW5lbCA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMub3BlblZpZXdfY3NqYyhWaWV3RGVmX2NzamMuRnJpZW5kRXhwb3J0Vmlldyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgICAgICBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5vcGVuVmlld19jc2pjKFZpZXdEZWZfY3NqYy5IRXhwb3J0MkFkVmlldyk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBfbW9uZXk6IExheWEuVUlDb21wb25lbnQ7XHJcblxyXG4gICAgU2VuZEdhbWVSZXN1bHQoKSB7XHJcbiAgICAgICAgVG1BUEkuU2VuZEV2ZW50KFwiR2FtZVJlc3VsdFwiLCB7IExldmVsOiBVc2VyX2NzamMuZ2V0TGV2ZU51bV9jc2pjKCksIFJlc3VsdDogMSB9KTtcclxuICAgIH1cclxufSIsImltcG9ydCBWaWV3QmFzZV9jc2pjIGZyb20gXCIuLi8uLi9WaWV3L1ZpZXdCYXNlXCI7XHJcbmltcG9ydCBTY2VuZU1ncl9jc2NqIGZyb20gXCIuLi8uLi9TY3JpcHRzL0dhbWVDb3JlL1NjZW5lTWdyXCI7XHJcbmltcG9ydCBTb3VuZE1ncl9jc2pjIGZyb20gXCIuLi8uLi9NZ3IvU291bmRNZ3JcIjtcclxuaW1wb3J0IEV2ZW50TWdyX2NzamMgZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50TWdyXCI7XHJcbmltcG9ydCB7IEV2ZW50RGVmX2NzamMgfSBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnREZWZcIjtcclxuaW1wb3J0IFZpZXdNZ3JfY3NqYywgeyBWaWV3RGVmX2NzamMgfSBmcm9tIFwiLi4vLi4vTWdyL1ZpZXdNZ3JcIjtcclxuaW1wb3J0IFVzZXJfY3NqYyBmcm9tIFwiLi4vLi4vVXNlci9Vc2VyXCI7XHJcbmltcG9ydCBUbUFQSSBmcm9tIFwiLi4vLi4vVG1BUEkvVG1BUElcIjtcclxuaW1wb3J0IEV4YW1pbmVNZ3IgZnJvbSBcIi4uLy4uL0NvbW1vbUFQSS9FeGFtaW5lTWdyXCI7XHJcbmltcG9ydCBDYWNoZWRXWEJhbm5lckFkX2NzamMgZnJvbSBcIi4uLy4uL1BsYXRmb3JtQXBpL0NhY2hlZFdYQmFubmVyQWRcIjtcclxuaW1wb3J0IENhbWVyYTJVSSBmcm9tIFwiLi4vLi4vU2NyaXB0cy9HYW1lQ29yZS9DYW1lcmEyVUlcIjtcclxuaW1wb3J0IHsgUGxheWVyVHlwZSB9IGZyb20gXCIuLi8uLi9TY3JpcHRzL0dhbWVDb3JlL0VudW1zXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBJbkdhbWVWaWV3IGV4dGVuZHMgVmlld0Jhc2VfY3NqYyB7XHJcbiAgICBwcml2YXRlIF9tb3JlR2FtZUJ0bjogTGF5YS5JbWFnZTtcclxuICAgIHByaXZhdGUgX2dhbWVPdmVyOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBwcml2YXRlIF9jb21wbGV0ZTogTGF5YS5JbWFnZTtcclxuICAgIHByaXZhdGUgX2ZhaWw6IExheWEuSW1hZ2U7XHJcbiAgICBwcml2YXRlIF90dXRvcmlhbEJ0bjogTGF5YS5JbWFnZTtcclxuICAgIHByaXZhdGUgX3Byb3M6TGF5YS5JbWFnZTtcclxuICAgIHByaXZhdGUgX3Byb3NTcGVlZE9mOkxheWEuSW1hZ2U7XHJcblxyXG4gICAgcHJpdmF0ZSBfcGxheWVyUHJvczpMYXlhLkltYWdlO1xyXG4gICAgcHJpdmF0ZSBfcGxheWVyUHJvc1NwZWVkT2Y6TGF5YS5JbWFnZTtcclxuICAgIHByaXZhdGUgX3NlbGVjZXRLaW5kID0gMFxyXG5cclxuICAgIG9uQXdha2UoKSB7XHJcbiAgICAgICAgdGhpcy5fbW9yZUdhbWVCdG4gPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiTW9yZUdhbWVCdG5cIikgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICB0aGlzLl90dXRvcmlhbEJ0biA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJUdXRvcmlhbEJ0blwiKSBhcyBMYXlhLkltYWdlO1xyXG4gICAgICAgIHRoaXMuX2NvbXBsZXRlID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkNvbXBsZXRlXCIpIGFzIExheWEuSW1hZ2U7XHJcbiAgICAgICAgdGhpcy5fcHJvcyA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJwcm9ncmVzc1wiKSBhcyBMYXlhLkltYWdlO1xyXG4gICAgICAgIHRoaXMuX3Byb3NTcGVlZE9mID0gdGhpcy5fcHJvcy5nZXRDaGlsZEF0KDApIGFzIExheWEuSW1hZ2U7XHJcbiAgICAgICAgdGhpcy5fcGxheWVyUHJvcyA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJQbGF5ZXJwcm9ncmVzc1wiKSBhcyBMYXlhLkltYWdlO1xyXG4gICAgICAgIHRoaXMuX3BsYXllclByb3NTcGVlZE9mID0gdGhpcy5fcGxheWVyUHJvcy5nZXRDaGlsZEF0KDApIGFzIExheWEuSW1hZ2U7XHJcblxyXG4gICAgICAgIHRoaXMuX3Byb3MudmlzaWJsZSA9ZmFsc2VcclxuICAgICAgICB0aGlzLl9wbGF5ZXJQcm9zLnZpc2libGUgPWZhbHNlXHJcblxyXG4gICAgICAgIHRoaXMuX2ZhaWwgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiRmFpbFwiKSBhcyBMYXlhLkltYWdlO1xyXG4gICAgICAgIHRoaXMuX2NvbXBsZXRlLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLl9mYWlsLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICBpZiAoRXhhbWluZU1nci5DYW5Eb1Njel9XeCkge1xyXG4gICAgICAgICAgICB0aGlzLlNob3dCYW5uZXIoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgYWRkRXZlbnQoKSB7XHJcbiAgICAgICAgdGhpcy5fdHV0b3JpYWxCdG4ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5PblR1dG9yaWFsQnRuKTtcclxuICAgICAgICB0aGlzLl9tb3JlR2FtZUJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLk9uTW9yZUdhbWVCdG4pO1xyXG4gICAgICAgIEV2ZW50TWdyX2NzamMucmVnRXZlbnRfY3NqYyhFdmVudERlZl9jc2pjLlNlbGVjdEhlcm8sIHRoaXMsIHRoaXMuT25TZWxlY3RIZXJvKTtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlZ0V2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5Cb3NzVmlzaWJsZSwgdGhpcywgdGhpcy5vbkJvc3NWaXNpYmxlKTtcclxuXHJcblxyXG4gICAgfVxyXG4gICAgcmVtb3ZlRXZlbnQoKXtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlbW92ZUV2ZW50X2NzamMoRXZlbnREZWZfY3NqYy5TZWxlY3RIZXJvLCB0aGlzLCB0aGlzLk9uU2VsZWN0SGVybyk7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5yZW1vdmVFdmVudF9jc2pjKEV2ZW50RGVmX2NzamMuQm9zc1Zpc2libGUsIHRoaXMsIHRoaXMub25Cb3NzVmlzaWJsZSk7XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqIOaAqueJqeWHuueOsFxyXG4gICAgICovXHJcbiAgICBvbkJvc3NWaXNpYmxlKClcclxuICAgIHtcclxuICAgICAgICB0aGlzLl9wcm9zLnZpc2libGUgPXRydWVcclxuICAgICAgICB0aGlzLl9wbGF5ZXJQcm9zLnZpc2libGUgPXRydWVcclxuXHJcbiAgICB9XHJcbiAgICAvKirnm5HlkKzpgInmi6noi7Hpm4QgKi9cclxuICAgIE9uU2VsZWN0SGVybygpe1xyXG4gICAgICAgIGlmKFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuUGxheWVyS2luZCA9PSBQbGF5ZXJUeXBlLktpbmdrb25nKVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5fcGxheWVyUHJvc1NwZWVkT2Yuc2tpbiA9IFwiR2FtZVBsYXlpbmcvYm9zc194dWV0aWFvX2ppbmdhbmcucG5nXCI7XHJcbiAgICAgICAgICAgICh0aGlzLl9wbGF5ZXJQcm9zU3BlZWRPZi5nZXRDaGlsZEF0KDApIGFzIExheWEuSW1hZ2UpLnNraW4gPSBcIkdhbWVQbGF5aW5nL3RvdXhpYW5nX2ppbmdhbmcucG5nXCI7XHJcblxyXG4gICAgICAgICAgICB0aGlzLl9wcm9zU3BlZWRPZi5za2luID0gXCJHYW1lUGxheWluZy9ib3NzX3h1ZXRpYW9fbG9uZy5wbmdcIjtcclxuICAgICAgICAgICAgKHRoaXMuX3Byb3NTcGVlZE9mLmdldENoaWxkQXQoMCkgYXMgTGF5YS5JbWFnZSkuc2tpbiA9IFwiR2FtZVBsYXlpbmcvdG91eGlhbmdfbG9uZy5wbmdcIjtcclxuICAgICAgICAgICAgdGhpcy5fc2VsZWNldEtpbmQgPSAwXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2V7XHJcbiAgICAgICAgICAgIHRoaXMuX3BsYXllclByb3NTcGVlZE9mLnNraW4gPSBcIkdhbWVQbGF5aW5nL2Jvc3NfeHVldGlhb19sb25nLnBuZ1wiO1xyXG4gICAgICAgICAgICAodGhpcy5fcGxheWVyUHJvc1NwZWVkT2YuZ2V0Q2hpbGRBdCgwKSBhcyBMYXlhLkltYWdlKS5za2luID0gXCJHYW1lUGxheWluZy90b3V4aWFuZ19sb25nLnBuZ1wiO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5fcHJvc1NwZWVkT2Yuc2tpbiA9IFwiR2FtZVBsYXlpbmcvYm9zc194dWV0aWFvX2ppbmdhbmcucG5nXCI7XHJcbiAgICAgICAgICAgICh0aGlzLl9wcm9zU3BlZWRPZi5nZXRDaGlsZEF0KDApIGFzIExheWEuSW1hZ2UpLnNraW4gPSBcIkdhbWVQbGF5aW5nL3RvdXhpYW5nX2ppbmdhbmcucG5nXCI7XHJcbiAgICAgICAgICAgIHRoaXMuX3NlbGVjZXRLaW5kID0gMVxyXG4gICAgICAgIH1cclxuXHJcblxyXG4gICAgfVxyXG5cclxuICAgIG9uU3RhcnQoKSB7XHJcbiAgICAgICAgU291bmRNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLnBsYXlCR01fY3NqYyhcIkJnbTJcIik7XHJcbiAgICAgICAgaWYgKFVzZXJfY3NqYy5nZXRMZXZlTnVtX2NzamMoKSA9PSAxKSB7XHJcbiAgICAgICAgICAgIFRtQVBJLlNlbmRFdmVudChcIkdhbWVTdGVwXCIsIHsgU3RlcDogMiB9KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gU2NlbmUzZE1nci5DYW1lcmEudmlld3BvcnQucHJvamVjdChTY2VuZTNkTWdyLk1vbnN0ZXIudHJhbnNmb3JtLnBvc2l0aW9uLCBTY2VuZTNkTWdyLkNhbWVyYS5wcm9qZWN0aW9uVmlld01hdHJpeCwgdGhpcy5vdXRwb3MpXHJcbiAgICAgICAgLy8gc3ViTnVtLnBvcyh0aGlzLm91dHBvcy54IC8gTGF5YS5zdGFnZS5jbGllbnRTY2FsZVggLHRoaXMub3V0cG9zLnkgLyBMYXlhLnN0YWdlLmNsaWVudFNjYWxlWSlcclxuICAgIH1cclxuXHJcbiAgICBPbk1vcmVHYW1lQnRuKCkge1xyXG4gICAgICAgIFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuUGF1c2VHYW1lKCk7XHJcbiAgICAgICAgVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMub3BlblZpZXdfY3NqYyhWaWV3RGVmX2NzamMuSEV4cG9ydDFBZFZpZXcpO1xyXG4gICAgfVxyXG5cclxuICAgIE9uVHV0b3JpYWxCdG4oKSB7XHJcbiAgICAgICAgU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5QYXVzZUdhbWUoKTtcclxuICAgICAgICBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5vcGVuVmlld19jc2pjKFZpZXdEZWZfY3NqYy5UdXRvcmlhbFZpZXcpO1xyXG4gICAgfVxyXG5cclxuICAgIG9uU2hvdygpIHtcclxuICAgICAgICBzdXBlci5vblNob3coKTtcclxuICAgICAgICAvLyBTY2VuZU1ncl9jc2NqLkluc3RhbmNlLlN0YXJ0R2FtZSgpO1xyXG5cclxuICAgICAgICBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5vcGVuVmlld19jc2pjKFZpZXdEZWZfY3NqYy5TZWxlY3RIZXJvKTtcclxuXHJcbiAgICAgICAgdGhpcy5fcGxheWVyUHJvc1NwZWVkT2Yud2lkdGggPSA0MDA7XHJcblxyXG4gICAgICAgIHRoaXMuX3Byb3NTcGVlZE9mLndpZHRoID0gNDAwO1xyXG4gICAgfVxyXG5cclxuICAgIG9uQ2xvc2VFdmVudCA9ICgpID0+IHtcclxuICAgICAgICBDYWNoZWRXWEJhbm5lckFkX2NzamMuaGlkZV9jc2pjKCk7XHJcbiAgICAgICAgU291bmRNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLnN0b3BCR01fY3NqYygpO1xyXG4gICAgICAgIC8vIFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuUGxheWVyLlN0b3BTb3VuZCgpO1xyXG4gICAgICAgIGlmIChVc2VyX2NzamMuZ2V0TGV2ZU51bV9jc2pjKCkgPT0gMSkge1xyXG4gICAgICAgICAgICBUbUFQSS5TZW5kRXZlbnQoXCJHYW1lU3RlcFwiLCB7IFN0ZXA6IDMgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uVXBkYXRlKCkge1xyXG4gICAgICAgIC8vIGNvbnNvbGUubG9nKFwiYm9zcy0tLS0tLS0tLS0tLS1cIixTY2VuZU1ncl9jc2NqLkluc3RhbmNlLkJvc3MpXHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCItKy0tLS0tLS0tLS0tLS0tLS0tLS0tLS3ni4LngrlcIixWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5nZXRWaWV3X2NzamMoVmlld0RlZl9jc2pjLktkQmFubmVyVmlldykpXHJcbiAgICAgICAgLy8gVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMuY2xvc2VWaWV3X2NzamMoVmlld0RlZl9jc2pjLktkQmFubmVyVmlldyk7XHJcblxyXG4gICAgICAgIGlmKCB0aGlzLl9wcm9zLnZpc2libGUgPT10cnVlJiZTY2VuZU1ncl9jc2NqLkluc3RhbmNlLkJvc3MpXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS0tLS3ot5/pmo9ib3NzXCIpXHJcbiAgICAgICAgICAgIGxldCBjbG9zZURpcyA9IC0xO1xyXG4gICAgICAgICAgICBsZXQgY2VudCA9IG5ldyBMYXlhLlBvaW50KExheWEuc3RhZ2Uud2lkdGggLyAyLCBMYXlhLnN0YWdlLmhlaWdodCAvIDIpO1xyXG4gICAgICAgICAgICBsZXQgcG9zID0gU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5Cb3NzU3ByaXRlM0QudHJhbnNmb3JtLnBvc2l0aW9uLmNsb25lKCk7XHJcbiAgICAgICAgICAgIHBvcy55ICs9IDI7XHJcbiAgICAgICAgICAgIHBvcyA9IENhbWVyYTJVSS5Xb3JsZFRvU2NyZWVuMihTY2VuZU1ncl9jc2NqLkluc3RhbmNlLkNhbWVyYSwgKFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuQm9zc1Nwcml0ZTNELmdldENoaWxkQXQodGhpcy5fc2VsZWNldEtpbmQpIGFzIExheWEuU3ByaXRlM0QpLnRyYW5zZm9ybS5wb3NpdGlvbilcclxuICAgICAgICAgICAgdGhpcy5fcHJvcy54ID0gcG9zLngtMzAwXHJcbiAgICAgICAgICAgIHRoaXMuX3Byb3MueSA9IHBvcy55LTEwMFxyXG4gICAgICAgICAgICB0aGlzLm9uQ2hlY2tQcm9zKClcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLl9nYW1lT3ZlciB8fCBTY2VuZU1ncl9jc2NqLkluc3RhbmNlLkdhbWVPdmVyID09IDApIHJldHVybjtcclxuXHJcbiAgICAgICAgdGhpcy5fZ2FtZU92ZXIgPSB0cnVlO1xyXG4gICAgICAgIGlmIChTY2VuZU1ncl9jc2NqLkluc3RhbmNlLkdhbWVPdmVyID09IDEpIHtcclxuICAgICAgICAgICAgdGhpcy5fY29tcGxldGUudmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYgKFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuR2FtZU92ZXIgPT0gLTEpIHtcclxuICAgICAgICAgICAgdGhpcy5fZmFpbC52aXNpYmxlID0gdHJ1ZTtcclxuICAgICAgICB9XHJcbiAgICAgICAgTGF5YS50aW1lci5vbmNlKDMwMDAsIHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgaWYgKFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuR2FtZU92ZXIgPT0gMSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5HYW1lT3Zlcih0cnVlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIGlmIChTY2VuZU1ncl9jc2NqLkluc3RhbmNlLkdhbWVPdmVyID09IC0xKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLkdhbWVPdmVyKGZhbHNlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgb25DaGVja1Byb3MoKVxyXG4gICAge1xyXG4gICAgICAgIHRoaXMuX3BsYXllclByb3NTcGVlZE9mLndpZHRoID0gNDAwKiBTY2VuZU1ncl9jc2NqLkluc3RhbmNlLlBsYXllci5TdGF0ZS5IcC9TY2VuZU1ncl9jc2NqLkluc3RhbmNlLlBsYXllci5TdGF0ZS5IcFN1bVxyXG4gICAgICAgIHRoaXMuX3Byb3NTcGVlZE9mLndpZHRoID0gNDAwKiBTY2VuZU1ncl9jc2NqLkluc3RhbmNlLkJvc3MuU3RhdGUuSHAvU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5Cb3NzLlN0YXRlLkhwU3VtXHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coXCItLS0tLS0tLS0tLS0tLS0tLS0tLS1ib3Nzc+ihgOmHj1wiLFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuQm9zcy5TdGF0ZS5IcClcclxuICAgICAgICBpZihTY2VuZU1ncl9jc2NqLkluc3RhbmNlLkJvc3MuU3RhdGUuSHA8PTApXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBTY2VuZU1ncl9jc2NqLkluc3RhbmNlLkdhbWVPdmVyID0gMVxyXG4gICAgICAgIH1cclxuICAgICAgICBpZihTY2VuZU1ncl9jc2NqLkluc3RhbmNlLlBsYXllci5TdGF0ZS5IcDw9MClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIFNjZW5lTWdyX2NzY2ouSW5zdGFuY2UuR2FtZU92ZXIgPSAtMVxyXG4gICAgICAgIH1cclxuXHJcbiAgICB9XHJcbiAgICBHYW1lT3Zlcih3aW46IGJvb2xlYW4pIHtcclxuICAgICAgICB0aGlzLmNsb3NlVmlldygpO1xyXG4gICAgICAgIGlmIChFeGFtaW5lTWdyLkNhbkRvU2N6X1d4KSB7XHJcbiAgICAgICAgICAgIGxldCBkYXRhID0geyBXaW46IGZhbHNlIH07XHJcbiAgICAgICAgICAgIGlmICh3aW4pIHtcclxuICAgICAgICAgICAgICAgIGRhdGEuV2luID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGRhdGEuV2luID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMub3BlblZpZXdfY3NqYyhWaWV3RGVmX2NzamMuSEV4cG9ydDFBZFZpZXcsIGRhdGEpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKHdpbikge1xyXG4gICAgICAgICAgICAgICAgVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMub3BlblZpZXdfY3NqYyhWaWV3RGVmX2NzamMuR2FtZU92ZXJXaW5WaWV3KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLm9wZW5WaWV3X2NzamMoVmlld0RlZl9jc2pjLkdhbWVPdmVyRmFpbFZpZXcpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIFNob3dCYW5uZXIoKSB7XHJcbiAgICAgICAgbGV0IHJkID0gTWF0aC5yYW5kb20oKSAqIDUwMDA7XHJcbiAgICAgICAgTGF5YS50aW1lci5vbmNlKDE1MDAwICsgcmQsIHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgLy8gbGV0IHJkID0gTWF0aC5yYW5kb20oKTtcclxuICAgICAgICAgICAgLy8gaWYgKHJkIDw9IDAuMzMpIHtcclxuICAgICAgICAgICAgLy8gICAgIHJkID0gLTFcclxuICAgICAgICAgICAgLy8gfVxyXG4gICAgICAgICAgICAvLyBlbHNlIGlmIChyZCA+IDAuMzMgJiYgcmQgPD0gMC42Nikge1xyXG4gICAgICAgICAgICAvLyAgICAgcmQgPSAwO1xyXG4gICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgIC8vIGVsc2Uge1xyXG4gICAgICAgICAgICAvLyAgICAgcmQgPSAxO1xyXG4gICAgICAgICAgICAvLyB9XHJcbiAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5jaGFuZ2VTaG93X2NzamMoMCk7XHJcbiAgICAgICAgICAgIExheWEudGltZXIub25jZSgyNTAwLCB0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBDYWNoZWRXWEJhbm5lckFkX2NzamMuaGlkZV9jc2pjKCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlNob3dCYW5uZXIoKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG59IiwiaW1wb3J0IFZpZXdCYXNlX2NzamMgZnJvbSBcIi4uL1ZpZXdCYXNlXCI7XHJcbmltcG9ydCBWaWV3TWdyX2NzamMsIHsgVmlld0RlZl9jc2pjIH0gZnJvbSBcIi4uLy4uL01nci9WaWV3TWdyXCI7XHJcbmltcG9ydCBTb3VuZE1ncl9jc2pjIGZyb20gXCIuLi8uLi9NZ3IvU291bmRNZ3JcIjtcclxuaW1wb3J0IEV4YW1pbmVNZ3IgZnJvbSBcIi4uLy4uL0NvbW1vbUFQSS9FeGFtaW5lTWdyXCI7XHJcbmltcG9ydCBUbUFQSSBmcm9tIFwiLi4vLi4vVG1BUEkvVG1BUElcIjtcclxuaW1wb3J0IFVzZXJfY3NqYyBmcm9tIFwiLi4vLi4vVXNlci9Vc2VyXCI7XHJcbmltcG9ydCBDYWNoZWRXWEJhbm5lckFkX2NzamMgZnJvbSBcIi4uLy4uL1BsYXRmb3JtQXBpL0NhY2hlZFdYQmFubmVyQWRcIjtcclxuaW1wb3J0IFFwR2FtZVN3aXRjaCBmcm9tIFwiLi4vLi4vUXBBUEkvUXBHYW1lU3dpdGNoXCI7XHJcbmltcG9ydCBXWEFQSV9jc2pjIGZyb20gXCIuLi8uLi9QbGF0Zm9ybUFwaS9XWEFQSVwiO1xyXG5pbXBvcnQgR2FtZU1ncl9jc2pjIGZyb20gXCIuLi8uLi9TY3JpcHRzL0dhbWVNZ3JcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1haW5HYW1lVmlldyBleHRlbmRzIFZpZXdCYXNlX2NzamMge1xyXG4gICAgcHJpdmF0ZSBfYW5pWm9uZTogTGF5YS5VSUNvbXBvbmVudDtcclxuICAgIHByaXZhdGUgX2FuaTE6IExheWEuSW1hZ2U7XHJcbiAgICBwcml2YXRlIF9hbmkyOiBMYXlhLkltYWdlO1xyXG4gICAgcHJpdmF0ZSBfc3RhcnRCdG46IExheWEuSW1hZ2U7XHJcbiAgICBwcml2YXRlIF9tb3JlR2FtZUJ0bjogTGF5YS5JbWFnZTtcclxuICAgIHByaXZhdGUgX2xvb3BBZDogTGF5YS5VSUNvbXBvbmVudDtcclxuICAgIGNhbmluID10cnVlXHJcblxyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICB0aGlzLl9hbmlab25lID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkFuaVpvbmVcIikgYXMgTGF5YS5VSUNvbXBvbmVudDtcclxuICAgICAgICB0aGlzLl9hbmkxID0gdGhpcy5fYW5pWm9uZS5nZXRDaGlsZEJ5TmFtZShcIlJvYm90XCIpIGFzIExheWEuSW1hZ2U7XHJcbiAgICAgICAgdGhpcy5fYW5pMiA9IHRoaXMuX2FuaVpvbmUuZ2V0Q2hpbGRCeU5hbWUoXCJDYXJcIikgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICAvLyB0aGlzLl9hbmkxLnNraW4gPSBcInN1YlJlcy9pbWFnZS9pbWdfamlxaXJlbi5wbmdcIjtcclxuICAgICAgICB0aGlzLl9sb29wQWQgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiQm90dG9tTG9vcEFkXCIpIGFzIExheWEuVUlDb21wb25lbnQ7XHJcbiAgICAgICAgLy8gdGhpcy5fYW5pMi5za2luID0gXCJzdWJSZXMvaW1hZ2UvaW1nX2NoZS5wbmdcIjtcclxuICAgICAgICAvLyBpZiAoIUV4YW1pbmVNZ3IuQ2FuRG9TY3pfV3gpIHtcclxuICAgICAgICAvLyAgICAgdGhpcy5fYW5pMS52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgLy8gfVxyXG4gICAgICAgIHRoaXMuX3N0YXJ0QnRuID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlN0YXJ0QnRuXCIpIGFzIExheWEuSW1hZ2U7XHJcbiAgICAgICAgdGhpcy5fbW9yZUdhbWVCdG4gPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiTW9yZUdhbWVCdG5cIikgYXMgTGF5YS5JbWFnZTtcclxuICAgIH1cclxuXHJcbiAgICBvblN0YXJ0KCkge1xyXG4gICAgICAgIGlmIChVc2VyX2NzamMuZ2V0TGV2ZU51bV9jc2pjKCkgPT0gMSkge1xyXG4gICAgICAgICAgICBUbUFQSS5TZW5kRXZlbnQoXCJHYW1lU3RlcFwiLCB7IFN0ZXA6IDEgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xyXG4gICAgICAgICAgICB2YXIgc3lzSW5mbyA9IExheWEuQnJvd3Nlci53aW5kb3dbXCJ3eFwiXS5nZXRTeXN0ZW1JbmZvU3luYygpO1xyXG4gICAgICAgICAgICB2YXIgc3cgPSBzeXNJbmZvLnNjcmVlbldpZHRoO1xyXG4gICAgICAgICAgICB2YXIgc2ggPSBzeXNJbmZvLnNjcmVlbkhlaWdodDtcclxuICAgICAgICAgICAgdmFyIGRwciA9IExheWEuc3RhZ2Uud2lkdGggLyBzdztcclxuICAgICAgICAgICAgY29uc29sZS5sb2coc3lzSW5mby5zY3JlZW5XaWR0aCwgc3lzSW5mby5zY3JlZW5IZWlnaHQpO1xyXG4gICAgICAgICAgICB0aGlzLl9sb29wQWQubGVmdCA9IExheWEuc3RhZ2Uud2lkdGggLSAoKHN3IC0gMzUwKSAqIGRwcik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9sb29wQWQubGVmdCA9IExheWEuc3RhZ2Uud2lkdGggLSAzNTA7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGFkZEV2ZW50KCkge1xyXG4gICAgICAgIHRoaXMuY2FuaW4gPSB0cnVlO1xyXG4gICAgICAgIHRoaXMuX3N0YXJ0QnRuLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuT25TdGFydEJ0bik7XHJcbiAgICAgICAgdGhpcy5fbW9yZUdhbWVCdG4ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5Pbk1vcmVHYW1lQnRuKTtcclxuICAgIH1cclxuXHJcbiAgICBPblN0YXJ0QnRuKCkge1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25NaW5pR2FtZSkge1xyXG4gICAgICAgICAgICBpZiAoRXhhbWluZU1nci5DYW5Eb0tkX1d4ICYmIFFwR2FtZVN3aXRjaC5jdXN0b21rZXkuc3RhcnRWaWRlbyA9PSAxKSB7XHJcbiAgICAgICAgICAgICAgICBXWEFQSV9jc2pjLnNob3dSZXdhcmRlZFZpZGVvQWRfY3NqYygoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5TdGFydEdhbWUoKTtcclxuICAgICAgICAgICAgICAgIH0sICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLlN0YXJ0R2FtZSgpO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuU3RhcnRHYW1lKCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuU3RhcnRHYW1lKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG4gICAgU3RhcnRHYW1lKCkge1xyXG4gICAgICAgIGlmKHRoaXMuY2FuaW4gPT0gZmFsc2UpXHJcbiAgICAgICAgcmV0dXJuIDtcclxuICAgICAgICB0aGlzLmNsb3NlVmlldygpO1xyXG5cclxuICAgICAgICB0aGlzLmNhbmluID0gZmFsc2VcclxuICAgICAgICBjb25zb2xlLmxvZyhcIi0tLS0tLS0tLS0tLS3ov5vlhaXmuLjmiI/nlYzpnaJcIilcclxuICAgICAgICAvLyBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5vcGVuVmlld19jc2pjKFZpZXdEZWZfY3NqYy5LZEJhbm5lclZpZXcpO1xyXG4gICAgICAgIC8vIHJldHVyblxyXG4gICAgICAgIGlmIChFeGFtaW5lTWdyLkNhbkRvU2N6X1d4ICYmIFFwR2FtZVN3aXRjaC5HYW1lU3dpdGNoLmJhbm5lckt1YW5nZGlhbjEgPT0gMSkge1xyXG4gICAgICAgICAgICBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5vcGVuVmlld19jc2pjKFZpZXdEZWZfY3NqYy5LZEJhbm5lclZpZXcpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMub3BlblZpZXdfY3NqYyhWaWV3RGVmX2NzamMuSW5HYW1lVmlldyk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIE9uTW9yZUdhbWVCdG4oKSB7XHJcbiAgICAgICAgdGhpcy5jbG9zZVZpZXcoKTtcclxuICAgICAgICBWaWV3TWdyX2NzamMuaW5zdGFuY2VfY3NqYy5vcGVuVmlld19jc2pjKFZpZXdEZWZfY3NqYy5IRXhwb3J0MUFkVmlldyk7XHJcbiAgICAgICAgLy8gVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMub3BlblZpZXdfY3NqYyhWaWV3RGVmX2NzamMuRnJpZW5kRXhwb3J0Vmlldyk7XHJcbiAgICB9XHJcblxyXG4gICAgb25TaG93KCkge1xyXG4gICAgICAgIHN1cGVyLm9uU2hvdygpO1xyXG4gICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5jaGFuZ2VTaG93X2NzamMoLTEpO1xyXG4gICAgICAgIFNvdW5kTWdyX2NzamMuaW5zdGFuY2VfY3NqYy5wbGF5QkdNX2NzamMoXCJCZ20yXCIpO1xyXG4gICAgICAgIExheWEudGltZXIub25jZSg1MDAsIHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLl9hbmkxLCB7IHJpZ2h0OiAwIH0sIDUwMCk7XHJcbiAgICAgICAgICAgIExheWEuVHdlZW4udG8odGhpcy5fYW5pMiwgeyBsZWZ0OiAtNTEgfSwgNTAwKTtcclxuICAgICAgICB9KVxyXG4gICAgfVxyXG5cclxuICAgIG9uQ2xvc2VFdmVudCA9ICgpID0+IHtcclxuICAgICAgICBHYW1lTWdyX2NzamMuZ2V0SW5zdGFuY2UoKS5GaXJzdEFkID0gdHJ1ZTtcclxuICAgICAgICBDYWNoZWRXWEJhbm5lckFkX2NzamMuaGlkZV9jc2pjKCk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgVmlld0Jhc2VfY3NqYyBmcm9tIFwiLi4vVmlld0Jhc2VcIjtcclxuaW1wb3J0IFNjZW5lTWdyX2NzY2ogZnJvbSBcIi4uLy4uL1NjcmlwdHMvR2FtZUNvcmUvU2NlbmVNZ3JcIjtcclxuaW1wb3J0IHsgUGxheWVyVHlwZSB9IGZyb20gXCIuLi8uLi9TY3JpcHRzL0dhbWVDb3JlL0VudW1zXCI7XHJcbmltcG9ydCBFdmVudE1ncl9jc2pjIGZyb20gXCIuLi8uLi9FdmVudC9FdmVudE1nclwiO1xyXG5pbXBvcnQgeyBFdmVudERlZl9jc2pjIH0gZnJvbSBcIi4uLy4uL0V2ZW50L0V2ZW50RGVmXCI7XHJcbmltcG9ydCBWaWV3TWdyX2NzamMsIHsgVmlld0RlZl9jc2pjIH0gZnJvbSBcIi4uLy4uL01nci9WaWV3TWdyXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTZWxlY3RIZXJvIGV4dGVuZHMgVmlld0Jhc2VfY3NqYyB7XHJcblxyXG4gICAgX2hlcm9TbHRfMCA6TGF5YS5JbWFnZSA9IG51bGxcclxuICAgIF9oZXJvU2x0XzEgOkxheWEuSW1hZ2UgPSBudWxsXHJcbiAgICBfc2VsZWN0OkxheWEuSW1hZ2UgPSBudWxsXHJcbiAgICBfc3RhcnRCdG46TGF5YS5TcHJpdGUgPSBudWxsXHJcblxyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICB0aGlzLl9oZXJvU2x0XzAgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiaGVybzFcIikgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICB0aGlzLl9oZXJvU2x0XzEgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiaGVybzJcIikgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICB0aGlzLl9zZWxlY3QgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwic2VsZWN0XCIpIGFzIExheWEuSW1hZ2U7XHJcbiAgICAgICAgdGhpcy5fc3RhcnRCdG4gPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwic3RhcnRcIikgYXMgTGF5YS5JbWFnZTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRFdmVudCgpIHtcclxuICAgICAgICB0aGlzLl9oZXJvU2x0XzAub24oTGF5YS5FdmVudC5DTElDSywgdGhpcyx0aGlzLmNsaWNrS2luZ0tvbmcpO1xyXG4gICAgICAgIHRoaXMuX2hlcm9TbHRfMS5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLHRoaXMuY2xpY2tUUmV4KTtcclxuICAgICAgICB0aGlzLl9zdGFydEJ0bi5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLHRoaXMub25QbGF5R2FtZSk7XHJcblxyXG4gICAgICAgIC8vIHRoaXMuY2xpY2tLaW5nS29uZygpXHJcbiAgICB9XHJcbiAgICByZW1vdmVFdmVudCgpXHJcbiAgICB7XHJcbiAgICAgICAgdGhpcy5faGVyb1NsdF8wLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLHRoaXMuY2xpY2tLaW5nS29uZyk7XHJcbiAgICAgICAgdGhpcy5faGVyb1NsdF8xLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLHRoaXMuY2xpY2tUUmV4KTtcclxuICAgICAgICB0aGlzLl9zdGFydEJ0bi5vZmYoTGF5YS5FdmVudC5DTElDSywgdGhpcyx0aGlzLm9uUGxheUdhbWUpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBjbGlja0tpbmdLb25nKClcclxuICAgIHtcclxuICAgICAgICBTY2VuZU1ncl9jc2NqLkluc3RhbmNlLlBsYXllcktpbmQgPSBQbGF5ZXJUeXBlLktpbmdrb25nXHJcbiAgICAgICAgU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5Cb3NzS2luZCA9IFBsYXllclR5cGUuVFJleFxyXG4gICAgICAgIHRoaXMuX3NlbGVjdC54ID0gdGhpcy5faGVyb1NsdF8wLnhcclxuICAgICAgICB0aGlzLm9uUGxheUdhbWUoKVxyXG4gICAgfVxyXG5cclxuICAgIGNsaWNrVFJleCgpXHJcbiAgICB7XHJcbiAgICAgICAgU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5QbGF5ZXJLaW5kID0gUGxheWVyVHlwZS5UUmV4XHJcbiAgICAgICAgU2NlbmVNZ3JfY3Njai5JbnN0YW5jZS5Cb3NzS2luZCA9IFBsYXllclR5cGUuS2luZ2tvbmdcclxuICAgICAgICB0aGlzLl9zZWxlY3QueCA9IHRoaXMuX2hlcm9TbHRfMS54XHJcbiAgICAgICAgdGhpcy5vblBsYXlHYW1lKClcclxuXHJcbiAgICB9XHJcbiAgICBvblBsYXlHYW1lKClcclxuICAgIHtcclxuICAgICAgICBTY2VuZU1ncl9jc2NqLkluc3RhbmNlLlN0YXJ0R2FtZSgpO1xyXG4gICAgICAgIHRoaXMuY2xvc2VWaWV3KCk7XHJcbiAgICAgICAgLy8gTGF5YS50aW1lci5mcmFtZU9uY2UoNSx0aGlzLCgpPT57XHJcbiAgICAgICAgLy8gICAgIFZpZXdNZ3JfY3NqYy5pbnN0YW5jZV9jc2pjLmNsb3NlVmlld19jc2pjKFZpZXdEZWZfY3NqYy5LZEJhbm5lclZpZXcpO1xyXG4gICAgICAgIC8vIH0pXHJcbiAgICAgICAgLy8gVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMuY2xvc2VWaWV3X2NzamMoVmlld0RlZl9jc2pjLktkQmFubmVyVmlldyk7XHJcblxyXG4gICAgICAgIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLlNlbGVjdEhlcm8pO1xyXG4gICAgICAgIFxyXG4gICAgfVxyXG5cclxuXHJcbiAgICAvLyBvblN0YXJ0KCkge1xyXG5cclxuICAgIC8vIH1cclxuXHJcbiAgXHJcbn0iLCJpbXBvcnQgVmlld0Jhc2VfY3NqYyBmcm9tIFwiLi4vVmlld0Jhc2VcIjtcclxuaW1wb3J0IFFwR2FtZVN3aXRjaCBmcm9tIFwiLi4vLi4vUXBBUEkvUXBHYW1lU3dpdGNoXCI7XHJcbmltcG9ydCBDYWNoZWRXWEJhbm5lckFkX2NzamMgZnJvbSBcIi4uLy4uL1BsYXRmb3JtQXBpL0NhY2hlZFdYQmFubmVyQWRcIjtcclxuaW1wb3J0IEV4YW1pbmVNZ3IgZnJvbSBcIi4uLy4uL0NvbW1vbUFQSS9FeGFtaW5lTWdyXCI7XHJcblxyXG5leHBvcnQgZGVmYXVsdCBhYnN0cmFjdCBjbGFzcyBXdWRpYW5WaWV3IGV4dGVuZHMgVmlld0Jhc2VfY3NqYyB7XHJcbiAgICBwcm90ZWN0ZWQgX3d1ZGlhblRweWUgPSAyO1xyXG4gICAgcHJvdGVjdGVkIF9oaWRlRmlyc3QgPSBmYWxzZTtcclxuICAgIHByb3RlY3RlZCBfc2tpcEJ0bk1vdmU6IEJvb2xlYW4gPSB0cnVlO1xyXG4gICAgcHJvdGVjdGVkIF9iYW5uZXJTaG93VGltZTogbnVtYmVyID0gMDtcclxuICAgIHByb3RlY3RlZCBfc2tpcEJ0bjogTGF5YS5JbWFnZTtcclxuICAgIGFic3RyYWN0IGdldCBOZWVkV3VkaWFuKCk6IGJvb2xlYW47XHJcblxyXG4gICAgb25Bd2FrZSgpIHtcclxuICAgICAgICB0aGlzLl9za2lwQnRuID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIlNraXBCdG5cIikgYXMgTGF5YS5JbWFnZTtcclxuICAgIH1cclxuXHJcbiAgICBvbk9wZW5FdmVudCA9ICgpID0+IHtcclxuICAgICAgICBjb25zb2xlLmxvZyhgQnRuTW92ZXRpbWU6JHtRcEdhbWVTd2l0Y2guR2FtZVN3aXRjaC5idG5Nb3ZlVGltZXJ9LGJhbm5lck1vdmVUaW1lcjoke1FwR2FtZVN3aXRjaC5HYW1lU3dpdGNoLmJhbm5lck1vdmVUaW1lcn1gKVxyXG4gICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5oaWRlX2NzamMoKTtcclxuICAgICAgICBpZiAoIUV4YW1pbmVNZ3IuQ2FuRG9TY3pfV3gpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX3NraXBCdG5Nb3ZlKSB7XHJcbiAgICAgICAgICAgICAgICBDYWNoZWRXWEJhbm5lckFkX2NzamMuY2hhbmdlU2hvd19jc2pjKDApO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuTmVlZFd1ZGlhbikge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fc2tpcEJ0bk1vdmUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3NraXBCdG4uYm90dG9tID0gMTAwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuX3NraXBCdG4ub2ZmQWxsQ2FsbGVyKHRoaXMpO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5faGlkZUZpcnN0KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoUXBHYW1lU3dpdGNoLkdhbWVTd2l0Y2guYnRuU2hvd1RpbWVyID4gMCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3NraXBCdG4udmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZShRcEdhbWVTd2l0Y2guR2FtZVN3aXRjaC5idG5TaG93VGltZXIgKiAxMDAwLCB0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuX3NraXBCdG4udmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0V3VkaWFuTWV0aG9kKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuU2VsZWN0V3VkaWFuTWV0aG9kKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLlNlbGVjdFd1ZGlhbk1ldGhvZCgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fc2tpcEJ0bk1vdmUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3NraXBCdG4uYm90dG9tID0gMzIwO1xyXG4gICAgICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLmNoYW5nZVNob3dfY3NqYygwKTtcclxuICAgICAgICAgICAgICAgIExheWEudGltZXIub25jZSg1MDAsIHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICBDYWNoZWRXWEJhbm5lckFkX2NzamMuY2hhbmdlU2hvd19jc2pjKDApO1xyXG4gICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoUXBHYW1lU3dpdGNoLkdhbWVTd2l0Y2guYnRuU2hvd1RpbWVyID4gMCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fc2tpcEJ0bi52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoUXBHYW1lU3dpdGNoLkdhbWVTd2l0Y2guYnRuU2hvd1RpbWVyICogMTAwMCwgdGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3NraXBCdG4udmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uQ2xvc2UoKSB7XHJcbiAgICAgICAgc3VwZXIub25DbG9zZSgpO1xyXG4gICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5oaWRlX2NzamMoKTtcclxuICAgIH1cclxuXHJcbiAgICBhYnN0cmFjdCBPblNraXBCdG4oKTtcclxuXHJcbiAgICBTZWxlY3RXdWRpYW5NZXRob2QoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuX3d1ZGlhblRweWUgPT0gMSkge1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIldNZXRob2QxXCIpO1xyXG4gICAgICAgICAgICAvLyB0aGlzLl9za2lwQnRuLm9uY2UoTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5XdWRpYW5NZXRob2QxKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJXTWV0aG9kMVwiKTtcclxuICAgICAgICAgICAgdGhpcy5fc2tpcEJ0bi5vZmZBbGxDYWxsZXIodGhpcyk7XHJcbiAgICAgICAgICAgIGxldCByZHRpbWUgPSBNYXRoLnJhbmRvbSgpICogMTAwMCArIDUwMFxyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UocmR0aW1lLCB0aGlzLCB0aGlzLkZsYXNoQmFubmVyMik7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAvLyBjb25zb2xlLmxvZyhcIldNZXRob2QyXCIpO1xyXG4gICAgICAgICAgICAvLyB0aGlzLld1ZGlhbk1ldGhvZDIoKTtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCJXTWV0aG9kMlwiKTtcclxuICAgICAgICAgICAgdGhpcy5fc2tpcEJ0bi5vbmNlKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuV3VkaWFuTWV0aG9kMSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIC8qXHJcbiAgICAgICAg5Lyg57uf6K+v54K577yMIOaMieS4i+aMiemUruWQjuW8gOWni+inpuWPkSxcclxuICAgICAqL1xyXG4gICAgV3VkaWFuTWV0aG9kMSgpIHtcclxuICAgICAgICBMYXlhLnRpbWVyLmNsZWFyQWxsKHRoaXMpO1xyXG4gICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5oaWRlX2NzamMoKTtcclxuICAgICAgICBsZXQgdGltZSA9IFFwR2FtZVN3aXRjaC5HYW1lU3dpdGNoLmJ0bk1vdmVUaW1lcjtcclxuICAgICAgICBsZXQgdGltZTIgPSBRcEdhbWVTd2l0Y2guR2FtZVN3aXRjaC5iYW5uZXJNb3ZlVGltZXI7XHJcbiAgICAgICAgaWYgKHRpbWUgPCAxMDApIHsgdGltZSAqPSAxMDAwOyB9XHJcbiAgICAgICAgaWYgKHRpbWUyIDwgMTAwKSB7IHRpbWUyICo9IDEwMDA7IH1cclxuICAgICAgICBMYXlhLnRpbWVyLm9uY2UodGltZSwgdGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fc2tpcEJ0bk1vdmUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3NraXBCdG4uYm90dG9tID0gMzIwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuX3NraXBCdG4ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5PblNraXBCdG4pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIExheWEudGltZXIub25jZSh0aW1lMiwgdGhpcywgdGhpcy5GbGFzaEJhbm5lcjEpXHJcbiAgICB9XHJcblxyXG4gICAgLypcclxuICAgICAgICDpl6rnjrDor6/ngrnvvIwg5LiN6ZyA6KaB5oyJ6ZSu6Ieq5Yqo6Kem5Y+RXHJcbiAgICAqL1xyXG4gICAgV3VkaWFuTWV0aG9kMigpIHtcclxuICAgICAgICBsZXQgdGltZSA9IFFwR2FtZVN3aXRjaC5HYW1lU3dpdGNoLmJ0bk1vdmVUaW1lcjtcclxuICAgICAgICBsZXQgdGltZTIgPSBRcEdhbWVTd2l0Y2guR2FtZVN3aXRjaC5iYW5uZXJNb3ZlVGltZXI7XHJcbiAgICAgICAgaWYgKHRpbWUgPCAxMDApIHsgdGltZSAqPSAxMDAwOyB9XHJcbiAgICAgICAgaWYgKHRpbWUyIDwgMTAwKSB7IHRpbWUyICo9IDEwMDA7IH1cclxuICAgICAgICBMYXlhLnRpbWVyLm9uY2UodGltZSwgdGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fc2tpcEJ0bk1vdmUpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3NraXBCdG4uYm90dG9tID0gMzIwO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRoaXMuX3NraXBCdG4ub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5PblNraXBCdG4pO1xyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIExheWEudGltZXIub25jZSh0aW1lMiwgdGhpcywgdGhpcy5GbGFzaEJhbm5lcjEpXHJcbiAgICB9XHJcblxyXG4gICAgRmxhc2hCYW5uZXIxKCkge1xyXG4gICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5jaGFuZ2VTaG93X2NzamMoMCk7XHJcbiAgICAgICAgaWYgKCF0aGlzLl9za2lwQnRuTW92ZSkge1xyXG4gICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMjIwMCwgdGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLmhpZGVfY3NqYygpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgICAgICAvKiBlbHNlIHtcclxuICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKDUwMCwgdGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLmNoYW5nZVNob3dfY3NqYygpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH0gKi9cclxuICAgICAgICAvLyB0aGlzLl9iYW5uZXJTaG93VGltZSsrO1xyXG4gICAgICAgIC8vIGlmICh0aGlzLl9iYW5uZXJTaG93VGltZSA+IDMpIHtcclxuICAgICAgICAvLyAgICAgTGF5YS50aW1lci5jbGVhcih0aGlzLCB0aGlzLkZsYXNoQmFubmVyKTtcclxuICAgICAgICAvLyB9XHJcbiAgICAgICAgLy8gZWxzZSB7XHJcblxyXG4gICAgICAgIC8vIH1cclxuICAgIH1cclxuXHJcbiAgICBGbGFzaEJhbm5lcjIoKSB7XHJcbiAgICAgICAgLyogTGF5YS50aW1lci5vbmNlKDcwMCwgdGhpcywgKCkgPT4ge1xyXG4gICAgICAgICAgICBDYWNoZWRXWEJhbm5lckFkX2NzamMuaGlkZV9jc2pjKCk7XHJcbiAgICAgICAgfSkgKi9cclxuICAgICAgICBDYWNoZWRXWEJhbm5lckFkX2NzamMuY2hhbmdlU2hvd19jc2pjKDApO1xyXG4gICAgICAgIExheWEudGltZXIub25jZSg1MDAsIHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgQ2FjaGVkV1hCYW5uZXJBZF9jc2pjLmhpZGVfY3NqYygpO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgdGhpcy5fc2tpcEJ0bi5vbmNlKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMuV3VkaWFuTWV0aG9kMSk7XHJcbiAgICAgICAgLyogZWxzZSB7XHJcbiAgICAgICAgICAgIExheWEudGltZXIub25jZSg1MDAsIHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIENhY2hlZFdYQmFubmVyQWRfY3NqYy5jaGFuZ2VTaG93X2NzamMoKTtcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9ICovXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgVmlld0Jhc2VfY3NqYyBmcm9tIFwiLi9WaWV3QmFzZVwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgaW50ZXJmYWNlIElWaWV3U3RhdGVMaXN0ZW5lcl9jc2pjXHJcbntcclxuICAgIG9uVmlld1Nob3codmlldyA6IFZpZXdCYXNlX2NzamMpIDogdm9pZDtcclxuICAgIG9uVmlld0hpZGUodmlldyA6IFZpZXdCYXNlX2NzamMpIDogdm9pZDtcclxufVxyXG5cclxuZXhwb3J0IGZ1bmN0aW9uIGlzSVZpZXdTdGF0ZUxpc3RlbmVyX2NzamMoZWxlbWVudCA6IGFueSlcclxue1xyXG4gICAgaWYoKG51bGwgIT0gZWxlbWVudC5vblZpZXdTaG93ICYmIHR5cGVvZihlbGVtZW50Lm9uVmlld1Nob3cpID09IFwiZnVuY3Rpb25cIilcclxuICAgICAgICAmJiAobnVsbCAhPSBlbGVtZW50Lm9uVmlld0hpZGUgJiYgdHlwZW9mKGVsZW1lbnQub25WaWV3SGlkZSkgPT0gXCJmdW5jdGlvblwiKSApXHJcbiAgICB7XHJcbiAgICAgICAgcmV0dXJuIHRydWU7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbn1cclxuXHJcbiIsImltcG9ydCBWaWV3QmFzZV9jc2pjIGZyb20gXCIuLi9WaWV3QmFzZVwiO1xyXG5pbXBvcnQgRXZlbnRNZ3JfY3NqYyBmcm9tIFwiLi4vLi4vRXZlbnQvRXZlbnRNZ3JcIjtcclxuaW1wb3J0IHsgRXZlbnREZWZfY3NqYyB9IGZyb20gXCIuLi8uLi9FdmVudC9FdmVudERlZlwiO1xyXG5cclxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTG9hZGluZ1ZpZXdfY3NqYyBleHRlbmRzIExheWEuU2NyaXB0XHJcbntcclxuICAgIHByb3RlY3RlZCBfcHJvY2Vzc0JhckJnX2NzamMgOiBMYXlhLkltYWdlO1xyXG4gICAgcHJvdGVjdGVkIF9wcm9jZXNzQmFyX2NzamMgOiBMYXlhLkltYWdlO1xyXG4gICAgcHJvdGVjdGVkIF9jdXJyZW50UHJvY2Vzc19jc2pjOiBudW1iZXI7XHJcbiAgICBwcm90ZWN0ZWQgX3Byb2Nlc3NXaWR0aF9jc2pjIDogbnVtYmVyID0gMDtcclxuXHJcbiAgICBvbkF3YWtlKClcclxuICAgIHtcclxuICAgICAgICB0aGlzLl9wcm9jZXNzQmFyQmdfY3NqYyA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJQcm9jZXNzQmFyQmdcIikgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICB0aGlzLl9wcm9jZXNzQmFyX2NzamMgPSB0aGlzLl9wcm9jZXNzQmFyQmdfY3NqYy5nZXRDaGlsZEJ5TmFtZShcIlByb2Nlc3NCYXJcIikgYXMgTGF5YS5JbWFnZTtcclxuICAgICAgICB0aGlzLl9wcm9jZXNzV2lkdGhfY3NqYyA9IHRoaXMuX3Byb2Nlc3NCYXJfY3NqYy53aWR0aDtcclxuICAgICAgICBFdmVudE1ncl9jc2pjLnJlZ09uY2VFdmVudF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9HYW1lU2NlbmVMb2FkQ29tcGVsZXRlX2NzamMsIHRoaXMsIHRoaXMuRmluaXNoTG9hZGluZ19jc2pjKTtcclxuICAgIH1cclxuXHJcbiAgICBvblVwZGF0ZSgpIHtcclxuICAgICAgICBpZiAodGhpcy5fcHJvY2Vzc0Jhcl9jc2pjLndpZHRoIDwgdGhpcy5fY3VycmVudFByb2Nlc3NfY3NqYykge1xyXG4gICAgICAgICAgICBsZXQgc3BlZWQgPSBNYXRoLmZsb29yKCh0aGlzLl9jdXJyZW50UHJvY2Vzc19jc2pjIC0gdGhpcy5fcHJvY2Vzc0Jhcl9jc2pjLndpZHRoKSAvIDEwMCk7XHJcbiAgICAgICAgICAgIHRoaXMuX3Byb2Nlc3NCYXJfY3NqYy53aWR0aCArPSAoNSArIHNwZWVkKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX3Byb2Nlc3NCYXJfY3NqYy53aWR0aCA+IHRoaXMuX2N1cnJlbnRQcm9jZXNzX2NzamMpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX3Byb2Nlc3NCYXJfY3NqYy53aWR0aCA9IHRoaXMuX2N1cnJlbnRQcm9jZXNzX2NzamM7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25EZXN0cm95KCl7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5yZW1vdmVFdmVudF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9HYW1lU2NlbmVMb2FkQ29tcGVsZXRlX2NzamMsIHRoaXMsIHRoaXMuRmluaXNoTG9hZGluZ19jc2pjKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgLyoqXHJcbiAgICAgKiDorr7nva7ov5vluqZcclxuICAgICAqIFxyXG4gICAgICogQHBhcmFtIHtudW1iZXJ9IHByb2Nlc3MgXHJcbiAgICAgKiBAbWVtYmVyb2YgTG9hZGluZ1ZpZXdcclxuICAgICAqL1xyXG4gICAgcHVibGljIHNldFByb2Nlc3NfY3NqYyhwcm9jZXNzIDogbnVtYmVyKVxyXG4gICAge1xyXG4gICAgICAgIGlmKHByb2Nlc3MgPCAwIClcclxuICAgICAgICAgICAgcHJvY2VzcyA9IDA7XHJcbiAgICAgICAgaWYocHJvY2VzcyA+IDEgKVxyXG4gICAgICAgICAgICBwcm9jZXNzID0gMTtcclxuICAgICAgICB0aGlzLl9jdXJyZW50UHJvY2Vzc19jc2pjID0gdGhpcy5fcHJvY2Vzc1dpZHRoX2NzamMgKiBwcm9jZXNzO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKlxyXG4gICAgICog5q2k5pa55rOV55So5p2l5YWz6ZetbG9hZGluZ+eVjOmdoizkvJrlhYjlsIbov5vluqbmnaHov5vluqbnva7kuLox54S25ZCO5YGc6aG/MTAw5q+r56eS5YaN5raI5aSx77yM57uZ55So5oi35LiA5Liq6L+b5bqm5p2h5Yqg6L296Imv5aW955qE5oSf6KeJXHJcbiAgICAgKiDlpoLmnpzkuI3mg7PnlKjmraTmlrnms5Us5Zyo5YW25LuW5Luj56CB5Lit55u05o6l6LCD55SoRXZlbnRNZ3IuZGlzcGF0Y2goRXZlbnREZWYuQXBwX0Nsb3NlRmlyc3RMb2FkaW5nVmlldynljbPlj69cclxuICAgICAqIFxyXG4gICAgICogQG1lbWJlcm9mIExvYWRpbmdWaWV3XHJcbiAgICAgKi9cclxuICAgIEZpbmlzaExvYWRpbmdfY3NqYygpe1xyXG4gICAgICAgIHRoaXMuX3Byb2Nlc3NCYXJfY3NqYy53aWR0aCA9IHRoaXMuX3Byb2Nlc3NXaWR0aF9jc2pjXHJcbiAgICAgICAgTGF5YS50aW1lci5vbmNlKDIwMCx0aGlzLCgpPT57XHJcbiAgICAgICAgICAgIEV2ZW50TWdyX2NzamMuZGlzcGF0Y2hfY3NqYyhFdmVudERlZl9jc2pjLkFwcF9DbG9zZUZpcnN0TG9hZGluZ1ZpZXdfY3NqYyk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgVmlld0Jhc2VfY3NqYyBmcm9tIFwiLi4vLi4vVmlldy9WaWV3QmFzZVwiO1xyXG5pbXBvcnQgT1BQT0FQSV9jc2pjIGZyb20gXCIuLi8uLi9QbGF0Zm9ybUFwaS9PUFBPQVBJXCI7XHJcbmltcG9ydCBHYW1lU3dpdGNoX2NzamMgZnJvbSBcIi4uLy4uL0NvbW1vbUFQSS9HYW1lU3dpdGNoL0dhbWVTd2l0Y2hcIjtcclxuaW1wb3J0IFZpZXdNZ3JfY3NqYywgeyBWaWV3RGVmX2NzamMgfSBmcm9tIFwiLi4vLi4vTWdyL1ZpZXdNZ3JcIjtcclxuXHJcblxyXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBPcHBvTmF0aXZlQWRWaWV3X2NzamMgZXh0ZW5kcyBWaWV3QmFzZV9jc2pjIHtcclxuICAgIHByb3RlY3RlZCBfY2VudGVyWm9uZV9jc2pjOiBMYXlhLlNwcml0ZTtcclxuICAgIHByb3RlY3RlZCBfZGlzcGxheV9jc2pjOiBMYXlhLlNwcml0ZTtcclxuICAgIHByb3RlY3RlZCBfb2tCdG5fY3NqYzogTGF5YS5TcHJpdGU7XHJcbiAgICBwcm90ZWN0ZWQgX2Nsb3NlQnRuX2NzamM6IExheWEuU3ByaXRlO1xyXG5cclxuICAgIHByb3RlY3RlZCBfbmF0aXZlQWRfY3NqYzogYW55ID0gbnVsbDtcclxuICAgIHByb3RlY3RlZCBfY3VyQWRJdGVtX2NzamM6IGFueSA9IG51bGw7XHJcbiAgICBwcm90ZWN0ZWQgX3JlVHJ5X2NzamM6IGJvb2xlYW4gPSBmYWxzZTtcclxuICAgIHByb3RlY3RlZCBfdGl0bGVfVGV4dF9jc2pjOiBMYXlhLlRleHQ7XHJcbiAgICBwcm90ZWN0ZWQgX2Rlc2NfVGV4dF9jc2pjOiBMYXlhLlRleHQ7XHJcbiAgICBvbkF3YWtlKCkge1xyXG4gICAgICAgIHRoaXMuX2NlbnRlclpvbmVfY3NqYyA9IHRoaXMub3duZXIuZ2V0Q2hpbGRCeU5hbWUoXCJDZW50ZXJab25lXCIpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuX2Rpc3BsYXlfY3NqYyA9IHRoaXMuX2NlbnRlclpvbmVfY3NqYy5nZXRDaGlsZEJ5TmFtZShcIkRpc3BsYXlcIikgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5fb2tCdG5fY3NqYyA9IHRoaXMuX2NlbnRlclpvbmVfY3NqYy5nZXRDaGlsZEJ5TmFtZShcIk9rQnRuXCIpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuX2Nsb3NlQnRuX2NzamMgPSB0aGlzLl9jZW50ZXJab25lX2NzamMuZ2V0Q2hpbGRCeU5hbWUoXCJDbG9zZUJ0blwiKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLl90aXRsZV9UZXh0X2NzamMgPSB0aGlzLl9jZW50ZXJab25lX2NzamMuZ2V0Q2hpbGRCeU5hbWUoXCJUaXRsZV9UZXh0XCIpIGFzIExheWEuVGV4dDtcclxuICAgICAgICB0aGlzLl9kZXNjX1RleHRfY3NqYyA9IHRoaXMuX2NlbnRlclpvbmVfY3NqYy5nZXRDaGlsZEJ5TmFtZShcIkRlc2NfVGV4dFwiKSBhcyBMYXlhLlRleHQ7XHJcbiAgICB9XHJcblxyXG4gICAgb25TdGFydCgpIHtcclxuICAgICAgICB0aGlzLmxvYWRBZF9jc2pjKCk7XHJcbiAgICB9XHJcblxyXG4gICAgYWRkRXZlbnQoKSB7XHJcbiAgICAgICAgc3VwZXIuYWRkRXZlbnQoKTtcclxuICAgICAgICB0aGlzLl9va0J0bl9jc2pjLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25Pa0J0bl9jc2pjKTtcclxuICAgICAgICB0aGlzLl9jbG9zZUJ0bl9jc2pjLm9uKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25DbG9zZUJ0bl9jc2pjKTtcclxuICAgICAgICB0aGlzLl9kaXNwbGF5X2NzamMub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbkRpc3BsYXlDbGlja19jc2pjKTtcclxuXHJcbiAgICB9XHJcblxyXG4gICAgcmVtb3ZlRXZlbnQoKSB7XHJcbiAgICAgICAgc3VwZXIucmVtb3ZlRXZlbnQoKTtcclxuICAgICAgICB0aGlzLl9va0J0bl9jc2pjLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uT2tCdG5fY3NqYyk7XHJcbiAgICAgICAgdGhpcy5fY2xvc2VCdG5fY3NqYy5vZmYoTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbkNsb3NlQnRuX2NzamMpO1xyXG4gICAgICAgIHRoaXMuX2Rpc3BsYXlfY3NqYy5vZmYoTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbkRpc3BsYXlDbGlja19jc2pjKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgbG9hZEFkX2NzamMoKSB7XHJcbiAgICAgICAgdmFyIHNlbGYgPSB0aGlzO1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25RR01pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2Nsb3NlQnRuX2NzamMudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fbmF0aXZlQWRfY3NqYykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fbmF0aXZlQWRfY3NqYy5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9uYXRpdmVBZF9jc2pjID0gbnVsbDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLl9jdXJBZEl0ZW1fY3NqYyA9IG51bGw7XHJcblxyXG4gICAgICAgICAgICB0aGlzLl9uYXRpdmVBZF9jc2pjID0gcWcuY3JlYXRlTmF0aXZlQWQoe1xyXG4gICAgICAgICAgICAgICAgcG9zSWQ6IE9QUE9BUElfY3NqYy5HZXROYXRpdmVBZF9jc2pjXHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIHRoaXMuX25hdGl2ZUFkX2NzamMubG9hZCgpO1xyXG4gICAgICAgICAgICB0aGlzLl9uYXRpdmVBZF9jc2pjLm9uTG9hZCgocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWOn+eUn+W5v+WRiuWKoOi9veaIkOWKn++8mlwiLCByZXMpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGFkbGlzdCA9IHJlcy5hZExpc3Q7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFkbGlzdC5sZW5ndGg7ICsraSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBhZCA9IGFkbGlzdFtpXTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWOn+eUn+W5v+WRiuaVsOaNru+8mlwiLCBpKTtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gYWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coa2V5LCBhZFtrZXldKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9jdXJBZEl0ZW1fY3NqYyA9IGFkbGlzdFtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBhZGxpc3QubGVuZ3RoKV07XHJcbiAgICAgICAgICAgICAgICBpZiAobnVsbCAhPSB0aGlzLl9jdXJBZEl0ZW1fY3NqYykge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5fY3VyQWRJdGVtX2NzamMuaW1nVXJsTGlzdC5sZW5ndGg7ICsraSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImltZ1VybExpc3QgOiBcIiwgaSArIFwiIFwiLCB0aGlzLl9jdXJBZEl0ZW1fY3NqYy5pbWdVcmxMaXN0W2ldKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB2YXIgaW1ndWxyID0gdGhpcy5fY3VyQWRJdGVtX2NzamMuaW1nVXJsTGlzdFtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiB0aGlzLl9jdXJBZEl0ZW1fY3NqYy5pbWdVcmxMaXN0Lmxlbmd0aCldO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuX2Rpc3BsYXlfY3NqYy5sb2FkSW1hZ2UoaW1ndWxyLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHNlbGYsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5fdGl0bGVfVGV4dF9jc2pjLnRleHQgPSB0aGlzLl9jdXJBZEl0ZW1fY3NqYy50aXRsZTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5fZGVzY19UZXh0X2NzamMudGV4dCA9IHRoaXMuX2N1ckFkSXRlbV9jc2pjLmRlc2M7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX25hdGl2ZUFkX2NzamMucmVwb3J0QWRTaG93KHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkSWQ6IHNlbGYuX2N1ckFkSXRlbV9jc2pjLmFkSWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLliqDovb3lm77niYdcIiwgaW1ndWxyKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIHNlbGYuc2hvd0NlbnRlclpvbmVfY3NqYygpO1xyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB0aGlzLl9uYXRpdmVBZF9jc2pjLm9uRXJyb3IoKHJlcykgPT4ge1xyXG4gICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLljp/nlJ/lub/lkYrliqDovb3lpLHotKXvvJpcIiwgcmVzKTtcclxuICAgICAgICAgICAgICAgIGZvciAodmFyIGtleSBpbiByZXMpIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhrZXksIHJlc1trZXldKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGlmICghdGhpcy5fcmVUcnlfY3NqYykge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX3JlVHJ5X2NzamMgPSB0cnVlO1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuX2NlbnRlclpvbmVfY3NqYy52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKDEwMDAsIHNlbGYsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLljp/nlJ/lub/lkYrph43mlrDliqDovb1cIik7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYubG9hZEFkX2NzamMoKTtcclxuICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuY2xvc2VWaWV3KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgc2VsZi5jbG9zZVZpZXcoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIG9uQ2xvc2VCdG5fY3NqYygpIHtcclxuICAgICAgICB2YXIgcmF0ZSA9IEdhbWVTd2l0Y2hfY3NqYy5DdXJyZW50Q29uZmlnLm9wcG9Db25mX2NzamMueXVhbnNoZW5nV3VkaWFuX2NzamM7XHJcbiAgICAgICAgaWYgKE1hdGgucmFuZG9tKCkgPD0gcmF0ZSkge1xyXG4gICAgICAgICAgICBpZiAobnVsbCAhPSB0aGlzLl9uYXRpdmVBZF9jc2pjICYmIG51bGwgIT0gdGhpcy5fY3VyQWRJdGVtX2NzamMpIHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKFwi54K55Ye75LiK5oql77yB77yB77yBXCIpXHJcbiAgICAgICAgICAgICAgICB0aGlzLl9uYXRpdmVBZF9jc2pjLnJlcG9ydEFkQ2xpY2soe1xyXG4gICAgICAgICAgICAgICAgICAgIGFkSWQ6IHRoaXMuX2N1ckFkSXRlbV9jc2pjLmFkSWRcclxuICAgICAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5jbG9zZVZpZXcoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgb25Pa0J0bl9jc2pjKCkge1xyXG4gICAgICAgIGlmIChudWxsICE9IHRoaXMuX25hdGl2ZUFkX2NzamMgJiYgbnVsbCAhPSB0aGlzLl9jdXJBZEl0ZW1fY3NqYykge1xyXG4gICAgICAgICAgICBjb25zb2xlLmxvZyhcIueCueWHu+S4iuaKpe+8ge+8ge+8gVwiKVxyXG4gICAgICAgICAgICB0aGlzLl9uYXRpdmVBZF9jc2pjLnJlcG9ydEFkQ2xpY2soe1xyXG4gICAgICAgICAgICAgICAgYWRJZDogdGhpcy5fY3VyQWRJdGVtX2NzamMuYWRJZFxyXG4gICAgICAgICAgICB9KVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgb25EaXNwbGF5Q2xpY2tfY3NqYygpIHtcclxuICAgICAgICBpZiAobnVsbCAhPSB0aGlzLl9uYXRpdmVBZF9jc2pjICYmIG51bGwgIT0gdGhpcy5fY3VyQWRJdGVtX2NzamMpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLngrnlh7vkuIrmiqXvvIHvvIHvvIFcIilcclxuICAgICAgICAgICAgdGhpcy5fbmF0aXZlQWRfY3NqYy5yZXBvcnRBZENsaWNrKHtcclxuICAgICAgICAgICAgICAgIGFkSWQ6IHRoaXMuX2N1ckFkSXRlbV9jc2pjLmFkSWRcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25EZXN0cm95KCkge1xyXG4gICAgICAgIHN1cGVyLm9uRGVzdHJveSgpO1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25RR01pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9uYXRpdmVBZF9jc2pjKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9uYXRpdmVBZF9jc2pjLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB0aGlzLl9uYXRpdmVBZF9jc2pjID0gbnVsbDtcclxuICAgICAgICAgICAgdGhpcy5fY3VyQWRJdGVtX2NzamMgPSBudWxsO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgc2hvd0NlbnRlclpvbmVfY3NqYygpIHtcclxuICAgICAgICB0aGlzLl9jZW50ZXJab25lX2NzamMudmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgbGV0IHRpbWUgPSBHYW1lU3dpdGNoX2NzamMuQ3VycmVudENvbmZpZy5vcHBvQ29uZl9jc2pjLnl1YW5zaGVuZ0J0blNob3dUaW1lX2NzamMgKiAxMDAwO1xyXG4gICAgICAgIGlmICh0aW1lID4gMCkge1xyXG4gICAgICAgICAgICB0aGlzLl9jbG9zZUJ0bl9jc2pjLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKHRpbWUsIHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2Nsb3NlQnRuX2NzamMudmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9jbG9zZUJ0bl9jc2pjLnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBvbkNsb3NlRXZlbnQgPSAoKSA9PiB7XHJcbiAgICAgICAgVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMub3BlblZpZXdfY3NqYyhWaWV3RGVmX2NzamMuSW5HYW1lVmlldyk7XHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgVmlld0Jhc2VfY3NqYyBmcm9tIFwiLi4vVmlld0Jhc2VcIjtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRpcHNWaWV3X2NzamMgZXh0ZW5kcyBWaWV3QmFzZV9jc2pjIHtcclxuICAgIHByb3RlY3RlZCBfYmc6IExheWEuVUlDb21wb25lbnQ7XHJcbiAgICBwcm90ZWN0ZWQgX3RpcHNUZXh0OiBMYXlhLlRleHQ7XHJcblxyXG4gICAgY29uc3RydWN0b3IoKSB7IHN1cGVyKCk7IH1cclxuXHJcbiAgICBvbkF3YWtlKCkge1xyXG4gICAgICAgIHRoaXMuX2JnID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkJnXCIpIGFzIExheWEuVUlDb21wb25lbnQ7XHJcbiAgICAgICAgdGhpcy5fdGlwc1RleHQgPSB0aGlzLl9iZy5nZXRDaGlsZEJ5TmFtZShcIlRleHRcIikgYXMgTGF5YS5UZXh0O1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBvcGVuVmlldyhkYXRhPzogYW55KTogdm9pZCB7XHJcbiAgICAgICAgc3VwZXIub3BlblZpZXcoZGF0YSk7XHJcbiAgICAgICAgdGhpcy5zZXRUaXBzTXNnKGRhdGEpO1xyXG4gICAgICAgIExheWEudGltZXIuY2xlYXJBbGwodGhpcyk7XHJcbiAgICAgICAgTGF5YS5Ud2Vlbi50byh0aGlzLl9iZywgeyBhbHBoYTogMCB9LCAxNTAwLCBMYXlhLkVhc2UucXVpbnRJbiwgTGF5YS5IYW5kbGVyLmNyZWF0ZSh0aGlzLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuY2xvc2VWaWV3KCk7XHJcbiAgICAgICAgfSkpXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNldFRpcHNNc2cobXNnOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLl90aXBzVGV4dC50ZXh0ID0gbXNnO1xyXG4gICAgfVxyXG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgVHdpbmtsZVNwcml0ZV9jc2pjIGV4dGVuZHMgTGF5YS5TY3JpcHQge1xyXG4gICAgLyoqIEBwcm9wIHtuYW1lOlR3aW5rbGVTcGVlZCwgdGlwczpcIumXquWKqOmAn+W6plwiLCB0eXBlOk51bWJlciwgZGVmYXVsdDoxMDAwfSovXHJcbiAgICBwdWJsaWMgVHdpbmtsZVNwZWVkOiBudW1iZXIgPSAxMDAwO1xyXG4gICAgLyoqIEBwcm9wIHtuYW1lOlR3aW5rbGVNaW5TaXplLCB0aXBzOlwi5pyA5bCP57yp5pS+XCIsIHR5cGU6TnVtYmVyLCBkZWZhdWx0OjAuOTV9Ki9cclxuICAgIHB1YmxpYyBUd2lua2xlTWluU2l6ZTogbnVtYmVyID0gMC45NTtcclxuICAgIC8qKiBAcHJvcCB7bmFtZTpUd2lua2xlTWF4U2l6ZSwgdGlwczpcIuacgOWkp+e8qeaUvlwiLCB0eXBlOk51bWJlciwgZGVmYXVsdDoxLjA1fSovXHJcbiAgICBwdWJsaWMgVHdpbmtsZU1heFNpemU6IG51bWJlciA9IDEuMDU7XHJcblxyXG4gICAgcHJvdGVjdGVkIF9vd25lclNwcml0ZV9jc2pjOiBMYXlhLlNwcml0ZTtcclxuICAgIHByb3RlY3RlZCBfZGlzcGxheVNwX2NzamM6IExheWEuU3ByaXRlO1xyXG4gICAgcHJvdGVjdGVkIF9kaXNUZXh0X2NzamM6IExheWEuVGV4dDtcclxuICAgIHByb3RlY3RlZCBfYW5pRm9yd2FyZF9jc2pjOiBib29sZWFuID0gZmFsc2U7XHJcbiAgICBwcm90ZWN0ZWQgX2ZvbnRTaXplX2NzamMgPSAyNTtcclxuICAgIHByb3RlY3RlZCBfb3JpZ2luU2l6ZV9jc2pjID0gMTtcclxuICAgIGNvbnN0cnVjdG9yKCkge1xyXG4gICAgICAgIHN1cGVyKCk7XHJcbiAgICB9XHJcbiAgICBvbkF3YWtlKCkge1xyXG4gICAgICAgIHRoaXMuX2Rpc3BsYXlTcF9jc2pjID0gdGhpcy5vd25lciBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLl9kaXNUZXh0X2NzamMgPSB0aGlzLm93bmVyLmdldENoaWxkQnlOYW1lKFwiVGl0ZWxUZXh0XCIpIGFzIExheWEuVGV4dDtcclxuICAgICAgICB0aGlzLl9vcmlnaW5TaXplX2NzamMgPSB0aGlzLl9kaXNwbGF5U3BfY3NqYy5zY2FsZVg7XHJcbiAgICAgICAgaWYgKHRoaXMuX2Rpc1RleHRfY3NqYyAhPSBudWxsKSB7XHJcbiAgICAgICAgICAgIHRoaXMuX2Rpc1RleHRfY3NqYy50ZXh0ID0gXCJcIjtcclxuICAgICAgICAgICAgdGhpcy5fZm9udFNpemVfY3NqYyA9IHRoaXMuX2Rpc1RleHRfY3NqYy5mb250U2l6ZTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBvbkVuYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLl9kaXNwbGF5U3BfY3NqYy5zY2FsZSh0aGlzLl9vcmlnaW5TaXplX2NzamMsIHRoaXMuX29yaWdpblNpemVfY3NqYyk7XHJcbiAgICB9XHJcbiAgICBvbkRpc2FibGUoKTogdm9pZCB7XHJcblxyXG4gICAgfVxyXG4gICAgb25VcGRhdGUoKSB7XHJcbiAgICAgICAgdGhpcy5kaXNwbGF5QW5pX2NzamMoKTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgZGlzcGxheUFuaV9jc2pjKCkge1xyXG4gICAgICAgIGlmICghdGhpcy5fYW5pRm9yd2FyZF9jc2pjKSB7XHJcbiAgICAgICAgICAgIHZhciBzY2FsZSA9IHRoaXMuX2Rpc3BsYXlTcF9jc2pjLnNjYWxlWCAtIExheWEudGltZXIuZGVsdGEgLyB0aGlzLlR3aW5rbGVTcGVlZDtcclxuICAgICAgICAgICAgc2NhbGUgPSBNYXRoLm1heChzY2FsZSwgdGhpcy5Ud2lua2xlTWluU2l6ZSAqIHRoaXMuX29yaWdpblNpemVfY3NqYyk7XHJcbiAgICAgICAgICAgIHRoaXMuX2Rpc3BsYXlTcF9jc2pjLnNjYWxlKHNjYWxlLCBzY2FsZSk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9kaXNwbGF5U3BfY3NqYy5zY2FsZVggPD0gdGhpcy5Ud2lua2xlTWluU2l6ZSAqIHRoaXMuX29yaWdpblNpemVfY3NqYykge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fYW5pRm9yd2FyZF9jc2pjID0gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIHtcclxuICAgICAgICAgICAgdmFyIHNjYWxlID0gdGhpcy5fZGlzcGxheVNwX2NzamMuc2NhbGVYICsgTGF5YS50aW1lci5kZWx0YSAvIHRoaXMuVHdpbmtsZVNwZWVkO1xyXG4gICAgICAgICAgICBzY2FsZSA9IE1hdGgubWluKHNjYWxlLCB0aGlzLlR3aW5rbGVNYXhTaXplICogdGhpcy5fb3JpZ2luU2l6ZV9jc2pjKTtcclxuICAgICAgICAgICAgdGhpcy5fZGlzcGxheVNwX2NzamMuc2NhbGUoc2NhbGUsIHNjYWxlKTtcclxuICAgICAgICAgICAgaWYgKHRoaXMuX2Rpc3BsYXlTcF9jc2pjLnNjYWxlWCA+PSB0aGlzLlR3aW5rbGVNYXhTaXplICogdGhpcy5fb3JpZ2luU2l6ZV9jc2pjKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLl9hbmlGb3J3YXJkX2NzamMgPSBmYWxzZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsImltcG9ydCBWaWV3QmFzZV9jc2pjIGZyb20gXCIuLi8uLi9WaWV3L1ZpZXdCYXNlXCI7XHJcbmltcG9ydCBHYW1lU3dpdGNoX2NzamMgZnJvbSBcIi4uLy4uL0NvbW1vbUFQSS9HYW1lU3dpdGNoL0dhbWVTd2l0Y2hcIjtcclxuaW1wb3J0IFZJVk9BUElfY3NqYyBmcm9tIFwiLi4vLi4vUGxhdGZvcm1BcGkvVklWT0FQSVwiO1xyXG5cclxuXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZpdm9OYXRpdmVBZFZpZXdfY3NqYyBleHRlbmRzIFZpZXdCYXNlX2NzamMge1xyXG4gICAgcHJvdGVjdGVkIF9jZW50ZXJab25lX2NzamM6IExheWEuU3ByaXRlO1xyXG4gICAgcHJvdGVjdGVkIF9kaXNwbGF5X2NzamM6IExheWEuU3ByaXRlO1xyXG4gICAgcHJvdGVjdGVkIF9va0J0bl9jc2pjOiBMYXlhLlNwcml0ZTtcclxuICAgIHByb3RlY3RlZCBfY2xvc2VCdG5fY3NqYzogTGF5YS5TcHJpdGU7XHJcblxyXG4gICAgcHJvdGVjdGVkIF9uYXRpdmVBZF9jc2pjOiBhbnkgPSBudWxsO1xyXG4gICAgcHJvdGVjdGVkIF9jdXJBZEl0ZW1fY3NqYzogYW55ID0gbnVsbDtcclxuICAgIHByb3RlY3RlZCBfcmVUcnlfY3NqYzogYm9vbGVhbiA9IGZhbHNlO1xyXG4gICAgcHJvdGVjdGVkIF90aXRsZV9UZXh0X2NzamM6IExheWEuVGV4dDtcclxuICAgIHByb3RlY3RlZCBfZGVzY19UZXh0X2NzamM6IExheWEuVGV4dDtcclxuICAgIG9uQXdha2UoKSB7XHJcbiAgICAgICAgdGhpcy5fY2VudGVyWm9uZV9jc2pjID0gdGhpcy5vd25lci5nZXRDaGlsZEJ5TmFtZShcIkNlbnRlclpvbmVcIikgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5fZGlzcGxheV9jc2pjID0gdGhpcy5fY2VudGVyWm9uZV9jc2pjLmdldENoaWxkQnlOYW1lKFwiRGlzcGxheVwiKSBhcyBMYXlhLlNwcml0ZTtcclxuICAgICAgICB0aGlzLl9va0J0bl9jc2pjID0gdGhpcy5fY2VudGVyWm9uZV9jc2pjLmdldENoaWxkQnlOYW1lKFwiT2tCdG5cIikgYXMgTGF5YS5TcHJpdGU7XHJcbiAgICAgICAgdGhpcy5fY2xvc2VCdG5fY3NqYyA9IHRoaXMuX2NlbnRlclpvbmVfY3NqYy5nZXRDaGlsZEJ5TmFtZShcIkNsb3NlQnRuXCIpIGFzIExheWEuU3ByaXRlO1xyXG4gICAgICAgIHRoaXMuX3RpdGxlX1RleHRfY3NqYyA9IHRoaXMuX2NlbnRlclpvbmVfY3NqYy5nZXRDaGlsZEJ5TmFtZShcIlRpdGxlX1RleHRcIikgYXMgTGF5YS5UZXh0O1xyXG4gICAgICAgIHRoaXMuX2Rlc2NfVGV4dF9jc2pjID0gdGhpcy5fY2VudGVyWm9uZV9jc2pjLmdldENoaWxkQnlOYW1lKFwiRGVzY19UZXh0XCIpIGFzIExheWEuVGV4dDtcclxuICAgIH1cclxuXHJcbiAgICBvblN0YXJ0KCkge1xyXG4gICAgICAgIHRoaXMubG9hZEFkX2NzamMoKTtcclxuICAgIH1cclxuXHJcbiAgICBhZGRFdmVudCgpIHtcclxuICAgICAgICBzdXBlci5hZGRFdmVudCgpO1xyXG4gICAgICAgIHRoaXMuX29rQnRuX2NzamMub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbk9rQnRuX2NzamMpO1xyXG4gICAgICAgIHRoaXMuX2Nsb3NlQnRuX2NzamMub24oTGF5YS5FdmVudC5DTElDSywgdGhpcywgdGhpcy5vbkNsb3NlQnRuX2NzamMpO1xyXG4gICAgICAgIHRoaXMuX2Rpc3BsYXlfY3NqYy5vbihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uRGlzcGxheUNsaWNrX2NzamMpO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICByZW1vdmVFdmVudCgpIHtcclxuICAgICAgICBzdXBlci5yZW1vdmVFdmVudCgpO1xyXG4gICAgICAgIHRoaXMuX29rQnRuX2NzamMub2ZmKExheWEuRXZlbnQuQ0xJQ0ssIHRoaXMsIHRoaXMub25Pa0J0bl9jc2pjKTtcclxuICAgICAgICB0aGlzLl9jbG9zZUJ0bl9jc2pjLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uQ2xvc2VCdG5fY3NqYyk7XHJcbiAgICAgICAgdGhpcy5fZGlzcGxheV9jc2pjLm9mZihMYXlhLkV2ZW50LkNMSUNLLCB0aGlzLCB0aGlzLm9uRGlzcGxheUNsaWNrX2NzamMpO1xyXG4gICAgfVxyXG5cclxuICAgIHByb3RlY3RlZCBsb2FkQWRfY3NqYygpIHtcclxuICAgICAgICB2YXIgc2VsZiA9IHRoaXM7XHJcbiAgICAgICAgaWYgKExheWEuQnJvd3Nlci5vblZWTWluaUdhbWUpIHtcclxuICAgICAgICAgICAgLy8gaWYgKHRoaXMuX25hdGl2ZUFkICYmIHRoaXMuX25hdGl2ZUFkLnRpdGxlICE9IG51bGwpIHtcclxuICAgICAgICAgICAgLy8gICAgIHRoaXMuX25hdGl2ZUFkLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgdGhpcy5fbmF0aXZlQWRfY3NqYyA9IG51bGw7XHJcbiAgICAgICAgICAgIC8vIH1cclxuICAgICAgICAgICAgdGhpcy5fY3VyQWRJdGVtX2NzamMgPSBudWxsO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5fbmF0aXZlQWRfY3NqYyA9IHFnLmNyZWF0ZU5hdGl2ZUFkKHtcclxuICAgICAgICAgICAgICAgIHBvc0lkOiBWSVZPQVBJX2NzamMubmF0aXZlQWRJZF9jc2pjXHJcbiAgICAgICAgICAgIH0pXHJcblxyXG4gICAgICAgICAgICB0aGlzLl9uYXRpdmVBZF9jc2pjLm9uTG9hZCgocmVzKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWOn+eUn+W5v+WRiuWKoOi9veaIkOWKn++8mlwiLCByZXMpO1xyXG4gICAgICAgICAgICAgICAgdmFyIGFkbGlzdCA9IHJlcy5hZExpc3Q7XHJcbiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGFkbGlzdC5sZW5ndGg7ICsraSkge1xyXG4gICAgICAgICAgICAgICAgICAgIHZhciBhZCA9IGFkbGlzdFtpXTtcclxuICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWOn+eUn+W5v+WRiuaVsOaNru+8mlwiLCBpKTtcclxuICAgICAgICAgICAgICAgICAgICBmb3IgKHZhciBrZXkgaW4gYWQpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coa2V5LCBhZFtrZXldKTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBzZWxmLl9jdXJBZEl0ZW1fY3NqYyA9IGFkbGlzdFtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBhZGxpc3QubGVuZ3RoKV07XHJcbiAgICAgICAgICAgICAgICBpZiAobnVsbCAhPSBzZWxmLl9jdXJBZEl0ZW1fY3NqYykge1xyXG4gICAgICAgICAgICAgICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgc2VsZi5fY3VyQWRJdGVtX2NzamMuaW1nVXJsTGlzdC5sZW5ndGg7ICsraSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcImltZ1VybExpc3QgOiBcIiwgaSArIFwiIFwiLCBzZWxmLl9jdXJBZEl0ZW1fY3NqYy5pbWdVcmxMaXN0W2ldKVxyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgICAgICB2YXIgaW1ndWxyID0gc2VsZi5fY3VyQWRJdGVtX2NzamMuaW1nVXJsTGlzdFtNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiBzZWxmLl9jdXJBZEl0ZW1fY3NqYy5pbWdVcmxMaXN0Lmxlbmd0aCldO1xyXG4gICAgICAgICAgICAgICAgICAgIHNlbGYuX2Rpc3BsYXlfY3NqYy5sb2FkSW1hZ2UoaW1ndWxyLCBMYXlhLkhhbmRsZXIuY3JlYXRlKHNlbGYsICgpID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5zaG93Q2VudGVyWm9uZV9jc2pjKCk7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHNlbGYuX25hdGl2ZUFkX2NzamMucmVwb3J0QWRTaG93KHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGFkSWQ6IHNlbGYuX2N1ckFkSXRlbV9jc2pjLmFkSWRcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSlcclxuICAgICAgICAgICAgICAgICAgICAgICAgY29uc29sZS5sb2coXCLliqDovb3lm77niYflubbkuIrmiqVcIiwgaW1ndWxyKTtcclxuICAgICAgICAgICAgICAgICAgICB9KSk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgICAgIGxldCBhZExvYWQgPSB0aGlzLl9uYXRpdmVBZF9jc2pjLmxvYWQoKTtcclxuICAgICAgICAgICAgYWRMb2FkICYmIGFkTG9hZC50aGVuKCgpID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfljp/nlJ/lub/lkYrliqDovb3lrozmiJAnKTtcclxuICAgICAgICAgICAgfSkuY2F0Y2goZXJyID0+IHtcclxuICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKCfliqDovb3lpLHotKUnLCBKU09OLnN0cmluZ2lmeShlcnIpKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2NlbnRlclpvbmVfY3NqYy52aXNpYmxlID0gZmFsc2U7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuX3JlVHJ5X2NzamMpIHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLl9yZVRyeV9jc2pjID0gdHJ1ZTtcclxuICAgICAgICAgICAgICAgICAgICBMYXlhLnRpbWVyLm9uY2UoMTAwMCwgc2VsZiwgKCkgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIuWOn+eUn+W5v+WRiumHjeaWsOWKoOi9vVwiKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgc2VsZi5sb2FkQWRfY3NqYygpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgZWxzZSB7XHJcbiAgICAgICAgICAgICAgICAgICAgc2VsZi5jbG9zZVZpZXcoKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBzZWxmLmNsb3NlVmlldygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgb25DbG9zZUJ0bl9jc2pjKCkge1xyXG4gICAgICAgIHZhciByYXRlID0gR2FtZVN3aXRjaF9jc2pjLkN1cnJlbnRDb25maWcudml2b0FkQ29uZl9jc2pjLnl1YW5zaGVuZ1d1ZGlhbl9jc2pjO1xyXG4gICAgICAgIGlmIChNYXRoLnJhbmRvbSgpIDw9IHJhdGUpIHtcclxuICAgICAgICAgICAgaWYgKG51bGwgIT0gdGhpcy5fbmF0aXZlQWRfY3NqYyAmJiBudWxsICE9IHRoaXMuX2N1ckFkSXRlbV9jc2pjKSB7XHJcbiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhcIueCueWHu+S4iuaKpe+8ge+8ge+8gVwiKVxyXG4gICAgICAgICAgICAgICAgdGhpcy5fbmF0aXZlQWRfY3NqYy5yZXBvcnRBZENsaWNrKHtcclxuICAgICAgICAgICAgICAgICAgICBhZElkOiB0aGlzLl9jdXJBZEl0ZW1fY3NqYy5hZElkXHJcbiAgICAgICAgICAgICAgICB9KVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY2xvc2VWaWV3KCk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIG9uT2tCdG5fY3NqYygpIHtcclxuICAgICAgICB0aGlzLl9uYXRpdmVBZF9jc2pjLnJlcG9ydEFkQ2xpY2soe1xyXG4gICAgICAgICAgICBhZElkOiB0aGlzLl9jdXJBZEl0ZW1fY3NqYy5hZElkXHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgb25EaXNwbGF5Q2xpY2tfY3NqYygpIHtcclxuICAgICAgICBpZiAobnVsbCAhPSB0aGlzLl9uYXRpdmVBZF9jc2pjICYmIG51bGwgIT0gdGhpcy5fY3VyQWRJdGVtX2NzamMpIHtcclxuICAgICAgICAgICAgY29uc29sZS5sb2coXCLngrnlh7vkuIrmiqXvvIHvvIHvvIFcIilcclxuICAgICAgICAgICAgdGhpcy5fbmF0aXZlQWRfY3NqYy5yZXBvcnRBZENsaWNrKHtcclxuICAgICAgICAgICAgICAgIGFkSWQ6IHRoaXMuX2N1ckFkSXRlbV9jc2pjLmFkSWRcclxuICAgICAgICAgICAgfSlcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25EZXN0cm95KCkge1xyXG4gICAgICAgIHN1cGVyLm9uRGVzdHJveSgpO1xyXG4gICAgICAgIGlmIChMYXlhLkJyb3dzZXIub25WVk1pbmlHYW1lKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9uYXRpdmVBZF9jc2pjICYmIHRoaXMuX25hdGl2ZUFkX2NzamMudGl0bGUgIT0gbnVsbCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fbmF0aXZlQWRfY3NqYy5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy5fbmF0aXZlQWRfY3NqYyA9IG51bGw7XHJcbiAgICAgICAgICAgIHRoaXMuX2N1ckFkSXRlbV9jc2pjID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJvdGVjdGVkIHNob3dDZW50ZXJab25lX2NzamMoKSB7XHJcbiAgICAgICAgdGhpcy5fY2VudGVyWm9uZV9jc2pjLnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgIGxldCB0aW1lID0gR2FtZVN3aXRjaF9jc2pjLkN1cnJlbnRDb25maWcudml2b0FkQ29uZl9jc2pjLnl1YW5zaGVuZ0J0blNob3dUaW1lX2NzamMgKiAxMDAwO1xyXG4gICAgICAgIGlmICh0aW1lID4gMCkge1xyXG4gICAgICAgICAgICB0aGlzLl9va0J0bl9jc2pjLnZpc2libGUgPSBmYWxzZTtcclxuICAgICAgICAgICAgTGF5YS50aW1lci5vbmNlKHRpbWUsIHRoaXMsICgpID0+IHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX29rQnRuX2NzamMudmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgICAgIH0pXHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLl9va0J0bl9jc2pjLnZpc2libGUgPSB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsImltcG9ydCBWaWV3TWdyX2NzamMsIHsgVmlld0RlZl9jc2pjIH0gZnJvbSBcIi4uL01nci9WaWV3TWdyXCI7XHJcbmltcG9ydCBFdmVudE1ncl9jc2pjIGZyb20gXCIuLi9FdmVudC9FdmVudE1nclwiO1xyXG5pbXBvcnQgeyBFdmVudERlZl9jc2pjIH0gZnJvbSBcIi4uL0V2ZW50L0V2ZW50RGVmXCI7XHJcbmltcG9ydCBVdGlsaXQgZnJvbSBcIi4uL1V0aWxpdFwiO1xyXG5pbXBvcnQgSVZpZXdTdGF0ZUxpc3RlbmVyX2NzamMsIHsgaXNJVmlld1N0YXRlTGlzdGVuZXJfY3NqYyB9IGZyb20gXCIuL0lWaWV3U3RhdGVMaXN0ZW5lclwiO1xyXG5cclxuXHJcbi8v55WM6Z2i5Z+657G777yM5omA5pyJ5Yqf6IO95qih5Z2X55WM6Z2i57un5om/5LqO6L+Z5Liq57G744CC6L+Z56eN57G75Z6L55qE55WM6Z2i5LiN6IO95bWM5aWX44CCXHJcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFZpZXdCYXNlX2NzamMgZXh0ZW5kcyBMYXlhLlNjcmlwdCBcclxue1xyXG4gICAgcHVibGljIG9uQ2xvc2VFdmVudCA6IEZ1bmN0aW9uID0gbnVsbDtcclxuICAgIHB1YmxpYyBvbk9wZW5FdmVudCA6IEZ1bmN0aW9uID0gbnVsbDtcclxuICAgIFxyXG4gICAgcHJvdGVjdGVkIHJlYWRvbmx5IF92aWV3QmFzZSA6IGJvb2xlYW4gID0gdHJ1ZVxyXG4gICAgcHJvdGVjdGVkIF92aWV3RGVmIDogVmlld0RlZl9jc2pjID0gVmlld0RlZl9jc2pjLk5vbmU7XHJcbiAgICBwcm90ZWN0ZWQgX2RhdGEgOiBhbnkgPSB7fTtcclxuXHJcbiAgICBvbkF3YWtlKCk6IHZvaWQge1xyXG4gICAgICAgIC8v5Yig6Zmk5pe26Ieq5Yqo6YeK5pS+XHJcbiAgICAgICAgKHRoaXMub3duZXIgYXMgTGF5YS5WaWV3KS5hdXRvRGVzdHJveUF0Q2xvc2VkID0gdHJ1ZTtcclxuICAgICAgICAodGhpcy5vd25lciBhcyBMYXlhLlZpZXcpLmhlaWdodCA9IExheWEuc3RhZ2UuaGVpZ2h0O1xyXG4gICAgfVxyXG5cclxuICAgIG9uRW5hYmxlKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuYWRkRXZlbnQoKTtcclxuICAgIH1cclxuICAgIG9uRGlzYWJsZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnJlbW92ZUV2ZW50KCk7XHJcbiAgICB9XHJcbiAgICBvbkRlc3Ryb3koKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5yZW1vdmVFdmVudCgpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBwdWJsaWMgb3BlblZpZXcoZGF0YT86IGFueSk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX2RhdGEgPSBkYXRhO1xyXG4gICAgICAgIHRoaXMuc2hvdygpXHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9PblZpZXdPcGVuX2NzamMse3ZpZXc6dGhpcy5fdmlld0RlZn0pXHJcbiAgICAgICAgaWYodGhpcy5vbk9wZW5FdmVudClcclxuICAgICAgICB7XHJcbiAgICAgICAgICAgIHRoaXMub25PcGVuRXZlbnQoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGFkZEV2ZW50KCkge1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgcmVtb3ZlRXZlbnQoKSB7XHJcbiAgICAgICAgTGF5YS50aW1lci5jbGVhckFsbCh0aGlzKTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgY2xvc2VWaWV3KCkgXHJcbiAgICB7XHJcbiAgICAgICAgVmlld01ncl9jc2pjLmluc3RhbmNlX2NzamMuY2xvc2VWaWV3X2NzamModGhpcy5fdmlld0RlZik7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGhpZGUoKVxyXG4gICAge1xyXG4gICAgICAgICh0aGlzLm93bmVyIGFzIExheWEuVmlldykudmlzaWJsZSA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMub25IaWRlKCk7XHJcbiAgICAgICAgVXRpbGl0LmZvckVhY2hDaGlsZCh0aGlzLm93bmVyLChjaGlsZCA6IExheWEuTm9kZSk9PlxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgbGV0IGNvbXMgPSAoY2hpbGQgYXMgYW55KS5fY29tcG9uZW50cztcclxuICAgICAgICAgICAgaWYoY29tcyl7XHJcbiAgICAgICAgICAgICAgICBmb3IgKGxldCBpbmRleCA9IDA7IGluZGV4IDwgY29tcy5sZW5ndGg7IGluZGV4KyspIHtcclxuICAgICAgICAgICAgICAgICAgICBjb25zdCBlbGVtZW50ID0gY29tc1tpbmRleF07XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoaXNJVmlld1N0YXRlTGlzdGVuZXJfY3NqYyhlbGVtZW50KSlcclxuICAgICAgICAgICAgICAgICAgICB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIChlbGVtZW50IGFzIElWaWV3U3RhdGVMaXN0ZW5lcl9jc2pjKS5vblZpZXdIaWRlKHRoaXMpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHNob3coKVxyXG4gICAge1xyXG4gICAgICAgICh0aGlzLm93bmVyIGFzIExheWEuVmlldykudmlzaWJsZSA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5vblNob3coKTtcclxuICAgICAgICBVdGlsaXQuZm9yRWFjaENoaWxkKHRoaXMub3duZXIsKGNoaWxkIDogTGF5YS5Ob2RlKT0+XHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBsZXQgY29tcyA9IChjaGlsZCBhcyBhbnkpLl9jb21wb25lbnRzO1xyXG4gICAgICAgICAgICBpZihjb21zKXtcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGluZGV4ID0gMDsgaW5kZXggPCBjb21zLmxlbmd0aDsgaW5kZXgrKykge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGVsZW1lbnQgPSBjb21zW2luZGV4XTtcclxuICAgICAgICAgICAgICAgICAgICBpZihpc0lWaWV3U3RhdGVMaXN0ZW5lcl9jc2pjKGVsZW1lbnQpKVxyXG4gICAgICAgICAgICAgICAgICAgIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgKGVsZW1lbnQgYXMgSVZpZXdTdGF0ZUxpc3RlbmVyX2NzamMpLm9uVmlld1Nob3codGhpcyk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSlcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgdmlld0lzSGlkZSgpXHJcbiAgICB7XHJcbiAgICAgICAgcmV0dXJuICh0aGlzLm93bmVyIGFzIExheWEuVmlldykudmlzaWJsZTtcclxuICAgIH1cclxuXHJcbiAgICBwcm90ZWN0ZWQgb25IaWRlKCl7fVxyXG4gICAgcHJvdGVjdGVkIG9uU2hvdygpe31cclxuICAgIHByb3RlY3RlZCBvbkNsb3NlKClcclxuICAgIHtcclxuICAgICAgICBMYXlhLnRpbWVyLmNsZWFyQWxsKHRoaXMpO1xyXG4gICAgICAgIExheWEuVHdlZW4uY2xlYXJBbGwodGhpcyk7XHJcbiAgICAgICAgRXZlbnRNZ3JfY3NqYy5kaXNwYXRjaF9jc2pjKEV2ZW50RGVmX2NzamMuR2FtZV9PblZpZXdDbG9zZV9jc2pjLHt2aWV3OnRoaXMuX3ZpZXdEZWZ9KVxyXG4gICAgICAgIGlmKHRoaXMub25DbG9zZUV2ZW50KVxyXG4gICAgICAgIHtcclxuICAgICAgICAgICAgdGhpcy5vbkNsb3NlRXZlbnQoKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iLCIvKipUaGlzIGNsYXNzIGlzIGF1dG9tYXRpY2FsbHkgZ2VuZXJhdGVkIGJ5IExheWFBaXJJREUsIHBsZWFzZSBkbyBub3QgbWFrZSBhbnkgbW9kaWZpY2F0aW9ucy4gKi9cbmltcG9ydCBMYXlhVmlldz1MYXlhLlZpZXc7XHJcbmltcG9ydCBEaWFsb2c9TGF5YS5EaWFsb2c7XHJcbmltcG9ydCBTY2VuZT1MYXlhLlNjZW5lO1xudmFyIFJFRzogRnVuY3Rpb24gPSBMYXlhLkNsYXNzVXRpbHMucmVnQ2xhc3M7XG5leHBvcnQgbW9kdWxlIHVpLlZpZXcge1xyXG4gICAgZXhwb3J0IGNsYXNzIExvYWRpbmdVSSBleHRlbmRzIExheWEuVmlldyB7XHJcbiAgICAgICAgcHVibGljIHN0YXRpYyAgdWlWaWV3OmFueSA9e1widHlwZVwiOlwiVmlld1wiLFwicHJvcHNcIjp7XCJ6T3JkZXJcIjoxMCxcIndpZHRoXCI6MTMzNCxcInRvcFwiOjAsXCJyaWdodFwiOjAsXCJtb3VzZVRocm91Z2hcIjpmYWxzZSxcImxlZnRcIjowLFwiaGVpZ2h0XCI6NzUwLFwiYm90dG9tXCI6MH0sXCJjb21wSWRcIjoyLFwiY2hpbGRcIjpbe1widHlwZVwiOlwiSW1hZ2VcIixcInByb3BzXCI6e1wic2tpblwiOlwiTG9hZGluZ1ZpZXcvemh1eWViZWlqaW5nLmpwZ1wiLFwicmlnaHRcIjowLFwibmFtZVwiOlwiQkdcIixcImxlZnRcIjowLFwiYm90dG9tXCI6MH0sXCJjb21wSWRcIjoxMX0se1widHlwZVwiOlwiSW1hZ2VcIixcInByb3BzXCI6e1wid2lkdGhcIjo0MTUsXCJ0b3BcIjoxNTgsXCJza2luXCI6XCJMb2FkaW5nVmlldy9sb2dvLnBuZ1wiLFwicGl2b3RZXCI6NzAsXCJwaXZvdFhcIjoyMDgsXCJuYW1lXCI6XCJMb2dvXCIsXCJoZWlnaHRcIjoxNDAsXCJjZW50ZXJYXCI6MH0sXCJjb21wSWRcIjoxMn0se1widHlwZVwiOlwiSW1hZ2VcIixcInByb3BzXCI6e1wic2tpblwiOlwiTG9hZGluZ1ZpZXcvbG9hZGluZy5wbmdcIixcImNlbnRlclhcIjowLFwiYm90dG9tXCI6OTl9LFwiY29tcElkXCI6Mjd9LHtcInR5cGVcIjpcIkltYWdlXCIsXCJwcm9wc1wiOntcInpPcmRlclwiOjAsXCJza2luXCI6XCJMb2FkaW5nVmlldy9qaWF6YWlqaW5kdTEucG5nXCIsXCJwaXZvdFlcIjoyMixcIm5hbWVcIjpcIlByb2Nlc3NCYXJCZ1wiLFwiY2VudGVyWFwiOjAsXCJib3R0b21cIjo1N30sXCJjb21wSWRcIjo1LFwiY2hpbGRcIjpbe1widHlwZVwiOlwiSW1hZ2VcIixcInByb3BzXCI6e1wieVwiOjIsXCJ4XCI6MyxcIndpZHRoXCI6NDU2LFwic2tpblwiOlwiTG9hZGluZ1ZpZXcvamlhemFpamluZHUyLnBuZ1wiLFwic2l6ZUdyaWRcIjpcIjAsNDUsMCw1MzFcIixcIm5hbWVcIjpcIlByb2Nlc3NCYXJcIn0sXCJjb21wSWRcIjo5fV19LHtcInR5cGVcIjpcIlNjcmlwdFwiLFwicHJvcHNcIjp7XCJ5XCI6MCxcInhcIjowLFwicnVudGltZVwiOlwiVmlldy9Mb2FkaW5nVmlldy9Mb2FkaW5nVmlldy50c1wifSxcImNvbXBJZFwiOjd9XSxcImxvYWRMaXN0XCI6W1wiTG9hZGluZ1ZpZXcvemh1eWViZWlqaW5nLmpwZ1wiLFwiTG9hZGluZ1ZpZXcvbG9nby5wbmdcIixcIkxvYWRpbmdWaWV3L2xvYWRpbmcucG5nXCIsXCJMb2FkaW5nVmlldy9qaWF6YWlqaW5kdTEucG5nXCIsXCJMb2FkaW5nVmlldy9qaWF6YWlqaW5kdTIucG5nXCJdLFwibG9hZExpc3QzRFwiOltdfTtcclxuICAgICAgICBjb25zdHJ1Y3RvcigpeyBzdXBlcigpfVxyXG4gICAgICAgIGNyZWF0ZUNoaWxkcmVuKCk6dm9pZCB7XHJcbiAgICAgICAgICAgIHN1cGVyLmNyZWF0ZUNoaWxkcmVuKCk7XHJcbiAgICAgICAgICAgIHRoaXMuY3JlYXRlVmlldyhMb2FkaW5nVUkudWlWaWV3KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBSRUcoXCJ1aS5WaWV3LkxvYWRpbmdVSVwiLExvYWRpbmdVSSk7XHJcbn1cciJdfQ==
